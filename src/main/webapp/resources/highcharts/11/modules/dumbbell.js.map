{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * (c) 2009-2024 Sebastian Bochan, Rafal Sebestjanski\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/dumbbell', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/AreaRange/AreaRangePoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { area: { prototype: { pointClass: AreaPoint, pointClass: { prototype: areaProto } } } } = SeriesRegistry.seriesTypes;\n        const { defined, isNumber } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class AreaRangePoint extends AreaPoint {\n            /**\n             * Range series only. The high or maximum value for each data point.\n             * @name Highcharts.Point#high\n             * @type {number|undefined}\n             */\n            /**\n             * Range series only. The low or minimum value for each data point.\n             * @name Highcharts.Point#low\n             * @type {number|undefined}\n             */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            setState() {\n                const prevState = this.state, series = this.series, isPolar = series.chart.polar;\n                if (!defined(this.plotHigh)) {\n                    // Boost doesn't calculate plotHigh\n                    this.plotHigh = series.yAxis.toPixels(this.high, true);\n                }\n                if (!defined(this.plotLow)) {\n                    // Boost doesn't calculate plotLow\n                    this.plotLow = this.plotY = series.yAxis.toPixels(this.low, true);\n                }\n                series.lowerStateMarkerGraphic = series.stateMarkerGraphic;\n                series.stateMarkerGraphic = series.upperStateMarkerGraphic;\n                // Change state also for the top marker\n                this.graphic = this.graphics && this.graphics[1];\n                this.plotY = this.plotHigh;\n                if (isPolar && isNumber(this.plotHighX)) {\n                    this.plotX = this.plotHighX;\n                }\n                // Top state:\n                areaProto.setState.apply(this, arguments);\n                this.state = prevState;\n                // Now restore defaults\n                this.plotY = this.plotLow;\n                this.graphic = this.graphics && this.graphics[0];\n                if (isPolar && isNumber(this.plotLowX)) {\n                    this.plotX = this.plotLowX;\n                }\n                series.upperStateMarkerGraphic = series.stateMarkerGraphic;\n                series.stateMarkerGraphic = series.lowerStateMarkerGraphic;\n                // Lower marker is stored at stateMarkerGraphic\n                // to avoid reference duplication (#7021)\n                series.lowerStateMarkerGraphic = void 0;\n                const originalSettings = series.modifyMarkerSettings();\n                // Bottom state\n                areaProto.setState.apply(this, arguments);\n                // Restore previous state\n                series.restoreMarkerSettings(originalSettings);\n            }\n            haloPath() {\n                const isPolar = this.series.chart.polar;\n                let path = [];\n                // Bottom halo\n                this.plotY = this.plotLow;\n                if (isPolar && isNumber(this.plotLowX)) {\n                    this.plotX = this.plotLowX;\n                }\n                if (this.isInside) {\n                    path = areaProto.haloPath.apply(this, arguments);\n                }\n                // Top halo\n                this.plotY = this.plotHigh;\n                if (isPolar && isNumber(this.plotHighX)) {\n                    this.plotX = this.plotHighX;\n                }\n                if (this.isTopInside) {\n                    path = path.concat(areaProto.haloPath.apply(this, arguments));\n                }\n                return path;\n            }\n            isValid() {\n                return isNumber(this.low) && isNumber(this.high);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return AreaRangePoint;\n    });\n    _registerModule(_modules, 'Series/Dumbbell/DumbbellPoint.js', [_modules['Series/AreaRange/AreaRangePoint.js'], _modules['Core/Utilities.js']], function (AreaRangePoint, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Sebastian Bochan, Rafal Sebestjanski\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { extend, pick } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class DumbbellPoint extends AreaRangePoint {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set the point's state extended by have influence on the connector\n             * (between low and high value).\n             *\n             * @private\n             */\n            setState() {\n                const point = this, series = point.series, chart = series.chart, seriesLowColor = series.options.lowColor, seriesMarker = series.options.marker, seriesLowMarker = series.options.lowMarker, pointOptions = point.options, pointLowColor = pointOptions.lowColor, zoneColor = point.zone && point.zone.color, lowerGraphicColor = pick(pointLowColor, seriesLowMarker?.fillColor, seriesLowColor, pointOptions.color, zoneColor, point.color, series.color);\n                let verb = 'attr', upperGraphicColor, origProps;\n                this.pointSetState.apply(point, arguments);\n                if (!point.state) {\n                    verb = 'animate';\n                    const [lowerGraphic, upperGraphic] = point.graphics || [];\n                    if (lowerGraphic && !chart.styledMode) {\n                        lowerGraphic.attr({\n                            fill: lowerGraphicColor\n                        });\n                        if (upperGraphic) {\n                            origProps = {\n                                y: point.y,\n                                zone: point.zone\n                            };\n                            point.y = point.high;\n                            point.zone = point.zone ? point.getZone() : void 0;\n                            upperGraphicColor = pick(point.marker ? point.marker.fillColor : void 0, seriesMarker ? seriesMarker.fillColor : void 0, pointOptions.color, point.zone ? point.zone.color : void 0, point.color);\n                            upperGraphic.attr({\n                                fill: upperGraphicColor\n                            });\n                            extend(point, origProps);\n                        }\n                    }\n                }\n                point.connector?.[verb](series.getConnectorAttribs(point));\n            }\n            destroy() {\n                const point = this;\n                // #15560\n                if (!point.graphic) {\n                    point.graphic = point.connector;\n                    point.connector = void 0;\n                }\n                return super.destroy();\n            }\n        }\n        extend(DumbbellPoint.prototype, {\n            pointSetState: AreaRangePoint.prototype.setState\n        });\n        /* *\n         *\n         *  Default export\n         *\n         * */\n\n        return DumbbellPoint;\n    });\n    _registerModule(_modules, 'Series/Dumbbell/DumbbellSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Sebastian Bochan, Rafal Sebestjanski\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The dumbbell series is a cartesian series with higher and lower values\n         * for each point along an X axis, connected with a line between the\n         * values.\n         *\n         * Requires `highcharts-more.js` and `modules/dumbbell.js`.\n         *\n         * @sample {highcharts} highcharts/demo/dumbbell/\n         *         Dumbbell chart\n         * @sample {highcharts} highcharts/series-dumbbell/styled-mode-dumbbell/\n         *         Styled mode\n         *\n         * @extends      plotOptions.arearange\n         * @product      highcharts highstock\n         * @excluding    fillColor, fillOpacity, lineWidth, stack, stacking,\n         *               stickyTracking, trackByArea, boostThreshold, boostBlending\n         * @since 8.0.0\n         * @optionparent plotOptions.dumbbell\n         */\n        const DumbbellSeriesDefaults = {\n            /** @ignore-option */\n            trackByArea: false,\n            /** @ignore-option */\n            fillColor: 'none',\n            /** @ignore-option */\n            lineWidth: 0,\n            pointRange: 1,\n            /**\n             * Pixel width of the line that connects the dumbbell point's\n             * values.\n             *\n             * @since 8.0.0\n             * @product   highcharts highstock\n             */\n            connectorWidth: 1,\n            /** @ignore-option */\n            stickyTracking: false,\n            groupPadding: 0.2,\n            crisp: false,\n            pointPadding: 0.1,\n            legendSymbol: 'rectangle',\n            /**\n             * Color of the start markers in a dumbbell graph. This option takes\n             * priority over the series color. To avoid this, set `lowColor` to\n             * `undefined`.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since 8.0.0\n             * @product   highcharts highstock\n             */\n            lowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * Color of the line that connects the dumbbell point's values.\n             * By default it is the series' color.\n             *\n             * @type      {string}\n             * @product   highcharts highstock\n             * @since 8.0.0\n             * @apioption plotOptions.dumbbell.connectorColor\n             */\n            /**\n             *\n             * @apioption plotOptions.series.lowMarker\n             */\n            states: {\n                hover: {\n                    /** @ignore-option */\n                    lineWidthPlus: 0,\n                    /**\n                     * The additional connector line width for a hovered point.\n                     *\n                     * @since 8.0.0\n                     * @product   highcharts highstock\n                     */\n                    connectorWidthPlus: 1,\n                    /** @ignore-option */\n                    halo: false\n                }\n            }\n        };\n        /**\n         * The `dumbbell` series. If the [type](#series.dumbbell.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dumbbell\n         * @excluding boostThreshold, boostBlending\n         * @product   highcharts highstock\n         * @requires  highcharts-more\n         * @requires  modules/dumbbell\n         * @apioption series.dumbbell\n         */\n        /**\n         * An array of data points for the series. For the `dumbbell` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n         *    to `x,low,high`. If the first value is a string, it is applied as the name\n         *    of the point, and the `x` value is inferred. The `x` value can also be\n         *    omitted, in which case the inner arrays should be of length 2\\. Then the\n         *    `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 4, 2],\n         *        [1, 2, 1],\n         *        [2, 9, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.dumbbell.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        low: 0,\n         *        high: 4,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\",\n         *        lowColor: \"#00FFFF\",\n         *        connectorWidth: 3,\n         *        connectorColor: \"#FF00FF\"\n         *    }, {\n         *        x: 1,\n         *        low: 5,\n         *        high: 3,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n         * @extends   series.arearange.data\n         * @product   highcharts highstock\n         * @apioption series.dumbbell.data\n         */\n        /**\n         * Color of the start markers in a dumbbell graph. This option takes\n         * priority over the series color. To avoid this, set `lowColor` to\n         * `undefined`.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since     8.0.0\n         * @product   highcharts highstock\n         * @apioption  series.dumbbell.lowColor\n         */\n        /**\n         * Options for the lower markers of the dumbbell-like series. When `lowMarker`\n         * is not defined, options inherit form the marker.\n         *\n         * @see [marker](#series.arearange.marker)\n         *\n         * @declare   Highcharts.PointMarkerOptionsObject\n         * @extends   plotOptions.series.marker\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption plotOptions.dumbbell.lowMarker\n         */\n        /**\n         *\n         * @sample {highcharts} highcharts/demo/dumbbell-markers\n         *         Dumbbell chart with lowMarker option\n         *\n         * @declare   Highcharts.PointMarkerOptionsObject\n         * @extends   plotOptions.series.marker.symbol\n         * @product   highcharts highstock\n         * @apioption plotOptions.dumbbell.lowMarker.symbol\n         */\n        /**\n         * Color of the line that connects the dumbbell point's values.\n         * By default it is the series' color.\n         *\n         * @type        {string}\n         * @since       8.0.0\n         * @product     highcharts highstock\n         * @apioption   series.dumbbell.data.connectorColor\n         */\n        /**\n         * Pixel width of the line that connects the dumbbell point's values.\n         *\n         * @type        {number}\n         * @since       8.0.0\n         * @default     1\n         * @product     highcharts highstock\n         * @apioption   series.dumbbell.data.connectorWidth\n         */\n        /**\n         * Color of the start markers in a dumbbell graph. This option takes\n         * priority over the series color. To avoid this, set `lowColor` to\n         * `undefined`.\n         *\n         * @type        {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since       8.0.0\n         * @default     #333333\n         * @product     highcharts highstock\n         * @apioption   series.dumbbell.data.lowColor\n         */\n        ''; // Keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DumbbellSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Dumbbell/DumbbellSeries.js', [_modules['Series/Dumbbell/DumbbellPoint.js'], _modules['Series/Dumbbell/DumbbellSeriesDefaults.js'], _modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (DumbbellPoint, DumbbellSeriesDefaults, H, SeriesRegistry, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Sebastian Bochan, Rafal Sebestjanski\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { arearange: AreaRangeSeries, column: ColumnSeries, columnrange: ColumnRangeSeries } = SeriesRegistry.seriesTypes;\n        const { extend, merge, pick } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The dumbbell series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dumbbell\n         *\n         * @augments Highcharts.Series\n         */\n        class DumbbellSeries extends AreaRangeSeries {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Get connector line path and styles that connects dumbbell point's low and\n             * high values.\n             * @private\n             *\n             * @param {Highcharts.Point} point The point to inspect.\n             *\n             * @return {Highcharts.SVGAttributes} attribs The path and styles.\n             */\n            getConnectorAttribs(point) {\n                const series = this, chart = series.chart, pointOptions = point.options, seriesOptions = series.options, xAxis = series.xAxis, yAxis = series.yAxis, connectorWidthPlus = pick(seriesOptions.states &&\n                    seriesOptions.states.hover &&\n                    seriesOptions.states.hover.connectorWidthPlus, 1), dashStyle = pick(pointOptions.dashStyle, seriesOptions.dashStyle), pxThreshold = yAxis.toPixels(seriesOptions.threshold || 0, true), pointHeight = chart.inverted ?\n                    yAxis.len - pxThreshold : pxThreshold;\n                let connectorWidth = pick(pointOptions.connectorWidth, seriesOptions.connectorWidth), connectorColor = pick(pointOptions.connectorColor, seriesOptions.connectorColor, pointOptions.color, point.zone ? point.zone.color : void 0, point.color), pointTop = pick(point.plotLow, point.plotY), pointBottom = pick(point.plotHigh, pointHeight), origProps;\n                if (typeof pointTop !== 'number') {\n                    return {};\n                }\n                if (point.state) {\n                    connectorWidth = connectorWidth + connectorWidthPlus;\n                }\n                if (pointTop < 0) {\n                    pointTop = 0;\n                }\n                else if (pointTop >= yAxis.len) {\n                    pointTop = yAxis.len;\n                }\n                if (pointBottom < 0) {\n                    pointBottom = 0;\n                }\n                else if (pointBottom >= yAxis.len) {\n                    pointBottom = yAxis.len;\n                }\n                if (point.plotX < 0 || point.plotX > xAxis.len) {\n                    connectorWidth = 0;\n                }\n                // Connector should reflect upper marker's zone color\n                if (point.graphics && point.graphics[1]) {\n                    origProps = {\n                        y: point.y,\n                        zone: point.zone\n                    };\n                    point.y = point.high;\n                    point.zone = point.zone ? point.getZone() : void 0;\n                    connectorColor = pick(pointOptions.connectorColor, seriesOptions.connectorColor, pointOptions.color, point.zone ? point.zone.color : void 0, point.color);\n                    extend(point, origProps);\n                }\n                const attribs = {\n                    d: SVGRenderer.prototype.crispLine([[\n                            'M',\n                            point.plotX,\n                            pointTop\n                        ], [\n                            'L',\n                            point.plotX,\n                            pointBottom\n                        ]], connectorWidth)\n                };\n                if (!chart.styledMode) {\n                    attribs.stroke = connectorColor;\n                    attribs['stroke-width'] = connectorWidth;\n                    if (dashStyle) {\n                        attribs.dashstyle = dashStyle;\n                    }\n                }\n                return attribs;\n            }\n            /**\n             * Draw connector line that connects dumbbell point's low and high values.\n             * @private\n             * @param {Highcharts.Point} point\n             *        The point to inspect.\n             */\n            drawConnector(point) {\n                const series = this, animationLimit = pick(series.options.animationLimit, 250), verb = point.connector && series.chart.pointCount < animationLimit ?\n                    'animate' : 'attr';\n                if (!point.connector) {\n                    point.connector = series.chart.renderer.path()\n                        .addClass('highcharts-lollipop-stem')\n                        .attr({\n                        zIndex: -1\n                    })\n                        .add(series.group);\n                }\n                point.connector[verb](this.getConnectorAttribs(point));\n            }\n            /**\n             * Return the width and x offset of the dumbbell adjusted for grouping,\n             * groupPadding, pointPadding, pointWidth etc.\n             * @private\n             */\n            getColumnMetrics() {\n                const metrics = ColumnSeries.prototype\n                    .getColumnMetrics.apply(this, arguments);\n                metrics.offset += metrics.width / 2;\n                return metrics;\n            }\n            /**\n             * Translate each point to the plot area coordinate system and find\n             * shape positions\n             * @private\n             */\n            translate() {\n                const series = this, inverted = series.chart.inverted;\n                // Calculate shapeargs\n                this.setShapeArgs.apply(series);\n                // Calculate point low / high values\n                this.translatePoint.apply(series, arguments);\n                // Correct x position\n                for (const point of series.points) {\n                    const { pointWidth, shapeArgs = {}, tooltipPos } = point;\n                    point.plotX = shapeArgs.x || 0;\n                    shapeArgs.x = point.plotX - pointWidth / 2;\n                    if (tooltipPos) {\n                        if (inverted) {\n                            tooltipPos[1] = series.xAxis.len - point.plotX;\n                        }\n                        else {\n                            tooltipPos[0] = point.plotX;\n                        }\n                    }\n                }\n                series.columnMetrics.offset -= series.columnMetrics.width / 2;\n            }\n            /**\n             * Extend the arearange series' drawPoints method by applying a connector\n             * and coloring markers.\n             * @private\n             */\n            drawPoints() {\n                const series = this, chart = series.chart, pointLength = series.points.length, seriesLowColor = series.lowColor = series.options.lowColor, seriesLowMarker = series.options.lowMarker;\n                let i = 0, lowerGraphicColor, point, zoneColor;\n                this.seriesDrawPoints.apply(series, arguments);\n                // Draw connectors and color upper markers\n                while (i < pointLength) {\n                    point = series.points[i];\n                    const [lowerGraphic, upperGraphic] = point.graphics || [];\n                    series.drawConnector(point);\n                    if (upperGraphic) {\n                        upperGraphic.element.point = point;\n                        upperGraphic.addClass('highcharts-lollipop-high');\n                    }\n                    (point.connector?.element).point = point;\n                    if (lowerGraphic) {\n                        zoneColor = point.zone && point.zone.color;\n                        lowerGraphicColor = pick(point.options.lowColor, seriesLowMarker?.fillColor, seriesLowColor, point.options.color, zoneColor, point.color, series.color);\n                        if (!chart.styledMode) {\n                            lowerGraphic.attr({\n                                fill: lowerGraphicColor\n                            });\n                        }\n                        lowerGraphic.addClass('highcharts-lollipop-low');\n                    }\n                    i++;\n                }\n            }\n            /**\n             * Get presentational attributes.\n             *\n             * @private\n             * @function Highcharts.seriesTypes.column#pointAttribs\n             *\n             * @param {Highcharts.Point} point\n             *        The point to inspect.\n             *\n             * @param {string} state\n             *        Current state of point (normal, hover, select).\n             *\n             * @return {Highcharts.SVGAttributes}\n             *         Presentational attributes.\n             */\n            pointAttribs(point, state) {\n                const pointAttribs = super.pointAttribs.apply(this, arguments);\n                if (state === 'hover') {\n                    delete pointAttribs.fill;\n                }\n                return pointAttribs;\n            }\n            /**\n             * Set the shape arguments for dummbells.\n             * @private\n             */\n            setShapeArgs() {\n                ColumnSeries.prototype.translate.apply(this);\n                ColumnRangeSeries.prototype.afterColumnTranslate.apply(this);\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        DumbbellSeries.defaultOptions = merge(AreaRangeSeries.defaultOptions, DumbbellSeriesDefaults);\n        extend(DumbbellSeries.prototype, {\n            crispCol: ColumnSeries.prototype.crispCol,\n            drawGraph: noop,\n            drawTracker: ColumnSeries.prototype.drawTracker,\n            pointClass: DumbbellPoint,\n            seriesDrawPoints: AreaRangeSeries.prototype.drawPoints,\n            trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n            translatePoint: AreaRangeSeries.prototype.translate\n        });\n        SeriesRegistry.registerSeriesType('dumbbell', DumbbellSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DumbbellSeries;\n    });\n    _registerModule(_modules, 'masters/modules/dumbbell.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","area","prototype","pointClass","AreaPoint","areaProto","seriesTypes","defined","isNumber","setState","prevState","state","series","isPolar","chart","polar","plotHigh","yAxis","toPixels","high","plotLow","plotY","low","lowerStateMarkerGraphic","stateMarkerGraphic","upperStateMarkerGraphic","graphic","graphics","plotHighX","plotX","arguments","plotLowX","originalSettings","modifyMarkerSettings","restoreMarkerSettings","haloPath","isInside","isTopInside","concat","isValid","AreaRangePoint","extend","pick","DumbbellPoint","point","seriesLowColor","options","lowColor","seriesMarker","marker","seriesLowMarker","lowMarker","pointOptions","pointLowColor","zoneColor","zone","color","lowerGraphicColor","fillColor","verb","upperGraphicColor","origProps","pointSetState","lowerGraphic","upperGraphic","styledMode","attr","fill","y","getZone","connector","getConnectorAttribs","destroy","trackByArea","lineWidth","pointRange","connectorWidth","stickyTracking","groupPadding","crisp","pointPadding","legendSymbol","states","hover","lineWidthPlus","connectorWidthPlus","halo","DumbbellSeriesDefaults","H","SVGRenderer","noop","arearange","AreaRangeSeries","column","ColumnSeries","columnrange","ColumnRangeSeries","merge","DumbbellSeries","seriesOptions","xAxis","dashStyle","pxThreshold","threshold","pointHeight","inverted","len","connectorColor","pointTop","pointBottom","attribs","d","crispLine","stroke","dashstyle","drawConnector","animationLimit","pointCount","renderer","addClass","zIndex","add","group","getColumnMetrics","metrics","offset","width","translate","setShapeArgs","translatePoint","points","pointWidth","shapeArgs","tooltipPos","x","columnMetrics","drawPoints","pointLength","length","i","seriesDrawPoints","element","pointAttribs","afterColumnTranslate","defaultOptions","crispCol","drawGraph","drawTracker","trackerGroups","registerSeriesType"],"mappings":"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"}