{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Accessibility module\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Oystein Moseng\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/accessibility', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Accessibility/Utils/HTMLUtilities.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Utility functions for accessibility module.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, win } = H;\n        const { css } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const simulatedEventTarget = win.EventTarget && new win.EventTarget() || 'none';\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function addClass(el, className) {\n            if (el.classList) {\n                el.classList.add(className);\n            }\n            else if (el.className.indexOf(className) < 0) {\n                // Note: Dumb check for class name exists, should be fine for practical\n                // use cases, but will return false positives if the element has a class\n                // that contains the className.\n                el.className += ' ' + className;\n            }\n        }\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function removeClass(el, className) {\n            if (el.classList) {\n                el.classList.remove(className);\n            }\n            else {\n                // Note: Dumb logic that will break if the element has a class name that\n                // consists of className plus something else.\n                el.className = el.className.replace(new RegExp(className, 'g'), '');\n            }\n        }\n        /**\n         * Utility function to clone a mouse event for re-dispatching.\n         * @private\n         */\n        function cloneMouseEvent(e) {\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(e.type, e);\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                const evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(e.type, e.bubbles, // #10561, #12161\n                    e.cancelable, e.view || win, e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n                    return evt;\n                }\n            }\n            return getFakeMouseEvent(e.type);\n        }\n        /**\n         * Utility function to clone a touch event for re-dispatching.\n         * @private\n         */\n        function cloneTouchEvent(e) {\n            const touchListToTouchArray = (l) => {\n                const touchArray = [];\n                for (let i = 0; i < l.length; ++i) {\n                    const item = l.item(i);\n                    if (item) {\n                        touchArray.push(item);\n                    }\n                }\n                return touchArray;\n            };\n            if (typeof win.TouchEvent === 'function') {\n                const newEvent = new win.TouchEvent(e.type, {\n                    touches: touchListToTouchArray(e.touches),\n                    targetTouches: touchListToTouchArray(e.targetTouches),\n                    changedTouches: touchListToTouchArray(e.changedTouches),\n                    ctrlKey: e.ctrlKey,\n                    shiftKey: e.shiftKey,\n                    altKey: e.altKey,\n                    metaKey: e.metaKey,\n                    bubbles: e.bubbles,\n                    cancelable: e.cancelable,\n                    composed: e.composed,\n                    detail: e.detail,\n                    view: e.view\n                });\n                if (e.defaultPrevented) {\n                    newEvent.preventDefault();\n                }\n                return newEvent;\n            }\n            const fakeEvt = cloneMouseEvent(e);\n            fakeEvt.touches = e.touches;\n            fakeEvt.changedTouches = e.changedTouches;\n            fakeEvt.targetTouches = e.targetTouches;\n            return fakeEvt;\n        }\n        /**\n         * @private\n         */\n        function escapeStringForHTML(str) {\n            return str\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#x27;')\n                .replace(/\\//g, '&#x2F;');\n        }\n        /**\n         * Get an element by ID\n         * @private\n         */\n        function getElement(id) {\n            return doc.getElementById(id);\n        }\n        /**\n         * Get a fake mouse event of a given type. If relatedTarget is not given,\n         * it will point to simulatedEventTarget, as an indicator that the event\n         * is fake.\n         * @private\n         */\n        function getFakeMouseEvent(type, position, relatedTarget) {\n            const pos = position || {\n                x: 0,\n                y: 0\n            };\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(type, {\n                    bubbles: true,\n                    cancelable: true,\n                    composed: true,\n                    button: 0,\n                    buttons: 1,\n                    relatedTarget: relatedTarget || simulatedEventTarget,\n                    view: win,\n                    detail: type === 'click' ? 1 : 0,\n                    screenX: pos.x,\n                    screenY: pos.y,\n                    clientX: pos.x,\n                    clientY: pos.y\n                });\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                const evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(type, true, // Bubble\n                    true, // Cancel\n                    win, // View\n                    type === 'click' ? 1 : 0, // Detail\n                    // Coords\n                    pos.x, pos.y, pos.x, pos.y, \n                    // Pressed keys\n                    false, false, false, false, 0, // Button\n                    null // Related target\n                    );\n                    return evt;\n                }\n            }\n            return { type: type };\n        }\n        /**\n         * Get an appropriate heading level for an element. Corresponds to the\n         * heading level below the previous heading in the DOM.\n         *\n         * Note: Only detects previous headings in the DOM that are siblings,\n         * ancestors, or previous siblings of ancestors. Headings that are nested below\n         * siblings of ancestors (cousins et.al) are not picked up. This is because it\n         * is ambiguous whether or not the nesting is for layout purposes or indicates a\n         * separate section.\n         *\n         * @private\n         * @param {Highcharts.HTMLDOMElement} [element]\n         * @return {string} The heading tag name (h1, h2 etc).\n         * If no nearest heading is found, \"p\" is returned.\n         */\n        function getHeadingTagNameForElement(element) {\n            const getIncreasedHeadingLevel = (tagName) => {\n                const headingLevel = parseInt(tagName.slice(1), 10), newLevel = Math.min(6, headingLevel + 1);\n                return 'h' + newLevel;\n            };\n            const isHeading = (tagName) => /^H[1-6]$/i.test(tagName);\n            const getPreviousSiblingsHeading = (el) => {\n                let sibling = el;\n                while (sibling = sibling.previousSibling) { // eslint-disable-line\n                    const tagName = sibling.tagName || '';\n                    if (isHeading(tagName)) {\n                        return tagName;\n                    }\n                }\n                return '';\n            };\n            const getHeadingRecursive = (el) => {\n                const prevSiblingsHeading = getPreviousSiblingsHeading(el);\n                if (prevSiblingsHeading) {\n                    return getIncreasedHeadingLevel(prevSiblingsHeading);\n                }\n                // No previous siblings are headings, try parent node\n                const parent = el.parentElement;\n                if (!parent) {\n                    return 'p';\n                }\n                const parentTagName = parent.tagName;\n                if (isHeading(parentTagName)) {\n                    return getIncreasedHeadingLevel(parentTagName);\n                }\n                return getHeadingRecursive(parent);\n            };\n            return getHeadingRecursive(element);\n        }\n        /**\n         * Remove an element from the DOM.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeElement(element) {\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n            }\n        }\n        /**\n         * Remove all child nodes from an element.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeChildNodes(element) {\n            while (element.lastChild) {\n                element.removeChild(element.lastChild);\n            }\n        }\n        /**\n         * Utility function. Reverses child nodes of a DOM element.\n         * @private\n         */\n        function reverseChildNodes(node) {\n            let i = node.childNodes.length;\n            while (i--) {\n                node.appendChild(node.childNodes[i]);\n            }\n        }\n        /**\n         * Used for aria-label attributes, painting on a canvas will fail if the\n         * text contains tags.\n         * @private\n         */\n        function stripHTMLTagsFromString(str, isForExport = false) {\n            return (typeof str === 'string') ?\n                (isForExport ?\n                    str.replace(/<\\/?[^>]+(>|$)/g, '') :\n                    str.replace(/<\\/?(?!\\s)[^>]+(>|$)/g, '')) : str;\n        }\n        /**\n         * Utility function for hiding an element visually, but still keeping it\n         * available to screen reader users.\n         * @private\n         */\n        function visuallyHideElement(element) {\n            css(element, {\n                position: 'absolute',\n                width: '1px',\n                height: '1px',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                clip: 'rect(1px, 1px, 1px, 1px)',\n                marginTop: '-3px',\n                '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)',\n                filter: 'alpha(opacity=1)',\n                opacity: 0.01\n            });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const HTMLUtilities = {\n            addClass,\n            cloneMouseEvent,\n            cloneTouchEvent,\n            escapeStringForHTML,\n            getElement,\n            getFakeMouseEvent,\n            getHeadingTagNameForElement,\n            removeChildNodes,\n            removeClass,\n            removeElement,\n            reverseChildNodes,\n            simulatedEventTarget,\n            stripHTMLTagsFromString,\n            visuallyHideElement\n        };\n\n        return HTMLUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/A11yI18n.js', [_modules['Core/Templating.js'], _modules['Core/Utilities.js']], function (F, U) {\n        /* *\n         *\n         *  Accessibility module - internationalization support\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Ã˜ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { format } = F;\n        const { getNestedProperty, pick } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var A11yI18nComposition;\n        (function (A11yI18nComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.langFormat) {\n                    chartProto.langFormat = langFormat;\n                }\n            }\n            A11yI18nComposition.compose = compose;\n            /**\n             * I18n utility function.  Format a single array or plural statement in a\n             * format string.  If the statement is not an array or plural statement,\n             * returns the statement within brackets.  Invalid array statements return\n             * an empty string.\n             *\n             * @private\n             * @function formatExtendedStatement\n             * @param {string} statement\n             * @param {Highcharts.Dictionary<*>} ctx\n             * Context to apply to the format string.\n             */\n            function formatExtendedStatement(statement, ctx) {\n                const eachStart = statement.indexOf('#each('), pluralStart = statement.indexOf('#plural('), indexStart = statement.indexOf('['), indexEnd = statement.indexOf(']');\n                let arr, result;\n                // Dealing with an each-function?\n                if (eachStart > -1) {\n                    const eachEnd = statement.slice(eachStart).indexOf(')') + eachStart, preEach = statement.substring(0, eachStart), postEach = statement.substring(eachEnd + 1), eachStatement = statement.substring(eachStart + 6, eachEnd), eachArguments = eachStatement.split(',');\n                    let lenArg = Number(eachArguments[1]), len;\n                    result = '';\n                    arr = getNestedProperty(eachArguments[0], ctx);\n                    if (arr) {\n                        lenArg = isNaN(lenArg) ? arr.length : lenArg;\n                        len = lenArg < 0 ?\n                            arr.length + lenArg :\n                            Math.min(lenArg, arr.length); // Overshoot\n                        // Run through the array for the specified length\n                        for (let i = 0; i < len; ++i) {\n                            result += preEach + arr[i] + postEach;\n                        }\n                    }\n                    return result.length ? result : '';\n                }\n                // Dealing with a plural-function?\n                if (pluralStart > -1) {\n                    const pluralEnd = (statement.slice(pluralStart).indexOf(')') + pluralStart), pluralStatement = statement.substring(pluralStart + 8, pluralEnd), pluralArguments = pluralStatement.split(','), num = Number(getNestedProperty(pluralArguments[0], ctx));\n                    switch (num) {\n                        case 0:\n                            result = pick(pluralArguments[4], pluralArguments[1]);\n                            break;\n                        case 1:\n                            result = pick(pluralArguments[2], pluralArguments[1]);\n                            break;\n                        case 2:\n                            result = pick(pluralArguments[3], pluralArguments[1]);\n                            break;\n                        default:\n                            result = pluralArguments[1];\n                    }\n                    return result ? stringTrim(result) : '';\n                }\n                // Array index\n                if (indexStart > -1) {\n                    const arrayName = statement.substring(0, indexStart), ix = Number(statement.substring(indexStart + 1, indexEnd));\n                    let val;\n                    arr = getNestedProperty(arrayName, ctx);\n                    if (!isNaN(ix) && arr) {\n                        if (ix < 0) {\n                            val = arr[arr.length + ix];\n                            // Handle negative overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[0];\n                            }\n                        }\n                        else {\n                            val = arr[ix];\n                            // Handle positive overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[arr.length - 1];\n                            }\n                        }\n                    }\n                    return typeof val !== 'undefined' ? val : '';\n                }\n                // Standard substitution, delegate to format or similar\n                return '{' + statement + '}';\n            }\n            /* eslint-disable max-len */\n            /**\n             * i18n formatting function.  Extends Highcharts.format() functionality by\n             * also handling arrays and plural conditionals.  Arrays can be indexed as\n             * follows:\n             *\n             * - Format: 'This is the first index: {myArray[0]}. The last: {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3, 4, 5] }\n             *\n             * - Result: 'This is the first index: 0. The last: 5.'\n             *\n             *\n             * They can also be iterated using the #each() function.  This will repeat\n             * the contents of the bracket expression for each element.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray)cm }'\n             *\n             * - Context: { myArray: [0, 1, 2] }\n             *\n             * - Result: 'List contains: 0cm 1cm 2cm '\n             *\n             *\n             * The #each() function optionally takes a length parameter.  If positive,\n             * this parameter specifies the max number of elements to iterate through.\n             * If negative, the function will subtract the number from the length of the\n             * array.  Use this to stop iterating before the array ends.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray, -1) }and {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3] }\n             *\n             * - Result: 'List contains: 0, 1, 2, and 3.'\n             *\n             *\n             * Use the #plural() function to pick a string depending on whether or not a\n             * context object is 1.  Arguments are #plural(obj, plural, singular).\n             * Example:\n             *\n             * - Format: 'Has {numPoints} {#plural(numPoints, points, point}.'\n             *\n             * - Context: { numPoints: 5 }\n             *\n             * - Result: 'Has 5 points.'\n             *\n             *\n             * Optionally there are additional parameters for dual and none:\n             * #plural(obj, plural, singular, dual, none).  Example:\n             *\n             * - Format: 'Has {#plural(numPoints, many points, one point, two points,\n             *   none}.'\n             *\n             * - Context: { numPoints: 2 }\n             *\n             * - Result: 'Has two points.'\n             *\n             *\n             * The dual or none parameters will take precedence if they are supplied.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.i18nFormat\n             *\n             * @param {string} formatString\n             * The string to format.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @param {Highcharts.Chart} chart\n             * A `Chart` instance with a time object and numberFormatter, passed on to\n             * format().\n             *\n             * @deprecated\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function i18nFormat(formatString, context, chart) {\n                const getFirstBracketStatement = (sourceStr, offset) => {\n                    const str = sourceStr.slice(offset || 0), startBracket = str.indexOf('{'), endBracket = str.indexOf('}');\n                    if (startBracket > -1 && endBracket > startBracket) {\n                        return {\n                            statement: str.substring(startBracket + 1, endBracket),\n                            begin: offset + startBracket + 1,\n                            end: offset + endBracket\n                        };\n                    }\n                }, tokens = [];\n                let bracketRes, constRes, cursor = 0;\n                // Tokenize format string into bracket statements and constants\n                do {\n                    bracketRes = getFirstBracketStatement(formatString, cursor);\n                    constRes = formatString.substring(cursor, bracketRes && bracketRes.begin - 1);\n                    // If we have constant content before this bracket statement, add it\n                    if (constRes.length) {\n                        tokens.push({\n                            value: constRes,\n                            type: 'constant'\n                        });\n                    }\n                    // Add the bracket statement\n                    if (bracketRes) {\n                        tokens.push({\n                            value: bracketRes.statement,\n                            type: 'statement'\n                        });\n                    }\n                    cursor = bracketRes ? bracketRes.end + 1 : cursor + 1;\n                } while (bracketRes);\n                // Perform the formatting.  The formatArrayStatement function returns\n                // the statement in brackets if it is not an array statement, which\n                // means it gets picked up by format below.\n                tokens.forEach((token) => {\n                    if (token.type === 'statement') {\n                        token.value = formatExtendedStatement(token.value, context);\n                    }\n                });\n                // Join string back together and pass to format to pick up non-array\n                // statements.\n                return format(tokens.reduce((acc, cur) => acc + cur.value, ''), context, chart);\n            }\n            A11yI18nComposition.i18nFormat = i18nFormat;\n            /* eslint-enable max-len */\n            /**\n             * Apply context to a format string from lang options of the chart.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.Chart#langFormat\n             *\n             * @param {string} langKey\n             * Key (using dot notation) into lang option structure.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function langFormat(langKey, context) {\n                const keys = langKey.split('.');\n                let formatString = this.options.lang, i = 0;\n                for (; i < keys.length; ++i) {\n                    formatString = formatString && formatString[keys[i]];\n                }\n                return typeof formatString === 'string' ?\n                    i18nFormat(formatString, context, this) : '';\n            }\n            /**\n             * @private\n             * @function stringTrim\n             *\n             * @param {string} str\n             * The input string\n             *\n             * @return {string}\n             * The trimmed string\n             */\n            function stringTrim(str) {\n                return str.trim && str.trim() || str.replace(/^\\s+|\\s+$/g, '');\n            }\n        })(A11yI18nComposition || (A11yI18nComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return A11yI18nComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/ChartUtilities.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Utils for dealing with charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { stripHTMLTagsFromString: stripHTMLTags } = HU;\n        const { defined, find, fireEvent } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Fire an event on an element that is either wrapped by Highcharts,\n         * or a DOM element.\n         * @private\n         */\n        function fireEventOnWrappedOrUnwrappedElement(el, eventObject) {\n            const type = eventObject.type;\n            const hcEvents = el.hcEvents;\n            if (!!doc.createEvent &&\n                (el.dispatchEvent || el.fireEvent)) {\n                if (el.dispatchEvent) {\n                    el.dispatchEvent(eventObject);\n                }\n                else {\n                    el.fireEvent(type, eventObject);\n                }\n            }\n            else if (hcEvents && hcEvents[type]) {\n                fireEvent(el, type, eventObject);\n            }\n            else if (el.element) {\n                fireEventOnWrappedOrUnwrappedElement(el.element, eventObject);\n            }\n        }\n        /**\n         * @private\n         */\n        function getChartTitle(chart) {\n            return stripHTMLTags(chart.options.title.text ||\n                chart.langFormat('accessibility.defaultChartTitle', { chart: chart }), chart.renderer.forExport);\n        }\n        /**\n         * Return string with the axis name/title.\n         * @private\n         */\n        function getAxisDescription(axis) {\n            return axis && (axis.options.accessibility?.description ||\n                axis.axisTitle?.textStr ||\n                axis.options.id ||\n                axis.categories && 'categories' ||\n                axis.dateTime && 'Time' ||\n                'values');\n        }\n        /**\n         * Return string with text description of the axis range.\n         * @private\n         * @param {Highcharts.Axis} axis\n         * The axis to get range desc of.\n         * @return {string}\n         * A string with the range description for the axis.\n         */\n        function getAxisRangeDescription(axis) {\n            const axisOptions = axis.options || {};\n            // Handle overridden range description\n            if (axisOptions.accessibility &&\n                typeof axisOptions.accessibility.rangeDescription !== 'undefined') {\n                return axisOptions.accessibility.rangeDescription;\n            }\n            // Handle category axes\n            if (axis.categories) {\n                return getCategoryAxisRangeDesc(axis);\n            }\n            // Use time range, not from-to?\n            if (axis.dateTime && (axis.min === 0 || axis.dataMin === 0)) {\n                return getAxisTimeLengthDesc(axis);\n            }\n            // Just use from and to.\n            // We have the range and the unit to use, find the desc format\n            return getAxisFromToDescription(axis);\n        }\n        /**\n         * Describe the range of a category axis.\n         * @private\n         */\n        function getCategoryAxisRangeDesc(axis) {\n            const chart = axis.chart;\n            if (axis.dataMax && axis.dataMin) {\n                return chart.langFormat('accessibility.axis.rangeCategories', {\n                    chart: chart,\n                    axis: axis,\n                    numCategories: axis.dataMax - axis.dataMin + 1\n                });\n            }\n            return '';\n        }\n        /**\n         * Describe the length of the time window shown on an axis.\n         * @private\n         */\n        function getAxisTimeLengthDesc(axis) {\n            const chart = axis.chart, range = {}, min = axis.dataMin || axis.min || 0, max = axis.dataMax || axis.max || 0;\n            let rangeUnit = 'Seconds';\n            range.Seconds = (max - min) / 1000;\n            range.Minutes = range.Seconds / 60;\n            range.Hours = range.Minutes / 60;\n            range.Days = range.Hours / 24;\n            ['Minutes', 'Hours', 'Days'].forEach(function (unit) {\n                if (range[unit] > 2) {\n                    rangeUnit = unit;\n                }\n            });\n            const rangeValue = range[rangeUnit].toFixed(rangeUnit !== 'Seconds' &&\n                rangeUnit !== 'Minutes' ? 1 : 0 // Use decimals for days/hours\n            );\n            // We have the range and the unit to use, find the desc format\n            return chart.langFormat('accessibility.axis.timeRange' + rangeUnit, {\n                chart: chart,\n                axis: axis,\n                range: rangeValue.replace('.0', '')\n            });\n        }\n        /**\n         * Describe an axis from-to range.\n         * @private\n         */\n        function getAxisFromToDescription(axis) {\n            const chart = axis.chart, options = chart.options, dateRangeFormat = (options &&\n                options.accessibility &&\n                options.accessibility.screenReaderSection.axisRangeDateFormat ||\n                ''), extremes = {\n                min: axis.dataMin || axis.min || 0,\n                max: axis.dataMax || axis.max || 0\n            }, format = function (key) {\n                return axis.dateTime ?\n                    chart.time.dateFormat(dateRangeFormat, extremes[key]) :\n                    extremes[key].toString();\n            };\n            return chart.langFormat('accessibility.axis.rangeFromTo', {\n                chart: chart,\n                axis: axis,\n                rangeFrom: format('min'),\n                rangeTo: format('max')\n            });\n        }\n        /**\n         * Get the DOM element for the first point in the series.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the point.\n         */\n        function getSeriesFirstPointElement(series) {\n            if (series.points && series.points.length) {\n                const firstPointWithGraphic = find(series.points, (p) => !!p.graphic);\n                return (firstPointWithGraphic &&\n                    firstPointWithGraphic.graphic &&\n                    firstPointWithGraphic.graphic.element);\n            }\n        }\n        /**\n         * Get the DOM element for the series that we put accessibility info on.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the series\n         */\n        function getSeriesA11yElement(series) {\n            const firstPointEl = getSeriesFirstPointElement(series);\n            return (firstPointEl &&\n                firstPointEl.parentNode || series.graph &&\n                series.graph.element || series.group &&\n                series.group.element); // Could be tracker series depending on series type\n        }\n        /**\n         * Remove aria-hidden from element. Also unhides parents of the element, and\n         * hides siblings that are not explicitly unhidden.\n         * @private\n         */\n        function unhideChartElementFromAT(chart, element) {\n            element.setAttribute('aria-hidden', false);\n            if (element === chart.renderTo ||\n                !element.parentNode ||\n                element.parentNode === doc.body // #16126: Full screen printing\n            ) {\n                return;\n            }\n            // Hide siblings unless their hidden state is already explicitly set\n            Array.prototype.forEach.call(element.parentNode.childNodes, function (node) {\n                if (!node.hasAttribute('aria-hidden')) {\n                    node.setAttribute('aria-hidden', true);\n                }\n            });\n            // Repeat for parent\n            unhideChartElementFromAT(chart, element.parentNode);\n        }\n        /**\n         * Hide series from screen readers.\n         * @private\n         */\n        function hideSeriesFromAT(series) {\n            const seriesEl = getSeriesA11yElement(series);\n            if (seriesEl) {\n                seriesEl.setAttribute('aria-hidden', true);\n            }\n        }\n        /**\n         * Get series objects by series name.\n         * @private\n         */\n        function getSeriesFromName(chart, name) {\n            if (!name) {\n                return chart.series;\n            }\n            return (chart.series || []).filter(function (s) {\n                return s.name === name;\n            });\n        }\n        /**\n         * Get point in a series from x/y values.\n         * @private\n         */\n        function getPointFromXY(series, x, y) {\n            let i = series.length, res;\n            while (i--) {\n                res = find(series[i].points || [], function (p) {\n                    return p.x === x && p.y === y;\n                });\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function getRelativePointAxisPosition(axis, point) {\n            if (!defined(axis.dataMin) || !defined(axis.dataMax)) {\n                return 0;\n            }\n            const axisStart = axis.toPixels(axis.dataMin), axisEnd = axis.toPixels(axis.dataMax), \n            // We have to use pixel position because of axis breaks, log axis etc.\n            positionProp = axis.coll === 'xAxis' ? 'x' : 'y', pointPos = axis.toPixels(point[positionProp] || 0);\n            return (pointPos - axisStart) / (axisEnd - axisStart);\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function scrollAxisToPoint(point) {\n            const xAxis = point.series.xAxis, yAxis = point.series.yAxis, axis = (xAxis && xAxis.scrollbar ? xAxis : yAxis), scrollbar = (axis && axis.scrollbar);\n            if (scrollbar && defined(scrollbar.to) && defined(scrollbar.from)) {\n                const range = scrollbar.to - scrollbar.from;\n                const pos = getRelativePointAxisPosition(axis, point);\n                scrollbar.updatePosition(pos - range / 2, pos + range / 2);\n                fireEvent(scrollbar, 'changed', {\n                    from: scrollbar.from,\n                    to: scrollbar.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: null\n                });\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ChartUtilities = {\n            fireEventOnWrappedOrUnwrappedElement,\n            getChartTitle,\n            getAxisDescription,\n            getAxisRangeDescription,\n            getPointFromXY,\n            getSeriesFirstPointElement,\n            getSeriesFromName,\n            getSeriesA11yElement,\n            unhideChartElementFromAT,\n            hideSeriesFromAT,\n            scrollAxisToPoint\n        };\n\n        return ChartUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/DOMElementProvider.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Class that can keep track of elements added to DOM and clean them up on\n         *  destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { removeElement } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        class DOMElementProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor() {\n                this.elements = [];\n            }\n            /**\n             * Create an element and keep track of it for later removal.\n             * Same args as document.createElement\n             * @private\n             */\n            createElement() {\n                const el = doc.createElement.apply(doc, arguments);\n                this.elements.push(el);\n                return el;\n            }\n            /**\n             * Destroy created element, removing it from the DOM.\n             * @private\n             */\n            removeElement(element) {\n                removeElement(element);\n                this.elements.splice(this.elements.indexOf(element), 1);\n            }\n            /**\n             * Destroy all created elements, removing them from the DOM.\n             * @private\n             */\n            destroyCreatedElements() {\n                this.elements.forEach(function (element) {\n                    removeElement(element);\n                });\n                this.elements = [];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DOMElementProvider;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/EventProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Class that can keep track of events added, and clean them up on destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent } = U;\n        /**\n         * @private\n         */\n        class EventProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor() {\n                this.eventRemovers = [];\n            }\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * Same args as Highcharts.addEvent.\n             * @private\n             */\n            addEvent() {\n                const remover = addEvent.apply(H, arguments);\n                this.eventRemovers.push({\n                    element: arguments[0], // HTML element\n                    remover\n                });\n                return remover;\n            }\n            /**\n             * Remove added event.\n             * @private\n             */\n            removeEvent(event) {\n                const pos = this.eventRemovers.map((e) => e.remover).indexOf(event);\n                this.eventRemovers[pos].remover();\n                this.eventRemovers.splice(pos, 1);\n            }\n            /**\n             * Remove all added events.\n             * @private\n             */\n            removeAddedEvents() {\n                this.eventRemovers.map((e) => e.remover)\n                    .forEach((remover) => remover());\n                this.eventRemovers = [];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return EventProvider;\n    });\n    _registerModule(_modules, 'Accessibility/AccessibilityComponent.js', [_modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (CU, DOMElementProvider, EventProvider, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { fireEventOnWrappedOrUnwrappedElement } = CU;\n        const { getFakeMouseEvent } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AccessibilityComponent base class, representing a part of the chart that\n         * has accessibility logic connected to it. This class can be inherited from to\n         * create a custom accessibility component for a chart.\n         *\n         * Components should take care to destroy added elements and unregister event\n         * handlers on destroy. This is handled automatically if using `this.addEvent`\n         * and `this.createElement`.\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @requires modules/accessibility\n         * @class\n         * @name Highcharts.AccessibilityComponent\n         */\n        class AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Called when accessibility is disabled or chart is destroyed.\n             *\n             * @function Highcharts.AccessibilityComponent#destroy\n             */\n            destroy() { }\n            /**\n             * Get keyboard navigation handler for this component.\n             *\n             * @function Highcharts.AccessibilityComponent#getKeyboardNavigation\n             * @return   {Highcharts.KeyboardNavigationHandler|Array<Highcharts.KeyboardNavigationHandler>}\n             *           The keyboard navigation handler(s) for this component.\n             */\n            getKeyboardNavigation() {\n                return [];\n            }\n            /**\n             * Called on component initialization.\n             *\n             * @function Highcharts.AccessibilityComponent#init\n             */\n            init() { }\n            /**\n             * Called on every chart render.\n             *\n             * @function Highcharts.AccessibilityComponent#onChartRender\n             */\n            onChartRender() { }\n            /**\n             * Called on updates to the chart, including options changes.\n             * Note that this is also called on first render of chart.\n             *\n             * @function Highcharts.AccessibilityComponent#onChartUpdate\n             */\n            onChartUpdate() { }\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart The chart object\n             * @param {Highcharts.ProxyProvider} proxyProvider The proxy provider of the accessibility module\n             */\n            initBase(chart, proxyProvider) {\n                this.chart = chart;\n                this.eventProvider = new EventProvider();\n                this.domElementProvider = new DOMElementProvider();\n                this.proxyProvider = proxyProvider;\n                // Key code enum for common keys\n                this.keyCodes = {\n                    left: 37,\n                    right: 39,\n                    up: 38,\n                    down: 40,\n                    enter: 13,\n                    space: 32,\n                    esc: 27,\n                    tab: 9,\n                    pageUp: 33,\n                    pageDown: 34,\n                    end: 35,\n                    home: 36\n                };\n            }\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * See EventProvider for details.\n             * @private\n             */\n            addEvent(el, type, fn, options) {\n                return this.eventProvider.addEvent(el, type, fn, options);\n            }\n            /**\n             * Create an element and keep track of it for later removal.\n             * See DOMElementProvider for details.\n             * @private\n             */\n            createElement(tagName, options) {\n                return this.domElementProvider.createElement(tagName, options);\n            }\n            /**\n             * Fire a fake click event on an element. It is useful to have this on\n             * AccessibilityComponent for users of custom components.\n             * @private\n             */\n            fakeClickEvent(el) {\n                const fakeEvent = getFakeMouseEvent('click');\n                fireEventOnWrappedOrUnwrappedElement(el, fakeEvent);\n            }\n            /**\n             * Remove traces of the component.\n             * @private\n             */\n            destroyBase() {\n                this.domElementProvider.destroyCreatedElements();\n                this.eventProvider.removeAddedEvents();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return AccessibilityComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigationHandler.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Keyboard navigation handler base class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { find } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Define a keyboard navigation handler for use with a\n         * Highcharts.AccessibilityComponent instance. This functions as an abstraction\n         * layer for keyboard navigation, and defines a map of keyCodes to handler\n         * functions.\n         *\n         * @requires modules/accessibility\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @class\n         * @name Highcharts.KeyboardNavigationHandler\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart this module should act on.\n         *\n         * @param {Highcharts.KeyboardNavigationHandlerOptionsObject} options\n         * Options for the keyboard navigation handler.\n         */\n        class KeyboardNavigationHandler {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, options) {\n                this.chart = chart;\n                this.keyCodeMap = options.keyCodeMap || [];\n                this.validate = options.validate;\n                this.init = options.init;\n                this.terminate = options.terminate;\n                // Response enum\n                this.response = {\n                    success: 1, // Keycode was handled\n                    prev: 2, // Move to prev module\n                    next: 3, // Move to next module\n                    noHandler: 4, // There is no handler for this keycode\n                    fail: 5 // Handler failed\n                };\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Find handler function(s) for key code in the keyCodeMap and run it.\n             *\n             * @function KeyboardNavigationHandler#run\n             * @param {global.KeyboardEvent} e\n             * @return {number} Returns a response code indicating whether the run was\n             *      a success/fail/unhandled, or if we should move to next/prev module.\n             */\n            run(e) {\n                const keyCode = e.which || e.keyCode;\n                let response = this.response.noHandler;\n                const handlerCodeSet = find(this.keyCodeMap, function (codeSet) {\n                    return codeSet[0].indexOf(keyCode) > -1;\n                });\n                if (handlerCodeSet) {\n                    response = handlerCodeSet[1].call(this, keyCode, e);\n                }\n                else if (keyCode === 9) {\n                    // Default tab handler, move to next/prev module\n                    response = this.response[e.shiftKey ? 'prev' : 'next'];\n                }\n                return response;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Options for the keyboard navigation handler.\n         *\n         * @interface Highcharts.KeyboardNavigationHandlerOptionsObject\n         */ /**\n        * An array containing pairs of an array of keycodes, mapped to a handler\n        * function. When the keycode is received, the handler is called with the\n        * keycode as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#keyCodeMap\n        * @type {Array<Array<Array<number>, Function>>}\n        */ /**\n        * Function to run on initialization of module.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#init\n        * @type {Function}\n        */ /**\n        * Function to run before moving to next/prev module. Receives moving direction\n        * as parameter: +1 for next, -1 for previous.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#terminate\n        * @type {Function|undefined}\n        */ /**\n        * Function to run to validate module. Should return false if module should not\n        * run, true otherwise. Receives chart as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#validate\n        * @type {Function|undefined}\n        */\n        (''); // Keeps doclets above in JS file\n\n        return KeyboardNavigationHandler;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ContainerComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (AccessibilityComponent, KeyboardNavigationHandler, CU, H, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart container.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT, getChartTitle } = CU;\n        const { doc } = H;\n        const { stripHTMLTagsFromString: stripHTMLTags } = HU;\n        /**\n         * The ContainerComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ContainerComponent\n         */\n        class ContainerComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            onChartUpdate() {\n                this.handleSVGTitleElement();\n                this.setSVGContainerLabel();\n                this.setGraphicContainerAttrs();\n                this.setRenderToAttrs();\n                this.makeCreditsAccessible();\n            }\n            /**\n             * @private\n             */\n            handleSVGTitleElement() {\n                const chart = this.chart, titleId = 'highcharts-title-' + chart.index, titleContents = stripHTMLTags(chart.langFormat('accessibility.svgContainerTitle', {\n                    chartTitle: getChartTitle(chart)\n                }));\n                if (titleContents.length) {\n                    const titleElement = this.svgTitleElement =\n                        this.svgTitleElement || doc.createElementNS('http://www.w3.org/2000/svg', 'title');\n                    titleElement.textContent = titleContents;\n                    titleElement.id = titleId;\n                    chart.renderTo.insertBefore(titleElement, chart.renderTo.firstChild);\n                }\n            }\n            /**\n             * @private\n             */\n            setSVGContainerLabel() {\n                const chart = this.chart, svgContainerLabel = chart.langFormat('accessibility.svgContainerLabel', {\n                    chartTitle: getChartTitle(chart)\n                });\n                if (chart.renderer.box && svgContainerLabel.length) {\n                    chart.renderer.box.setAttribute('aria-label', svgContainerLabel);\n                }\n            }\n            /**\n             * @private\n             */\n            setGraphicContainerAttrs() {\n                const chart = this.chart, label = chart.langFormat('accessibility.graphicContainerLabel', {\n                    chartTitle: getChartTitle(chart)\n                });\n                if (label.length) {\n                    chart.container.setAttribute('aria-label', label);\n                }\n            }\n            /**\n             * Set attributes on the chart container element.\n             * @private\n             */\n            setRenderToAttrs() {\n                const chart = this.chart, shouldHaveLandmark = chart.options.accessibility\n                    .landmarkVerbosity !== 'disabled', containerLabel = chart.langFormat('accessibility.chartContainerLabel', {\n                    title: getChartTitle(chart),\n                    chart: chart\n                });\n                if (containerLabel) {\n                    chart.renderTo.setAttribute('role', shouldHaveLandmark ? 'region' : 'group');\n                    chart.renderTo.setAttribute('aria-label', containerLabel);\n                }\n            }\n            /**\n             * @private\n             */\n            makeCreditsAccessible() {\n                const chart = this.chart, credits = chart.credits;\n                if (credits) {\n                    if (credits.textStr) {\n                        credits.element.setAttribute('aria-label', chart.langFormat('accessibility.credits', {\n                            creditsStr: stripHTMLTags(credits.textStr, chart.renderer.forExport)\n                        }));\n                    }\n                    unhideChartElementFromAT(chart, credits.element);\n                }\n            }\n            /**\n             * Empty handler to just set focus on chart\n             * @private\n             */\n            getKeyboardNavigation() {\n                const chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return true;\n                    },\n                    init: function () {\n                        const a11y = chart.accessibility;\n                        if (a11y) {\n                            a11y.keyboardNavigation.tabindexContainer.focus();\n                        }\n                    }\n                });\n            }\n            /**\n             * Accessibility disabled/chart destroyed.\n             */\n            destroy() {\n                this.chart.renderTo.setAttribute('aria-hidden', true);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ContainerComponent;\n    });\n    _registerModule(_modules, 'Accessibility/FocusBorder.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Extend SVG and Chart classes with focus border capabilities.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent, pick } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FocusBorderComposition;\n        (function (FocusBorderComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            // Attributes that trigger a focus border update\n            const svgElementBorderUpdateTriggers = [\n                'x', 'y', 'transform', 'width', 'height', 'r', 'd', 'stroke-width'\n            ];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass, SVGElementClass) {\n                const chartProto = ChartClass.prototype, svgElementProto = SVGElementClass.prototype;\n                if (!chartProto.renderFocusBorder) {\n                    chartProto.renderFocusBorder = chartRenderFocusBorder;\n                    chartProto.setFocusToElement = chartSetFocusToElement;\n                }\n                if (!svgElementProto.addFocusBorder) {\n                    svgElementProto.addFocusBorder = svgElementAddFocusBorder;\n                    svgElementProto.removeFocusBorder = svgElementRemoveFocusBorder;\n                }\n            }\n            FocusBorderComposition.compose = compose;\n            /**\n             * Redraws the focus border on the currently focused element.\n             *\n             * @private\n             * @function Highcharts.Chart#renderFocusBorder\n             */\n            function chartRenderFocusBorder() {\n                const focusElement = this.focusElement, focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder;\n                if (focusElement) {\n                    focusElement.removeFocusBorder();\n                    if (focusBorderOptions.enabled) {\n                        focusElement.addFocusBorder(focusBorderOptions.margin, {\n                            stroke: focusBorderOptions.style.color,\n                            strokeWidth: focusBorderOptions.style.lineWidth,\n                            r: focusBorderOptions.style.borderRadius\n                        });\n                    }\n                }\n            }\n            /**\n             * Set chart's focus to an SVGElement. Calls focus() on it, and draws the\n             * focus border. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.Chart#setFocusToElement\n             *\n             * @param {Highcharts.SVGElement} svgElement\n             * Element to draw the border around.\n             *\n             * @param {SVGDOMElement|HTMLDOMElement} [focusElement]\n             * If supplied, it draws the border around svgElement and sets the focus to\n             * focusElement.\n             */\n            function chartSetFocusToElement(svgElement, focusElement) {\n                const focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder, browserFocusElement = focusElement || svgElement.element;\n                // Set browser focus if possible\n                if (browserFocusElement &&\n                    browserFocusElement.focus) {\n                    // If there is no focusin-listener, add one to work around Edge\n                    // where Narrator is not reading out points despite calling focus().\n                    if (!(browserFocusElement.hcEvents &&\n                        browserFocusElement.hcEvents.focusin)) {\n                        addEvent(browserFocusElement, 'focusin', function () { });\n                    }\n                    browserFocusElement.focus();\n                    // Hide default focus ring\n                    if (focusBorderOptions.hideBrowserFocusOutline) {\n                        browserFocusElement.style.outline = 'none';\n                    }\n                }\n                if (this.focusElement) {\n                    this.focusElement.removeFocusBorder();\n                }\n                this.focusElement = svgElement;\n                this.renderFocusBorder();\n            }\n            /**\n             * Add hook to destroy focus border if SVG element is destroyed, unless\n             * hook already exists.\n             * @private\n             * @param el Element to add destroy hook to\n             */\n            function svgElementAddDestroyFocusBorderHook(el) {\n                if (el.focusBorderDestroyHook) {\n                    return;\n                }\n                const origDestroy = el.destroy;\n                el.destroy = function () {\n                    if (el.focusBorder && el.focusBorder.destroy) {\n                        el.focusBorder.destroy();\n                    }\n                    return origDestroy.apply(el, arguments);\n                };\n                el.focusBorderDestroyHook = origDestroy;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.SVGElement#addFocusBorder\n             *\n             * @param {number} margin\n             *\n             * @param {SVGAttributes} attribs\n             */\n            function svgElementAddFocusBorder(margin, attribs) {\n                // Allow updating by just adding new border\n                if (this.focusBorder) {\n                    this.removeFocusBorder();\n                }\n                // Add the border rect\n                const bb = this.getBBox(), pad = pick(margin, 3), parent = this.parentGroup, scaleX = this.scaleX || parent && parent.scaleX, scaleY = this.scaleY || parent && parent.scaleY, oneDefined = scaleX ? !scaleY : scaleY, scaleBoth = oneDefined ? Math.abs(scaleX || scaleY || 1) :\n                    (Math.abs(scaleX || 1) + Math.abs(scaleY || 1)) / 2;\n                bb.x += this.translateX ? this.translateX : 0;\n                bb.y += this.translateY ? this.translateY : 0;\n                let borderPosX = bb.x - pad, borderPosY = bb.y - pad, borderWidth = bb.width + 2 * pad, borderHeight = bb.height + 2 * pad;\n                /**\n                 * For text elements, apply x and y offset, #11397.\n                 * @private\n                 */\n                function getTextAnchorCorrection(text) {\n                    let posXCorrection = 0, posYCorrection = 0;\n                    if (text.attr('text-anchor') === 'middle') {\n                        posXCorrection = posYCorrection = 0.5;\n                    }\n                    else if (!text.rotation) {\n                        posYCorrection = 0.75;\n                    }\n                    else {\n                        posXCorrection = 0.25;\n                    }\n                    return {\n                        x: posXCorrection,\n                        y: posYCorrection\n                    };\n                }\n                const isLabel = !!this.text;\n                if (this.element.nodeName === 'text' || isLabel) {\n                    const isRotated = !!this.rotation;\n                    const correction = !isLabel ? getTextAnchorCorrection(this) :\n                        {\n                            x: isRotated ? 1 : 0,\n                            y: 0\n                        };\n                    const attrX = +this.attr('x');\n                    const attrY = +this.attr('y');\n                    if (!isNaN(attrX)) {\n                        borderPosX = attrX - (bb.width * correction.x) - pad;\n                    }\n                    if (!isNaN(attrY)) {\n                        borderPosY = attrY - (bb.height * correction.y) - pad;\n                    }\n                    if (isLabel && isRotated) {\n                        const temp = borderWidth;\n                        borderWidth = borderHeight;\n                        borderHeight = temp;\n                        if (!isNaN(attrX)) {\n                            borderPosX = attrX - (bb.height * correction.x) - pad;\n                        }\n                        if (!isNaN(attrY)) {\n                            borderPosY = attrY - (bb.width * correction.y) - pad;\n                        }\n                    }\n                }\n                this.focusBorder = this.renderer.rect(borderPosX, borderPosY, borderWidth, borderHeight, parseInt((attribs && attribs.r || 0).toString(), 10) / scaleBoth)\n                    .addClass('highcharts-focus-border')\n                    .attr({\n                    zIndex: 99\n                })\n                    .add(parent);\n                if (!this.renderer.styledMode) {\n                    this.focusBorder.attr({\n                        stroke: attribs && attribs.stroke,\n                        'stroke-width': (attribs && attribs.strokeWidth || 0) / scaleBoth\n                    });\n                }\n                avgElementAddUpdateFocusBorderHooks(this, margin, attribs);\n                svgElementAddDestroyFocusBorderHook(this);\n            }\n            /**\n             * Add hooks to update the focus border of an element when the element\n             * size/position is updated, unless already added.\n             * @private\n             * @param el Element to add update hooks to\n             * @param updateParams Parameters to pass through to addFocusBorder when updating.\n             */\n            function avgElementAddUpdateFocusBorderHooks(el, ...updateParams) {\n                if (el.focusBorderUpdateHooks) {\n                    return;\n                }\n                el.focusBorderUpdateHooks = {};\n                svgElementBorderUpdateTriggers.forEach((trigger) => {\n                    const setterKey = trigger + 'Setter';\n                    const origSetter = el[setterKey] || el._defaultSetter;\n                    el.focusBorderUpdateHooks[setterKey] = origSetter;\n                    el[setterKey] = function () {\n                        const ret = origSetter.apply(el, arguments);\n                        el.addFocusBorder.apply(el, updateParams);\n                        return ret;\n                    };\n                });\n            }\n            /**\n             * Remove hook from SVG element added by addDestroyFocusBorderHook, if\n             * existing.\n             * @private\n             * @param el Element to remove destroy hook from\n             */\n            function svgElementRemoveDestroyFocusBorderHook(el) {\n                if (!el.focusBorderDestroyHook) {\n                    return;\n                }\n                el.destroy = el.focusBorderDestroyHook;\n                delete el.focusBorderDestroyHook;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             * @private\n             * @function Highcharts.SVGElement#removeFocusBorder\n             */\n            function svgElementRemoveFocusBorder() {\n                svgElementRemoveUpdateFocusBorderHooks(this);\n                svgElementRemoveDestroyFocusBorderHook(this);\n                if (this.focusBorder) {\n                    this.focusBorder.destroy();\n                    delete this.focusBorder;\n                }\n            }\n            /**\n             * Remove hooks from SVG element added by addUpdateFocusBorderHooks, if\n             * existing.\n             * @private\n             * @param el Element to remove update hooks from\n             */\n            function svgElementRemoveUpdateFocusBorderHooks(el) {\n                if (!el.focusBorderUpdateHooks) {\n                    return;\n                }\n                Object.keys(el.focusBorderUpdateHooks).forEach((setterKey) => {\n                    const origSetter = el.focusBorderUpdateHooks[setterKey];\n                    if (origSetter === el._defaultSetter) {\n                        delete el[setterKey];\n                    }\n                    else {\n                        el[setterKey] = origSetter;\n                    }\n                });\n                delete el.focusBorderUpdateHooks;\n            }\n        })(FocusBorderComposition || (FocusBorderComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FocusBorderComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/Announcer.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AST, DOMElementProvider, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Create announcer to speak messages to screen readers and other AT.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { addClass, visuallyHideElement } = HU;\n        const { attr } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Announcer {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, type) {\n                this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.announceRegion = this.addAnnounceRegion(type);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            destroy() {\n                this.domElementProvider.destroyCreatedElements();\n            }\n            announce(message) {\n                AST.setElementHTML(this.announceRegion, message);\n                // Delete contents after a little while to avoid user finding the live\n                // region in the DOM.\n                if (this.clearAnnouncementRegionTimer) {\n                    clearTimeout(this.clearAnnouncementRegionTimer);\n                }\n                this.clearAnnouncementRegionTimer = setTimeout(() => {\n                    this.announceRegion.innerHTML = AST.emptyHTML;\n                    delete this.clearAnnouncementRegionTimer;\n                }, 3000);\n            }\n            addAnnounceRegion(type) {\n                const chartContainer = (this.chart.announcerContainer || this.createAnnouncerContainer()), div = this.domElementProvider.createElement('div');\n                attr(div, {\n                    'aria-hidden': false,\n                    'aria-live': type,\n                    'aria-atomic': true\n                });\n                if (this.chart.styledMode) {\n                    addClass(div, 'highcharts-visually-hidden');\n                }\n                else {\n                    visuallyHideElement(div);\n                }\n                chartContainer.appendChild(div);\n                return div;\n            }\n            createAnnouncerContainer() {\n                const chart = this.chart, container = doc.createElement('div');\n                attr(container, {\n                    'aria-hidden': false,\n                    'class': 'highcharts-announcer-container'\n                });\n                container.style.position = 'relative';\n                chart.renderTo.insertBefore(container, chart.renderTo.firstChild);\n                chart.announcerContainer = container;\n                return container;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Announcer;\n    });\n    _registerModule(_modules, 'Accessibility/Components/AnnotationsA11y.js', [_modules['Accessibility/Utils/HTMLUtilities.js']], function (HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Annotations accessibility code.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { escapeStringForHTML, stripHTMLTagsFromString } = HTMLUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get list of all annotation labels in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<object>} The labels, or empty array if none.\n         */\n        function getChartAnnotationLabels(chart) {\n            const annotations = chart.annotations || [];\n            return annotations.reduce((acc, cur) => {\n                if (cur.options &&\n                    cur.options.visible !== false) {\n                    acc = acc.concat(cur.labels);\n                }\n                return acc;\n            }, []);\n        }\n        /**\n         * Get the text of an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object\n         * @return {string} The text in the label.\n         */\n        function getLabelText(label) {\n            return ((label.options &&\n                label.options.accessibility &&\n                label.options.accessibility.description) ||\n                (label.graphic &&\n                    label.graphic.text &&\n                    label.graphic.text.textStr) ||\n                '');\n        }\n        /**\n         * Describe an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object to describe\n         * @return {string} The description for the label.\n         */\n        function getAnnotationLabelDescription(label) {\n            const a11yDesc = (label.options &&\n                label.options.accessibility &&\n                label.options.accessibility.description);\n            if (a11yDesc) {\n                return a11yDesc;\n            }\n            const chart = label.chart;\n            const labelText = getLabelText(label);\n            const points = label.points;\n            const getAriaLabel = (point) => (point.graphic &&\n                point.graphic.element &&\n                point.graphic.element.getAttribute('aria-label') ||\n                '');\n            const getValueDesc = (point) => {\n                const valDesc = (point.accessibility &&\n                    point.accessibility.valueDescription ||\n                    getAriaLabel(point));\n                const seriesName = (point &&\n                    point.series.name ||\n                    '');\n                return (seriesName ? seriesName + ', ' : '') + 'data point ' + valDesc;\n            };\n            const pointValueDescriptions = points\n                .filter((p) => !!p.graphic) // Filter out mock points\n                .map(getValueDesc)\n                // Filter out points we can't describe\n                .filter((desc) => !!desc);\n            const numPoints = pointValueDescriptions.length;\n            const pointsSelector = numPoints > 1 ?\n                'MultiplePoints' : numPoints ?\n                'SinglePoint' : 'NoPoints';\n            const langFormatStr = ('accessibility.screenReaderSection.annotations.description' +\n                pointsSelector);\n            const context = {\n                annotationText: labelText,\n                annotation: label,\n                numPoints: numPoints,\n                annotationPoint: pointValueDescriptions[0],\n                additionalAnnotationPoints: pointValueDescriptions.slice(1)\n            };\n            return chart.langFormat(langFormatStr, context);\n        }\n        /**\n         * Return array of HTML strings for each annotation label in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<string>} Array of strings with HTML content for each annotation label.\n         */\n        function getAnnotationListItems(chart) {\n            const labels = getChartAnnotationLabels(chart);\n            return labels.map((label) => {\n                const desc = escapeStringForHTML(stripHTMLTagsFromString(getAnnotationLabelDescription(label), chart.renderer.forExport));\n                return desc ? `<li>${desc}</li>` : '';\n            });\n        }\n        /**\n         * Return the annotation info for a chart as string.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {string} String with HTML content or empty string if no annotations.\n         */\n        function getAnnotationsInfoHTML(chart) {\n            const annotations = chart.annotations;\n            if (!(annotations && annotations.length)) {\n                return '';\n            }\n            const annotationItems = getAnnotationListItems(chart);\n            return `<ul style=\"list-style-type: none\">${annotationItems.join(' ')}</ul>`;\n        }\n        /**\n         * Return the texts for the annotation(s) connected to a point, or empty array\n         * if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point The data point to get the annotation info from.\n         * @return {Array<string>} Annotation texts\n         */\n        function getPointAnnotationTexts(point) {\n            const labels = getChartAnnotationLabels(point.series.chart);\n            const pointLabels = labels\n                .filter((label) => label.points.indexOf(point) > -1);\n            if (!pointLabels.length) {\n                return [];\n            }\n            return pointLabels.map((label) => `${getLabelText(label)}`);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const AnnotationsA11y = {\n            getAnnotationsInfoHTML,\n            getAnnotationLabelDescription,\n            getAnnotationListItems,\n            getPointAnnotationTexts\n        };\n\n        return AnnotationsA11y;\n    });\n    _registerModule(_modules, 'Accessibility/Components/InfoRegionsComponent.js', [_modules['Accessibility/A11yI18n.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (A11yI18n, AccessibilityComponent, Announcer, AnnotationsA11y, AST, CU, F, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart info region and table.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getAnnotationsInfoHTML } = AnnotationsA11y;\n        const { getAxisDescription, getAxisRangeDescription, getChartTitle, unhideChartElementFromAT } = CU;\n        const { format } = F;\n        const { doc } = H;\n        const { addClass, getElement, getHeadingTagNameForElement, stripHTMLTagsFromString, visuallyHideElement } = HU;\n        const { attr, pick, replaceNested } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getTableSummary(chart) {\n            return chart.langFormat('accessibility.table.tableSummary', { chart: chart });\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForMapChart(chart, formatContext) {\n            return formatContext.mapTitle ?\n                chart.langFormat('accessibility.chartTypes.mapTypeDescription', formatContext) :\n                chart.langFormat('accessibility.chartTypes.unknownMap', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForCombinationChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.combinationChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForEmptyChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.emptyChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function buildTypeDescriptionFromSeries(chart, types, context) {\n            const firstType = types[0], typeExplanation = chart.langFormat('accessibility.seriesTypeDescriptions.' + firstType, context), multi = chart.series && chart.series.length < 2 ? 'Single' : 'Multiple';\n            return (chart.langFormat('accessibility.chartTypes.' + firstType + multi, context) ||\n                chart.langFormat('accessibility.chartTypes.default' + multi, context)) + (typeExplanation ? ' ' + typeExplanation : '');\n        }\n        /**\n         * Return simplified explanation of chart type. Some types will not be\n         * familiar to most users, but in those cases we try to add an explanation\n         * of the type.\n         *\n         * @private\n         * @function Highcharts.Chart#getTypeDescription\n         * @param {Array<string>} types The series types in this chart.\n         * @return {string} The text description of the chart type.\n         */\n        function getTypeDescription(chart, types) {\n            const firstType = types[0], firstSeries = chart.series && chart.series[0] || {}, mapTitle = chart.mapView && chart.mapView.geoMap &&\n                chart.mapView.geoMap.title, formatContext = {\n                numSeries: chart.series.length,\n                numPoints: firstSeries.points && firstSeries.points.length,\n                chart,\n                mapTitle\n            };\n            if (!firstType) {\n                return getTypeDescForEmptyChart(chart, formatContext);\n            }\n            if (firstType === 'map' || firstType === 'tiledwebmap') {\n                return getTypeDescForMapChart(chart, formatContext);\n            }\n            if (chart.types.length > 1) {\n                return getTypeDescForCombinationChart(chart, formatContext);\n            }\n            return buildTypeDescriptionFromSeries(chart, types, formatContext);\n        }\n        /**\n         * @private\n         */\n        function stripEmptyHTMLTags(str) {\n            // Scan alert #[71]: Loop for nested patterns\n            return replaceNested(str, [/<([\\w\\-.:!]+)\\b[^<>]*>\\s*<\\/\\1>/g, '']);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The InfoRegionsComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.InfoRegionsComponent\n         */\n        class InfoRegionsComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.screenReaderSections = {};\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                const component = this;\n                this.initRegionsDefinitions();\n                this.addEvent(chart, 'aftergetTableAST', function (e) {\n                    component.onDataTableCreated(e);\n                });\n                this.addEvent(chart, 'afterViewData', function (e) {\n                    if (e.wasHidden) {\n                        component.dataTableDiv = e.element;\n                        // Use a small delay to give browsers & AT time to\n                        // register the new table.\n                        setTimeout(function () {\n                            component.focusDataTable();\n                        }, 300);\n                    }\n                });\n                this.addEvent(chart, 'afterHideData', function () {\n                    if (component.viewDataTableButton) {\n                        component.viewDataTableButton\n                            .setAttribute('aria-expanded', 'false');\n                    }\n                });\n                if (chart.exporting) {\n                    // Needed when print logic in exporting does not trigger\n                    // rerendering thus repositioning of screen reader DOM elements\n                    // (#21554)\n                    this.addEvent(chart, 'afterPrint', function () {\n                        component.updateAllScreenReaderSections();\n                    });\n                }\n                this.announcer = new Announcer(chart, 'assertive');\n            }\n            /**\n             * @private\n             */\n            initRegionsDefinitions() {\n                const component = this, accessibilityOptions = this.chart.options.accessibility;\n                this.screenReaderSections = {\n                    before: {\n                        element: null,\n                        buildContent: function (chart) {\n                            const formatter = accessibilityOptions.screenReaderSection\n                                .beforeChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultBeforeChartFormatter(chart);\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.renderTo.firstChild);\n                        },\n                        afterInserted: function () {\n                            if (typeof component.sonifyButtonId !== 'undefined') {\n                                component.initSonifyButton(component.sonifyButtonId);\n                            }\n                            if (typeof component.dataTableButtonId !== 'undefined') {\n                                component.initDataTableButton(component.dataTableButtonId);\n                            }\n                        }\n                    },\n                    after: {\n                        element: null,\n                        buildContent: function (chart) {\n                            const formatter = accessibilityOptions.screenReaderSection\n                                .afterChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultAfterChartFormatter();\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.container.nextSibling);\n                        },\n                        afterInserted: function () {\n                            if (component.chart.accessibility &&\n                                accessibilityOptions.keyboardNavigation.enabled) {\n                                component.chart.accessibility\n                                    .keyboardNavigation.updateExitAnchor(); // #15986\n                            }\n                        }\n                    }\n                };\n            }\n            /**\n             * Called on chart render. Have to update the sections on render, in order\n             * to get a11y info from series.\n             */\n            onChartRender() {\n                this.linkedDescriptionElement = this.getLinkedDescriptionElement();\n                this.setLinkedDescriptionAttrs();\n                this.updateAllScreenReaderSections();\n            }\n            updateAllScreenReaderSections() {\n                const component = this;\n                Object.keys(this.screenReaderSections).forEach(function (regionKey) {\n                    component.updateScreenReaderSection(regionKey);\n                });\n            }\n            /**\n             * @private\n             */\n            getLinkedDescriptionElement() {\n                const chartOptions = this.chart.options, linkedDescOption = chartOptions.accessibility.linkedDescription;\n                if (!linkedDescOption) {\n                    return;\n                }\n                if (typeof linkedDescOption !== 'string') {\n                    return linkedDescOption;\n                }\n                const query = format(linkedDescOption, this.chart), queryMatch = doc.querySelectorAll(query);\n                if (queryMatch.length === 1) {\n                    return queryMatch[0];\n                }\n            }\n            /**\n             * @private\n             */\n            setLinkedDescriptionAttrs() {\n                const el = this.linkedDescriptionElement;\n                if (el) {\n                    el.setAttribute('aria-hidden', 'true');\n                    addClass(el, 'highcharts-linked-description');\n                }\n            }\n            /**\n             * @private\n             * @param {string} regionKey\n             * The name/key of the region to update\n             */\n            updateScreenReaderSection(regionKey) {\n                const chart = this.chart;\n                const region = this.screenReaderSections[regionKey];\n                const content = region.buildContent(chart);\n                const sectionDiv = region.element = (region.element || this.createElement('div'));\n                const hiddenDiv = (sectionDiv.firstChild || this.createElement('div'));\n                if (content) {\n                    this.setScreenReaderSectionAttribs(sectionDiv, regionKey);\n                    AST.setElementHTML(hiddenDiv, content);\n                    sectionDiv.appendChild(hiddenDiv);\n                    region.insertIntoDOM(sectionDiv, chart);\n                    if (chart.styledMode) {\n                        addClass(hiddenDiv, 'highcharts-visually-hidden');\n                    }\n                    else {\n                        visuallyHideElement(hiddenDiv);\n                    }\n                    unhideChartElementFromAT(chart, hiddenDiv);\n                    if (region.afterInserted) {\n                        region.afterInserted();\n                    }\n                }\n                else {\n                    if (sectionDiv.parentNode) {\n                        sectionDiv.parentNode.removeChild(sectionDiv);\n                    }\n                    region.element = null;\n                }\n            }\n            /**\n             * Apply a11y attributes to a screen reader info section\n             * @private\n             * @param {Highcharts.HTMLDOMElement} sectionDiv The section element\n             * @param {string} regionKey Name/key of the region we are setting attrs for\n             */\n            setScreenReaderSectionAttribs(sectionDiv, regionKey) {\n                const chart = this.chart, labelText = chart.langFormat('accessibility.screenReaderSection.' + regionKey +\n                    'RegionLabel', { chart: chart, chartTitle: getChartTitle(chart) }), sectionId = `highcharts-screen-reader-region-${regionKey}-${chart.index}`;\n                attr(sectionDiv, {\n                    id: sectionId,\n                    'aria-label': labelText || void 0\n                });\n                // Sections are wrapped to be positioned relatively to chart in case\n                // elements inside are tabbed to.\n                sectionDiv.style.position = 'relative';\n                if (labelText) {\n                    sectionDiv.setAttribute('role', chart.options.accessibility.landmarkVerbosity === 'all' ?\n                        'region' : 'group');\n                }\n            }\n            /**\n             * @private\n             */\n            defaultBeforeChartFormatter() {\n                const chart = this.chart, format = chart.options.accessibility.screenReaderSection\n                    .beforeChartFormat;\n                if (!format) {\n                    return '';\n                }\n                const axesDesc = this.getAxesDescription(), shouldHaveSonifyBtn = (chart.sonify &&\n                    chart.options.sonification &&\n                    chart.options.sonification.enabled), sonifyButtonId = 'highcharts-a11y-sonify-data-btn-' +\n                    chart.index, dataTableButtonId = 'hc-linkto-highcharts-data-table-' +\n                    chart.index, annotationsList = getAnnotationsInfoHTML(chart), annotationsTitleStr = chart.langFormat('accessibility.screenReaderSection.annotations.heading', { chart: chart }), context = {\n                    headingTagName: getHeadingTagNameForElement(chart.renderTo),\n                    chartTitle: getChartTitle(chart),\n                    typeDescription: this.getTypeDescriptionText(),\n                    chartSubtitle: this.getSubtitleText(),\n                    chartLongdesc: this.getLongdescText(),\n                    xAxisDescription: axesDesc.xAxis,\n                    yAxisDescription: axesDesc.yAxis,\n                    playAsSoundButton: shouldHaveSonifyBtn ?\n                        this.getSonifyButtonText(sonifyButtonId) : '',\n                    viewTableButton: chart.getCSV ?\n                        this.getDataTableButtonText(dataTableButtonId) : '',\n                    annotationsTitle: annotationsList ? annotationsTitleStr : '',\n                    annotationsList: annotationsList\n                }, formattedString = A11yI18n.i18nFormat(format, context, chart);\n                this.dataTableButtonId = dataTableButtonId;\n                this.sonifyButtonId = sonifyButtonId;\n                return stripEmptyHTMLTags(formattedString);\n            }\n            /**\n             * @private\n             */\n            defaultAfterChartFormatter() {\n                const chart = this.chart;\n                const format = chart.options.accessibility.screenReaderSection\n                    .afterChartFormat;\n                if (!format) {\n                    return '';\n                }\n                const context = { endOfChartMarker: this.getEndOfChartMarkerText() };\n                const formattedString = A11yI18n.i18nFormat(format, context, chart);\n                return stripEmptyHTMLTags(formattedString);\n            }\n            /**\n             * @private\n             */\n            getLinkedDescription() {\n                const el = this.linkedDescriptionElement, content = el && el.innerHTML || '';\n                return stripHTMLTagsFromString(content, this.chart.renderer.forExport);\n            }\n            /**\n             * @private\n             */\n            getLongdescText() {\n                const chartOptions = this.chart.options, captionOptions = chartOptions.caption, captionText = captionOptions && captionOptions.text, linkedDescription = this.getLinkedDescription();\n                return (chartOptions.accessibility.description ||\n                    linkedDescription ||\n                    captionText ||\n                    '');\n            }\n            /**\n             * @private\n             */\n            getTypeDescriptionText() {\n                const chart = this.chart;\n                return chart.types ?\n                    chart.options.accessibility.typeDescription ||\n                        getTypeDescription(chart, chart.types) : '';\n            }\n            /**\n             * @private\n             */\n            getDataTableButtonText(buttonId) {\n                const chart = this.chart, buttonText = chart.langFormat('accessibility.table.viewAsDataTableButtonText', { chart: chart, chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            }\n            /**\n             * @private\n             */\n            getSonifyButtonText(buttonId) {\n                const chart = this.chart;\n                if (chart.options.sonification &&\n                    chart.options.sonification.enabled === false) {\n                    return '';\n                }\n                const buttonText = chart.langFormat('accessibility.sonification.playAsSoundButtonText', { chart: chart, chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            }\n            /**\n             * @private\n             */\n            getSubtitleText() {\n                const subtitle = (this.chart.options.subtitle);\n                return stripHTMLTagsFromString(subtitle && subtitle.text || '', this.chart.renderer.forExport);\n            }\n            /**\n             * @private\n             */\n            getEndOfChartMarkerText() {\n                const endMarkerId = `highcharts-end-of-chart-marker-${this.chart.index}`, endMarker = getElement(endMarkerId);\n                if (endMarker) {\n                    return endMarker.outerHTML;\n                }\n                const chart = this.chart, markerText = chart.langFormat('accessibility.screenReaderSection.endOfChartMarker', { chart: chart }), id = 'highcharts-end-of-chart-marker-' + chart.index;\n                return '<div id=\"' + id + '\">' + markerText + '</div>';\n            }\n            /**\n             * @private\n             * @param {Highcharts.Dictionary<string>} e\n             */\n            onDataTableCreated(e) {\n                const chart = this.chart;\n                if (chart.options.accessibility.enabled) {\n                    if (this.viewDataTableButton) {\n                        this.viewDataTableButton.setAttribute('aria-expanded', 'true');\n                    }\n                    const attributes = e.tree.attributes || {};\n                    attributes.tabindex = -1;\n                    attributes.summary = getTableSummary(chart);\n                    e.tree.attributes = attributes;\n                }\n            }\n            /**\n             * @private\n             */\n            focusDataTable() {\n                const tableDiv = this.dataTableDiv, table = tableDiv && tableDiv.getElementsByTagName('table')[0];\n                if (table && table.focus) {\n                    table.focus();\n                }\n            }\n            /**\n             * @private\n             * @param {string} sonifyButtonId\n             */\n            initSonifyButton(sonifyButtonId) {\n                const el = this.sonifyButton = getElement(sonifyButtonId);\n                const chart = this.chart;\n                const defaultHandler = (e) => {\n                    if (el) {\n                        el.setAttribute('aria-hidden', 'true');\n                        el.setAttribute('aria-label', '');\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const announceMsg = chart.langFormat('accessibility.sonification.playAsSoundClickAnnouncement', { chart: chart });\n                    this.announcer.announce(announceMsg);\n                    setTimeout(() => {\n                        if (el) {\n                            el.removeAttribute('aria-hidden');\n                            el.removeAttribute('aria-label');\n                        }\n                        if (chart.sonify) {\n                            chart.sonify();\n                        }\n                    }, 1000); // Delay to let screen reader speak the button press\n                };\n                if (el && chart) {\n                    el.setAttribute('tabindex', -1);\n                    el.onclick = function (e) {\n                        const onPlayAsSoundClick = (chart.options.accessibility &&\n                            chart.options.accessibility.screenReaderSection\n                                .onPlayAsSoundClick);\n                        (onPlayAsSoundClick || defaultHandler).call(this, e, chart);\n                    };\n                }\n            }\n            /**\n             * Set attribs and handlers for default viewAsDataTable button if exists.\n             * @private\n             * @param {string} tableButtonId\n             */\n            initDataTableButton(tableButtonId) {\n                const el = this.viewDataTableButton = getElement(tableButtonId), chart = this.chart, tableId = tableButtonId.replace('hc-linkto-', '');\n                if (el) {\n                    attr(el, {\n                        tabindex: -1,\n                        'aria-expanded': !!getElement(tableId)\n                    });\n                    el.onclick = chart.options.accessibility\n                        .screenReaderSection.onViewDataTableClick ||\n                        function () {\n                            chart.viewData();\n                        };\n                }\n            }\n            /**\n             * Return object with text description of each of the chart's axes.\n             * @private\n             */\n            getAxesDescription() {\n                const chart = this.chart, shouldDescribeColl = function (collectionKey, defaultCondition) {\n                    const axes = chart[collectionKey];\n                    return axes.length > 1 || axes[0] &&\n                        pick(axes[0].options.accessibility &&\n                            axes[0].options.accessibility.enabled, defaultCondition);\n                }, hasNoMap = !!chart.types &&\n                    chart.types.indexOf('map') < 0 &&\n                    chart.types.indexOf('treemap') < 0 &&\n                    chart.types.indexOf('tilemap') < 0, hasCartesian = !!chart.hasCartesianSeries, showXAxes = shouldDescribeColl('xAxis', !chart.angular && hasCartesian && hasNoMap), showYAxes = shouldDescribeColl('yAxis', hasCartesian && hasNoMap), desc = {};\n                if (showXAxes) {\n                    desc.xAxis = this.getAxisDescriptionText('xAxis');\n                }\n                if (showYAxes) {\n                    desc.yAxis = this.getAxisDescriptionText('yAxis');\n                }\n                return desc;\n            }\n            /**\n             * @private\n             */\n            getAxisDescriptionText(collectionKey) {\n                const chart = this.chart;\n                const axes = chart[collectionKey];\n                return chart.langFormat('accessibility.axis.' + collectionKey + 'Description' + (axes.length > 1 ? 'Plural' : 'Singular'), {\n                    chart: chart,\n                    names: axes.map(function (axis) {\n                        return getAxisDescription(axis);\n                    }),\n                    ranges: axes.map(function (axis) {\n                        return getAxisRangeDescription(axis);\n                    }),\n                    numAxes: axes.length\n                });\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return InfoRegionsComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/MenuComponent.js', [_modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (U, AccessibilityComponent, KeyboardNavigationHandler, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for exporting menu.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { attr } = U;\n        const { getChartTitle, unhideChartElementFromAT } = ChartUtilities;\n        const { getFakeMouseEvent } = HTMLUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the wrapped export button element of a chart.\n         * @private\n         */\n        function getExportMenuButtonElement(chart) {\n            return chart.exportSVGElements && chart.exportSVGElements[0];\n        }\n        /**\n         * @private\n         */\n        function exportingShouldHaveA11y(chart) {\n            const exportingOpts = chart.options.exporting, exportButton = getExportMenuButtonElement(chart);\n            return !!(exportingOpts &&\n                exportingOpts.enabled !== false &&\n                exportingOpts.accessibility &&\n                exportingOpts.accessibility.enabled &&\n                exportButton &&\n                exportButton.element);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MenuComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.MenuComponent\n         */\n        class MenuComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             */\n            init() {\n                const chart = this.chart, component = this;\n                this.addEvent(chart, 'exportMenuShown', function () {\n                    component.onMenuShown();\n                });\n                this.addEvent(chart, 'exportMenuHidden', function () {\n                    component.onMenuHidden();\n                });\n                this.createProxyGroup();\n            }\n            /**\n             * @private\n             */\n            onMenuHidden() {\n                const menu = this.chart.exportContextMenu;\n                if (menu) {\n                    menu.setAttribute('aria-hidden', 'true');\n                }\n                this.setExportButtonExpandedState('false');\n            }\n            /**\n             * @private\n             */\n            onMenuShown() {\n                const chart = this.chart, menu = chart.exportContextMenu;\n                if (menu) {\n                    this.addAccessibleContextMenuAttribs();\n                    unhideChartElementFromAT(chart, menu);\n                }\n                this.setExportButtonExpandedState('true');\n            }\n            /**\n             * @private\n             * @param {string} stateStr\n             */\n            setExportButtonExpandedState(stateStr) {\n                if (this.exportButtonProxy) {\n                    this.exportButtonProxy.innerElement.setAttribute('aria-expanded', stateStr);\n                }\n            }\n            /**\n             * Called on each render of the chart. We need to update positioning of the\n             * proxy overlay.\n             */\n            onChartRender() {\n                const chart = this.chart, focusEl = chart.focusElement, a11y = chart.accessibility;\n                this.proxyProvider.clearGroup('chartMenu');\n                this.proxyMenuButton();\n                if (this.exportButtonProxy &&\n                    focusEl &&\n                    focusEl === chart.exportingGroup) {\n                    if (focusEl.focusBorder) {\n                        chart.setFocusToElement(focusEl, this.exportButtonProxy.innerElement);\n                    }\n                    else if (a11y) {\n                        a11y.keyboardNavigation.tabindexContainer.focus();\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            proxyMenuButton() {\n                const chart = this.chart;\n                const proxyProvider = this.proxyProvider;\n                const buttonEl = getExportMenuButtonElement(chart);\n                if (exportingShouldHaveA11y(chart) && buttonEl) {\n                    this.exportButtonProxy = proxyProvider.addProxyElement('chartMenu', { click: buttonEl }, 'button', {\n                        'aria-label': chart.langFormat('accessibility.exporting.menuButtonLabel', {\n                            chart: chart,\n                            chartTitle: getChartTitle(chart)\n                        }),\n                        'aria-expanded': false,\n                        title: chart.options.lang.contextButtonTitle || null\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            createProxyGroup() {\n                const chart = this.chart;\n                if (chart && this.proxyProvider) {\n                    this.proxyProvider.addGroup('chartMenu');\n                }\n            }\n            /**\n             * @private\n             */\n            addAccessibleContextMenuAttribs() {\n                const chart = this.chart, exportList = chart.exportDivElements;\n                if (exportList && exportList.length) {\n                    // Set tabindex on the menu items to allow focusing by script\n                    // Set role to give screen readers a chance to pick up the contents\n                    exportList.forEach((item) => {\n                        if (item) {\n                            if (item.tagName === 'LI' &&\n                                !(item.children && item.children.length)) {\n                                item.setAttribute('tabindex', -1);\n                            }\n                            else {\n                                item.setAttribute('aria-hidden', 'true');\n                            }\n                        }\n                    });\n                    // Set accessibility properties on parent div\n                    const parentDiv = (exportList[0] && exportList[0].parentNode);\n                    if (parentDiv) {\n                        attr(parentDiv, {\n                            'aria-hidden': void 0,\n                            'aria-label': chart.langFormat('accessibility.exporting.chartMenuLabel', { chart }),\n                            role: 'list' // Needed for webkit/VO\n                        });\n                    }\n                }\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                const keys = this.keyCodes, chart = this.chart, component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        // Arrow prev handler\n                        [\n                            [keys.left, keys.up],\n                            function () {\n                                return component.onKbdPrevious(this);\n                            }\n                        ],\n                        // Arrow next handler\n                        [\n                            [keys.right, keys.down],\n                            function () {\n                                return component.onKbdNext(this);\n                            }\n                        ],\n                        // Click handler\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ]\n                    ],\n                    // Only run exporting navigation if exporting support exists and is\n                    // enabled on chart\n                    validate: function () {\n                        return !!chart.exporting &&\n                            chart.options.exporting.enabled !== false &&\n                            chart.options.exporting.accessibility.enabled !==\n                                false;\n                    },\n                    // Focus export menu button\n                    init: function () {\n                        const proxy = component.exportButtonProxy;\n                        const svgEl = component.chart.exportingGroup;\n                        if (proxy && svgEl) {\n                            chart.setFocusToElement(svgEl, proxy.innerElement);\n                        }\n                    },\n                    // Hide the menu\n                    terminate: function () {\n                        chart.hideExportMenu();\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdPrevious(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const a11yOptions = chart.options.accessibility;\n                const response = keyboardNavigationHandler.response;\n                // Try to highlight prev item in list. Highlighting e.g.\n                // separators will fail.\n                let i = chart.highlightedExportItemIx || 0;\n                while (i--) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to prev module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightLastExportItem();\n                    return response.success;\n                }\n                return response.prev;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdNext(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const a11yOptions = chart.options.accessibility;\n                const response = keyboardNavigationHandler.response;\n                // Try to highlight next item in list. Highlighting e.g.\n                // separators will fail.\n                for (let i = (chart.highlightedExportItemIx || 0) + 1; i < chart.exportDivElements.length; ++i) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to next module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightExportItem(0);\n                    return response.success;\n                }\n                return response.next;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdClick(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const curHighlightedItem = chart.exportDivElements[chart.highlightedExportItemIx];\n                const exportButtonElement = getExportMenuButtonElement(chart).element;\n                if (chart.openMenu) {\n                    this.fakeClickEvent(curHighlightedItem);\n                }\n                else {\n                    this.fakeClickEvent(exportButtonElement);\n                    chart.highlightExportItem(0);\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (MenuComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.hideExportMenu) {\n                    chartProto.hideExportMenu = chartHideExportMenu;\n                    chartProto.highlightExportItem = chartHighlightExportItem;\n                    chartProto.highlightLastExportItem = chartHighlightLastExportItem;\n                    chartProto.showExportMenu = chartShowExportMenu;\n                }\n            }\n            MenuComponent.compose = compose;\n            /**\n             * Show the export menu and focus the first item (if exists).\n             *\n             * @private\n             * @function Highcharts.Chart#showExportMenu\n             */\n            function chartShowExportMenu() {\n                const exportButton = getExportMenuButtonElement(this);\n                if (exportButton) {\n                    const el = exportButton.element;\n                    if (el.onclick) {\n                        el.onclick(getFakeMouseEvent('click'));\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.Chart#hideExportMenu\n             */\n            function chartHideExportMenu() {\n                const chart = this, exportList = chart.exportDivElements;\n                if (exportList && chart.exportContextMenu && chart.openMenu) {\n                    // Reset hover states etc.\n                    exportList.forEach((el) => {\n                        if (el &&\n                            el.className === 'highcharts-menu-item' &&\n                            el.onmouseout) {\n                            el.onmouseout(getFakeMouseEvent('mouseout'));\n                        }\n                    });\n                    chart.highlightedExportItemIx = 0;\n                    // Hide the menu div\n                    chart.exportContextMenu.hideMenu();\n                    // Make sure the chart has focus and can capture keyboard events\n                    chart.container.focus();\n                }\n            }\n            /**\n             * Highlight export menu item by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightExportItem\n             */\n            function chartHighlightExportItem(ix) {\n                const listItem = this.exportDivElements && this.exportDivElements[ix];\n                const curHighlighted = this.exportDivElements &&\n                    this.exportDivElements[this.highlightedExportItemIx];\n                if (listItem &&\n                    listItem.tagName === 'LI' &&\n                    !(listItem.children && listItem.children.length)) {\n                    // Test if we have focus support for SVG elements\n                    const hasSVGFocusSupport = !!(this.renderTo.getElementsByTagName('g')[0] || {}).focus;\n                    // Only focus if we can set focus back to the elements after\n                    // destroying the menu (#7422)\n                    if (listItem.focus && hasSVGFocusSupport) {\n                        listItem.focus();\n                    }\n                    if (curHighlighted && curHighlighted.onmouseout) {\n                        curHighlighted.onmouseout(getFakeMouseEvent('mouseout'));\n                    }\n                    if (listItem.onmouseover) {\n                        listItem.onmouseover(getFakeMouseEvent('mouseover'));\n                    }\n                    this.highlightedExportItemIx = ix;\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * Try to highlight the last valid export menu item.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightLastExportItem\n             */\n            function chartHighlightLastExportItem() {\n                const chart = this;\n                if (chart.exportDivElements) {\n                    let i = chart.exportDivElements.length;\n                    while (i--) {\n                        if (chart.highlightExportItem(i)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        })(MenuComponent || (MenuComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MenuComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigation.js', [_modules['Core/Globals.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, MenuComponent, U, EventProvider, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Main keyboard navigation handling.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, win } = H;\n        const { addEvent, defined, fireEvent } = U;\n        const { getElement, simulatedEventTarget } = HTMLUtilities;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The KeyboardNavigation class, containing the overall keyboard navigation\n         * logic for the chart.\n         *\n         * @requires modules/accessibility\n         *\n         * @private\n         * @class\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         * @param {Object} components\n         *        Map of component names to AccessibilityComponent objects.\n         * @name Highcharts.KeyboardNavigation\n         */\n        class KeyboardNavigation {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, components) {\n                this.currentModuleIx = NaN;\n                this.modules = [];\n                this.init(chart, components);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             * @param {Object} components\n             *        Map of component names to AccessibilityComponent objects.\n             */\n            init(chart, components) {\n                const ep = this.eventProvider = new EventProvider();\n                this.chart = chart;\n                this.components = components;\n                this.modules = [];\n                this.currentModuleIx = 0;\n                this.update();\n                ep.addEvent(this.tabindexContainer, 'keydown', (e) => this.onKeydown(e));\n                ep.addEvent(this.tabindexContainer, 'focus', (e) => this.onFocus(e));\n                ['mouseup', 'touchend'].forEach((eventName) => ep.addEvent(doc, eventName, (e) => this.onMouseUp(e)));\n                ['mousedown', 'touchstart'].forEach((eventName) => ep.addEvent(chart.renderTo, eventName, () => {\n                    this.isClickingChart = true;\n                }));\n            }\n            /**\n             * Update the modules for the keyboard navigation.\n             * @param {Array<string>} [order]\n             *        Array specifying the tab order of the components.\n             */\n            update(order) {\n                const a11yOptions = this.chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, components = this.components;\n                this.updateContainerTabindex();\n                if (keyboardOptions &&\n                    keyboardOptions.enabled &&\n                    order &&\n                    order.length) {\n                    // We (still) have keyboard navigation. Update module list\n                    this.modules = order.reduce(function (modules, componentName) {\n                        const navModules = components[componentName]\n                            .getKeyboardNavigation();\n                        return modules.concat(navModules);\n                    }, []);\n                    this.updateExitAnchor();\n                }\n                else {\n                    this.modules = [];\n                    this.currentModuleIx = 0;\n                    this.removeExitAnchor();\n                }\n            }\n            /**\n             * We use an exit anchor to move focus out of chart whenever we want, by\n             * setting focus to this div and not preventing the default tab action. We\n             * also use this when users come back into the chart by tabbing back, in\n             * order to navigate from the end of the chart.\n             * @private\n             */\n            updateExitAnchor() {\n                const endMarkerId = `highcharts-end-of-chart-marker-${this.chart.index}`, endMarker = getElement(endMarkerId);\n                this.removeExitAnchor();\n                if (endMarker) {\n                    this.makeElementAnExitAnchor(endMarker);\n                    this.exitAnchor = endMarker;\n                }\n                else {\n                    this.createExitAnchor();\n                }\n            }\n            /**\n             * Move to prev/next module.\n             * @private\n             * @param {number} direction\n             * Direction to move. +1 for next, -1 for prev.\n             * @return {boolean}\n             * True if there was a valid module in direction.\n             */\n            move(direction) {\n                const curModule = this.modules && this.modules[this.currentModuleIx];\n                if (curModule && curModule.terminate) {\n                    curModule.terminate(direction);\n                }\n                // Remove existing focus border if any\n                if (this.chart.focusElement) {\n                    this.chart.focusElement.removeFocusBorder();\n                }\n                this.currentModuleIx += direction;\n                const newModule = this.modules && this.modules[this.currentModuleIx];\n                if (newModule) {\n                    if (newModule.validate && !newModule.validate()) {\n                        return this.move(direction); // Invalid module, recurse\n                    }\n                    if (newModule.init) {\n                        newModule.init(direction); // Valid module, init it\n                        return true;\n                    }\n                }\n                // No module\n                this.currentModuleIx = 0; // Reset counter\n                // Set focus to chart or exit anchor depending on direction\n                this.exiting = true;\n                if (direction > 0) {\n                    this.exitAnchor && this.exitAnchor.focus();\n                }\n                else {\n                    this.tabindexContainer.focus();\n                }\n                return false;\n            }\n            /**\n             * Function to run on container focus\n             * @private\n             * @param {global.FocusEvent} e Browser focus event.\n             */\n            onFocus(e) {\n                const chart = this.chart, focusComesFromChart = (e.relatedTarget &&\n                    chart.container.contains(e.relatedTarget)), a11yOptions = chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, enabled = keyboardOptions && keyboardOptions.enabled;\n                // Init keyboard nav if tabbing into chart\n                if (enabled &&\n                    !this.exiting &&\n                    !this.tabbingInBackwards &&\n                    !this.isClickingChart &&\n                    !focusComesFromChart) {\n                    const ix = this.getFirstValidModuleIx();\n                    if (ix !== null) {\n                        this.currentModuleIx = ix;\n                        this.modules[ix].init(1);\n                    }\n                }\n                this.keyboardReset = false;\n                this.exiting = false;\n            }\n            /**\n             * Reset chart navigation state if we mouse click and it's not already\n             * reset. Reset fully if outside the chart, otherwise just hide focus\n             * indicator.\n             * @private\n             */\n            onMouseUp(e) {\n                delete this.isClickingChart;\n                if (!this.keyboardReset &&\n                    e.relatedTarget !== simulatedEventTarget) {\n                    const chart = this.chart;\n                    if (!e.target ||\n                        !chart.container.contains(e.target)) {\n                        const curMod = this.modules &&\n                            this.modules[this.currentModuleIx || 0];\n                        if (curMod && curMod.terminate) {\n                            curMod.terminate();\n                        }\n                        this.currentModuleIx = 0;\n                    }\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                        delete chart.focusElement;\n                    }\n                    this.keyboardReset = true;\n                }\n            }\n            /**\n             * Function to run on keydown\n             * @private\n             * @param {global.KeyboardEvent} ev Browser keydown event.\n             */\n            onKeydown(ev) {\n                const e = ev || win.event, curNavModule = (this.modules &&\n                    this.modules.length &&\n                    this.modules[this.currentModuleIx]);\n                let preventDefault;\n                const target = e.target;\n                if (target &&\n                    target.nodeName === 'INPUT' &&\n                    !target.classList.contains('highcharts-a11y-proxy-element')) {\n                    return;\n                }\n                // Used for resetting nav state when clicking outside chart\n                this.keyboardReset = false;\n                // Used for sending focus out of the chart by the modules.\n                this.exiting = false;\n                // If there is a nav module for the current index, run it.\n                // Otherwise, we are outside of the chart in some direction.\n                if (curNavModule) {\n                    const response = curNavModule.run(e);\n                    if (response === curNavModule.response.success) {\n                        preventDefault = true;\n                    }\n                    else if (response === curNavModule.response.prev) {\n                        preventDefault = this.move(-1);\n                    }\n                    else if (response === curNavModule.response.next) {\n                        preventDefault = this.move(1);\n                    }\n                    if (preventDefault) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n            }\n            /**\n             * Chart container should have tabindex if navigation is enabled.\n             * @private\n             */\n            updateContainerTabindex() {\n                const a11yOptions = this.chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, shouldHaveTabindex = !(keyboardOptions && keyboardOptions.enabled === false), chart = this.chart, container = chart.container;\n                let tabindexContainer;\n                if (chart.renderTo.hasAttribute('tabindex')) {\n                    container.removeAttribute('tabindex');\n                    tabindexContainer = chart.renderTo;\n                }\n                else {\n                    tabindexContainer = container;\n                }\n                this.tabindexContainer = tabindexContainer;\n                const curTabindex = tabindexContainer.getAttribute('tabindex');\n                if (shouldHaveTabindex && !curTabindex) {\n                    tabindexContainer.setAttribute('tabindex', '0');\n                }\n                else if (!shouldHaveTabindex) {\n                    chart.container.removeAttribute('tabindex');\n                }\n            }\n            /**\n             * Add new exit anchor to the chart.\n             * @private\n             */\n            createExitAnchor() {\n                const chart = this.chart, exitAnchor = this.exitAnchor = doc.createElement('div');\n                chart.renderTo.appendChild(exitAnchor);\n                this.makeElementAnExitAnchor(exitAnchor);\n            }\n            /**\n             * Add attributes and events to an element to make it function as an\n             * exit anchor.\n             * @private\n             */\n            makeElementAnExitAnchor(el) {\n                const chartTabindex = this.tabindexContainer.getAttribute('tabindex') || 0;\n                el.setAttribute('class', 'highcharts-exit-anchor');\n                el.setAttribute('tabindex', chartTabindex);\n                el.setAttribute('aria-hidden', false);\n                // Handle focus\n                this.addExitAnchorEventsToEl(el);\n            }\n            /**\n             * Destroy the exit anchor and remove from DOM.\n             * @private\n             */\n            removeExitAnchor() {\n                // Remove event from element and from eventRemovers array to prevent\n                // memory leak (#20329).\n                if (this.exitAnchor) {\n                    const el = this.eventProvider.eventRemovers.find((el) => el.element === this.exitAnchor);\n                    if (el && defined(el.remover)) {\n                        this.eventProvider.removeEvent(el.remover);\n                    }\n                    if (this.exitAnchor.parentNode) {\n                        this.exitAnchor.parentNode.removeChild(this.exitAnchor);\n                    }\n                    delete this.exitAnchor;\n                }\n            }\n            /**\n             * Add focus handler to exit anchor element.\n             * @private\n             */\n            addExitAnchorEventsToEl(element) {\n                const chart = this.chart, keyboardNavigation = this;\n                this.eventProvider.addEvent(element, 'focus', function (ev) {\n                    const e = ev || win.event, focusComesFromChart = (e.relatedTarget &&\n                        chart.container.contains(e.relatedTarget)), comingInBackwards = !(focusComesFromChart || keyboardNavigation.exiting);\n                    if (chart.focusElement) {\n                        delete chart.focusElement;\n                    }\n                    if (comingInBackwards) {\n                        // Focus the container instead\n                        keyboardNavigation.tabbingInBackwards = true;\n                        keyboardNavigation.tabindexContainer.focus();\n                        delete keyboardNavigation.tabbingInBackwards;\n                        e.preventDefault();\n                        // Move to last valid keyboard nav module\n                        // Note the we don't run it, just set the index\n                        if (keyboardNavigation.modules &&\n                            keyboardNavigation.modules.length) {\n                            keyboardNavigation.currentModuleIx =\n                                keyboardNavigation.modules.length - 1;\n                            const curModule = keyboardNavigation.modules[keyboardNavigation.currentModuleIx];\n                            // Validate the module\n                            if (curModule &&\n                                curModule.validate && !curModule.validate()) {\n                                // Invalid.\n                                // Try moving backwards to find next valid.\n                                keyboardNavigation.move(-1);\n                            }\n                            else if (curModule) {\n                                // We have a valid module, init it\n                                curModule.init(-1);\n                            }\n                        }\n                    }\n                    else {\n                        // Don't skip the next focus, we only skip once.\n                        keyboardNavigation.exiting = false;\n                    }\n                });\n            }\n            /**\n             * Get the ix of the first module that either does not require validation or\n             * validates positively.\n             * @private\n             */\n            getFirstValidModuleIx() {\n                const len = this.modules.length;\n                for (let i = 0; i < len; ++i) {\n                    const mod = this.modules[i];\n                    if (!mod.validate || mod.validate()) {\n                        return i;\n                    }\n                }\n                return null;\n            }\n            /**\n             * Remove all traces of keyboard navigation.\n             * @private\n             */\n            destroy() {\n                this.removeExitAnchor();\n                this.eventProvider.removeAddedEvents();\n                this.chart.container.removeAttribute('tabindex');\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (KeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Composition function.\n             * @private\n             */\n            function compose(ChartClass) {\n                MenuComponent.compose(ChartClass);\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.dismissPopupContent) {\n                    chartProto.dismissPopupContent = chartDismissPopupContent;\n                    addEvent(doc, 'keydown', documentOnKeydown);\n                }\n                return ChartClass;\n            }\n            KeyboardNavigation.compose = compose;\n            /**\n             * Dismiss popup content in chart, including export menu and tooltip.\n             * @private\n             */\n            function chartDismissPopupContent() {\n                const chart = this;\n                fireEvent(this, 'dismissPopupContent', {}, function () {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    chart.hideExportMenu();\n                });\n            }\n            /**\n             * Add event listener to document to detect ESC key press and dismiss\n             * hover/popup content.\n             * @private\n             */\n            function documentOnKeydown(e) {\n                const keycode = e.which || e.keyCode;\n                const esc = 27;\n                if (keycode === esc && H.charts) {\n                    H.charts.forEach((chart) => {\n                        if (chart && chart.dismissPopupContent) {\n                            chart.dismissPopupContent();\n                        }\n                    });\n                }\n            }\n        })(KeyboardNavigation || (KeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return KeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/LegendComponent.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Legend/Legend.js'], _modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (A, H, Legend, U, AccessibilityComponent, KeyboardNavigationHandler, CU, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart legend.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { doc } = H;\n        const { addEvent, fireEvent, isNumber, pick, syncTimeout } = U;\n        const { getChartTitle } = CU;\n        const { stripHTMLTagsFromString: stripHTMLTags, addClass, removeClass } = HU;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function scrollLegendToItem(legend, itemIx) {\n            const itemPage = (legend.allItems[itemIx].legendItem || {}).pageIx, curPage = legend.currentPage;\n            if (typeof itemPage !== 'undefined' && itemPage + 1 !== curPage) {\n                legend.scroll(1 + itemPage - curPage);\n            }\n        }\n        /**\n         * @private\n         */\n        function shouldDoLegendA11y(chart) {\n            const items = chart.legend && chart.legend.allItems, legendA11yOptions = (chart.options.legend.accessibility || {}), unsupportedColorAxis = chart.colorAxis && chart.colorAxis.some((c) => !c.dataClasses || !c.dataClasses.length);\n            return !!(items && items.length &&\n                !unsupportedColorAxis &&\n                legendA11yOptions.enabled !== false);\n        }\n        /**\n         * @private\n         */\n        function setLegendItemHoverState(hoverActive, item) {\n            const legendItem = item.legendItem || {};\n            item.setState(hoverActive ? 'hover' : '', true);\n            for (const key of ['group', 'label', 'symbol']) {\n                const svgElement = legendItem[key];\n                const element = svgElement && svgElement.element || svgElement;\n                if (element) {\n                    fireEvent(element, hoverActive ? 'mouseover' : 'mouseout');\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The LegendComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.LegendComponent\n         */\n        class LegendComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.highlightedLegendItemIx = NaN;\n                this.proxyGroup = null;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const component = this;\n                this.recreateProxies();\n                // Note: Chart could create legend dynamically, so events cannot be\n                // tied to the component's chart's current legend.\n                // @todo 1. attach component to created legends\n                // @todo 2. move listeners to composition and access `this.component`\n                this.addEvent(Legend, 'afterScroll', function () {\n                    if (this.chart === component.chart) {\n                        component.proxyProvider.updateGroupProxyElementPositions('legend');\n                        component.updateLegendItemProxyVisibility();\n                        if (component.highlightedLegendItemIx > -1) {\n                            this.chart.highlightLegendItem(component.highlightedLegendItemIx);\n                        }\n                    }\n                });\n                this.addEvent(Legend, 'afterPositionItem', function (e) {\n                    if (this.chart === component.chart && this.chart.renderer) {\n                        component.updateProxyPositionForItem(e.item);\n                    }\n                });\n                this.addEvent(Legend, 'afterRender', function () {\n                    if (this.chart === component.chart &&\n                        this.chart.renderer &&\n                        component.recreateProxies()) {\n                        syncTimeout(() => component.proxyProvider\n                            .updateGroupProxyElementPositions('legend'), animObject(pick(this.chart.renderer.globalAnimation, true)).duration);\n                    }\n                });\n            }\n            /**\n             * Update visibility of legend items when using paged legend\n             * @private\n             */\n            updateLegendItemProxyVisibility() {\n                const chart = this.chart;\n                const legend = chart.legend;\n                const items = legend.allItems || [];\n                const curPage = legend.currentPage || 1;\n                const clipHeight = legend.clipHeight || 0;\n                let legendItem;\n                items.forEach((item) => {\n                    if (item.a11yProxyElement) {\n                        const hasPages = legend.pages && legend.pages.length;\n                        const proxyEl = item.a11yProxyElement.element;\n                        let hide = false;\n                        legendItem = item.legendItem || {};\n                        if (hasPages) {\n                            const itemPage = legendItem.pageIx || 0;\n                            const y = legendItem.y || 0;\n                            const h = legendItem.label ?\n                                Math.round(legendItem.label.getBBox().height) :\n                                0;\n                            hide = y + h - legend.pages[itemPage] > clipHeight ||\n                                itemPage !== curPage - 1;\n                        }\n                        if (hide) {\n                            if (chart.styledMode) {\n                                addClass(proxyEl, 'highcharts-a11y-invisible');\n                            }\n                            else {\n                                proxyEl.style.visibility = 'hidden';\n                            }\n                        }\n                        else {\n                            removeClass(proxyEl, 'highcharts-a11y-invisible');\n                            proxyEl.style.visibility = '';\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            onChartRender() {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    this.removeProxies();\n                }\n            }\n            /**\n             * @private\n             */\n            highlightAdjacentLegendPage(direction) {\n                const chart = this.chart;\n                const legend = chart.legend;\n                const curPageIx = legend.currentPage || 1;\n                const newPageIx = curPageIx + direction;\n                const pages = legend.pages || [];\n                if (newPageIx > 0 && newPageIx <= pages.length) {\n                    let i = 0, res;\n                    for (const item of legend.allItems) {\n                        if (((item.legendItem || {}).pageIx || 0) + 1 === newPageIx) {\n                            res = chart.highlightLegendItem(i);\n                            if (res) {\n                                this.highlightedLegendItemIx = i;\n                            }\n                        }\n                        ++i;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            updateProxyPositionForItem(item) {\n                if (item.a11yProxyElement) {\n                    item.a11yProxyElement.refreshPosition();\n                }\n            }\n            /**\n             * Returns false if legend a11y is disabled and proxies were not created,\n             * true otherwise.\n             * @private\n             */\n            recreateProxies() {\n                const focusedElement = doc.activeElement;\n                const proxyGroup = this.proxyGroup;\n                const shouldRestoreFocus = focusedElement && proxyGroup &&\n                    proxyGroup.contains(focusedElement);\n                this.removeProxies();\n                if (shouldDoLegendA11y(this.chart)) {\n                    this.addLegendProxyGroup();\n                    this.proxyLegendItems();\n                    this.updateLegendItemProxyVisibility();\n                    this.updateLegendTitle();\n                    if (shouldRestoreFocus) {\n                        this.chart.highlightLegendItem(this.highlightedLegendItemIx);\n                    }\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            removeProxies() {\n                this.proxyProvider.removeGroup('legend');\n            }\n            /**\n             * @private\n             */\n            updateLegendTitle() {\n                const chart = this.chart;\n                const legendTitle = stripHTMLTags((chart.legend &&\n                    chart.legend.options.title &&\n                    chart.legend.options.title.text ||\n                    '').replace(/<br ?\\/?>/g, ' '), chart.renderer.forExport);\n                const legendLabel = chart.langFormat('accessibility.legend.legendLabel' + (legendTitle ? '' : 'NoTitle'), {\n                    chart,\n                    legendTitle,\n                    chartTitle: getChartTitle(chart)\n                });\n                this.proxyProvider.updateGroupAttrs('legend', {\n                    'aria-label': legendLabel\n                });\n            }\n            /**\n             * @private\n             */\n            addLegendProxyGroup() {\n                const a11yOptions = this.chart.options.accessibility;\n                const groupRole = a11yOptions.landmarkVerbosity === 'all' ?\n                    'region' : null;\n                this.proxyGroup = this.proxyProvider.addGroup('legend', 'ul', {\n                    // Filled by updateLegendTitle, to keep up to date without\n                    // recreating group\n                    'aria-label': '_placeholder_',\n                    role: groupRole\n                });\n            }\n            /**\n             * @private\n             */\n            proxyLegendItems() {\n                const component = this, items = (this.chart.legend || {}).allItems || [];\n                let legendItem;\n                items.forEach((item) => {\n                    legendItem = item.legendItem || {};\n                    if (legendItem.label && legendItem.label.element) {\n                        component.proxyLegendItem(item);\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.BubbleLegendItem|Point|Highcharts.Series} item\n             */\n            proxyLegendItem(item) {\n                const legendItem = item.legendItem || {};\n                if (!legendItem.label || !legendItem.group) {\n                    return;\n                }\n                const itemLabel = this.chart.langFormat('accessibility.legend.legendItem', {\n                    chart: this.chart,\n                    itemName: stripHTMLTags(item.name, this.chart.renderer.forExport),\n                    item\n                });\n                const attribs = {\n                    tabindex: -1,\n                    'aria-pressed': item.visible,\n                    'aria-label': itemLabel\n                };\n                // Considers useHTML\n                const proxyPositioningElement = legendItem.group.div ?\n                    legendItem.label :\n                    legendItem.group;\n                item.a11yProxyElement = this.proxyProvider.addProxyElement('legend', {\n                    click: legendItem.label,\n                    visual: proxyPositioningElement.element\n                }, 'button', attribs);\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                const keys = this.keyCodes, component = this, chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ],\n                        [\n                            [keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                const direction = keyCode === keys.pageDown ? 1 : -1;\n                                component.highlightAdjacentLegendPage(direction);\n                                return this.response.success;\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return component.shouldHaveLegendNavigation();\n                    },\n                    init: function () {\n                        chart.highlightLegendItem(0);\n                        component.highlightedLegendItemIx = 0;\n                    },\n                    terminate: function () {\n                        component.highlightedLegendItemIx = -1;\n                        chart.legend.allItems.forEach((item) => setLegendItemHoverState(false, item));\n                    }\n                });\n            }\n            /**\n             * Arrow key navigation\n             * @private\n             */\n            onKbdArrowKey(keyboardNavigationHandler, key) {\n                const { keyCodes: { left, up }, highlightedLegendItemIx, chart } = this, numItems = chart.legend.allItems.length, wrapAround = chart.options.accessibility\n                    .keyboardNavigation.wrapAround, direction = (key === left || key === up) ? -1 : 1, res = chart.highlightLegendItem(highlightedLegendItemIx + direction);\n                if (res) {\n                    this.highlightedLegendItemIx += direction;\n                }\n                else if (wrapAround && numItems > 1) {\n                    this.highlightedLegendItemIx = direction > 0 ?\n                        0 : numItems - 1;\n                    chart.highlightLegendItem(this.highlightedLegendItemIx);\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdClick(keyboardNavigationHandler) {\n                const legendItem = this.chart.legend.allItems[this.highlightedLegendItemIx];\n                if (legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.click();\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             */\n            shouldHaveLegendNavigation() {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    return false;\n                }\n                const chart = this.chart, legendOptions = chart.options.legend || {}, legendA11yOptions = (legendOptions.accessibility || {});\n                return !!(chart.legend.display &&\n                    legendA11yOptions.keyboardNavigation &&\n                    legendA11yOptions.keyboardNavigation.enabled);\n            }\n            /**\n             * Clean up\n             * @private\n             */\n            destroy() {\n                this.removeProxies();\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (LegendComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Highlight legend item by index.\n             * @private\n             */\n            function chartHighlightLegendItem(ix) {\n                const items = this.legend.allItems;\n                const oldIx = this.accessibility &&\n                    this.accessibility.components.legend.highlightedLegendItemIx;\n                const itemToHighlight = items[ix], legendItem = itemToHighlight?.legendItem || {};\n                if (itemToHighlight) {\n                    if (isNumber(oldIx) && items[oldIx]) {\n                        setLegendItemHoverState(false, items[oldIx]);\n                    }\n                    scrollLegendToItem(this.legend, ix);\n                    const legendItemProp = legendItem.label;\n                    const proxyBtn = itemToHighlight.a11yProxyElement &&\n                        itemToHighlight.a11yProxyElement.innerElement;\n                    if (legendItemProp && legendItemProp.element && proxyBtn) {\n                        this.setFocusToElement(legendItemProp, proxyBtn);\n                    }\n                    setLegendItemHoverState(true, itemToHighlight);\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.highlightLegendItem) {\n                    chartProto.highlightLegendItem = chartHighlightLegendItem;\n                    addEvent(LegendClass, 'afterColorizeItem', legendOnAfterColorizeItem);\n                }\n            }\n            LegendComponent.compose = compose;\n            /**\n             * Keep track of pressed state for legend items.\n             * @private\n             */\n            function legendOnAfterColorizeItem(e) {\n                const chart = this.chart, a11yOptions = chart.options.accessibility, legendItem = e.item;\n                if (a11yOptions.enabled && legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.innerElement.setAttribute('aria-pressed', e.visible ? 'true' : 'false');\n                }\n            }\n        })(LegendComponent || (LegendComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return LegendComponent;\n    });\n    _registerModule(_modules, 'Stock/Navigator/ChartNavigatorComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { isTouchDevice } = H;\n        const { addEvent, merge, pick } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        let NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigatorClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                const chartProto = ChartClass.prototype;\n                NavigatorConstructor = NavigatorClass;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            const legend = this.legend, navigator = this.navigator;\n            let legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                const { scrollbarHeight, scrollButtonSize } = navigator;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (this.scrollbar?.options.margin || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // False if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            const options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            const chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            const navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                const extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            const navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ChartNavigatorComposition = {\n            compose\n        };\n\n        return ChartNavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { isTouchDevice } = H;\n        const { addEvent, correctFloat, defined, isNumber, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            const axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisSetExtremes(e) {\n            const axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            let zoomed;\n            if (axis.isXAxis &&\n                (navigator?.enabled || rangeSelector?.enabled)) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y' && e.trigger === 'zoom') {\n                    zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom selection,\n                    // then when the reset button is pressed, revert to this state. This\n                    // should apply only if the chart is initialized with a range (#6612),\n                    // otherwise zoom all the way out.\n                }\n                else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    const previousZoom = navigatorAxis.previousZoom;\n                    // Minimum defined, zooming in\n                    if (defined(e.min)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                        // Minimum undefined, resetting zoom\n                    }\n                    else if (previousZoom) {\n                        e.min = previousZoom[0];\n                        e.max = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        class NavigatorAxisAdditions {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            static compose(AxisClass) {\n                if (!AxisClass.keepProps.includes('navigatorAxis')) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n                }\n            }\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            constructor(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            destroy() {\n                this.axis = void 0;\n            }\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            toFixedRange(pxMin, pxMax, fixedMin, fixedMax) {\n                const axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n                let newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { seriesTypes } = SeriesRegistry;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        const NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Border radius of the handles.\n                 *\n                 * @sample {highstock} stock/navigator/handles-border-radius/\n                 *      Border radius on the navigator handles.\n                 *\n                 * @since 11.4.2\n                 */\n                borderRadius: 0,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null, // #4602\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * `xAxis.maxPadding`, but the value is set in terms of axis values,\n                 * percentage or pixels.\n                 *\n                 * If it's a number, it is interpreted as axis values, which in a\n                 * datetime axis equals milliseconds.\n                 *\n                 * If it's a percentage string, is interpreted as percentages of the\n                 * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n                 *\n                 * If it's a pixel string, it is interpreted as a fixed pixel value, but\n                 * limited to 90% of the axis length.\n                 *\n                 * If it's undefined, the value is inherited from `xAxis.overscroll`.\n                 *\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @type    {number | string | undefined}\n                 * @since   6.0.0\n                 * @apioption navigator.xAxis.overscroll\n                 */\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                id: 'navigator-x-axis',\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                id: 'navigator-y-axis',\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // Keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [_modules['Core/Renderer/SVG/Symbols.js'], _modules['Core/Utilities.js']], function (rect, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { relativeLength } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options = {}) {\n            const halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n            height = options.height || height;\n            return [\n                ['M', -markerPosition, height / 2 - 3.5],\n                ['L', -markerPosition, height / 2 + 4.5],\n                ['M', markerPosition - 1, height / 2 - 3.5],\n                ['L', markerPosition - 1, height / 2 + 4.5],\n                ...rect.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r })\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Utilities/StockUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defined } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Sets the chart.fixedRange to the specified value. If the value is larger\n         * than actual range, sets it to the maximum possible range. (#20327)\n         *\n         * @private\n         * @function Highcharts.StockChart#setFixedRange\n         * @param {number|undefined} range\n         *        Range to set in axis units.\n         */\n        function setFixedRange(range) {\n            const xAxis = this.xAxis[0];\n            if (defined(xAxis.dataMax) &&\n                defined(xAxis.dataMin) &&\n                range) {\n                this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n            }\n            else {\n                this.fixedRange = range;\n            }\n        }\n        const StockUtilities = {\n            setFixedRange\n        };\n\n        return StockUtilities;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { setOptions } = D;\n        const { composed } = H;\n        const { getRendererType } = RendererRegistry;\n        const { setFixedRange } = StockUtilities;\n        const { addEvent, extend, pushUnique } = U;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, AxisClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            if (pushUnique(composed, 'Navigator')) {\n                ChartClass.prototype.setFixedRange = setFixedRange;\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                setOptions({ navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const NavigatorComposition = {\n            compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, defined, pick, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            let Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, 'Axis.Scrollbar')) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                const axisMin = pick(axis.options && axis.options.min, axis.min);\n                const axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin,\n                    axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                const axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                const axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        const { axisMin, axisMax, scrollMin: unitedMin, scrollMax: unitedMax } = getExtremes(axis), range = unitedMax - unitedMin;\n                        let to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            const animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scrollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                const axis = this, { scrollMin, scrollMax } = getExtremes(axis), scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                let offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        let xPosition;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.dataMin === axis.dataMax // #10733\n                    ) {\n                        // Default action: when data extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else if (axis.min === axis.max) { // #20359\n                        // When the extremes are the same, set the scrollbar to a point\n                        // within the extremes range. Utilize pointRange to perform the\n                        // calculations. (#20359)\n                        const interval = axis.pointRange / (axis.dataMax +\n                            1);\n                        from = interval * axis.min;\n                        to = interval * (axis.max + 1);\n                        scrollbar.setRange(from, to);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        const ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)', // #18922\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { addEvent, correctFloat, crisp, defined, destroyObjectProperties, fireEvent, merge, pick, removeEvent } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        class Scrollbar {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            }\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            static swapXY(path, vertical) {\n                if (vertical) {\n                    path.forEach((seg) => {\n                        const len = seg.length;\n                        let temp;\n                        for (let i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            }\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            constructor(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            addEvents() {\n                const buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                const _events = [\n                    // Mouse events\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler],\n                    // Touch events\n                    [bar, 'touchstart', mouseDownHandler],\n                    [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n                    [bar.ownerDocument, 'touchend', mouseUpHandler]\n                ];\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            }\n            buttonToMaxClick(e) {\n                const scroller = this;\n                const range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            buttonToMinClick(e) {\n                const scroller = this;\n                const range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            cursorToScrollbarPosition(normalizedEvent) {\n                const scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // `minWidth` distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            }\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            destroy() {\n                const scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            }\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            drawScrollbarButton(index) {\n                const scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    const rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        width: size,\n                        height: size,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    const arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            init(renderer, options, chart) {\n                const scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // Backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            }\n            mouseDownHandler(e) {\n                const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            }\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            mouseMoveHandler(e) {\n                const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                let scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            }\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            mouseUpHandler(e) {\n                const scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            }\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scrollbar\n             */\n            position(x, y, width, height) {\n                const scroller = this, options = scroller.options, { buttonsEnabled, margin = 0, vertical } = options, method = scroller.rendered ? 'animate' : 'attr';\n                let xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // Width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            }\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            removeEvents() {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            }\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            render() {\n                const scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // Initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                const trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -crisp(0, trackBorderWidth),\n                    y: -crisp(0, trackBorderWidth)\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            }\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            setRange(from, to) {\n                const scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                const toPX = fullWidth * Math.min(to, 1);\n                let fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                const newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                const newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            }\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            shouldUpdateExtremes(eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            }\n            trackClick(e) {\n                const scroller = this;\n                const normalizedEvent = scroller.chart.pointer?.normalize(e) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            update(options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            }\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            updatePosition(from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        Scrollbar.defaultOptions = ScrollbarDefaults;\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/ChartNavigatorComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (Axis, ChartNavigatorComposition, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { isTouchDevice } = H;\n        const { prototype: { symbols } } = SVGRenderer;\n        const { addEvent, clamp, correctFloat, defined, destroyObjectProperties, erase, extend, find, fireEvent, isArray, isNumber, merge, pick, removeEvent, splat } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme, ...args) {\n            const numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        class Navigator {\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            static compose(ChartClass, AxisClass, SeriesClass) {\n                ChartNavigatorComposition.compose(ChartClass, Navigator);\n                NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n            }\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.isDirty = false;\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            drawHandle(x, index, inverted, verb) {\n                const navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            }\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            drawOutline(zoomedMin, zoomedMax, inverted, verb) {\n                const navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                let left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // Top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin], // Top left of z.r.\n                        ['M', left, zoomedMax], // Bottom left of z.r.\n                        ['L', left + height, zoomedMax], // Bottom right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // Upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // Left\n                        ['M', left, lineTop],\n                        // Upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // Lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // Lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // Upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // Right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            lineTop\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // Upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            }\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            drawMasks(zoomedMin, zoomedMax, inverted, verb) {\n                const navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                let height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach((shade, i) => {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            }\n            /**\n             * Generate and update DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            renderElements() {\n                const navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup ??\n                    (navigator.navigatorGroup = renderer\n                        .g('navigator')\n                        .attr({\n                        zIndex: 8,\n                        visibility: 'hidden'\n                    })\n                        .add());\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach((hasMask, index) => {\n                    const shade = navigator.shades[index] ??\n                        (navigator.shades[index] = renderer.rect()\n                            .addClass('highcharts-navigator-mask' +\n                            (index === 1 ? '-inside' : '-outside'))\n                            .add(navigatorGroup));\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ? navigatorOptions.maskFill : 'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                });\n                // Create the outline:\n                if (!navigator.outline) {\n                    navigator.outline = renderer.path()\n                        .addClass('highcharts-navigator-outline')\n                        .add(navigatorGroup);\n                }\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles?.enabled) {\n                    const handlesOptions = navigatorOptions.handles, { height, width } = handlesOptions;\n                    [0, 1].forEach((index) => {\n                        const symbolName = handlesOptions.symbols[index];\n                        if (!navigator.handles[index] ||\n                            navigator.handles[index].symbolUrl !== symbolName) {\n                            // Generate symbol from scratch if we're dealing with an URL\n                            navigator.handles[index]?.destroy();\n                            navigator.handles[index] = renderer.symbol(symbolName, -width / 2 - 1, 0, width, height, handlesOptions);\n                            // Z index is 6 for right handle, 7 for left. Can't be 10,\n                            // because of the tooltip in inverted chart (#2908).\n                            navigator.handles[index].attr({ zIndex: 7 - index })\n                                .addClass('highcharts-navigator-handle ' +\n                                'highcharts-navigator-handle-' +\n                                ['left', 'right'][index]).add(navigatorGroup);\n                            navigator.addMouseEvents();\n                            // If the navigator symbol changed, update its path and name\n                        }\n                        else if (!navigator.handles[index].isImg &&\n                            navigator.handles[index].symbolName !== symbolName) {\n                            const symbolFn = symbols[symbolName], path = symbolFn.call(symbols, -width / 2 - 1, 0, width, height);\n                            navigator.handles[index].attr({\n                                d: path\n                            });\n                            navigator.handles[index].symbolName = symbolName;\n                        }\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width / 2),\n                                rotationOriginY: (height + width) / 2\n                            });\n                        }\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions.backgroundColor,\n                                stroke: handlesOptions.borderColor,\n                                'stroke-width': handlesOptions.lineWidth,\n                                width: handlesOptions.width,\n                                height: handlesOptions.height,\n                                x: -width / 2 - 1,\n                                y: 0\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            }\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            update(options, redraw = false) {\n                const chart = this.chart, invertedUpdate = chart.options.chart.inverted !==\n                    chart.scrollbar?.options.vertical;\n                merge(true, chart.options.navigator, options);\n                this.navigatorOptions = chart.options.navigator || {};\n                this.setOpposite();\n                // Revert to destroy/init for navigator/scrollbar enabled toggle\n                if (defined(options.enabled) || invertedUpdate) {\n                    this.destroy();\n                    this.navigatorEnabled = options.enabled || this.navigatorEnabled;\n                    return this.init(chart);\n                }\n                if (this.navigatorEnabled) {\n                    this.isDirty = true;\n                    if (options.adaptToUpdatedData === false) {\n                        this.baseSeries.forEach((series) => {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    if (options.adaptToUpdatedData) {\n                        this.baseSeries.forEach((series) => {\n                            series.eventsToUnbind.push(addEvent(series, 'updatedData', this.updatedDataHandler));\n                        }, this);\n                    }\n                    // Update navigator series\n                    if (options.series || options.baseSeries) {\n                        this.setBaseSeries(void 0, false);\n                    }\n                    // Update navigator axis\n                    if (options.height || options.xAxis || options.yAxis) {\n                        this.height = options.height ?? this.height;\n                        const offsets = this.getXAxisOffsets();\n                        this.xAxis.update({\n                            ...options.xAxis,\n                            offsets,\n                            [chart.inverted ? 'width' : 'height']: this.height,\n                            [chart.inverted ? 'height' : 'width']: void 0\n                        }, false);\n                        this.yAxis.update({\n                            ...options.yAxis,\n                            [chart.inverted ? 'width' : 'height']: this.height\n                        }, false);\n                    }\n                }\n                if (redraw) {\n                    chart.redraw();\n                }\n            }\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            render(min, max, pxMin, pxMax) {\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                let navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                if (this.isDirty) {\n                    // Update DOM navigator elements\n                    this.renderElements();\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // In case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                let zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                const newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                const zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                this.isDirty = false;\n                fireEvent(this, 'afterRender');\n            }\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            addMouseEvents() {\n                const navigator = this, chart = navigator.chart, container = chart.container;\n                let eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                eventsToUnbind.push(\n                // Add mouse move and mouseup events. These are bind to doc/div,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n                // Touch events\n                addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            }\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            getPartsEvents(eventName) {\n                const navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            }\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            shadesMousedown(e, index) {\n                e = this.chart.pointer?.normalize(e) || e;\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                let navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // It has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            fireEvent(this, 'setRange', {\n                                min: Math.min(ext.min, ext.max),\n                                max: Math.max(ext.min, ext.max),\n                                redraw: true,\n                                eventArguments: {\n                                    trigger: 'navigator'\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            handlesMousedown(e, index) {\n                e = this.chart.pointer?.normalize(e) || e;\n                const navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.setFixedRange(void 0);\n            }\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            onMouseMove(e) {\n                const navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                let left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = chart.pointer?.normalize(e) || e;\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // Outside left\n                            chartX = dragOffset;\n                            // Outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            }\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            onMouseUp(e) {\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                let zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        fireEvent(this, 'setRange', {\n                            min: Math.min(ext.min, ext.max),\n                            max: Math.max(ext.min, ext.max),\n                            redraw: true,\n                            animation: navigator.hasDragged ? false : null,\n                            eventArguments: {\n                                trigger: 'navigator',\n                                triggerOp: 'navigator-drag',\n                                DOMEvent: DOMEvent // #1838\n                            }\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            }\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            removeEvents() {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            }\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            removeBaseSeriesEvents() {\n                const baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            }\n            /**\n             * Calculate the navigator xAxis offsets\n             *\n             * @private\n             */\n            getXAxisOffsets() {\n                return (this.chart.inverted ?\n                    [this.scrollButtonSize, 0, -this.scrollButtonSize, 0] :\n                    [0, -this.scrollButtonSize, 0, this.scrollButtonSize]);\n            }\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            init(chart) {\n                const chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.setOpposite();\n                const navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    const offsets = this.getXAxisOffsets();\n                    // An x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // Inherit base xAxis' break, ordinal options and overscroll\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal,\n                        overscroll: baseXaxis.options.overscroll\n                    }, navigatorOptions.xAxis, {\n                        type: 'datetime',\n                        yAxis: navigatorOptions.yAxis?.id,\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true, // #2436\n                        startOnTick: false,\n                        endOnTick: false,\n                        // Inherit base xAxis' padding when ordinal is false (#16915).\n                        minPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.minPadding,\n                        maxPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.maxPadding,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets,\n                        width: height\n                    } : {\n                        offsets,\n                        height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false), // #14060\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // Reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // In case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            const axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // From pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // From value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    const options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        const range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            }\n            /**\n             * Set the opposite property on navigator\n             *\n             * @private\n             */\n            setOpposite() {\n                const navigatorOptions = this.navigatorOptions, navigatorEnabled = this.navigatorEnabled, chart = this.chart;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n            }\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            getUnionExtremes(returnFalseOnNoBaseSeries) {\n                const baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                let ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            }\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            setBaseSeries(baseSeriesOptions, redraw) {\n                const chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, (s) => (!s.options.isInternal)).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach((series, i) => {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            }\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            updateNavigatorSeries(addEvents, redraw) {\n                const navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null, // #6162\n                    linkedTo: null, // #6734\n                    group: 'nav', // For columns\n                    padXAxis: false,\n                    xAxis: this.navigatorOptions.xAxis?.id,\n                    yAxis: this.navigatorOptions.yAxis?.id,\n                    showInLegend: false,\n                    stacking: void 0, // #4823\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter((navSeries) => {\n                        const base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                let baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach((base) => {\n                        const linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        const navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            // Set data on initial run with dataSorting enabled (#20318)\n                            chart.setSortedData();\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach((userSeriesOptions, i) => {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            }\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            addBaseSeriesEvents() {\n                const navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach((base) => {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitly\n                    // not adapting to data changes.\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (baseSeries) {\n                            erase(baseSeries, base); // #21043\n                        }\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            }\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            getBaseSeriesMin(currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            }\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            modifyNavigatorAxisExtremes() {\n                const xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    const unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            }\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            modifyBaseAxisExtremes() {\n                const baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick(baseXAxis.ordinal?.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                let newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            }\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            updatedDataHandler() {\n                const navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            }\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            shouldStickToMin(baseSeries, navigator) {\n                const xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                let stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            }\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            addChartEvents() {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    const navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    const chart = this, navigator = chart.navigator;\n                    let marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }), addEvent(Navigator, 'setRange', function (e) {\n                    this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n                }));\n            }\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            destroy() {\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach((s) => {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach((prop) => {\n                    if (this[prop] && this[prop].destroy) {\n                        this[prop].destroy();\n                    }\n                    this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach((coll) => {\n                    destroyObjectProperties(coll);\n                });\n                this.navigatorEnabled = false;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Accessibility/Components/NavigatorComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Templating.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/Utils/ChartUtilities.js']], function (AccessibilityComponent, Announcer, KeyboardNavigationHandler, Navigator, A, T, U, HU, CU) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft AS\n         *\n         *  Accessibility component for the navigator.\n         *\n         *  Author: Ã˜ystein Moseng\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        const { animObject } = A;\n        const { format } = T;\n        const { clamp, pick, syncTimeout } = U;\n        const { getFakeMouseEvent } = HU;\n        const { getAxisRangeDescription, fireEventOnWrappedOrUnwrappedElement } = CU;\n        /**\n         * The NavigatorComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.NavigatorComponent\n         */\n        class NavigatorComponent extends AccessibilityComponent {\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart, component = this;\n                this.announcer = new Announcer(chart, 'polite');\n                // Update positions after render\n                this.addEvent(Navigator, 'afterRender', function () {\n                    if (this.chart === component.chart &&\n                        this.chart.renderer) {\n                        syncTimeout(() => {\n                            component.proxyProvider\n                                .updateGroupProxyElementPositions('navigator');\n                            component.updateHandleValues();\n                        }, animObject(pick(this.chart.renderer.globalAnimation, true)).duration);\n                    }\n                });\n            }\n            /**\n             * Called on updates\n             * @private\n             */\n            onChartUpdate() {\n                const chart = this.chart, options = chart.options, navigator = options.navigator;\n                if (navigator.enabled && navigator.accessibility?.enabled) {\n                    const verbosity = options.accessibility.landmarkVerbosity, groupFormatStr = options.lang\n                        .accessibility?.navigator.groupLabel;\n                    // We just recreate the group for simplicity. Could consider\n                    // updating the existing group if the verbosity has not changed.\n                    this.proxyProvider.removeGroup('navigator');\n                    this.proxyProvider.addGroup('navigator', 'div', {\n                        role: verbosity === 'all' ? 'region' : 'group',\n                        'aria-label': format(groupFormatStr, { chart }, chart)\n                    });\n                    const handleFormatStr = options.lang\n                        .accessibility?.navigator.handleLabel;\n                    [0, 1].forEach((n) => {\n                        const handle = this.getHandleByIx(n);\n                        if (handle) {\n                            const proxyEl = this.proxyProvider.addProxyElement('navigator', {\n                                click: handle\n                            }, 'input', {\n                                type: 'range',\n                                'aria-label': format(handleFormatStr, { handleIx: n, chart }, chart)\n                            });\n                            this[n ? 'maxHandleProxy' : 'minHandleProxy'] =\n                                proxyEl.innerElement;\n                            proxyEl.innerElement.style.pointerEvents = 'none';\n                            proxyEl.innerElement.oninput =\n                                () => this.updateNavigator();\n                        }\n                    });\n                    this.updateHandleValues();\n                }\n                else {\n                    this.proxyProvider.removeGroup('navigator');\n                }\n            }\n            /**\n             * Get navigation for a navigator handle.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object.\n             */\n            getNavigatorHandleNavigation(handleIx) {\n                const component = this, chart = this.chart, proxyEl = handleIx ? this.maxHandleProxy : this.minHandleProxy, keys = this.keyCodes;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [[\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                if (proxyEl) {\n                                    const delta = keyCode === keys.left ||\n                                        keyCode === keys.up ? -1 : 1;\n                                    proxyEl.value = '' + clamp(parseFloat(proxyEl.value) + delta, 0, 100);\n                                    component.updateNavigator(() => {\n                                        const handle = component.getHandleByIx(handleIx);\n                                        if (handle) {\n                                            chart.setFocusToElement(handle, proxyEl);\n                                        }\n                                    });\n                                }\n                                return this.response.success;\n                            }\n                        ]],\n                    init: () => {\n                        chart.setFocusToElement(this.getHandleByIx(handleIx), proxyEl);\n                    },\n                    validate: () => !!(this.getHandleByIx(handleIx) && proxyEl &&\n                        chart.options.navigator.accessibility?.enabled)\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects.\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.getNavigatorHandleNavigation(0),\n                    this.getNavigatorHandleNavigation(1)\n                ];\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.updateNavigatorThrottleTimer) {\n                    clearTimeout(this.updateNavigatorThrottleTimer);\n                }\n                this.proxyProvider.removeGroup('navigator');\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n            /**\n             * Update the value of the handles to match current navigator pos.\n             * @private\n             */\n            updateHandleValues() {\n                const navigator = this.chart.navigator;\n                if (navigator && this.minHandleProxy && this.maxHandleProxy) {\n                    const length = navigator.size;\n                    this.minHandleProxy.value =\n                        '' + Math.round(navigator.zoomedMin / length * 100);\n                    this.maxHandleProxy.value =\n                        '' + Math.round(navigator.zoomedMax / length * 100);\n                }\n            }\n            /**\n             * Get a navigator handle by its index\n             * @private\n             */\n            getHandleByIx(ix) {\n                const navigator = this.chart.navigator;\n                return navigator && navigator.handles &&\n                    navigator.handles[ix];\n            }\n            /**\n             * Update navigator to match changed proxy values.\n             * @private\n             */\n            updateNavigator(beforeAnnounce) {\n                const performUpdate = (beforeAnnounce) => {\n                    const chart = this.chart, { navigator, pointer } = chart;\n                    if (navigator &&\n                        pointer &&\n                        this.minHandleProxy &&\n                        this.maxHandleProxy) {\n                        const chartPos = pointer.getChartPosition(), minNewX = parseFloat(this.minHandleProxy.value) /\n                            100 * navigator.size, maxNewX = parseFloat(this.maxHandleProxy.value) /\n                            100 * navigator.size;\n                        // Fire fake events in order for each handle.\n                        [\n                            [0, 'mousedown', navigator.zoomedMin],\n                            [0, 'mousemove', minNewX],\n                            [0, 'mouseup', minNewX],\n                            [1, 'mousedown', navigator.zoomedMax],\n                            [1, 'mousemove', maxNewX],\n                            [1, 'mouseup', maxNewX]\n                        ].forEach(([handleIx, type, x]) => {\n                            const handle = this.getHandleByIx(handleIx)?.element;\n                            if (handle) {\n                                fireEventOnWrappedOrUnwrappedElement(handle, getFakeMouseEvent(type, {\n                                    x: chartPos.left + navigator.left + x,\n                                    y: chartPos.top + navigator.top\n                                }, handle));\n                            }\n                        });\n                        if (beforeAnnounce) {\n                            beforeAnnounce();\n                        }\n                        // Announce the update\n                        const announceFormatStr = chart.options.lang\n                            .accessibility?.navigator.changeAnnouncement, axisRangeDescription = getAxisRangeDescription(chart.xAxis[0]);\n                        this.announcer.announce(format(announceFormatStr, { axisRangeDescription, chart }, chart));\n                    }\n                };\n                // Throttle updates so as not to reduce performance with\n                // continuous keypress.\n                if (this.updateNavigatorThrottleTimer) {\n                    clearTimeout(this.updateNavigatorThrottleTimer);\n                }\n                this.updateNavigatorThrottleTimer = setTimeout(performUpdate.bind(this, beforeAnnounce), 20);\n            }\n        }\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return NavigatorComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesDescriber.js', [_modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Templating.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AnnotationsA11y, ChartUtilities, F, HTMLUtilities, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Place desriptions on a series and its points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getPointAnnotationTexts } = AnnotationsA11y;\n        const { getAxisDescription, getSeriesFirstPointElement, getSeriesA11yElement, unhideChartElementFromAT } = ChartUtilities;\n        const { format, numberFormat } = F;\n        const { reverseChildNodes, stripHTMLTagsFromString: stripHTMLTags } = HTMLUtilities;\n        const { find, isNumber, isString, pick, defined } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function findFirstPointWithGraphic(point) {\n            const sourcePointIndex = point.index;\n            if (!point.series || !point.series.data || !defined(sourcePointIndex)) {\n                return null;\n            }\n            return find(point.series.data, function (p) {\n                return !!(p &&\n                    typeof p.index !== 'undefined' &&\n                    p.index > sourcePointIndex &&\n                    p.graphic &&\n                    p.graphic.element);\n            }) || null;\n        }\n        /**\n         * Whether or not we should add a mock point element in\n         * order to describe a point that has no graphic.\n         * @private\n         */\n        function shouldAddMockPoint(point) {\n            // Note: Sunburst series use isNull for hidden points on drilldown.\n            // Ignore these.\n            const series = point.series, chart = series && series.chart, isSunburst = series && series.is('sunburst'), isNull = point.isNull, shouldDescribeNull = chart &&\n                chart\n                    .options.accessibility.point.describeNull;\n            return isNull && !isSunburst && shouldDescribeNull;\n        }\n        /**\n         * @private\n         */\n        function makeMockElement(point, pos) {\n            const renderer = point.series.chart.renderer, mock = renderer.rect(pos.x, pos.y, 1, 1);\n            mock.attr({\n                'class': 'highcharts-a11y-mock-point',\n                fill: 'none',\n                opacity: 0,\n                'fill-opacity': 0,\n                'stroke-opacity': 0\n            });\n            return mock;\n        }\n        /**\n         * @private\n         */\n        function addMockPointElement(point) {\n            const series = point.series, firstPointWithGraphic = findFirstPointWithGraphic(point), firstGraphic = firstPointWithGraphic && firstPointWithGraphic.graphic, parentGroup = firstGraphic ?\n                firstGraphic.parentGroup :\n                series.graph || series.group, mockPos = firstPointWithGraphic ? {\n                x: pick(point.plotX, firstPointWithGraphic.plotX, 0),\n                y: pick(point.plotY, firstPointWithGraphic.plotY, 0)\n            } : {\n                x: pick(point.plotX, 0),\n                y: pick(point.plotY, 0)\n            }, mockElement = makeMockElement(point, mockPos);\n            if (parentGroup && parentGroup.element) {\n                point.graphic = mockElement;\n                point.hasMockGraphic = true;\n                mockElement.add(parentGroup);\n                // Move to correct pos in DOM\n                parentGroup.element.insertBefore(mockElement.element, firstGraphic ? firstGraphic.element : null);\n                return mockElement.element;\n            }\n        }\n        /**\n         * @private\n         */\n        function hasMorePointsThanDescriptionThreshold(series) {\n            const chartA11yOptions = series.chart.options.accessibility, threshold = (chartA11yOptions.series.pointDescriptionEnabledThreshold);\n            return !!(threshold !== false &&\n                series.points &&\n                series.points.length >= +threshold);\n        }\n        /**\n         * @private\n         */\n        function shouldSetScreenReaderPropsOnPoints(series) {\n            const seriesA11yOptions = series.options.accessibility || {};\n            return !hasMorePointsThanDescriptionThreshold(series) &&\n                !seriesA11yOptions.exposeAsGroupOnly;\n        }\n        /**\n         * @private\n         */\n        function shouldSetKeyboardNavPropsOnPoints(series) {\n            const chartA11yOptions = series.chart.options.accessibility, seriesNavOptions = chartA11yOptions.keyboardNavigation.seriesNavigation;\n            return !!(series.points && (series.points.length <\n                +seriesNavOptions.pointNavigationEnabledThreshold ||\n                seriesNavOptions.pointNavigationEnabledThreshold === false));\n        }\n        /**\n         * @private\n         */\n        function shouldDescribeSeriesElement(series) {\n            const chart = series.chart, chartOptions = chart.options.chart, chartHas3d = chartOptions.options3d && chartOptions.options3d.enabled, hasMultipleSeries = chart.series.length > 1, describeSingleSeriesOption = chart.options.accessibility.series.describeSingleSeries, exposeAsGroupOnlyOption = (series.options.accessibility || {}).exposeAsGroupOnly, noDescribe3D = chartHas3d && hasMultipleSeries;\n            return !noDescribe3D && (hasMultipleSeries || describeSingleSeriesOption ||\n                exposeAsGroupOnlyOption || hasMorePointsThanDescriptionThreshold(series));\n        }\n        /**\n         * @private\n         */\n        function pointNumberToString(point, value) {\n            const series = point.series, chart = series.chart, a11yPointOptions = chart.options.accessibility.point || {}, seriesA11yPointOptions = series.options.accessibility &&\n                series.options.accessibility.point || {}, tooltipOptions = series.tooltipOptions || {}, lang = chart.options.lang;\n            if (isNumber(value)) {\n                return numberFormat(value, seriesA11yPointOptions.valueDecimals ||\n                    a11yPointOptions.valueDecimals ||\n                    tooltipOptions.valueDecimals ||\n                    -1, lang.decimalPoint, lang.accessibility.thousandsSep || lang.thousandsSep);\n            }\n            return value;\n        }\n        /**\n         * @private\n         */\n        function getSeriesDescriptionText(series) {\n            const seriesA11yOptions = series.options.accessibility || {}, descOpt = seriesA11yOptions.description;\n            return descOpt && series.chart.langFormat('accessibility.series.description', {\n                description: descOpt,\n                series: series\n            }) || '';\n        }\n        /**\n         * @private\n         */\n        function getSeriesAxisDescriptionText(series, axisCollection) {\n            const axis = series[axisCollection];\n            return series.chart.langFormat('accessibility.series.' + axisCollection + 'Description', {\n                name: getAxisDescription(axis),\n                series: series\n            });\n        }\n        /**\n         * Get accessible time description for a point on a datetime axis.\n         *\n         * @private\n         */\n        function getPointA11yTimeDescription(point) {\n            const series = point.series, chart = series.chart, seriesA11yOptions = series.options.accessibility &&\n                series.options.accessibility.point || {}, a11yOptions = chart.options.accessibility.point || {}, dateXAxis = series.xAxis && series.xAxis.dateTime;\n            if (dateXAxis) {\n                const tooltipDateFormat = dateXAxis.getXDateFormat(point.x || 0, chart.options.tooltip.dateTimeLabelFormats), dateFormat = seriesA11yOptions.dateFormatter &&\n                    seriesA11yOptions.dateFormatter(point) ||\n                    a11yOptions.dateFormatter && a11yOptions.dateFormatter(point) ||\n                    seriesA11yOptions.dateFormat ||\n                    a11yOptions.dateFormat ||\n                    tooltipDateFormat;\n                return chart.time.dateFormat(dateFormat, point.x || 0, void 0);\n            }\n        }\n        /**\n         * @private\n         */\n        function getPointXDescription(point) {\n            const timeDesc = getPointA11yTimeDescription(point), xAxis = point.series.xAxis || {}, pointCategory = xAxis.categories && defined(point.category) &&\n                ('' + point.category).replace('<br/>', ' '), canUseId = defined(point.id) &&\n                ('' + point.id).indexOf('highcharts-') < 0, fallback = 'x, ' + point.x;\n            return point.name || timeDesc || pointCategory ||\n                (canUseId ? point.id : fallback);\n        }\n        /**\n         * @private\n         */\n        function getPointArrayMapValueDescription(point, prefix, suffix) {\n            const pre = prefix || '', suf = suffix || '', keyToValStr = function (key) {\n                const num = pointNumberToString(point, pick(point[key], point.options[key]));\n                return num !== void 0 ?\n                    key + ': ' + pre + num + suf :\n                    num;\n            }, pointArrayMap = point.series.pointArrayMap;\n            return pointArrayMap.reduce(function (desc, key) {\n                const propDesc = keyToValStr(key);\n                return propDesc ?\n                    (desc + (desc.length ? ', ' : '') + propDesc) :\n                    desc;\n            }, '');\n        }\n        /**\n         * @private\n         */\n        function getPointValue(point) {\n            const series = point.series, a11yPointOpts = series.chart.options.accessibility.point || {}, seriesA11yPointOpts = series.chart.options.accessibility &&\n                series.chart.options.accessibility.point || {}, tooltipOptions = series.tooltipOptions || {}, valuePrefix = seriesA11yPointOpts.valuePrefix ||\n                a11yPointOpts.valuePrefix ||\n                tooltipOptions.valuePrefix ||\n                '', valueSuffix = seriesA11yPointOpts.valueSuffix ||\n                a11yPointOpts.valueSuffix ||\n                tooltipOptions.valueSuffix ||\n                '', fallbackKey = (typeof point.value !==\n                'undefined' ?\n                'value' : 'y'), fallbackDesc = pointNumberToString(point, point[fallbackKey]);\n            if (point.isNull) {\n                return series.chart.langFormat('accessibility.series.nullPointValue', {\n                    point: point\n                });\n            }\n            if (series.pointArrayMap) {\n                return getPointArrayMapValueDescription(point, valuePrefix, valueSuffix);\n            }\n            return valuePrefix + fallbackDesc + valueSuffix;\n        }\n        /**\n         * Return the description for the annotation(s) connected to a point, or\n         * empty string if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point\n         * The data point to get the annotation info from.\n         * @return {string}\n         * Annotation description\n         */\n        function getPointAnnotationDescription(point) {\n            const chart = point.series.chart;\n            const langKey = 'accessibility.series.pointAnnotationsDescription';\n            const annotations = getPointAnnotationTexts(point);\n            const context = { point, annotations };\n            return annotations.length ? chart.langFormat(langKey, context) : '';\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function getPointValueDescription(point) {\n            const series = point.series, chart = series.chart, seriesA11yOptions = series.options.accessibility, seriesValueDescFormat = seriesA11yOptions && seriesA11yOptions.point &&\n                seriesA11yOptions.point.valueDescriptionFormat, pointValueDescriptionFormat = seriesValueDescFormat ||\n                chart.options.accessibility.point.valueDescriptionFormat, showXDescription = pick(series.xAxis &&\n                series.xAxis.options.accessibility &&\n                series.xAxis.options.accessibility.enabled, !chart.angular && series.type !== 'flowmap'), xDesc = showXDescription ? getPointXDescription(point) : '', context = {\n                point: point,\n                index: defined(point.index) ? (point.index + 1) : '',\n                xDescription: xDesc,\n                value: getPointValue(point),\n                separator: showXDescription ? ', ' : ''\n            };\n            return format(pointValueDescriptionFormat, context, chart);\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function defaultPointDescriptionFormatter(point) {\n            const series = point.series, shouldExposeSeriesName = series.chart.series.length > 1 ||\n                series.options.name, valText = getPointValueDescription(point), description = point.options && point.options.accessibility &&\n                point.options.accessibility.description, userDescText = description ? ' ' + description : '', seriesNameText = shouldExposeSeriesName ? ' ' + series.name + '.' : '', annotationsDesc = getPointAnnotationDescription(point), pointAnnotationsText = annotationsDesc ? ' ' + annotationsDesc : '';\n            point.accessibility = point.accessibility || {};\n            point.accessibility.valueDescription = valText;\n            return valText + userDescText + seriesNameText + pointAnnotationsText;\n        }\n        /**\n         * Set a11y props on a point element\n         * @private\n         * @param {Highcharts.Point} point\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} pointElement\n         */\n        function setPointScreenReaderAttribs(point, pointElement) {\n            const series = point.series, seriesPointA11yOptions = series.options.accessibility?.point || {}, a11yPointOptions = series.chart.options.accessibility.point || {}, label = stripHTMLTags((isString(seriesPointA11yOptions.descriptionFormat) &&\n                format(seriesPointA11yOptions.descriptionFormat, point, series.chart)) ||\n                seriesPointA11yOptions.descriptionFormatter?.(point) ||\n                (isString(a11yPointOptions.descriptionFormat) &&\n                    format(a11yPointOptions.descriptionFormat, point, series.chart)) ||\n                a11yPointOptions.descriptionFormatter?.(point) ||\n                defaultPointDescriptionFormatter(point), series.chart.renderer.forExport);\n            pointElement.setAttribute('role', 'img');\n            pointElement.setAttribute('aria-label', label);\n        }\n        /**\n         * Add accessible info to individual point elements of a series\n         * @private\n         * @param {Highcharts.Series} series\n         */\n        function describePointsInSeries(series) {\n            const setScreenReaderProps = shouldSetScreenReaderPropsOnPoints(series), setKeyboardProps = shouldSetKeyboardNavPropsOnPoints(series), shouldDescribeNullPoints = series.chart.options.accessibility\n                .point.describeNull;\n            if (setScreenReaderProps || setKeyboardProps) {\n                series.points.forEach((point) => {\n                    const pointEl = point.graphic && point.graphic.element ||\n                        shouldAddMockPoint(point) && addMockPointElement(point), pointA11yDisabled = (point.options &&\n                        point.options.accessibility &&\n                        point.options.accessibility.enabled === false);\n                    if (pointEl) {\n                        if (point.isNull && !shouldDescribeNullPoints) {\n                            pointEl.setAttribute('aria-hidden', true);\n                            return;\n                        }\n                        // We always set tabindex, as long as we are setting props.\n                        // When setting tabindex, also remove default outline to\n                        // avoid ugly border on click.\n                        pointEl.setAttribute('tabindex', '-1');\n                        if (!series.chart.styledMode) {\n                            pointEl.style.outline = 'none';\n                        }\n                        if (setScreenReaderProps && !pointA11yDisabled) {\n                            setPointScreenReaderAttribs(point, pointEl);\n                        }\n                        else {\n                            pointEl.setAttribute('aria-hidden', true);\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * Return string with information about series.\n         * @private\n         */\n        function defaultSeriesDescriptionFormatter(series) {\n            const chart = series.chart, chartTypes = chart.types || [], description = getSeriesDescriptionText(series), shouldDescribeAxis = function (coll) {\n                return chart[coll] && chart[coll].length > 1 && series[coll];\n            }, seriesNumber = series.index + 1, xAxisInfo = getSeriesAxisDescriptionText(series, 'xAxis'), yAxisInfo = getSeriesAxisDescriptionText(series, 'yAxis'), summaryContext = {\n                seriesNumber,\n                series,\n                chart\n            }, combinationSuffix = chartTypes.length > 1 ? 'Combination' : '', summary = chart.langFormat('accessibility.series.summary.' + series.type + combinationSuffix, summaryContext) || chart.langFormat('accessibility.series.summary.default' + combinationSuffix, summaryContext), axisDescription = (shouldDescribeAxis('yAxis') ? ' ' + yAxisInfo + '.' : '') + (shouldDescribeAxis('xAxis') ? ' ' + xAxisInfo + '.' : ''), formatStr = pick(series.options.accessibility &&\n                series.options.accessibility.descriptionFormat, chart.options.accessibility.series.descriptionFormat, '');\n            return format(formatStr, {\n                seriesDescription: summary,\n                authorDescription: (description ? ' ' + description : ''),\n                axisDescription,\n                series,\n                chart,\n                seriesNumber\n            }, void 0);\n        }\n        /**\n         * Set a11y props on a series element\n         * @private\n         * @param {Highcharts.Series} series\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} seriesElement\n         */\n        function describeSeriesElement(series, seriesElement) {\n            const seriesA11yOptions = series.options.accessibility || {}, a11yOptions = series.chart.options.accessibility, landmarkVerbosity = a11yOptions.landmarkVerbosity;\n            // Handle role attribute\n            if (seriesA11yOptions.exposeAsGroupOnly) {\n                seriesElement.setAttribute('role', 'img');\n            }\n            else if (landmarkVerbosity === 'all') {\n                seriesElement.setAttribute('role', 'region');\n            }\n            else {\n                seriesElement.setAttribute('role', 'group');\n            }\n            seriesElement.setAttribute('tabindex', '-1');\n            if (!series.chart.styledMode) {\n                // Don't show browser outline on click, despite tabindex\n                seriesElement.style.outline = 'none';\n            }\n            seriesElement.setAttribute('aria-label', stripHTMLTags(a11yOptions.series.descriptionFormatter &&\n                a11yOptions.series.descriptionFormatter(series) ||\n                defaultSeriesDescriptionFormatter(series), series.chart.renderer.forExport));\n        }\n        /**\n         * Put accessible info on series and points of a series.\n         * @param {Highcharts.Series} series The series to add info on.\n         */\n        function describeSeries(series) {\n            const chart = series.chart, firstPointEl = getSeriesFirstPointElement(series), seriesEl = getSeriesA11yElement(series), is3d = chart.is3d && chart.is3d();\n            if (seriesEl) {\n                // For some series types the order of elements do not match the\n                // order of points in series. In that case we have to reverse them\n                // in order for AT to read them out in an understandable order.\n                // Due to z-index issues we cannot do this for 3D charts.\n                if (seriesEl.lastChild === firstPointEl && !is3d) {\n                    reverseChildNodes(seriesEl);\n                }\n                describePointsInSeries(series);\n                unhideChartElementFromAT(chart, seriesEl);\n                if (shouldDescribeSeriesElement(series)) {\n                    describeSeriesElement(series, seriesEl);\n                }\n                else {\n                    seriesEl.removeAttribute('aria-label');\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const SeriesDescriber = {\n            defaultPointDescriptionFormatter,\n            defaultSeriesDescriptionFormatter,\n            describeSeries\n        };\n\n        return SeriesDescriber;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/NewDataAnnouncer.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (H, U, Announcer, ChartUtilities, EventProvider, SeriesDescriber) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle announcing new data for a chart.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, defined, pushUnique } = U;\n        const { getChartTitle } = ChartUtilities;\n        const { defaultPointDescriptionFormatter, defaultSeriesDescriptionFormatter } = SeriesDescriber;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function chartHasAnnounceEnabled(chart) {\n            return !!chart.options.accessibility.announceNewData.enabled;\n        }\n        /**\n         * @private\n         */\n        function findPointInDataArray(point) {\n            const candidates = point.series.data.filter((candidate) => (point.x === candidate.x && point.y === candidate.y));\n            return candidates.length === 1 ? candidates[0] : point;\n        }\n        /**\n         * Get array of unique series from two arrays\n         * @private\n         */\n        function getUniqueSeries(arrayA, arrayB) {\n            const uniqueSeries = (arrayA || []).concat(arrayB || []).reduce((acc, cur) => {\n                acc[cur.name + cur.index] = cur;\n                return acc;\n            }, {});\n            return Object\n                .keys(uniqueSeries)\n                .map((ix) => uniqueSeries[ix]);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        class NewDataAnnouncer {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.lastAnnouncementTime = 0;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Initialize the new data announcer.\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                const announceOptions = (chart.options.accessibility.announceNewData);\n                const announceType = announceOptions.interruptUser ?\n                    'assertive' : 'polite';\n                this.lastAnnouncementTime = 0;\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.eventProvider = new EventProvider();\n                this.announcer = new Announcer(chart, announceType);\n                this.addEventListeners();\n            }\n            /**\n             * Remove traces of announcer.\n             * @private\n             */\n            destroy() {\n                this.eventProvider.removeAddedEvents();\n                this.announcer.destroy();\n            }\n            /**\n             * Add event listeners for the announcer\n             * @private\n             */\n            addEventListeners() {\n                const announcer = this, chart = this.chart, e = this.eventProvider;\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    announcer.lastAnnouncementTime = 0;\n                });\n                e.addEvent(chart, 'afterAddSeries', function (e) {\n                    announcer.onSeriesAdded(e.series);\n                });\n                e.addEvent(chart, 'redraw', function () {\n                    announcer.announceDirtyData();\n                });\n            }\n            /**\n             * On new data series added, update dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            onSeriesAdded(series) {\n                if (chartHasAnnounceEnabled(this.chart)) {\n                    this.dirty.hasDirty = true;\n                    this.dirty.allSeries[series.name + series.index] = series;\n                    // Add it to newSeries storage unless we already have one\n                    this.dirty.newSeries = defined(this.dirty.newSeries) ?\n                        void 0 : series;\n                }\n            }\n            /**\n             * Gather what we know and announce the data to user.\n             * @private\n             */\n            announceDirtyData() {\n                const chart = this.chart, announcer = this;\n                if (chart.options.accessibility.announceNewData &&\n                    this.dirty.hasDirty) {\n                    let newPoint = this.dirty.newPoint;\n                    // If we have a single new point, see if we can find it in the\n                    // data array. Otherwise we can only pass through options to\n                    // the description builder, and it is a bit sparse in info.\n                    if (newPoint) {\n                        newPoint = findPointInDataArray(newPoint);\n                    }\n                    this.queueAnnouncement(Object\n                        .keys(this.dirty.allSeries)\n                        .map((ix) => announcer.dirty.allSeries[ix]), this.dirty.newSeries, newPoint);\n                    // Reset\n                    this.dirty = {\n                        allSeries: {}\n                    };\n                }\n            }\n            /**\n             * Announce to user that there is new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             */\n            queueAnnouncement(dirtySeries, newSeries, newPoint) {\n                const chart = this.chart;\n                const annOptions = chart.options.accessibility.announceNewData;\n                if (annOptions.enabled) {\n                    const now = +new Date();\n                    const dTime = now - this.lastAnnouncementTime;\n                    const time = Math.max(0, annOptions.minAnnounceInterval - dTime);\n                    // Add series from previously queued announcement.\n                    const allSeries = getUniqueSeries(this.queuedAnnouncement && this.queuedAnnouncement.series, dirtySeries);\n                    // Build message and announce\n                    const message = this.buildAnnouncementMessage(allSeries, newSeries, newPoint);\n                    if (message) {\n                        // Is there already one queued?\n                        if (this.queuedAnnouncement) {\n                            clearTimeout(this.queuedAnnouncementTimer);\n                        }\n                        // Build the announcement\n                        this.queuedAnnouncement = {\n                            time: now,\n                            message: message,\n                            series: allSeries\n                        };\n                        // Queue the announcement\n                        this.queuedAnnouncementTimer = setTimeout(() => {\n                            if (this && this.announcer) {\n                                this.lastAnnouncementTime = +new Date();\n                                this.announcer.announce(this.queuedAnnouncement.message);\n                                delete this.queuedAnnouncement;\n                                delete this.queuedAnnouncementTimer;\n                            }\n                        }, time);\n                    }\n                }\n            }\n            /**\n             * Get announcement message for new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             *\n             * @return {string|null}\n             * The announcement message to give to user.\n             */\n            buildAnnouncementMessage(dirtySeries, newSeries, newPoint) {\n                const chart = this.chart, annOptions = chart.options.accessibility.announceNewData;\n                // User supplied formatter?\n                if (annOptions.announcementFormatter) {\n                    const formatterRes = annOptions.announcementFormatter(dirtySeries, newSeries, newPoint);\n                    if (formatterRes !== false) {\n                        return formatterRes.length ? formatterRes : null;\n                    }\n                }\n                // Default formatter - use lang options\n                const multiple = H.charts && H.charts.length > 1 ?\n                    'Multiple' : 'Single', langKey = newSeries ? 'newSeriesAnnounce' + multiple :\n                    newPoint ? 'newPointAnnounce' + multiple : 'newDataAnnounce', chartTitle = getChartTitle(chart);\n                return chart.langFormat('accessibility.announceNewData.' + langKey, {\n                    chartTitle: chartTitle,\n                    seriesDesc: newSeries ?\n                        defaultSeriesDescriptionFormatter(newSeries) :\n                        null,\n                    pointDesc: newPoint ?\n                        defaultPointDescriptionFormatter(newPoint) :\n                        null,\n                    point: newPoint,\n                    series: newSeries\n                });\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (NewDataAnnouncer) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'A11y.NDA')) {\n                    addEvent(SeriesClass, 'addPoint', seriesOnAddPoint);\n                    addEvent(SeriesClass, 'updatedData', seriesOnUpdatedData);\n                }\n            }\n            NewDataAnnouncer.compose = compose;\n            /**\n             * On new point added, update dirty list.\n             * @private\n             * @param {Highcharts.Point} point\n             */\n            function seriesOnAddPoint(e) {\n                const chart = this.chart, newDataAnnouncer = chart.accessibility?.components\n                    .series.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    // Add it to newPoint storage unless we already have one\n                    newDataAnnouncer.dirty.newPoint = (defined(newDataAnnouncer.dirty.newPoint) ?\n                        void 0 :\n                        e.point);\n                }\n            }\n            /**\n             * On new data in the series, make sure we add it to the dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            function seriesOnUpdatedData() {\n                const chart = this.chart, newDataAnnouncer = chart.accessibility?.components\n                    .series.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    newDataAnnouncer.dirty.hasDirty = true;\n                    newDataAnnouncer.dirty.allSeries[this.name + this.index] = this;\n                }\n            }\n        })(NewDataAnnouncer || (NewDataAnnouncer = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NewDataAnnouncer;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyElement.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, U, EventProvider, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyElement class represents such an element, and deals with\n         *  overlay positioning and mirroring events for the target.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { attr, css, merge } = U;\n        const { fireEventOnWrappedOrUnwrappedElement } = ChartUtilities;\n        const { cloneMouseEvent, cloneTouchEvent, getFakeMouseEvent, removeElement } = HTMLUtilities;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Represents a proxy element that overlays a target and relays events\n         * to its target.\n         *\n         * @private\n         * @class\n         */\n        class ProxyElement {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, target, proxyElementType = 'button', wrapperElementType, attributes) {\n                this.chart = chart;\n                this.target = target;\n                this.eventProvider = new EventProvider();\n                const innerEl = this.innerElement =\n                    doc.createElement(proxyElementType), wrapperEl = this.element = wrapperElementType ?\n                    doc.createElement(wrapperElementType) : innerEl;\n                if (!chart.styledMode) {\n                    this.hideElementVisually(innerEl);\n                }\n                if (wrapperElementType) {\n                    if (wrapperElementType === 'li' && !chart.styledMode) {\n                        wrapperEl.style.listStyle = 'none';\n                    }\n                    wrapperEl.appendChild(innerEl);\n                    this.element = wrapperEl;\n                }\n                this.updateTarget(target, attributes);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Fake a click event on the target.\n             */\n            click() {\n                const pos = this.getTargetPosition();\n                pos.x += pos.width / 2;\n                pos.y += pos.height / 2;\n                const fakeEventObject = getFakeMouseEvent('click', pos);\n                fireEventOnWrappedOrUnwrappedElement(this.target.click, fakeEventObject);\n            }\n            /**\n             * Update the target to be proxied. The position and events are updated to\n             * match the new target.\n             * @param target The new target definition\n             * @param attributes New HTML attributes to apply to the proxy. Set an\n             * attribute to null to remove.\n             */\n            updateTarget(target, attributes) {\n                this.target = target;\n                this.updateCSSClassName();\n                const attrs = attributes || {};\n                Object.keys(attrs).forEach((a) => {\n                    if (attrs[a] === null) {\n                        delete attrs[a];\n                    }\n                });\n                const targetAriaLabel = this.getTargetAttr(target.click, 'aria-label');\n                attr(this.innerElement, merge(targetAriaLabel ? {\n                    'aria-label': targetAriaLabel\n                } : {}, attrs));\n                this.eventProvider.removeAddedEvents();\n                this.addProxyEventsToElement(this.innerElement, target.click);\n                this.refreshPosition();\n            }\n            /**\n             * Refresh the position of the proxy element to match the current target\n             */\n            refreshPosition() {\n                const bBox = this.getTargetPosition();\n                css(this.innerElement, {\n                    width: (bBox.width || 1) + 'px',\n                    height: (bBox.height || 1) + 'px',\n                    left: (Math.round(bBox.x) || 0) + 'px',\n                    top: (Math.round(bBox.y) || 0) + 'px'\n                });\n            }\n            /**\n             * Remove button from DOM, and clear events.\n             */\n            remove() {\n                this.eventProvider.removeAddedEvents();\n                removeElement(this.element);\n            }\n            // -------------------------- private ------------------------------------\n            /**\n             * Update the CSS class name to match target\n             */\n            updateCSSClassName() {\n                const stringHasNoTooltip = (s) => (s.indexOf('highcharts-no-tooltip') > -1);\n                const legend = this.chart.legend;\n                const groupDiv = legend.group && legend.group.div;\n                const noTooltipOnGroup = stringHasNoTooltip(groupDiv && groupDiv.className || '');\n                const targetClassName = this.getTargetAttr(this.target.click, 'class') || '';\n                const noTooltipOnTarget = stringHasNoTooltip(targetClassName);\n                this.innerElement.className = noTooltipOnGroup || noTooltipOnTarget ?\n                    'highcharts-a11y-proxy-element highcharts-no-tooltip' :\n                    'highcharts-a11y-proxy-element';\n            }\n            /**\n             * Mirror events for a proxy element to a target\n             */\n            addProxyEventsToElement(element, target) {\n                [\n                    'click', 'touchstart', 'touchend', 'touchcancel', 'touchmove',\n                    'mouseover', 'mouseenter', 'mouseleave', 'mouseout'\n                ].forEach((evtType) => {\n                    const isTouchEvent = evtType.indexOf('touch') === 0;\n                    this.eventProvider.addEvent(element, evtType, (e) => {\n                        const clonedEvent = isTouchEvent ?\n                            cloneTouchEvent(e) :\n                            cloneMouseEvent(e);\n                        if (target) {\n                            fireEventOnWrappedOrUnwrappedElement(target, clonedEvent);\n                        }\n                        e.stopPropagation();\n                        // #9682, #15318: Touch scrolling didn't work when touching\n                        // proxy\n                        if (!isTouchEvent) {\n                            e.preventDefault();\n                        }\n                    }, { passive: false });\n                });\n            }\n            /**\n             * Set visually hidden style on a proxy element\n             */\n            hideElementVisually(el) {\n                css(el, {\n                    borderWidth: 0,\n                    backgroundColor: 'transparent',\n                    cursor: 'pointer',\n                    outline: 'none',\n                    opacity: 0.001,\n                    filter: 'alpha(opacity=1)',\n                    zIndex: 999,\n                    overflow: 'hidden',\n                    padding: 0,\n                    margin: 0,\n                    display: 'block',\n                    position: 'absolute',\n                    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)'\n                });\n            }\n            /**\n             * Get the position relative to chart container for the target\n             */\n            getTargetPosition() {\n                const clickTarget = this.target.click;\n                // We accept both DOM elements and wrapped elements as click targets.\n                const clickTargetElement = clickTarget.element ?\n                    clickTarget.element :\n                    clickTarget;\n                const posElement = this.target.visual || clickTargetElement;\n                const chartDiv = this.chart.renderTo, pointer = this.chart.pointer;\n                if (chartDiv && posElement?.getBoundingClientRect && pointer) {\n                    const rectEl = posElement.getBoundingClientRect(), chartPos = pointer.getChartPosition();\n                    return {\n                        x: (rectEl.left - chartPos.left) / chartPos.scaleX,\n                        y: (rectEl.top - chartPos.top) / chartPos.scaleY,\n                        width: rectEl.right / chartPos.scaleX -\n                            rectEl.left / chartPos.scaleX,\n                        height: rectEl.bottom / chartPos.scaleY -\n                            rectEl.top / chartPos.scaleY\n                    };\n                }\n                return { x: 0, y: 0, width: 1, height: 1 };\n            }\n            /**\n             * Get an attribute value of a target\n             */\n            getTargetAttr(target, key) {\n                if (target.element) {\n                    return target.element.getAttribute(key);\n                }\n                return target.getAttribute(key);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ProxyElement;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/ProxyElement.js']], function (H, U, CU, DOMElementProvider, HU, ProxyElement) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyProvider keeps track of all proxy elements of the a11y module,\n         *  and updating their order and positioning.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { attr, css } = U;\n        const { unhideChartElementFromAT } = CU;\n        const { removeChildNodes } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Keeps track of all proxy elements and proxy groups.\n         *\n         * @private\n         * @class\n         */\n        class ProxyProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.groups = {};\n                this.groupOrder = [];\n                this.beforeChartProxyPosContainer = this.createProxyPosContainer('before');\n                this.afterChartProxyPosContainer = this.createProxyPosContainer('after');\n                this.update();\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable */\n            /**\n             * Add a new proxy element to a group, proxying a target control.\n             */\n            addProxyElement(groupKey, target, proxyElementType = 'button', attributes) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.addProxyElement: Invalid group key ' + groupKey);\n                }\n                const wrapperElementType = group.type === 'ul' || group.type === 'ol' ?\n                    'li' : void 0, proxy = new ProxyElement(this.chart, target, proxyElementType, wrapperElementType, attributes);\n                group.proxyContainerElement.appendChild(proxy.element);\n                group.proxyElements.push(proxy);\n                return proxy;\n            }\n            /**\n             * Create a group that will contain proxy elements. The group order is\n             * automatically updated according to the last group order keys.\n             *\n             * Returns the added group.\n             */\n            addGroup(groupKey, groupElementType = 'div', attributes) {\n                const existingGroup = this.groups[groupKey];\n                if (existingGroup) {\n                    return existingGroup.groupElement;\n                }\n                const proxyContainer = this.domElementProvider\n                    .createElement(groupElementType);\n                // If we want to add a role to the group, and still use e.g.\n                // a list group, we need a wrapper div around the proxyContainer.\n                // Used for setting region role on legend.\n                let groupElement;\n                if (attributes && attributes.role && groupElementType !== 'div') {\n                    groupElement = this.domElementProvider.createElement('div');\n                    groupElement.appendChild(proxyContainer);\n                }\n                else {\n                    groupElement = proxyContainer;\n                }\n                groupElement.className = 'highcharts-a11y-proxy-group highcharts-a11y-proxy-group-' +\n                    groupKey.replace(/\\W/g, '-');\n                this.groups[groupKey] = {\n                    proxyContainerElement: proxyContainer,\n                    groupElement,\n                    type: groupElementType,\n                    proxyElements: []\n                };\n                attr(groupElement, attributes || {});\n                if (groupElementType === 'ul') {\n                    proxyContainer.setAttribute('role', 'list'); // Needed for webkit\n                }\n                // Add the group to the end by default, and perhaps then we\n                // won't have to reorder the whole set of groups.\n                this.afterChartProxyPosContainer.appendChild(groupElement);\n                this.updateGroupOrder(this.groupOrder);\n                return groupElement;\n            }\n            /**\n             * Update HTML attributes of a group.\n             */\n            updateGroupAttrs(groupKey, attributes) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.updateGroupAttrs: Invalid group key ' + groupKey);\n                }\n                attr(group.groupElement, attributes);\n            }\n            /**\n             * Reorder the proxy groups.\n             *\n             * The group key \"series\" refers to the chart's data points / <svg> element.\n             * This is so that the keyboardNavigation.order option can be used to\n             * determine the proxy group order.\n             */\n            updateGroupOrder(groupKeys) {\n                // Store so that we can update order when a new group is created\n                this.groupOrder = groupKeys.slice();\n                // Don't unnecessarily reorder, because keyboard focus is lost\n                if (this.isDOMOrderGroupOrder()) {\n                    return;\n                }\n                const seriesIx = groupKeys.indexOf('series');\n                const beforeKeys = seriesIx > -1 ? groupKeys.slice(0, seriesIx) : groupKeys;\n                const afterKeys = seriesIx > -1 ? groupKeys.slice(seriesIx + 1) : [];\n                // Store focused element since it will be lost when reordering\n                const activeElement = doc.activeElement;\n                // Add groups to correct container\n                ['before', 'after'].forEach((pos) => {\n                    const posContainer = this[pos === 'before' ?\n                        'beforeChartProxyPosContainer' :\n                        'afterChartProxyPosContainer'];\n                    const keys = pos === 'before' ? beforeKeys : afterKeys;\n                    removeChildNodes(posContainer);\n                    keys.forEach((groupKey) => {\n                        const group = this.groups[groupKey];\n                        if (group) {\n                            posContainer.appendChild(group.groupElement);\n                        }\n                    });\n                });\n                // Attempt to restore focus after reordering, but note that this may\n                // cause screen readers re-announcing the button.\n                if ((this.beforeChartProxyPosContainer.contains(activeElement) ||\n                    this.afterChartProxyPosContainer.contains(activeElement)) &&\n                    activeElement && activeElement.focus) {\n                    activeElement.focus();\n                }\n            }\n            /**\n             * Remove all proxy elements in a group\n             */\n            clearGroup(groupKey) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.clearGroup: Invalid group key ' + groupKey);\n                }\n                removeChildNodes(group.proxyContainerElement);\n            }\n            /**\n             * Remove a group from the DOM and from the proxy provider's group list.\n             * All child elements are removed.\n             * If the group does not exist, nothing happens.\n             */\n            removeGroup(groupKey) {\n                const group = this.groups[groupKey];\n                if (group) {\n                    // Remove detached HTML elements to prevent memory leak (#20329).\n                    this.domElementProvider.removeElement(group.groupElement);\n                    // Sometimes groupElement is a wrapper around the proxyContainer, so\n                    // the real one proxyContainer needs to be removed also.\n                    if (group.groupElement !== group.proxyContainerElement) {\n                        this.domElementProvider.removeElement(group.proxyContainerElement);\n                    }\n                    delete this.groups[groupKey];\n                }\n            }\n            /**\n             * Update the position and order of all proxy groups and elements\n             */\n            update() {\n                this.updatePosContainerPositions();\n                this.updateGroupOrder(this.groupOrder);\n                this.updateProxyElementPositions();\n            }\n            /**\n             * Update all proxy element positions\n             */\n            updateProxyElementPositions() {\n                Object.keys(this.groups).forEach(this.updateGroupProxyElementPositions.bind(this));\n            }\n            /**\n             * Update a group's proxy elements' positions.\n             * If the group does not exist, nothing happens.\n             */\n            updateGroupProxyElementPositions(groupKey) {\n                const group = this.groups[groupKey];\n                if (group) {\n                    group.proxyElements.forEach((el) => el.refreshPosition());\n                }\n            }\n            /**\n             * Remove all added elements\n             */\n            destroy() {\n                this.domElementProvider.destroyCreatedElements();\n            }\n            // -------------------------- private ------------------------------------\n            /**\n             * Create and return a pos container element (the overall containers for\n             * the proxy groups).\n             */\n            createProxyPosContainer(classNamePostfix) {\n                const el = this.domElementProvider.createElement('div');\n                el.setAttribute('aria-hidden', 'false');\n                el.className = 'highcharts-a11y-proxy-container' + (classNamePostfix ? '-' + classNamePostfix : '');\n                css(el, {\n                    top: '0',\n                    left: '0'\n                });\n                if (!this.chart.styledMode) {\n                    el.style.whiteSpace = 'nowrap';\n                    el.style.position = 'absolute';\n                }\n                return el;\n            }\n            /**\n             * Get an array of group keys that corresponds to the current group order\n             * in the DOM.\n             */\n            getCurrentGroupOrderInDOM() {\n                const getGroupKeyFromElement = (el) => {\n                    const allGroups = Object.keys(this.groups);\n                    let i = allGroups.length;\n                    while (i--) {\n                        const groupKey = allGroups[i];\n                        const group = this.groups[groupKey];\n                        if (group && el === group.groupElement) {\n                            return groupKey;\n                        }\n                    }\n                };\n                const getChildrenGroupOrder = (el) => {\n                    const childrenOrder = [];\n                    const children = el.children;\n                    for (let i = 0; i < children.length; ++i) {\n                        const groupKey = getGroupKeyFromElement(children[i]);\n                        if (groupKey) {\n                            childrenOrder.push(groupKey);\n                        }\n                    }\n                    return childrenOrder;\n                };\n                const before = getChildrenGroupOrder(this.beforeChartProxyPosContainer);\n                const after = getChildrenGroupOrder(this.afterChartProxyPosContainer);\n                before.push('series');\n                return before.concat(after);\n            }\n            /**\n             * Check if the current DOM order matches the current group order, so that\n             * a reordering/update is unnecessary.\n             */\n            isDOMOrderGroupOrder() {\n                const domOrder = this.getCurrentGroupOrderInDOM();\n                const groupOrderWithGroups = this.groupOrder.filter((x) => x === 'series' || !!this.groups[x]);\n                let i = domOrder.length;\n                if (i !== groupOrderWithGroups.length) {\n                    return false;\n                }\n                while (i--) {\n                    if (domOrder[i] !== groupOrderWithGroups[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Update the DOM positions of the before/after proxy\n             * positioning containers for the groups.\n             */\n            updatePosContainerPositions() {\n                const chart = this.chart;\n                // If exporting, don't add these containers to the DOM.\n                if (chart.renderer.forExport) {\n                    return;\n                }\n                const rendererSVGEl = chart.renderer.box;\n                chart.container.insertBefore(this.afterChartProxyPosContainer, rendererSVGEl.nextSibling);\n                chart.container.insertBefore(this.beforeChartProxyPosContainer, rendererSVGEl);\n                unhideChartElementFromAT(this.chart, this.afterChartProxyPosContainer);\n                unhideChartElementFromAT(this.chart, this.beforeChartProxyPosContainer);\n            }\n        }\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return ProxyProvider;\n    });\n    _registerModule(_modules, 'Accessibility/Components/RangeSelectorComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Core/Utilities.js']], function (AccessibilityComponent, Announcer, ChartUtilities, KeyboardNavigationHandler, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for the range selector.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT, getAxisRangeDescription } = ChartUtilities;\n        const { addEvent, attr } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Do we want date input navigation\n         * @private\n         */\n        function shouldRunInputNavigation(chart) {\n            return Boolean(chart.rangeSelector &&\n                chart.rangeSelector.inputGroup &&\n                chart.rangeSelector.inputGroup.element.style.visibility !== 'hidden' &&\n                chart.options.rangeSelector.inputEnabled !== false &&\n                chart.rangeSelector.minInput &&\n                chart.rangeSelector.maxInput);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The RangeSelectorComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelectorComponent\n         */\n        class RangeSelectorComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                this.announcer = new Announcer(chart, 'polite');\n            }\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            onChartUpdate() {\n                const chart = this.chart, component = this, rangeSelector = chart.rangeSelector;\n                if (!rangeSelector) {\n                    return;\n                }\n                this.updateSelectorVisibility();\n                this.setDropdownAttrs();\n                if (rangeSelector.buttons &&\n                    rangeSelector.buttons.length) {\n                    rangeSelector.buttons.forEach((button) => {\n                        component.setRangeButtonAttrs(button);\n                    });\n                }\n                // Make sure input boxes are accessible and focusable\n                if (rangeSelector.maxInput && rangeSelector.minInput) {\n                    ['minInput', 'maxInput'].forEach(function (key, i) {\n                        const input = rangeSelector[key];\n                        if (input) {\n                            unhideChartElementFromAT(chart, input);\n                            component.setRangeInputAttrs(input, 'accessibility.rangeSelector.' + (i ? 'max' : 'min') +\n                                'InputLabel');\n                        }\n                    });\n                }\n            }\n            /**\n             * Hide buttons from AT when showing dropdown, and vice versa.\n             * @private\n             */\n            updateSelectorVisibility() {\n                const chart = this.chart;\n                const rangeSelector = chart.rangeSelector;\n                const dropdown = (rangeSelector &&\n                    rangeSelector.dropdown);\n                const buttons = (rangeSelector &&\n                    rangeSelector.buttons ||\n                    []);\n                const hideFromAT = (el) => el.setAttribute('aria-hidden', true);\n                if (rangeSelector &&\n                    rangeSelector.hasVisibleDropdown &&\n                    dropdown) {\n                    unhideChartElementFromAT(chart, dropdown);\n                    buttons.forEach((btn) => hideFromAT(btn.element));\n                }\n                else {\n                    if (dropdown) {\n                        hideFromAT(dropdown);\n                    }\n                    buttons.forEach((btn) => unhideChartElementFromAT(chart, btn.element));\n                }\n            }\n            /**\n             * Set accessibility related attributes on dropdown element.\n             * @private\n             */\n            setDropdownAttrs() {\n                const chart = this.chart;\n                const dropdown = (chart.rangeSelector &&\n                    chart.rangeSelector.dropdown);\n                if (dropdown) {\n                    const label = chart.langFormat('accessibility.rangeSelector.dropdownLabel', { rangeTitle: chart.options.lang.rangeSelectorZoom });\n                    dropdown.setAttribute('aria-label', label);\n                    dropdown.setAttribute('tabindex', -1);\n                }\n            }\n            /**\n             * Set attrs for a range button\n             * @private\n             */\n            setRangeButtonAttrs(button) {\n                attr(button.element, {\n                    tabindex: -1,\n                    role: 'button'\n                });\n            }\n            /**\n             * Set attrs for a date input\n             * @private\n             */\n            setRangeInputAttrs(input, langKey) {\n                const chart = this.chart;\n                attr(input, {\n                    tabindex: -1,\n                    'aria-label': chart.langFormat(langKey, { chart: chart })\n                });\n            }\n            /**\n             * Handle arrow key nav\n             * @private\n             */\n            onButtonNavKbdArrowKey(keyboardNavigationHandler, keyCode) {\n                const response = keyboardNavigationHandler.response, keys = this.keyCodes, chart = this.chart, wrapAround = chart.options.accessibility\n                    .keyboardNavigation.wrapAround, direction = (keyCode === keys.left || keyCode === keys.up) ? -1 : 1, didHighlight = chart.highlightRangeSelectorButton(chart.highlightedRangeSelectorItemIx + direction);\n                if (!didHighlight) {\n                    if (wrapAround) {\n                        keyboardNavigationHandler.init(direction);\n                        return response.success;\n                    }\n                    return response[direction > 0 ? 'next' : 'prev'];\n                }\n                return response.success;\n            }\n            /**\n             * Handle keyboard click\n             * @private\n             */\n            onButtonNavKbdClick(keyboardNavigationHandler) {\n                const response = keyboardNavigationHandler.response, chart = this.chart, wasDisabled = chart.oldRangeSelectorItemState === 3;\n                if (!wasDisabled) {\n                    this.fakeClickEvent(chart.rangeSelector.buttons[chart.highlightedRangeSelectorItemIx].element);\n                }\n                return response.success;\n            }\n            /**\n             * Called whenever a range selector button has been clicked, either by\n             * mouse, touch, or kbd/voice/other.\n             * @private\n             */\n            onAfterBtnClick() {\n                const chart = this.chart;\n                const axisRangeDescription = getAxisRangeDescription(chart.xAxis[0]);\n                const announcement = chart.langFormat('accessibility.rangeSelector.clickButtonAnnouncement', { chart, axisRangeDescription });\n                if (announcement) {\n                    this.announcer.announce(announcement);\n                }\n            }\n            /**\n             * Handle move between input elements with Tab key\n             * @private\n             */\n            onInputKbdMove(direction) {\n                const chart = this.chart;\n                const rangeSel = chart.rangeSelector;\n                const newIx = chart.highlightedInputRangeIx = (chart.highlightedInputRangeIx || 0) + direction;\n                const newIxOutOfRange = newIx > 1 || newIx < 0;\n                if (newIxOutOfRange) {\n                    if (chart.accessibility) {\n                        // Ignore focus\n                        chart.accessibility.keyboardNavigation.exiting = true;\n                        chart.accessibility.keyboardNavigation.tabindexContainer\n                            .focus();\n                        return chart.accessibility.keyboardNavigation.move(direction);\n                    }\n                }\n                else if (rangeSel) {\n                    const svgEl = rangeSel[newIx ? 'maxDateBox' : 'minDateBox'];\n                    const inputEl = rangeSel[newIx ? 'maxInput' : 'minInput'];\n                    if (svgEl && inputEl) {\n                        chart.setFocusToElement(svgEl, inputEl);\n                    }\n                }\n                return true;\n            }\n            /**\n             * Init date input navigation\n             * @private\n             */\n            onInputNavInit(direction) {\n                const component = this;\n                const chart = this.chart;\n                const buttonIxToHighlight = direction > 0 ? 0 : 1;\n                const rangeSel = chart.rangeSelector;\n                const svgEl = (rangeSel &&\n                    rangeSel[buttonIxToHighlight ? 'maxDateBox' : 'minDateBox']);\n                const minInput = (rangeSel && rangeSel.minInput);\n                const maxInput = (rangeSel && rangeSel.maxInput);\n                const inputEl = buttonIxToHighlight ? maxInput : minInput;\n                chart.highlightedInputRangeIx = buttonIxToHighlight;\n                if (svgEl && minInput && maxInput) {\n                    chart.setFocusToElement(svgEl, inputEl);\n                    // Tab-press with the input focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    if (this.removeInputKeydownHandler) {\n                        this.removeInputKeydownHandler();\n                    }\n                    const keydownHandler = (e) => {\n                        const isTab = (e.which || e.keyCode) === this.keyCodes.tab;\n                        if (isTab &&\n                            component.onInputKbdMove(e.shiftKey ? -1 : 1)) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    };\n                    const minRemover = addEvent(minInput, 'keydown', keydownHandler);\n                    const maxRemover = addEvent(maxInput, 'keydown', keydownHandler);\n                    this.removeInputKeydownHandler = () => {\n                        minRemover();\n                        maxRemover();\n                    };\n                }\n            }\n            /**\n             * Terminate date input nav\n             * @private\n             */\n            onInputNavTerminate() {\n                const rangeSel = (this.chart.rangeSelector || {});\n                if (rangeSel.maxInput) {\n                    rangeSel.hideInput('max');\n                }\n                if (rangeSel.minInput) {\n                    rangeSel.hideInput('min');\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                    delete this.removeInputKeydownHandler;\n                }\n            }\n            /**\n             * Init range selector dropdown nav\n             * @private\n             */\n            initDropdownNav() {\n                const chart = this.chart;\n                const rangeSelector = chart.rangeSelector;\n                const dropdown = (rangeSelector && rangeSelector.dropdown);\n                if (rangeSelector && dropdown) {\n                    chart.setFocusToElement(rangeSelector.buttonGroup, dropdown);\n                    if (this.removeDropdownKeydownHandler) {\n                        this.removeDropdownKeydownHandler();\n                    }\n                    // Tab-press with dropdown focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    this.removeDropdownKeydownHandler = addEvent(dropdown, 'keydown', (e) => {\n                        const isTab = (e.which || e.keyCode) === this.keyCodes.tab, a11y = chart.accessibility;\n                        if (isTab) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (a11y) {\n                                a11y.keyboardNavigation.tabindexContainer.focus();\n                                a11y.keyboardNavigation.move(e.shiftKey ? -1 : 1);\n                            }\n                        }\n                    });\n                }\n            }\n            /**\n             * Get navigation for the range selector buttons.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object.\n             */\n            getRangeSelectorButtonNavigation() {\n                const chart = this.chart;\n                const keys = this.keyCodes;\n                const component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onButtonNavKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onButtonNavKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return !!(chart.rangeSelector &&\n                            chart.rangeSelector.buttons &&\n                            chart.rangeSelector.buttons.length);\n                    },\n                    init: function (direction) {\n                        const rangeSelector = chart.rangeSelector;\n                        if (rangeSelector && rangeSelector.hasVisibleDropdown) {\n                            component.initDropdownNav();\n                        }\n                        else if (rangeSelector) {\n                            const lastButtonIx = rangeSelector.buttons.length - 1;\n                            chart.highlightRangeSelectorButton(direction > 0 ? 0 : lastButtonIx);\n                        }\n                    },\n                    terminate: function () {\n                        if (component.removeDropdownKeydownHandler) {\n                            component.removeDropdownKeydownHandler();\n                            delete component.removeDropdownKeydownHandler;\n                        }\n                    }\n                });\n            }\n            /**\n             * Get navigation for the range selector input boxes.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler}\n             *         The module object.\n             */\n            getRangeSelectorInputNavigation() {\n                const chart = this.chart;\n                const component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return shouldRunInputNavigation(chart);\n                    },\n                    init: function (direction) {\n                        component.onInputNavInit(direction);\n                    },\n                    terminate: function () {\n                        component.onInputNavTerminate();\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects.\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.getRangeSelectorButtonNavigation(),\n                    this.getRangeSelectorInputNavigation()\n                ];\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.removeDropdownKeydownHandler) {\n                    this.removeDropdownKeydownHandler();\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                }\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (RangeSelectorComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Highlight range selector button by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightRangeSelectorButton\n             */\n            function chartHighlightRangeSelectorButton(ix) {\n                const buttons = (this.rangeSelector &&\n                    this.rangeSelector.buttons ||\n                    []);\n                const curHighlightedIx = this.highlightedRangeSelectorItemIx;\n                const curSelectedIx = (this.rangeSelector &&\n                    this.rangeSelector.selected);\n                // Deselect old\n                if (typeof curHighlightedIx !== 'undefined' &&\n                    buttons[curHighlightedIx] &&\n                    curHighlightedIx !== curSelectedIx) {\n                    buttons[curHighlightedIx].setState(this.oldRangeSelectorItemState || 0);\n                }\n                // Select new\n                this.highlightedRangeSelectorItemIx = ix;\n                if (buttons[ix]) {\n                    this.setFocusToElement(buttons[ix].box, buttons[ix].element);\n                    if (ix !== curSelectedIx) {\n                        this.oldRangeSelectorItemState = buttons[ix].state;\n                        buttons[ix].setState(1);\n                    }\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * Build compositions\n             * @private\n             */\n            function compose(ChartClass, RangeSelectorClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.highlightRangeSelectorButton) {\n                    chartProto.highlightRangeSelectorButton = (chartHighlightRangeSelectorButton);\n                    addEvent(RangeSelectorClass, 'afterBtnClick', rangeSelectorAfterBtnClick);\n                }\n            }\n            RangeSelectorComponent.compose = compose;\n            /**\n             * Range selector does not have destroy-setup for class instance events - so\n             * we set it on the class and call the component from here.\n             * @private\n             */\n            function rangeSelectorAfterBtnClick() {\n                const a11y = this.chart.accessibility;\n                if (a11y && a11y.components.rangeSelector) {\n                    return a11y.components.rangeSelector.onAfterBtnClick();\n                }\n            }\n        })(RangeSelectorComponent || (RangeSelectorComponent = {}));\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return RangeSelectorComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/ForcedMarkers.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle forcing series markers.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, merge, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ForcedMarkersComposition;\n        (function (ForcedMarkersComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'A11y.FM')) {\n                    addEvent(SeriesClass, 'afterSetOptions', seriesOnAfterSetOptions);\n                    addEvent(SeriesClass, 'render', seriesOnRender);\n                    addEvent(SeriesClass, 'afterRender', seriesOnAfterRender);\n                    addEvent(SeriesClass, 'renderCanvas', seriesOnRenderCanvas);\n                }\n            }\n            ForcedMarkersComposition.compose = compose;\n            /**\n             * @private\n             */\n            function forceZeroOpacityMarkerOptions(options) {\n                merge(true, options, {\n                    marker: {\n                        enabled: true,\n                        states: {\n                            normal: {\n                                opacity: 0\n                            }\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            function getPointMarkerOpacity(pointOptions) {\n                return pointOptions.marker.states &&\n                    pointOptions.marker.states.normal &&\n                    pointOptions.marker.states.normal.opacity;\n            }\n            /**\n             * @private\n             */\n            function handleForcePointMarkers(series) {\n                let i = series.points.length;\n                while (i--) {\n                    const point = series.points[i];\n                    const pointOptions = point.options;\n                    const hadForcedMarker = point.hasForcedA11yMarker;\n                    delete point.hasForcedA11yMarker;\n                    if (pointOptions.marker) {\n                        const isStillForcedMarker = hadForcedMarker &&\n                            getPointMarkerOpacity(pointOptions) === 0;\n                        if (pointOptions.marker.enabled && !isStillForcedMarker) {\n                            unforcePointMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = false;\n                        }\n                        else if (pointOptions.marker.enabled === false) {\n                            forceZeroOpacityMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = true;\n                        }\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function hasIndividualPointMarkerOptions(series) {\n                return !!(series._hasPointMarkers &&\n                    series.points &&\n                    series.points.length);\n            }\n            /**\n             * @private\n             */\n            function isWithinDescriptionThreshold(series) {\n                const a11yOptions = series.chart.options.accessibility;\n                return series.points.length <\n                    a11yOptions.series.pointDescriptionEnabledThreshold ||\n                    a11yOptions.series\n                        .pointDescriptionEnabledThreshold === false;\n            }\n            /**\n             * Process marker graphics after render\n             * @private\n             */\n            function seriesOnAfterRender() {\n                const series = this;\n                // For styled mode the rendered graphic does not reflect the style\n                // options, and we need to add/remove classes to achieve the same.\n                if (series.chart.styledMode) {\n                    if (series.markerGroup) {\n                        series.markerGroup[series.a11yMarkersForced ? 'addClass' : 'removeClass']('highcharts-a11y-markers-hidden');\n                    }\n                    // Do we need to handle individual points?\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        series.points.forEach((point) => {\n                            if (point.graphic) {\n                                point.graphic[point.hasForcedA11yMarker ?\n                                    'addClass' : 'removeClass']('highcharts-a11y-marker-hidden');\n                                point.graphic[point.hasForcedA11yMarker === false ?\n                                    'addClass' :\n                                    'removeClass']('highcharts-a11y-marker-visible');\n                            }\n                        });\n                    }\n                }\n            }\n            /**\n             * Keep track of options to reset markers to if no longer forced.\n             * @private\n             */\n            function seriesOnAfterSetOptions(e) {\n                this.resetA11yMarkerOptions = merge(e.options.marker || {}, this.userOptions.marker || {});\n            }\n            /**\n             * Keep track of forcing markers.\n             * @private\n             */\n            function seriesOnRender() {\n                const series = this, options = series.options;\n                if (shouldForceMarkers(series)) {\n                    if (options.marker && options.marker.enabled === false) {\n                        series.a11yMarkersForced = true;\n                        forceZeroOpacityMarkerOptions(series.options);\n                    }\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        handleForcePointMarkers(series);\n                    }\n                }\n                else if (series.a11yMarkersForced) {\n                    delete series.a11yMarkersForced;\n                    unforceSeriesMarkerOptions(series);\n                    delete series.resetA11yMarkerOptions;\n                }\n            }\n            /**\n             * @private\n             */\n            function shouldForceMarkers(series) {\n                const chart = series.chart, chartA11yEnabled = chart.options.accessibility.enabled, seriesA11yEnabled = (series.options.accessibility &&\n                    series.options.accessibility.enabled) !== false;\n                return (chartA11yEnabled &&\n                    seriesA11yEnabled &&\n                    isWithinDescriptionThreshold(series));\n            }\n            /**\n             * @private\n             */\n            function unforcePointMarkerOptions(pointOptions) {\n                merge(true, pointOptions.marker, {\n                    states: {\n                        normal: {\n                            opacity: getPointMarkerOpacity(pointOptions) || 1\n                        }\n                    }\n                });\n            }\n            /**\n             * Reset markers to normal\n             * @private\n             */\n            function unforceSeriesMarkerOptions(series) {\n                const resetMarkerOptions = series.resetA11yMarkerOptions;\n                if (resetMarkerOptions) {\n                    const originalOpacity = resetMarkerOptions.states &&\n                        resetMarkerOptions.states.normal &&\n                        resetMarkerOptions.states.normal.opacity;\n                    // Temporarily set the old marker options to enabled in order to\n                    // trigger destruction of the markers in Series.update.\n                    if (series.userOptions && series.userOptions.marker) {\n                        series.userOptions.marker.enabled = true;\n                    }\n                    series.update({\n                        marker: {\n                            enabled: resetMarkerOptions.enabled,\n                            states: {\n                                normal: { opacity: originalOpacity }\n                            }\n                        }\n                    });\n                }\n            }\n            /**\n             * Reset markers if series is boosted and had forced markers (#17320).\n             * @private\n             */\n            function seriesOnRenderCanvas() {\n                if (this.boosted && this.a11yMarkersForced) {\n                    merge(true, this.options, {\n                        marker: {\n                            enabled: false\n                        }\n                    });\n                    delete this.a11yMarkersForced;\n                }\n            }\n        })(ForcedMarkersComposition || (ForcedMarkersComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ForcedMarkersComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js', [_modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js']], function (Point, Series, SeriesRegistry, H, U, KeyboardNavigationHandler, EventProvider, ChartUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle keyboard navigation for series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { seriesTypes } = SeriesRegistry;\n        const { doc } = H;\n        const { defined, fireEvent } = U;\n        const { getPointFromXY, getSeriesFromName, scrollAxisToPoint } = ChartUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Get the index of a point in a series. This is needed when using e.g. data\n         * grouping.\n         *\n         * @private\n         * @function getPointIndex\n         * @param {Highcharts.AccessibilityPoint} point\n         * The point to find index of.\n         * @return {number|undefined}\n         * The index in the series.points array of the point.\n         */\n        function getPointIndex(point) {\n            const index = point.index, points = point.series.points;\n            let i = points.length;\n            if (points[index] !== point) {\n                while (i--) {\n                    if (points[i] === point) {\n                        return i;\n                    }\n                }\n            }\n            else {\n                return index;\n            }\n        }\n        /**\n         * Determine if series navigation should be skipped\n         * @private\n         */\n        function isSkipSeries(series) {\n            const a11yOptions = series.chart.options.accessibility, seriesNavOptions = a11yOptions.keyboardNavigation.seriesNavigation, seriesA11yOptions = series.options.accessibility || {}, seriesKbdNavOptions = seriesA11yOptions.keyboardNavigation;\n            return seriesKbdNavOptions && seriesKbdNavOptions.enabled === false ||\n                seriesA11yOptions.enabled === false ||\n                series.options.enableMouseTracking === false || // #8440\n                !series.visible ||\n                // Skip all points in a series where pointNavigationEnabledThreshold is\n                // reached\n                (seriesNavOptions.pointNavigationEnabledThreshold &&\n                    +seriesNavOptions.pointNavigationEnabledThreshold <=\n                        series.points.length);\n        }\n        /**\n         * Determine if navigation for a point should be skipped\n         * @private\n         */\n        function isSkipPoint(point) {\n            const a11yOptions = point.series.chart.options.accessibility;\n            const pointA11yDisabled = (point.options.accessibility &&\n                point.options.accessibility.enabled === false);\n            return point.isNull &&\n                a11yOptions.keyboardNavigation.seriesNavigation.skipNullPoints ||\n                point.visible === false ||\n                point.isInside === false ||\n                pointA11yDisabled ||\n                isSkipSeries(point.series);\n        }\n        /**\n         * Get the first point that is not a skip point in this series.\n         * @private\n         */\n        function getFirstValidPointInSeries(series) {\n            const points = series.points || [], len = points.length;\n            for (let i = 0; i < len; ++i) {\n                if (!isSkipPoint(points[i])) {\n                    return points[i];\n                }\n            }\n            return null;\n        }\n        /**\n         * Get the first point that is not a skip point in this chart.\n         * @private\n         */\n        function getFirstValidPointInChart(chart) {\n            const series = chart.series || [], len = series.length;\n            for (let i = 0; i < len; ++i) {\n                if (!isSkipSeries(series[i])) {\n                    const point = getFirstValidPointInSeries(series[i]);\n                    if (point) {\n                        return point;\n                    }\n                }\n            }\n            return null;\n        }\n        /**\n         * @private\n         */\n        function highlightLastValidPointInChart(chart) {\n            const numSeries = chart.series.length;\n            let i = numSeries, res = false;\n            while (i--) {\n                chart.highlightedPoint = chart.series[i].points[chart.series[i].points.length - 1];\n                // Highlight first valid point in the series will also\n                // look backwards. It always starts from currently\n                // highlighted point.\n                res = chart.series[i].highlightNextValidPoint();\n                if (res) {\n                    break;\n                }\n            }\n            return res;\n        }\n        /**\n         * After drilling down/up, we need to set focus to the first point for\n         * screen readers and keyboard nav.\n         * @private\n         */\n        function updateChartFocusAfterDrilling(chart) {\n            const point = getFirstValidPointInChart(chart);\n            if (point) {\n                point.highlight(false); // Do not visually highlight\n            }\n        }\n        /**\n         * Highlight the first point in chart that is not a skip point\n         * @private\n         */\n        function highlightFirstValidPointInChart(chart) {\n            delete chart.highlightedPoint;\n            const point = getFirstValidPointInChart(chart);\n            return point ? point.highlight() : false;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.SeriesKeyboardNavigation\n         */\n        class SeriesKeyboardNavigation {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, keyCodes) {\n                this.keyCodes = keyCodes;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the keyboard navigation\n             */\n            init() {\n                const keyboardNavigation = this, chart = this.chart, e = this.eventProvider = new EventProvider();\n                e.addEvent(Series, 'destroy', function () {\n                    return keyboardNavigation.onSeriesDestroy(this);\n                });\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    updateChartFocusAfterDrilling(this);\n                });\n                e.addEvent(chart, 'drilldown', function (e) {\n                    const point = e.point, series = point.series;\n                    keyboardNavigation.lastDrilledDownPoint = {\n                        x: point.x,\n                        y: point.y,\n                        seriesName: series ? series.name : ''\n                    };\n                });\n                e.addEvent(chart, 'drillupall', function () {\n                    setTimeout(function () {\n                        keyboardNavigation.onDrillupAll();\n                    }, 10);\n                });\n                // Heatmaps et al. alter z-index in setState, causing elements\n                // to lose focus\n                e.addEvent(Point, 'afterSetState', function () {\n                    const point = this;\n                    const pointEl = point.graphic && point.graphic.element;\n                    const focusedElement = doc.activeElement;\n                    // VO brings focus with it to container, causing series nav to run.\n                    // If then navigating with virtual cursor, it is possible to leave\n                    // keyboard nav module state on the data points and still activate\n                    // proxy buttons.\n                    const focusedElClassName = (focusedElement && focusedElement.getAttribute('class'));\n                    const isProxyFocused = focusedElClassName &&\n                        focusedElClassName.indexOf('highcharts-a11y-proxy-element') > -1;\n                    if (chart.highlightedPoint === point &&\n                        focusedElement !== pointEl &&\n                        !isProxyFocused &&\n                        pointEl &&\n                        pointEl.focus) {\n                        pointEl.focus();\n                    }\n                });\n            }\n            /**\n             * After drillup we want to find the point that was drilled down to and\n             * highlight it.\n             * @private\n             */\n            onDrillupAll() {\n                const last = this.lastDrilledDownPoint, chart = this.chart, series = last && getSeriesFromName(chart, last.seriesName);\n                let point;\n                if (last && series && defined(last.x) && defined(last.y)) {\n                    point = getPointFromXY(series, last.x, last.y);\n                }\n                point = point || getFirstValidPointInChart(chart);\n                // Container focus can be lost on drillup due to deleted elements.\n                if (chart.container) {\n                    chart.container.focus();\n                }\n                if (point && point.highlight) {\n                    point.highlight(false); // Do not visually highlight\n                }\n            }\n            /**\n             * @private\n             */\n            getKeyboardNavigationHandler() {\n                const keyboardNavigation = this, keys = this.keyCodes, chart = this.chart, inverted = chart.inverted;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            inverted ? [keys.up, keys.down] : [keys.left, keys.right],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdSideways(this, keyCode);\n                            }\n                        ],\n                        [\n                            inverted ? [keys.left, keys.right] : [keys.up, keys.down],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdVertical(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function (keyCode, event) {\n                                const point = chart.highlightedPoint;\n                                if (point) {\n                                    const { plotLeft, plotTop } = this.chart, { plotX = 0, plotY = 0 } = point;\n                                    event = {\n                                        ...event,\n                                        chartX: plotLeft + plotX,\n                                        chartY: plotTop + plotY,\n                                        point: point,\n                                        target: point.graphic?.element || event.target\n                                    };\n                                    fireEvent(point.series, 'click', event);\n                                    point.firePointEvent('click', event);\n                                }\n                                return this.response.success;\n                            }\n                        ],\n                        [\n                            [keys.home],\n                            function () {\n                                highlightFirstValidPointInChart(chart);\n                                return this.response.success;\n                            }\n                        ],\n                        [\n                            [keys.end],\n                            function () {\n                                highlightLastValidPointInChart(chart);\n                                return this.response.success;\n                            }\n                        ],\n                        [\n                            [keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                chart.highlightAdjacentSeries(keyCode === keys.pageDown);\n                                return this.response.success;\n                            }\n                        ]\n                    ],\n                    init: function () {\n                        return keyboardNavigation.onHandlerInit(this);\n                    },\n                    validate: function () {\n                        return !!getFirstValidPointInChart(chart);\n                    },\n                    terminate: function () {\n                        return keyboardNavigation.onHandlerTerminate();\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            onKbdSideways(handler, keyCode) {\n                const keys = this.keyCodes, isNext = keyCode === keys.right || keyCode === keys.down;\n                return this.attemptHighlightAdjacentPoint(handler, isNext);\n            }\n            /**\n             * When keyboard navigation inits.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler The handler object\n             * @return {number}\n             * response\n             */\n            onHandlerInit(handler) {\n                const chart = this.chart, kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (kbdNavOptions.seriesNavigation.rememberPointFocus &&\n                    chart.highlightedPoint) {\n                    chart.highlightedPoint.highlight();\n                }\n                else {\n                    highlightFirstValidPointInChart(chart);\n                }\n                return handler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            onKbdVertical(handler, keyCode) {\n                const chart = this.chart, keys = this.keyCodes, isNext = keyCode === keys.down || keyCode === keys.right, navOptions = chart.options.accessibility.keyboardNavigation\n                    .seriesNavigation;\n                // Handle serialized mode, act like left/right\n                if (navOptions.mode && navOptions.mode === 'serialize') {\n                    return this.attemptHighlightAdjacentPoint(handler, isNext);\n                }\n                // Normal mode, move between series\n                const highlightMethod = (chart.highlightedPoint &&\n                    chart.highlightedPoint.series.keyboardMoveVertical) ?\n                    'highlightAdjacentPointVertical' :\n                    'highlightAdjacentSeries';\n                chart[highlightMethod](isNext);\n                return handler.response.success;\n            }\n            /**\n             * @private\n             */\n            onHandlerTerminate() {\n                const chart = this.chart, kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (chart.tooltip) {\n                    chart.tooltip.hide(0);\n                }\n                const hoverSeries = (chart.highlightedPoint && chart.highlightedPoint.series);\n                if (hoverSeries && hoverSeries.onMouseOut) {\n                    hoverSeries.onMouseOut();\n                }\n                if (chart.highlightedPoint && chart.highlightedPoint.onMouseOut) {\n                    chart.highlightedPoint.onMouseOut();\n                }\n                if (!kbdNavOptions.seriesNavigation.rememberPointFocus) {\n                    delete chart.highlightedPoint;\n                }\n            }\n            /**\n             * Function that attempts to highlight next/prev point. Handles wrap around.\n             * @private\n             */\n            attemptHighlightAdjacentPoint(handler, directionIsNext) {\n                const chart = this.chart, wrapAround = chart.options.accessibility.keyboardNavigation\n                    .wrapAround, highlightSuccessful = chart.highlightAdjacentPoint(directionIsNext);\n                if (!highlightSuccessful) {\n                    if (wrapAround && (directionIsNext ?\n                        highlightFirstValidPointInChart(chart) :\n                        highlightLastValidPointInChart(chart))) {\n                        return handler.response.success;\n                    }\n                    return handler.response[directionIsNext ? 'next' : 'prev'];\n                }\n                return handler.response.success;\n            }\n            /**\n             * @private\n             */\n            onSeriesDestroy(series) {\n                const chart = this.chart, currentHighlightedPointDestroyed = chart.highlightedPoint &&\n                    chart.highlightedPoint.series === series;\n                if (currentHighlightedPointDestroyed) {\n                    delete chart.highlightedPoint;\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            destroy() {\n                this.eventProvider.removeAddedEvents();\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (SeriesKeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Function to highlight next/previous point in chart.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightAdjacentPoint\n             *\n             * @param {boolean} next\n             * Flag for the direction.\n             *\n             * @return {Highcharts.Point|boolean}\n             * Returns highlighted point on success, false on failure (no adjacent point\n             * to highlight in chosen direction).\n             */\n            function chartHighlightAdjacentPoint(next) {\n                const chart = this, series = chart.series, curPoint = chart.highlightedPoint, curPointIndex = curPoint && getPointIndex(curPoint) || 0, curPoints = curPoint && curPoint.series.points || [], lastSeries = chart.series && chart.series[chart.series.length - 1], lastPoint = lastSeries &&\n                    lastSeries.points &&\n                    lastSeries.points[lastSeries.points.length - 1];\n                let newSeries, newPoint;\n                // If no points, return false\n                if (!series[0] || !series[0].points) {\n                    return false;\n                }\n                if (!curPoint) {\n                    // No point is highlighted yet. Try first/last point depending on\n                    // move direction\n                    newPoint = next ? series[0].points[0] : lastPoint;\n                }\n                else {\n                    // We have a highlighted point. Grab next/prev point & series.\n                    newSeries = series[curPoint.series.index + (next ? 1 : -1)];\n                    newPoint = curPoints[curPointIndex + (next ? 1 : -1)];\n                    if (!newPoint && newSeries) {\n                        // Done with this series, try next one\n                        newPoint = newSeries.points[next ? 0 : newSeries.points.length - 1];\n                    }\n                    // If there is no adjacent point, we return false\n                    if (!newPoint) {\n                        return false;\n                    }\n                }\n                // Recursively skip points\n                if (isSkipPoint(newPoint)) {\n                    // If we skip this whole series, move to the end of the series\n                    // before we recurse, just to optimize\n                    newSeries = newPoint.series;\n                    if (isSkipSeries(newSeries)) {\n                        chart.highlightedPoint = next ?\n                            newSeries.points[newSeries.points.length - 1] :\n                            newSeries.points[0];\n                    }\n                    else {\n                        // Otherwise, just move one point\n                        chart.highlightedPoint = newPoint;\n                    }\n                    // Retry\n                    return chart.highlightAdjacentPoint(next);\n                }\n                // There is an adjacent point, highlight it\n                return newPoint.highlight();\n            }\n            /**\n             * Highlight the closest point vertically.\n             * @private\n             */\n            function chartHighlightAdjacentPointVertical(down) {\n                const curPoint = this.highlightedPoint;\n                let minDistance = Infinity, bestPoint;\n                if (!defined(curPoint.plotX) || !defined(curPoint.plotY)) {\n                    return false;\n                }\n                this.series.forEach((series) => {\n                    if (isSkipSeries(series)) {\n                        return;\n                    }\n                    series.points.forEach((point) => {\n                        if (!defined(point.plotY) || !defined(point.plotX) ||\n                            point === curPoint) {\n                            return;\n                        }\n                        let yDistance = point.plotY - curPoint.plotY;\n                        const width = Math.abs(point.plotX - curPoint.plotX), distance = Math.abs(yDistance) * Math.abs(yDistance) +\n                            width * width * 4; // Weigh horizontal distance highly\n                        // Reverse distance number if axis is reversed\n                        if (series.yAxis && series.yAxis.reversed) {\n                            yDistance *= -1;\n                        }\n                        if (yDistance <= 0 && down || yDistance >= 0 && !down ||\n                            distance < 5 || // Points in same spot => infinite loop\n                            isSkipPoint(point)) {\n                            return;\n                        }\n                        if (distance < minDistance) {\n                            minDistance = distance;\n                            bestPoint = point;\n                        }\n                    });\n                });\n                return bestPoint ? bestPoint.highlight() : false;\n            }\n            /**\n             * Highlight next/previous series in chart. Returns false if no adjacent\n             * series in the direction, otherwise returns new highlighted point.\n             * @private\n             */\n            function chartHighlightAdjacentSeries(down) {\n                const chart = this, curPoint = chart.highlightedPoint, lastSeries = chart.series && chart.series[chart.series.length - 1], lastPoint = lastSeries && lastSeries.points &&\n                    lastSeries.points[lastSeries.points.length - 1];\n                let newSeries, newPoint, adjacentNewPoint;\n                // If no point is highlighted, highlight the first/last point\n                if (!chart.highlightedPoint) {\n                    newSeries = down ? (chart.series && chart.series[0]) : lastSeries;\n                    newPoint = down ?\n                        (newSeries && newSeries.points && newSeries.points[0]) :\n                        lastPoint;\n                    return newPoint ? newPoint.highlight() : false;\n                }\n                newSeries = (chart.series[curPoint.series.index + (down ? -1 : 1)]);\n                if (!newSeries) {\n                    return false;\n                }\n                // We have a new series in this direction, find the right point\n                // Weigh xDistance as counting much higher than Y distance\n                newPoint = getClosestPoint(curPoint, newSeries, 4);\n                if (!newPoint) {\n                    return false;\n                }\n                // New series and point exists, but we might want to skip it\n                if (isSkipSeries(newSeries)) {\n                    // Skip the series\n                    newPoint.highlight();\n                    // Try recurse\n                    adjacentNewPoint = chart.highlightAdjacentSeries(down);\n                    if (!adjacentNewPoint) {\n                        // Recurse failed\n                        curPoint.highlight();\n                        return false;\n                    }\n                    // Recurse succeeded\n                    return adjacentNewPoint;\n                }\n                // Highlight the new point or any first valid point back or forwards\n                // from it\n                newPoint.highlight();\n                return newPoint.series.highlightNextValidPoint();\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, PointClass, SeriesClass) {\n                const chartProto = ChartClass.prototype, pointProto = PointClass.prototype, seriesProto = SeriesClass.prototype;\n                if (!chartProto.highlightAdjacentPoint) {\n                    chartProto.highlightAdjacentPoint = chartHighlightAdjacentPoint;\n                    chartProto.highlightAdjacentPointVertical = (chartHighlightAdjacentPointVertical);\n                    chartProto.highlightAdjacentSeries = chartHighlightAdjacentSeries;\n                    pointProto.highlight = pointHighlight;\n                    /**\n                     * Set for which series types it makes sense to move to the closest\n                     * point with up/down arrows, and which series types should just\n                     * move to next series.\n                     * @private\n                     */\n                    seriesProto.keyboardMoveVertical = true;\n                    [\n                        'column',\n                        'gantt',\n                        'pie'\n                    ].forEach((type) => {\n                        if (seriesTypes[type]) {\n                            seriesTypes[type].prototype.keyboardMoveVertical = false;\n                        }\n                    });\n                    seriesProto.highlightNextValidPoint = (seriesHighlightNextValidPoint);\n                }\n            }\n            SeriesKeyboardNavigation.compose = compose;\n            /**\n             * Get the point in a series that is closest (in pixel distance) to a\n             * reference point. Optionally supply weight factors for x and y directions.\n             * @private\n             */\n            function getClosestPoint(point, series, xWeight, yWeight) {\n                let minDistance = Infinity, dPoint, minIx, distance, i = series.points.length;\n                const hasUndefinedPosition = (point) => (!(defined(point.plotX) && defined(point.plotY)));\n                if (hasUndefinedPosition(point)) {\n                    return;\n                }\n                while (i--) {\n                    dPoint = series.points[i];\n                    if (hasUndefinedPosition(dPoint)) {\n                        continue;\n                    }\n                    distance = (point.plotX - dPoint.plotX) *\n                        (point.plotX - dPoint.plotX) *\n                        (xWeight || 1) +\n                        (point.plotY - dPoint.plotY) *\n                            (point.plotY - dPoint.plotY) *\n                            (yWeight || 1);\n                    if (distance < minDistance) {\n                        minDistance = distance;\n                        minIx = i;\n                    }\n                }\n                return defined(minIx) ? series.points[minIx] : void 0;\n            }\n            /**\n             * Highlights a point (show tooltip, display hover state, focus element).\n             *\n             * @private\n             * @function Highcharts.Point#highlight\n             *\n             * @return {Highcharts.Point}\n             *         This highlighted point.\n             */\n            function pointHighlight(highlightVisually = true) {\n                const chart = this.series.chart, tooltipElement = chart.tooltip?.label?.element;\n                if (!this.isNull && highlightVisually) {\n                    this.onMouseOver(); // Show the hover marker and tooltip\n                }\n                else {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    // Do not call blur on the element, as it messes up the focus of the\n                    // div element of the chart\n                }\n                scrollAxisToPoint(this);\n                // We focus only after calling onMouseOver because the state change can\n                // change z-index and mess up the element.\n                if (this.graphic) {\n                    chart.setFocusToElement(this.graphic);\n                    if (!highlightVisually && chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n                chart.highlightedPoint = this;\n                // Get position of the tooltip.\n                const tooltipTop = tooltipElement?.getBoundingClientRect().top;\n                if (tooltipElement && tooltipTop && tooltipTop < 0) {\n                    // Calculate scroll position.\n                    const scrollTop = window.scrollY, newScrollTop = scrollTop + tooltipTop;\n                    // Scroll window to new position.\n                    window.scrollTo({\n                        behavior: 'smooth',\n                        top: newScrollTop\n                    });\n                }\n                return this;\n            }\n            /**\n             * Highlight first valid point in a series. Returns the point if\n             * successfully highlighted, otherwise false. If there is a highlighted\n             * point in the series, use that as starting point.\n             *\n             * @private\n             * @function Highcharts.Series#highlightNextValidPoint\n             */\n            function seriesHighlightNextValidPoint() {\n                const curPoint = this.chart.highlightedPoint, start = (curPoint && curPoint.series) === this ?\n                    getPointIndex(curPoint) :\n                    0, points = this.points, len = points.length;\n                if (points && len) {\n                    for (let i = start; i < len; ++i) {\n                        if (!isSkipPoint(points[i])) {\n                            return points[i].highlight();\n                        }\n                    }\n                    for (let j = start; j >= 0; --j) {\n                        if (!isSkipPoint(points[j])) {\n                            return points[j].highlight();\n                        }\n                    }\n                }\n                return false;\n            }\n        })(SeriesKeyboardNavigation || (SeriesKeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesKeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Components/SeriesComponent/ForcedMarkers.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js'], _modules['Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js']], function (AccessibilityComponent, ChartUtilities, ForcedMarkers, NewDataAnnouncer, SeriesDescriber, SeriesKeyboardNavigation) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for series and points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { hideSeriesFromAT } = ChartUtilities;\n        const { describeSeries } = SeriesDescriber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SeriesComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.SeriesComponent\n         */\n        class SeriesComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            static compose(ChartClass, PointClass, SeriesClass) {\n                NewDataAnnouncer.compose(SeriesClass);\n                ForcedMarkers.compose(SeriesClass);\n                SeriesKeyboardNavigation.compose(ChartClass, PointClass, SeriesClass);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component.\n             */\n            init() {\n                this.newDataAnnouncer = new NewDataAnnouncer(this.chart);\n                this.newDataAnnouncer.init();\n                this.keyboardNavigation = new SeriesKeyboardNavigation(this.chart, this.keyCodes);\n                this.keyboardNavigation.init();\n                this.hideTooltipFromATWhenShown();\n                this.hideSeriesLabelsFromATWhenShown();\n            }\n            /**\n             * @private\n             */\n            hideTooltipFromATWhenShown() {\n                const component = this;\n                if (this.chart.tooltip) {\n                    this.addEvent(this.chart.tooltip.constructor, 'refresh', function () {\n                        if (this.chart === component.chart &&\n                            this.label &&\n                            this.label.element) {\n                            this.label.element.setAttribute('aria-hidden', true);\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            hideSeriesLabelsFromATWhenShown() {\n                this.addEvent(this.chart, 'afterDrawSeriesLabels', function () {\n                    this.series.forEach(function (series) {\n                        if (series.labelBySeries) {\n                            series.labelBySeries.attr('aria-hidden', true);\n                        }\n                    });\n                });\n            }\n            /**\n             * Called on chart render. It is necessary to do this for render in case\n             * markers change on zoom/pixel density.\n             */\n            onChartRender() {\n                const chart = this.chart;\n                chart.series.forEach(function (series) {\n                    const shouldDescribeSeries = (series.options.accessibility &&\n                        series.options.accessibility.enabled) !== false &&\n                        series.visible && series.getPointsCollection().length !== 0;\n                    if (shouldDescribeSeries) {\n                        describeSeries(series);\n                    }\n                    else {\n                        hideSeriesFromAT(series);\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                return this.keyboardNavigation.getKeyboardNavigationHandler();\n            }\n            /**\n             * Remove traces\n             * @private\n             */\n            destroy() {\n                this.newDataAnnouncer.destroy();\n                this.keyboardNavigation.destroy();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ZoomComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Core/Utilities.js']], function (AccessibilityComponent, CU, HU, KeyboardNavigationHandler, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart zoom.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT } = CU;\n        const { getFakeMouseEvent } = HU;\n        const { attr, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartHasMapZoom(chart) {\n            return !!((chart.mapView) &&\n                chart.mapNavigation &&\n                chart.mapNavigation.navButtons.length);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ZoomComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ZoomComponent\n         */\n        class ZoomComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.focusedMapNavButtonIx = -1;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the component\n             */\n            init() {\n                const component = this, chart = this.chart;\n                this.proxyProvider.addGroup('zoom', 'div');\n                [\n                    'afterShowResetZoom', 'afterApplyDrilldown', 'drillupall'\n                ].forEach((eventType) => {\n                    component.addEvent(chart, eventType, function () {\n                        component.updateProxyOverlays();\n                    });\n                });\n            }\n            /**\n             * Called when chart is updated\n             */\n            onChartUpdate() {\n                const chart = this.chart, component = this;\n                // Make map zoom buttons accessible\n                if (chart.mapNavigation) {\n                    chart.mapNavigation.navButtons.forEach((button, i) => {\n                        unhideChartElementFromAT(chart, button.element);\n                        component.setMapNavButtonAttrs(button.element, 'accessibility.zoom.mapZoom' + (i ? 'Out' : 'In'));\n                    });\n                }\n            }\n            /**\n             * @private\n             * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} button\n             * @param {string} labelFormatKey\n             */\n            setMapNavButtonAttrs(button, labelFormatKey) {\n                const chart = this.chart, label = chart.langFormat(labelFormatKey, { chart: chart });\n                attr(button, {\n                    tabindex: -1,\n                    role: 'button',\n                    'aria-label': label\n                });\n            }\n            /**\n             * Update the proxy overlays on every new render to ensure positions are\n             * correct.\n             */\n            onChartRender() {\n                this.updateProxyOverlays();\n            }\n            /**\n             * Update proxy overlays, recreating the buttons.\n             */\n            updateProxyOverlays() {\n                const chart = this.chart;\n                // Always start with a clean slate\n                this.proxyProvider.clearGroup('zoom');\n                if (chart.resetZoomButton) {\n                    this.createZoomProxyButton(chart.resetZoomButton, 'resetZoomProxyButton', chart.langFormat('accessibility.zoom.resetZoomButton', { chart: chart }));\n                }\n                if (chart.drillUpButton &&\n                    chart.breadcrumbs &&\n                    chart.breadcrumbs.list) {\n                    const lastBreadcrumb = chart.breadcrumbs.list[chart.breadcrumbs.list.length - 1];\n                    this.createZoomProxyButton(chart.drillUpButton, 'drillUpProxyButton', chart.langFormat('accessibility.drillUpButton', {\n                        chart: chart,\n                        buttonText: chart.breadcrumbs.getButtonText(lastBreadcrumb)\n                    }));\n                }\n            }\n            /**\n             * @private\n             * @param {Highcharts.SVGElement} buttonEl\n             * @param {string} buttonProp\n             * @param {string} label\n             */\n            createZoomProxyButton(buttonEl, buttonProp, label) {\n                this[buttonProp] = this.proxyProvider.addProxyElement('zoom', {\n                    click: buttonEl\n                }, 'button', {\n                    'aria-label': label,\n                    tabindex: -1\n                });\n            }\n            /**\n             * Get keyboard navigation handler for map zoom.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            getMapZoomNavigation() {\n                const keys = this.keyCodes, chart = this.chart, component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode) {\n                                return component.onMapKbdArrow(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.tab],\n                            function (_keyCode, e) {\n                                return component.onMapKbdTab(this, e);\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                return component.onMapKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return chartHasMapZoom(chart);\n                    },\n                    init: function (direction) {\n                        return component.onMapNavInit(direction);\n                    }\n                });\n            }\n            /**\n             * Arrow key panning for maps.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context.\n             * @param {number} keyCode Key pressed.\n             * @return {number} Response code\n             */\n            onMapKbdArrow(keyboardNavigationHandler, keyCode) {\n                const chart = this.chart, keys = this.keyCodes, target = chart.container, isY = keyCode === keys.up || keyCode === keys.down, stepDirection = (keyCode === keys.left || keyCode === keys.up) ?\n                    1 : -1, granularity = 10, diff = (isY ? chart.plotHeight : chart.plotWidth) /\n                    granularity * stepDirection, \n                // Randomize since same mousedown coords twice is ignored in MapView\n                r = Math.random() * 10, startPos = {\n                    x: target.offsetLeft + chart.plotLeft + chart.plotWidth / 2 + r,\n                    y: target.offsetTop + chart.plotTop + chart.plotHeight / 2 + r\n                }, endPos = isY ? { x: startPos.x, y: startPos.y + diff } :\n                    { x: startPos.x + diff, y: startPos.y };\n                [\n                    getFakeMouseEvent('mousedown', startPos),\n                    getFakeMouseEvent('mousemove', endPos),\n                    getFakeMouseEvent('mouseup', endPos)\n                ].forEach((e) => target.dispatchEvent(e));\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @param {global.KeyboardEvent} event\n             * @return {number} Response code\n             */\n            onMapKbdTab(keyboardNavigationHandler, event) {\n                const chart = this.chart;\n                const response = keyboardNavigationHandler.response;\n                const isBackwards = event.shiftKey;\n                const isMoveOutOfRange = isBackwards && !this.focusedMapNavButtonIx ||\n                    !isBackwards && this.focusedMapNavButtonIx;\n                // Deselect old\n                chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].setState(0);\n                if (isMoveOutOfRange) {\n                    if (chart.mapView) {\n                        chart.mapView.zoomBy(); // Reset zoom\n                    }\n                    return response[isBackwards ? 'prev' : 'next'];\n                }\n                // Select other button\n                this.focusedMapNavButtonIx += isBackwards ? -1 : 1;\n                const button = chart.mapNavigation.navButtons[this.focusedMapNavButtonIx];\n                chart.setFocusToElement(button.box, button.element);\n                button.setState(2);\n                return response.success;\n            }\n            /**\n             * Called on map button click.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context object\n             * @return {number} Response code\n             */\n            onMapKbdClick(keyboardNavigationHandler) {\n                const el = this.chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].element;\n                this.fakeClickEvent(el);\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {number} direction\n             */\n            onMapNavInit(direction) {\n                const chart = this.chart, zoomIn = chart.mapNavigation.navButtons[0], zoomOut = chart.mapNavigation.navButtons[1], initialButton = direction > 0 ? zoomIn : zoomOut;\n                chart.setFocusToElement(initialButton.box, initialButton.element);\n                initialButton.setState(2);\n                this.focusedMapNavButtonIx = direction > 0 ? 0 : 1;\n            }\n            /**\n             * Get keyboard navigation handler for a simple chart button. Provide the\n             * button reference for the chart, and a function to call on click.\n             *\n             * @private\n             * @param {string} buttonProp The property on chart referencing the button.\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            simpleButtonNavigation(buttonProp, proxyProp, onClick) {\n                const keys = this.keyCodes, component = this, chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.tab, keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode, e) {\n                                const isBackwards = (keyCode === keys.tab && e.shiftKey ||\n                                    keyCode === keys.left ||\n                                    keyCode === keys.up);\n                                // Arrow/tab => just move\n                                return this.response[isBackwards ? 'prev' : 'next'];\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                const res = onClick(this, chart);\n                                return pick(res, this.response.success);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        const hasButton = (chart[buttonProp] &&\n                            chart[buttonProp].box &&\n                            component[proxyProp].innerElement);\n                        return hasButton;\n                    },\n                    init: function () {\n                        chart.setFocusToElement(chart[buttonProp].box, component[proxyProp].innerElement);\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.simpleButtonNavigation('resetZoomButton', 'resetZoomProxyButton', function (_handler, chart) {\n                        chart.zoomOut();\n                    }),\n                    this.simpleButtonNavigation('drillUpButton', 'drillUpProxyButton', function (handler, chart) {\n                        chart.drillUp();\n                        return handler.response.prev;\n                    }),\n                    this.getMapZoomNavigation()\n                ];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZoomComponent;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastMode.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handling for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, isMS, win } = H;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Detect WHCM in the browser.\n         *\n         * @function Highcharts#isHighContrastModeActive\n         * @private\n         * @return {boolean} Returns true if the browser is in High Contrast mode.\n         */\n        function isHighContrastModeActive() {\n            // Use media query on Edge, but not on IE\n            const isEdge = /(Edg)/.test(win.navigator.userAgent);\n            if (win.matchMedia && isEdge) {\n                return win.matchMedia('(-ms-high-contrast: active)').matches;\n            }\n            // Test BG image for IE\n            if (isMS && win.getComputedStyle) {\n                const testDiv = doc.createElement('div');\n                const imageSrc = 'data:image/gif;base64,' +\n                    'R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==';\n                testDiv.style.backgroundImage = `url(${imageSrc})`; // #13071\n                doc.body.appendChild(testDiv);\n                const bi = (testDiv.currentStyle ||\n                    win.getComputedStyle(testDiv)).backgroundImage;\n                doc.body.removeChild(testDiv);\n                return bi === 'none';\n            }\n            // Other browsers use the forced-colors standard\n            return win.matchMedia && win.matchMedia('(forced-colors: active)').matches;\n        }\n        /**\n         * Force high contrast theme for the chart. The default theme is defined in\n         * a separate file.\n         *\n         * @function Highcharts#setHighContrastTheme\n         * @private\n         * @param {Highcharts.AccessibilityChart} chart The chart to set the theme of.\n         * @return {void}\n         */\n        function setHighContrastTheme(chart) {\n            // We might want to add additional functionality here in the future for\n            // storing the old state so that we can reset the theme if HC mode is\n            // disabled. For now, the user will have to reload the page.\n            chart.highContrastModeActive = true;\n            // Apply theme to chart\n            const theme = (chart.options.accessibility.highContrastTheme);\n            chart.update(theme, false);\n            const hasCustomColors = theme.colors?.length > 1;\n            // Force series colors (plotOptions is not enough)\n            chart.series.forEach(function (s) {\n                const plotOpts = theme.plotOptions[s.type] || {};\n                const fillColor = hasCustomColors && s.colorIndex !== void 0 ?\n                    theme.colors[s.colorIndex] :\n                    plotOpts.color || 'window';\n                const seriesOptions = {\n                    color: plotOpts.color || 'windowText',\n                    colors: hasCustomColors ?\n                        theme.colors : [plotOpts.color || 'windowText'],\n                    borderColor: plotOpts.borderColor || 'window',\n                    fillColor\n                };\n                s.update(seriesOptions, false);\n                if (s.points) {\n                    // Force point colors if existing\n                    s.points.forEach(function (p) {\n                        if (p.options && p.options.color) {\n                            p.update({\n                                color: plotOpts.color || 'windowText',\n                                borderColor: plotOpts.borderColor || 'window'\n                            }, false);\n                        }\n                    });\n                }\n            });\n            // The redraw for each series and after is required for 3D pie\n            // (workaround)\n            chart.redraw();\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const whcm = {\n            isHighContrastModeActive,\n            setHighContrastTheme\n        };\n\n        return whcm;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastTheme.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default theme for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const theme = {\n            chart: {\n                backgroundColor: 'window'\n            },\n            title: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            subtitle: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            colorAxis: {\n                minColor: 'windowText',\n                maxColor: 'windowText',\n                stops: [],\n                dataClasses: []\n            },\n            colors: ['windowText'],\n            xAxis: {\n                gridLineColor: 'windowText',\n                labels: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                lineColor: 'windowText',\n                minorGridLineColor: 'windowText',\n                tickColor: 'windowText',\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            yAxis: {\n                gridLineColor: 'windowText',\n                labels: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                lineColor: 'windowText',\n                minorGridLineColor: 'windowText',\n                tickColor: 'windowText',\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            tooltip: {\n                backgroundColor: 'window',\n                borderColor: 'windowText',\n                style: {\n                    color: 'windowText'\n                }\n            },\n            plotOptions: {\n                series: {\n                    lineColor: 'windowText',\n                    fillColor: 'window',\n                    borderColor: 'windowText',\n                    edgeColor: 'windowText',\n                    borderWidth: 1,\n                    dataLabels: {\n                        connectorColor: 'windowText',\n                        color: 'windowText',\n                        style: {\n                            color: 'windowText',\n                            textOutline: 'none'\n                        }\n                    },\n                    marker: {\n                        lineColor: 'windowText',\n                        fillColor: 'windowText'\n                    }\n                },\n                pie: {\n                    color: 'window',\n                    colors: ['window'],\n                    borderColor: 'windowText',\n                    borderWidth: 1\n                },\n                boxplot: {\n                    fillColor: 'window'\n                },\n                candlestick: {\n                    lineColor: 'windowText',\n                    fillColor: 'window'\n                },\n                errorbar: {\n                    fillColor: 'window'\n                }\n            },\n            legend: {\n                backgroundColor: 'window',\n                itemStyle: {\n                    color: 'windowText'\n                },\n                itemHoverStyle: {\n                    color: 'windowText'\n                },\n                itemHiddenStyle: {\n                    color: '#555'\n                },\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            credits: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            drilldown: {\n                activeAxisLabelStyle: {\n                    color: 'windowText'\n                },\n                activeDataLabelStyle: {\n                    color: 'windowText'\n                }\n            },\n            navigation: {\n                buttonOptions: {\n                    symbolStroke: 'windowText',\n                    theme: {\n                        fill: 'window'\n                    }\n                }\n            },\n            rangeSelector: {\n                buttonTheme: {\n                    fill: 'window',\n                    stroke: 'windowText',\n                    style: {\n                        color: 'windowText'\n                    },\n                    states: {\n                        hover: {\n                            fill: 'window',\n                            stroke: 'windowText',\n                            style: {\n                                color: 'windowText'\n                            }\n                        },\n                        select: {\n                            fill: '#444',\n                            stroke: 'windowText',\n                            style: {\n                                color: 'windowText'\n                            }\n                        }\n                    }\n                },\n                inputBoxBorderColor: 'windowText',\n                inputStyle: {\n                    backgroundColor: 'window',\n                    color: 'windowText'\n                },\n                labelStyle: {\n                    color: 'windowText'\n                }\n            },\n            navigator: {\n                handles: {\n                    backgroundColor: 'window',\n                    borderColor: 'windowText'\n                },\n                outlineColor: 'windowText',\n                maskFill: 'transparent',\n                series: {\n                    color: 'windowText',\n                    lineColor: 'windowText'\n                },\n                xAxis: {\n                    gridLineColor: 'windowText'\n                }\n            },\n            scrollbar: {\n                barBackgroundColor: '#444',\n                barBorderColor: 'windowText',\n                buttonArrowColor: 'windowText',\n                buttonBackgroundColor: 'window',\n                buttonBorderColor: 'windowText',\n                rifleColor: 'windowText',\n                trackBackgroundColor: 'window',\n                trackBorderColor: 'windowText'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return theme;\n    });\n    _registerModule(_modules, 'Accessibility/Options/A11yDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Formatter callback for the accessibility announcement.\n         *\n         * @callback Highcharts.AccessibilityAnnouncementFormatter\n         *\n         * @param {Array<Highcharts.Series>} updatedSeries\n         * Array of all series that received updates. If an announcement is already\n         * queued, the series that received updates for that announcement are also\n         * included in this array.\n         *\n         * @param {Highcharts.Series} [addedSeries]\n         * This is provided if {@link Highcharts.Chart#addSeries} was called, and there\n         * is a new series. In that case, this argument is a reference to the new\n         * series.\n         *\n         * @param {Highcharts.Point} [addedPoint]\n         * This is provided if {@link Highcharts.Series#addPoint} was called, and there\n         * is a new point. In that case, this argument is a reference to the new point.\n         *\n         * @return {false|string}\n         * The function should return a string with the text to announce to the user.\n         * Return empty string to not announce anything. Return `false` to use the\n         * default announcement format.\n         */\n        /**\n         * @interface Highcharts.PointAccessibilityOptionsObject\n         */ /**\n        * Provide a description of the data point, announced to screen readers.\n        * @name Highcharts.PointAccessibilityOptionsObject#description\n        * @type {string|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */ /**\n        * Enable or disable exposing the point to assistive technology\n        * @name Highcharts.PointAccessibilityOptionsObject#enabled\n        * @type {boolean|undefined}\n        * @requires modules/accessibility\n        * @since 9.0.1\n        */\n        /* *\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * @name Highcharts.PointOptionsObject#accessibility\n        * @type {Highcharts.PointAccessibilityOptionsObject|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */\n        /**\n         * @callback Highcharts.ScreenReaderClickCallbackFunction\n         *\n         * @param {global.MouseEvent} evt\n         *        Mouse click event\n         *\n         * @return {void}\n         */\n        /**\n         * Creates a formatted string for the screen reader module.\n         *\n         * @callback Highcharts.ScreenReaderFormatterCallbackFunction<T>\n         *\n         * @param {T} context\n         *        Context to format\n         *\n         * @return {string}\n         *         Formatted string for the screen reader module.\n         */\n        const Options = {\n            /**\n             * Options for configuring accessibility for the chart. Requires the\n             * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n             * to be loaded. For a description of the module and information\n             * on its features, see\n             * [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n             *\n             * @since        5.0.0\n             * @requires     modules/accessibility\n             * @optionparent accessibility\n             */\n            accessibility: {\n                /**\n                 * Enable accessibility functionality for the chart. For more\n                 * information on how to include these features, and why this is\n                 * recommended, see [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n                 *\n                 * Highcharts will by default emit a warning to the console if\n                 * the [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n                 * is not loaded. Setting this option to `false` will override\n                 * and silence the warning.\n                 *\n                 * Once the module is loaded, setting this option to `false`\n                 * will disable the module for this chart.\n                 *\n                 * @since 5.0.0\n                 */\n                enabled: true,\n                /**\n                 * Accessibility options for the screen reader information sections\n                 * added before and after the chart.\n                 *\n                 * @since 8.0.0\n                 */\n                screenReaderSection: {\n                    /**\n                     * Function to run upon clicking the \"View as Data Table\" link in\n                     * the screen reader region.\n                     *\n                     * By default Highcharts will insert and set focus to a data table\n                     * representation of the chart.\n                     *\n                     * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.onViewDataTableClick\n                     */\n                    /**\n                     * Function to run upon clicking the \"Play as sound\" button in\n                     * the screen reader region.\n                     *\n                     * By default Highcharts will call the `chart.sonify` function.\n                     *\n                     * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                     * @since 8.0.1\n                     * @apioption accessibility.screenReaderSection.onPlayAsSoundClick\n                     */\n                    /**\n                     * A formatter function to create the HTML contents of the hidden\n                     * screen reader information region before the chart. Receives one\n                     * argument, `chart`, referring to the chart object. Should return a\n                     * string with the HTML content of the region. By default this\n                     * returns an automatic description of the chart based on\n                     * [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.beforeChartFormatter\n                     */\n                    /**\n                     * Format for the screen reader information region before the chart.\n                     * Supported HTML tags are `<h1-6>`, `<p>`, `<div>`, `<a>`, `<ul>`,\n                     * `<ol>`, `<li>`, and `<button>`. Attributes are not supported,\n                     * except for id on `<div>`, `<a>`, and `<button>`. Id is required\n                     * on `<a>` and `<button>` in the format `<tag id=\"abcd\">`. Numbers,\n                     * lower- and uppercase letters, \"-\" and \"#\" are valid characters in\n                     * IDs.\n                     *\n                     * The headingTagName is an auto-detected heading (h1-h6) that\n                     * corresponds to the heading level below the previous heading in\n                     * the DOM.\n                     *\n                     * Set to empty string to remove the region altogether.\n                     *\n                     * @since 8.0.0\n                     */\n                    beforeChartFormat: '<{headingTagName}>{chartTitle}</{headingTagName}>' +\n                        '<div>{typeDescription}</div>' +\n                        '<div>{chartSubtitle}</div>' +\n                        '<div>{chartLongdesc}</div>' +\n                        '<div>{playAsSoundButton}</div>' +\n                        '<div>{viewTableButton}</div>' +\n                        '<div>{xAxisDescription}</div>' +\n                        '<div>{yAxisDescription}</div>' +\n                        '<div>{annotationsTitle}{annotationsList}</div>',\n                    /**\n                     * A formatter function to create the HTML contents of the hidden\n                     * screen reader information region after the chart. Analogous to\n                     * [beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.afterChartFormatter\n                     */\n                    /**\n                     * Format for the screen reader information region after the chart.\n                     * Analogous to [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                     *\n                     * @since 8.0.0\n                     */\n                    afterChartFormat: '{endOfChartMarker}',\n                    /**\n                     * Date format to use to describe range of datetime axes.\n                     *\n                     * For an overview of the replacement codes, see\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [point.dateFormat](#accessibility.point.dateFormat)\n                     *\n                     * @since 8.0.0\n                     */\n                    axisRangeDateFormat: '%Y-%m-%d %H:%M:%S'\n                },\n                /**\n                 * Accessibility options global to all data series. Individual series\n                 * can also have specific [accessibility options](#plotOptions.series.accessibility)\n                 * set.\n                 *\n                 * @since 8.0.0\n                 */\n                series: {\n                    /**\n                     * Formatter function to use instead of the default for series\n                     * descriptions. Receives one argument, `series`, referring to the\n                     * series to describe. Should return a string with the description\n                     * of the series for a screen reader user. If `false` is returned,\n                     * the default formatter will be used for that series.\n                     *\n                     * @see [series.descriptionFormat](#accessibility.series.descriptionFormat)\n                     * @see [series.description](#plotOptions.series.description)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Series>}\n                     * @since 8.0.0\n                     * @apioption accessibility.series.descriptionFormatter\n                     */\n                    /**\n                     * Format to use for describing the data series group to assistive\n                     * technology - including screen readers.\n                     *\n                     * The series context and its subproperties are available under the\n                     * variable `{series}`, for example `{series.name}` for the series\n                     * name, and `{series.points.length}` for the number of data points.\n                     *\n                     * The chart context and its subproperties are available under the\n                     * variable `{chart}`, for example `{chart.series.length}` for the\n                     * number of series in the chart.\n                     *\n                     * `{seriesDescription}` refers to the automatic description of the\n                     * series type and number of points added by Highcharts by default.\n                     * `{authorDescription}` refers to the description added in\n                     * [series.description](#plotOptions.series.description) if one is\n                     * present. `{axisDescription}` refers to the description added if\n                     * the chart has multiple X or Y axes.\n                     *\n                     * Note that if [series.descriptionFormatter](#accessibility.series.descriptionFormatter)\n                     * is declared it will take precedence, and this option will be\n                     * overridden.\n                     *\n                     * @sample highcharts/accessibility/advanced-accessible\n                     *  Accessible low-medium-high chart\n                     *\n                     * @type      {string}\n                     * @since 10.1.0\n                     */\n                    descriptionFormat: '{seriesDescription}{authorDescription}{axisDescription}',\n                    /**\n                     * Whether or not to add series descriptions to charts with a single\n                     * series.\n                     *\n                     * @since 8.0.0\n                     */\n                    describeSingleSeries: false,\n                    /**\n                     * When a series contains more points than this, we no longer expose\n                     * information about individual points to screen readers.\n                     *\n                     * Set to `false` to disable.\n                     *\n                     * @type  {boolean|number}\n                     * @since 8.0.0\n                     */\n                    pointDescriptionEnabledThreshold: 200\n                },\n                /**\n                 * Options for descriptions of individual data points.\n                 *\n                 * @since 8.0.0\n                 */\n                point: {\n                    /**\n                     * Date format to use for points on datetime axes when describing\n                     * them to screen reader users.\n                     *\n                     * Defaults to the same format as in tooltip.\n                     *\n                     * For an overview of the replacement codes, see\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [dateFormatter](#accessibility.point.dateFormatter)\n                     *\n                     * @type      {string}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.dateFormat\n                     */\n                    /**\n                     * Formatter function to determine the date/time format used with\n                     * points on datetime axes when describing them to screen reader\n                     * users. Receives one argument, `point`, referring to the point\n                     * to describe. Should return a date format string compatible with\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [dateFormat](#accessibility.point.dateFormat)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.dateFormatter\n                     */\n                    /**\n                     * Prefix to add to the values in the point descriptions. Uses\n                     * [tooltip.valuePrefix](#tooltip.valuePrefix) if not defined.\n                     *\n                     * @type        {string}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valuePrefix\n                     */\n                    /**\n                     * Suffix to add to the values in the point descriptions. Uses\n                     * [tooltip.valueSuffix](#tooltip.valueSuffix) if not defined.\n                     *\n                     * @type        {string}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valueSuffix\n                     */\n                    /**\n                     * Decimals to use for the values in the point descriptions. Uses\n                     * [tooltip.valueDecimals](#tooltip.valueDecimals) if not defined.\n                     *\n                     * @type        {number}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valueDecimals\n                     */\n                    /**\n                     * A [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n                     * to use instead of the default for point descriptions.\n                     *\n                     * The context of the format string is the point instance.\n                     *\n                     * As opposed to [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat),\n                     * this option replaces the whole description.\n                     *\n                     * @type      {string}\n                     * @since 11.1.0\n                     * @sample highcharts/demo/advanced-accessible\n                     *      Description format\n                     * @apioption accessibility.point.descriptionFormat\n                     */\n                    /**\n                     * Formatter function to use instead of the default for point\n                     * descriptions.\n                     *\n                     * Receives one argument, `point`, referring to the point to\n                     * describe. Should return a string with the description of the\n                     * point for a screen reader user. If `false` is returned, the\n                     * default formatter will be used for that point.\n                     *\n                     * Note: Prefer using [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                     * instead if possible, as default functionality such as describing\n                     * annotations will be preserved.\n                     *\n                     * @see [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                     * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.descriptionFormatter\n                     */\n                    /**\n                     * Format to use for describing the values of data points\n                     * to assistive technology - including screen readers.\n                     * The point context is available as `{point}`.\n                     *\n                     * Other available context variables include `{index}`, `{value}`, and `{xDescription}`.\n                     *\n                     * Additionally, the series name, annotation info, and\n                     * description added in `point.accessibility.description`\n                     * is added by default if relevant. To override this, use the\n                     * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                     * option.\n                     *\n                     * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                     * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                     *\n                     * @type      {string}\n                     * @since 8.0.1\n                     */\n                    valueDescriptionFormat: '{xDescription}{separator}{value}.',\n                    /**\n                     * Whether or not to describe points with the value `null` to\n                     * assistive technology, such as screen readers.\n                     *\n                     * @sample {highmaps} maps/demo/all-areas-as-null\n                     *         Accessible map with null points\n                     *\n                     * @type      {boolean}\n                     * @since 10.1.0\n                     */\n                    describeNull: true\n                },\n                /**\n                 * Amount of landmarks/regions to create for screen reader users. More\n                 * landmarks can make navigation with screen readers easier, but can\n                 * be distracting if there are lots of charts on the page. Three modes\n                 * are available:\n                 *  - `all`: Adds regions for all series, legend, information\n                 *      region.\n                 *  - `one`: Adds a single landmark per chart.\n                 *  - `disabled`: No landmarks are added.\n                 *\n                 * @since 7.1.0\n                 * @validvalue [\"all\", \"one\", \"disabled\"]\n                 */\n                landmarkVerbosity: 'all',\n                /**\n                 * Link the chart to an HTML element describing the contents of the\n                 * chart.\n                 *\n                 * It is always recommended to describe charts using visible text, to\n                 * improve SEO as well as accessibility for users with disabilities.\n                 * This option lets an HTML element with a description be linked to the\n                 * chart, so that screen reader users can connect the two.\n                 *\n                 * By setting this option to a string, Highcharts runs the string as an\n                 * HTML selector query on the entire document. If there is only a single\n                 * match, this element is linked to the chart. The content of the linked\n                 * element will be included in the chart description for screen reader\n                 * users.\n                 *\n                 * By default, the chart looks for an adjacent sibling element with the\n                 * `highcharts-description` class.\n                 *\n                 * The feature can be disabled by setting the option to an empty string,\n                 * or overridden by providing the\n                 * [accessibility.description](#accessibility.description) option.\n                 * Alternatively, the HTML element to link can be passed in directly as\n                 * an HTML node.\n                 *\n                 * If you need the description to be part of the exported image,\n                 * consider using the [caption](#caption) feature.\n                 *\n                 * If you need the description to be hidden visually, use the\n                 * [accessibility.description](#accessibility.description) option.\n                 *\n                 * @see [caption](#caption)\n                 * @see [description](#accessibility.description)\n                 * @see [typeDescription](#accessibility.typeDescription)\n                 *\n                 * @sample highcharts/accessibility/accessible-line\n                 *         Accessible line chart\n                 *\n                 * @type  {string|Highcharts.HTMLDOMElement}\n                 * @since 8.0.0\n                 */\n                linkedDescription: '*[data-highcharts-chart=\"{index}\"] + .highcharts-description', // eslint-disable-line\n                /**\n                 * A hook for adding custom components to the accessibility module.\n                 * Should be an object mapping component names to instances of classes\n                 * inheriting from the Highcharts.AccessibilityComponent base class.\n                 * Remember to add the component to the\n                 * [keyboardNavigation.order](#accessibility.keyboardNavigation.order)\n                 * for the keyboard navigation to be usable.\n                 *\n                 * @sample highcharts/accessibility/custom-component\n                 *         Custom accessibility component\n                 *\n                 * @type      {*}\n                 * @since     7.1.0\n                 * @apioption accessibility.customComponents\n                 */\n                /**\n                 * Theme to apply to the chart when Windows High Contrast Mode is\n                 * detected. By default, a high contrast theme matching the high\n                 * contrast system colors is used.\n                 *\n                 * @type      {*}\n                 * @since     7.1.3\n                 * @apioption accessibility.highContrastTheme\n                 */\n                /**\n                 * Controls how [highContrastTheme](#accessibility.highContrastTheme)\n                 * is applied.\n                 *\n                 * The default option is `auto`, which applies the high contrast theme\n                 * the user's system has a high contrast theme active.\n                 *\n                 * @since 11.4.0\n                 */\n                highContrastMode: 'auto',\n                /**\n                 * A text description of the chart.\n                 *\n                 * **Note: Prefer using [linkedDescription](#accessibility.linkedDescription)\n                 * or [caption](#caption.text) instead.**\n                 *\n                 * If the Accessibility module is loaded, this option is included by\n                 * default as a long description of the chart in the hidden screen\n                 * reader information region.\n                 *\n                 * Note: Since Highcharts now supports captions and linked descriptions,\n                 * it is preferred to define the description using those methods, as a\n                 * visible caption/description benefits all users. If the\n                 * `accessibility.description` option is defined, the linked description\n                 * is ignored, and the caption is hidden from screen reader users.\n                 *\n                 * @see [linkedDescription](#accessibility.linkedDescription)\n                 * @see [caption](#caption)\n                 * @see [typeDescription](#accessibility.typeDescription)\n                 *\n                 * @type      {string}\n                 * @since     5.0.0\n                 * @apioption accessibility.description\n                 */\n                /**\n                 * A text description of the chart type.\n                 *\n                 * If the Accessibility module is loaded, this will be included in the\n                 * description of the chart in the screen reader information region.\n                 *\n                 * Highcharts will by default attempt to guess the chart type, but for\n                 * more complex charts it is recommended to specify this property for\n                 * clarity.\n                 *\n                 * @type      {string}\n                 * @since     5.0.0\n                 * @apioption accessibility.typeDescription\n                 */\n                /**\n                 * Options for keyboard navigation.\n                 *\n                 * @declare Highcharts.KeyboardNavigationOptionsObject\n                 * @since   5.0.0\n                 */\n                keyboardNavigation: {\n                    /**\n                     * Enable keyboard navigation for the chart.\n                     *\n                     * @since 5.0.0\n                     */\n                    enabled: true,\n                    /**\n                     * Options for the focus border drawn around elements while\n                     * navigating through them.\n                     *\n                     * @sample highcharts/accessibility/custom-focus\n                     *         Custom focus ring\n                     *\n                     * @declare Highcharts.KeyboardNavigationFocusBorderOptionsObject\n                     * @since   6.0.3\n                     */\n                    focusBorder: {\n                        /**\n                         * Enable/disable focus border for chart.\n                         *\n                         * @since 6.0.3\n                         */\n                        enabled: true,\n                        /**\n                         * Hide the browser's default focus indicator.\n                         *\n                         * @since 6.0.4\n                         */\n                        hideBrowserFocusOutline: true,\n                        /**\n                         * Style options for the focus border drawn around elements\n                         * while navigating through them. Note that some browsers in\n                         * addition draw their own borders for focused elements. These\n                         * automatic borders cannot be styled by Highcharts.\n                         *\n                         * In styled mode, the border is given the\n                         * `.highcharts-focus-border` class.\n                         *\n                         * @type    {Highcharts.CSSObject}\n                         * @since   6.0.3\n                         */\n                        style: {\n                            /** @internal */\n                            color: \"#334eff\" /* Palette.highlightColor80 */,\n                            /** @internal */\n                            lineWidth: 2,\n                            /** @internal */\n                            borderRadius: 3\n                        },\n                        /**\n                         * Focus border margin around the elements.\n                         *\n                         * @since 6.0.3\n                         */\n                        margin: 2\n                    },\n                    /**\n                     * Order of tab navigation in the chart. Determines which elements\n                     * are tabbed to first. Available elements are: `series`, `zoom`,\n                     * `rangeSelector`, `navigator`, `chartMenu`, `legend` and `container`.\n                     * In addition, any custom components can be added here. Adding\n                     * `container` first in order will make the keyboard focus stop on\n                     * the chart container first, requiring the user to tab again to\n                     * enter the chart.\n                     *\n                     * @type  {Array<string>}\n                     * @since 7.1.0\n                     */\n                    order: [\n                        'series', 'zoom', 'rangeSelector',\n                        'navigator', 'legend', 'chartMenu'\n                    ],\n                    /**\n                     * Whether or not to wrap around when reaching the end of arrow-key\n                     * navigation for an element in the chart.\n                     * @since 7.1.0\n                     */\n                    wrapAround: true,\n                    /**\n                     * Options for the keyboard navigation of data points and series.\n                     *\n                     * @declare Highcharts.KeyboardNavigationSeriesNavigationOptionsObject\n                     * @since 8.0.0\n                     */\n                    seriesNavigation: {\n                        /**\n                         * Set the keyboard navigation mode for the chart. Can be\n                         * \"normal\" or \"serialize\". In normal mode, left/right arrow\n                         * keys move between points in a series, while up/down arrow\n                         * keys move between series. Up/down navigation acts\n                         * intelligently to figure out which series makes sense to move\n                         * to from any given point.\n                         *\n                         * In \"serialize\" mode, points are instead navigated as a single\n                         * list. Left/right behaves as in \"normal\" mode. Up/down arrow\n                         * keys will behave like left/right. This can be useful for\n                         * unifying navigation behavior with/without screen readers\n                         * enabled.\n                         *\n                         * @type       {string}\n                         * @default    normal\n                         * @since 8.0.0\n                         * @validvalue [\"normal\", \"serialize\"]\n                         * @apioption  accessibility.keyboardNavigation.seriesNavigation.mode\n                         */\n                        /**\n                         * Skip null points when navigating through points with the\n                         * keyboard.\n                         *\n                         * @since 8.0.0\n                         */\n                        skipNullPoints: true,\n                        /**\n                         * When a series contains more points than this, we no longer\n                         * allow keyboard navigation for it.\n                         *\n                         * Set to `false` to disable.\n                         *\n                         * @type  {boolean|number}\n                         * @since 8.0.0\n                         */\n                        pointNavigationEnabledThreshold: false,\n                        /**\n                         * Remember which point was focused even after navigating away\n                         * from the series, so that when navigating back to the series\n                         * you start at the last focused point.\n                         *\n                         * @type  {boolean}\n                         * @since 10.1.0\n                         */\n                        rememberPointFocus: false\n                    }\n                },\n                /**\n                 * Options for announcing new data to screen reader users. Useful\n                 * for dynamic data applications and drilldown.\n                 *\n                 * Keep in mind that frequent announcements will not be useful to\n                 * users, as they won't have time to explore the new data. For these\n                 * applications, consider making snapshots of the data accessible, and\n                 * do the announcements in batches.\n                 *\n                 * @declare Highcharts.AccessibilityAnnounceNewDataOptionsObject\n                 * @since   7.1.0\n                 */\n                announceNewData: {\n                    /**\n                     * Optional formatter callback for the announcement. Receives\n                     * up to three arguments. The first argument is always an array\n                     * of all series that received updates. If an announcement is\n                     * already queued, the series that received updates for that\n                     * announcement are also included in this array. The second\n                     * argument is provided if `chart.addSeries` was called, and\n                     * there is a new series. In that case, this argument is a\n                     * reference to the new series. The third argument, similarly,\n                     * is provided if `series.addPoint` was called, and there is a\n                     * new point. In that case, this argument is a reference to the\n                     * new point.\n                     *\n                     * The function should return a string with the text to announce\n                     * to the user. Return empty string to not announce anything.\n                     * Return `false` to use the default announcement format.\n                     *\n                     * @sample highcharts/accessibility/custom-dynamic\n                     *         High priority live alerts\n                     *\n                     * @type      {Highcharts.AccessibilityAnnouncementFormatter}\n                     * @apioption accessibility.announceNewData.announcementFormatter\n                     */\n                    /**\n                     * Enable announcing new data to screen reader users\n                     * @sample highcharts/accessibility/accessible-dynamic\n                     *         Dynamic data accessible\n                     */\n                    enabled: false,\n                    /**\n                     * Minimum interval between announcements in milliseconds. If\n                     * new data arrives before this amount of time has passed, it is\n                     * queued for announcement. If another new data event happens\n                     * while an announcement is queued, the queued announcement is\n                     * dropped, and the latest announcement is queued instead. Set\n                     * to 0 to allow all announcements, but be warned that frequent\n                     * announcements are disturbing to users.\n                     */\n                    minAnnounceInterval: 5000,\n                    /**\n                     * Choose whether or not the announcements should interrupt the\n                     * screen reader. If not enabled, the user will be notified once\n                     * idle. It is recommended not to enable this setting unless\n                     * there is a specific reason to do so.\n                     */\n                    interruptUser: false\n                }\n            },\n            /**\n             * Accessibility options for a data point.\n             *\n             * @declare   Highcharts.PointAccessibilityOptionsObject\n             * @since     7.1.0\n             * @apioption series.line.data.accessibility\n             */\n            /**\n             * Provide a description of the data point, announced to screen readers.\n             *\n             * @type      {string}\n             * @since     7.1.0\n             * @apioption series.line.data.accessibility.description\n             */\n            /**\n             * Set to false to disable accessibility functionality for a specific point.\n             * The point will not be included in keyboard navigation, and will not be\n             * exposed to assistive technology.\n             *\n             * @type      {boolean}\n             * @since 9.0.1\n             * @apioption series.line.data.accessibility.enabled\n             */\n            /**\n             * Accessibility options for a series.\n             *\n             * @declare    Highcharts.SeriesAccessibilityOptionsObject\n             * @since      7.1.0\n             * @requires   modules/accessibility\n             * @apioption  plotOptions.series.accessibility\n             */\n            /**\n             * Enable/disable accessibility functionality for a specific series.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.enabled\n             */\n            /**\n             * Provide a description of the series, announced to screen readers.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.description\n             */\n            /**\n             * Format to use for describing the data series group to assistive\n             * technology - including screen readers.\n             *\n             * @see [series.descriptionFormat](#accessibility.series.descriptionFormat)\n             * @type       {string}\n             * @since 11.0.0\n             * @apioption  plotOptions.series.accessibility.descriptionFormat\n             */\n            /**\n             * Expose only the series element to screen readers, not its points.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.exposeAsGroupOnly\n             */\n            /**\n             * Point accessibility options for a series.\n             *\n             * @extends    accessibility.point\n             * @since 9.3.0\n             * @requires   modules/accessibility\n             * @apioption  plotOptions.series.accessibility.point\n             */\n            /**\n             * Formatter function to use instead of the default for point\n             * descriptions. Same as `accessibility.point.descriptionFormatter`, but\n             * applies to a series instead of the whole chart.\n             *\n             * Note: Prefer using [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n             * instead if possible, as default functionality such as describing\n             * annotations will be preserved.\n             *\n             * @see [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n             * @see [point.accessibility.description](#series.line.data.accessibility.description)\n             * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n             *\n             * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n             * @since 9.3.0\n             * @apioption plotOptions.series.accessibility.point.descriptionFormatter\n             */\n            /**\n             * Keyboard navigation for a series\n             *\n             * @declare    Highcharts.SeriesAccessibilityKeyboardNavigationOptionsObject\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.keyboardNavigation\n             */\n            /**\n             * Enable/disable keyboard navigation support for a specific series.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.keyboardNavigation.enabled\n             */\n            /**\n             * Accessibility options for an annotation label.\n             *\n             * @declare    Highcharts.AnnotationLabelAccessibilityOptionsObject\n             * @since 8.0.1\n             * @requires   modules/accessibility\n             * @apioption  annotations.labelOptions.accessibility\n             */\n            /**\n             * Description of an annotation label for screen readers and other assistive\n             * technology.\n             *\n             * @type       {string}\n             * @since 8.0.1\n             * @apioption  annotations.labelOptions.accessibility.description\n             */\n            /**\n             * Accessibility options for an axis. Requires the accessibility module.\n             *\n             * @declare    Highcharts.AxisAccessibilityOptionsObject\n             * @since      7.1.0\n             * @requires   modules/accessibility\n             * @apioption  xAxis.accessibility\n             */\n            /**\n             * Enable axis accessibility features, including axis information in the\n             * screen reader information region. If this is disabled on the xAxis, the\n             * x values are not exposed to screen readers for the individual data points\n             * by default.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.enabled\n             */\n            /**\n             * Description for an axis to expose to screen reader users.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.description\n             */\n            /**\n             * Range description for an axis. Overrides the default range description.\n             * Set to empty to disable range description for this axis.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.rangeDescription\n             */\n            /**\n             * @optionparent legend\n             */\n            legend: {\n                /**\n                 * Accessibility options for the legend. Requires the Accessibility\n                 * module.\n                 *\n                 * @since     7.1.0\n                 * @requires  modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the legend.\n                     *\n                     * @since  7.1.0\n                     */\n                    enabled: true,\n                    /**\n                     * Options for keyboard navigation for the legend.\n                     *\n                     * @since     7.1.0\n                     * @requires  modules/accessibility\n                     */\n                    keyboardNavigation: {\n                        /**\n                         * Enable keyboard navigation for the legend.\n                         *\n                         * @see [accessibility.keyboardNavigation](#accessibility.keyboardNavigation.enabled)\n                         *\n                         * @since  7.1.0\n                         */\n                        enabled: true\n                    }\n                }\n            },\n            /**\n             * @optionparent exporting\n             */\n            exporting: {\n                /**\n                 * Accessibility options for the exporting menu. Requires the\n                 * Accessibility module.\n                 *\n                 * @since    7.1.0\n                 * @requires modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the export menu.\n                     *\n                     * @since 7.1.0\n                     */\n                    enabled: true\n                }\n            },\n            /**\n             * @optionparent navigator\n             */\n            navigator: {\n                /**\n                 * Accessibility options for the navigator. Requires the\n                 * Accessibility module.\n                 *\n                 * @since 11.2.0\n                 * @requires modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the navigator.\n                     *\n                     * @since 11.2.0\n                     */\n                    enabled: true\n                }\n            }\n        };\n\n        return Options;\n    });\n    _registerModule(_modules, 'Accessibility/Options/LangDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default lang/i18n options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        const langOptions = {\n            /**\n             * Configure the accessibility strings in the chart. Requires the\n             * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n             * to be loaded. For a description of the module and information on its\n             * features, see\n             * [Highcharts Accessibility](https://www.highcharts.com/docs/chart-concepts/accessibility).\n             *\n             * The lang options use [Format Strings](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#format-strings)\n             * with variables that are replaced at run time. These variables should be\n             * used when available, to avoid duplicating text that is defined elsewhere.\n             *\n             * For more dynamic control over the accessibility functionality, see\n             * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter),\n             * [accessibility.series.descriptionFormatter](#accessibility.series.descriptionFormatter),\n             * and\n             * [accessibility.screenReaderSection.beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n             *\n             * @since        6.0.6\n             * @optionparent lang.accessibility\n             */\n            accessibility: {\n                /**\n                 * @deprecated 10.2.1\n                 * @type       {string}\n                 * @apioption  lang.accessibility.resetZoomButton\n                 */\n                /**\n                 * Default title of the chart for assistive technology, for charts\n                 * without a chart title.\n                 */\n                defaultChartTitle: 'Chart',\n                /**\n                 * Accessible label for the chart container HTML element.\n                 * `{title}` refers to the chart title.\n                 */\n                chartContainerLabel: '{title}. Highcharts interactive chart.',\n                /**\n                 * Accessible label for the chart SVG element.\n                 * `{chartTitle}` refers to the chart title.\n                 */\n                svgContainerLabel: 'Interactive chart',\n                /**\n                 * Accessible label for the drill-up button.\n                 * `{buttonText}` refers to the visual text on the button.\n                 */\n                drillUpButton: '{buttonText}',\n                /**\n                 * Accessible label for the chart credits.\n                 * `{creditsStr}` refers to the visual text in the credits.\n                 */\n                credits: 'Chart credits: {creditsStr}',\n                /**\n                 * Thousands separator to use when formatting numbers for screen\n                 * readers. Note that many screen readers will not handle space as a\n                 * thousands separator, and will consider \"11 700\" as two numbers.\n                 *\n                 * Set to `null` to use the separator defined in\n                 * [lang.thousandsSep](lang.thousandsSep).\n                 *\n                 * @since 7.1.0\n                 */\n                thousandsSep: ',',\n                /**\n                 * Title element text for the chart SVG element. Leave this\n                 * empty to disable adding the title element. Browsers will display\n                 * this content when hovering over elements in the chart. Assistive\n                 * technology may use this element to label the chart.\n                 *\n                 * @since 6.0.8\n                 */\n                svgContainerTitle: '',\n                /**\n                 * Set a label on the container wrapping the SVG.\n                 *\n                 * @see [chartContainerLabel](#lang.accessibility.chartContainerLabel)\n                 *\n                 * @since 8.0.0\n                 */\n                graphicContainerLabel: '',\n                /**\n                 * Language options for the screen reader information sections added\n                 * before and after the charts.\n                 *\n                 * @since 8.0.0\n                 */\n                screenReaderSection: {\n                    beforeRegionLabel: '',\n                    afterRegionLabel: '',\n                    /**\n                     * Language options for annotation descriptions.\n                     *\n                     * @since 8.0.1\n                     */\n                    annotations: {\n                        heading: 'Chart annotations summary',\n                        descriptionSinglePoint: ('{annotationText}. Related to {annotationPoint}'),\n                        descriptionMultiplePoints: ('{annotationText}. Related to {annotationPoint}' +\n                            '{#each additionalAnnotationPoints}' +\n                            ', also related to {this}' +\n                            '{/each}'),\n                        descriptionNoPoints: '{annotationText}'\n                    },\n                    /**\n                     * Label for the end of the chart. Announced by screen readers.\n                     *\n                     * @since 8.0.0\n                     */\n                    endOfChartMarker: 'End of interactive chart.'\n                },\n                /**\n                 * Language options for sonification.\n                 *\n                 * @since 8.0.1\n                 */\n                sonification: {\n                    playAsSoundButtonText: 'Play as sound, {chartTitle}',\n                    playAsSoundClickAnnouncement: 'Play'\n                },\n                /**\n                 * Language options for accessibility of the legend.\n                 *\n                 * @since 8.0.0\n                 */\n                legend: {\n                    /**\n                     * Accessible label for the legend, for charts where there is no\n                     * legend title defined.\n                     */\n                    legendLabelNoTitle: 'Toggle series visibility, {chartTitle}',\n                    /**\n                     * Accessible label for the legend, for charts where there is a\n                     * legend title defined. `{legendTitle}` refers to the visual text\n                     * in the legend title.\n                     */\n                    legendLabel: 'Chart legend: {legendTitle}',\n                    /**\n                     * Accessible label for individual legend items. `{itemName}` refers\n                     * to the visual text in the legend for that item.\n                     */\n                    legendItem: 'Show {itemName}'\n                },\n                /**\n                 * Chart and map zoom accessibility language options.\n                 *\n                 * @since 8.0.0\n                 */\n                zoom: {\n                    mapZoomIn: 'Zoom chart',\n                    mapZoomOut: 'Zoom out chart',\n                    resetZoomButton: 'Reset zoom'\n                },\n                /**\n                 * Range selector language options for accessibility.\n                 *\n                 * @since 8.0.0\n                 */\n                rangeSelector: {\n                    dropdownLabel: '{rangeTitle}',\n                    minInputLabel: 'Select start date.',\n                    maxInputLabel: 'Select end date.',\n                    clickButtonAnnouncement: 'Viewing {axisRangeDescription}'\n                },\n                /**\n                 * Navigator language options for accessibility.\n                 *\n                 * @since 11.2.0\n                 */\n                navigator: {\n                    /**\n                     * Label for the navigator handles.\n                     *\n                     * Receives `handleIx` and `chart` as context.\n                     * `handleIx` refers to the index of the navigator handle.\n                     */\n                    handleLabel: '{#eq handleIx 0}Start, percent{else}End, percent{/eq}',\n                    /**\n                     * Label for the navigator region.\n                     *\n                     * Receives `chart` as context.\n                     */\n                    groupLabel: 'Axis zoom',\n                    /**\n                     * Announcement for assistive technology when navigator values\n                     * are changed.\n                     *\n                     * Receives `axisRangeDescription` and `chart` as context.\n                     * `axisRangeDescription` corresponds to the range description\n                     * defined in [lang.accessibility.axis](#lang.accessibility.axis)\n                     */\n                    changeAnnouncement: '{axisRangeDescription}'\n                },\n                /**\n                 * Accessibility language options for the data table.\n                 *\n                 * @since 8.0.0\n                 */\n                table: {\n                    viewAsDataTableButtonText: 'View as data table, {chartTitle}',\n                    tableSummary: 'Table representation of chart.'\n                },\n                /**\n                 * Default announcement for new data in charts. If addPoint or\n                 * addSeries is used, and only one series/point is added, the\n                 * `newPointAnnounce` and `newSeriesAnnounce` strings are used.\n                 * The `...Single` versions will be used if there is only one chart\n                 * on the page, and the `...Multiple` versions will be used if there\n                 * are multiple charts on the page. For all other new data events,\n                 * the `newDataAnnounce` string will be used.\n                 *\n                 * @since 7.1.0\n                 */\n                announceNewData: {\n                    newDataAnnounce: 'Updated data for chart {chartTitle}',\n                    newSeriesAnnounceSingle: 'New data series: {seriesDesc}',\n                    newPointAnnounceSingle: 'New data point: {pointDesc}',\n                    newSeriesAnnounceMultiple: 'New data series in chart {chartTitle}: {seriesDesc}',\n                    newPointAnnounceMultiple: 'New data point in chart {chartTitle}: {pointDesc}'\n                },\n                /**\n                 * Descriptions of lesser known series types. The relevant\n                 * description is added to the screen reader information region\n                 * when these series types are used.\n                 *\n                 * @since 6.0.6\n                 */\n                seriesTypeDescriptions: {\n                    boxplot: 'Box plot charts are typically used to display ' +\n                        'groups of statistical data. Each data point in the ' +\n                        'chart can have up to 5 values: minimum, lower quartile, ' +\n                        'median, upper quartile, and maximum.',\n                    arearange: 'Arearange charts are line charts displaying a ' +\n                        'range between a lower and higher value for each point.',\n                    areasplinerange: 'These charts are line charts displaying a ' +\n                        'range between a lower and higher value for each point.',\n                    bubble: 'Bubble charts are scatter charts where each data ' +\n                        'point also has a size value.',\n                    columnrange: 'Columnrange charts are column charts ' +\n                        'displaying a range between a lower and higher value for ' +\n                        'each point.',\n                    errorbar: 'Errorbar series are used to display the ' +\n                        'variability of the data.',\n                    funnel: 'Funnel charts are used to display reduction of data ' +\n                        'in stages.',\n                    pyramid: 'Pyramid charts consist of a single pyramid with ' +\n                        'item heights corresponding to each point value.',\n                    waterfall: 'A waterfall chart is a column chart where each ' +\n                        'column contributes towards a total end value.'\n                },\n                /**\n                 * Chart type description strings. This is added to the chart\n                 * information region.\n                 *\n                 * If there is only a single series type used in the chart, we use\n                 * the format string for the series type, or default if missing.\n                 * There is one format string for cases where there is only a single\n                 * series in the chart, and one for multiple series of the same\n                 * type.\n                 *\n                 * @since 6.0.6\n                 */\n                chartTypes: {\n                    /* eslint-disable max-len */\n                    emptyChart: 'Empty chart',\n                    mapTypeDescription: 'Map of {mapTitle} with {numSeries} data series.',\n                    unknownMap: 'Map of unspecified region with {numSeries} data series.',\n                    combinationChart: 'Combination chart with {numSeries} data series.',\n                    defaultSingle: 'Chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    defaultMultiple: 'Chart with {numSeries} data series.',\n                    splineSingle: 'Line chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    splineMultiple: 'Line chart with {numSeries} lines.',\n                    lineSingle: 'Line chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    lineMultiple: 'Line chart with {numSeries} lines.',\n                    columnSingle: 'Bar chart with {numPoints} ' +\n                        '{#eq numPoints 1}bar{else}bars{/eq}.',\n                    columnMultiple: 'Bar chart with {numSeries} data series.',\n                    barSingle: 'Bar chart with {numPoints} ' +\n                        '{#eq numPoints 1}bar{else}bars{/eq}.',\n                    barMultiple: 'Bar chart with {numSeries} data series.',\n                    pieSingle: 'Pie chart with {numPoints} ' +\n                        '{#eq numPoints 1}slice{else}slices{/eq}.',\n                    pieMultiple: 'Pie chart with {numSeries} pies.',\n                    scatterSingle: 'Scatter chart with {numPoints} ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    scatterMultiple: 'Scatter chart with {numSeries} data series.',\n                    boxplotSingle: 'Boxplot with {numPoints} ' +\n                        '{#eq numPoints 1}box{else}boxes{/eq}.',\n                    boxplotMultiple: 'Boxplot with {numSeries} data series.',\n                    bubbleSingle: 'Bubble chart with {numPoints} ' +\n                        '{#eq numPoints 1}bubbles{else}bubble{/eq}.',\n                    bubbleMultiple: 'Bubble chart with {numSeries} data series.'\n                }, /* eslint-enable max-len */\n                /**\n                 * Axis description format strings.\n                 *\n                 * @since 6.0.6\n                 */\n                axis: {\n                    /* eslint-disable max-len */\n                    xAxisDescriptionSingular: 'The chart has 1 X axis displaying {names[0]}. {ranges[0]}',\n                    xAxisDescriptionPlural: 'The chart has {numAxes} X axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}.',\n                    yAxisDescriptionSingular: 'The chart has 1 Y axis displaying {names[0]}. {ranges[0]}',\n                    yAxisDescriptionPlural: 'The chart has {numAxes} Y axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}.',\n                    timeRangeDays: 'Data range: {range} days.',\n                    timeRangeHours: 'Data range: {range} hours.',\n                    timeRangeMinutes: 'Data range: {range} minutes.',\n                    timeRangeSeconds: 'Data range: {range} seconds.',\n                    rangeFromTo: 'Data ranges from {rangeFrom} to {rangeTo}.',\n                    rangeCategories: 'Data range: {numCategories} categories.'\n                }, /* eslint-enable max-len */\n                /**\n                 * Exporting menu format strings for accessibility module.\n                 *\n                 * @since 6.0.6\n                 */\n                exporting: {\n                    chartMenuLabel: 'Chart menu',\n                    menuButtonLabel: 'View chart menu, {chartTitle}'\n                },\n                /**\n                 * Lang configuration for different series types. For more dynamic\n                 * control over the series element descriptions, see\n                 * [accessibility.seriesDescriptionFormatter](#accessibility.seriesDescriptionFormatter).\n                 *\n                 * @since 6.0.6\n                 */\n                series: {\n                    /**\n                     * Lang configuration for the series main summary. Each series\n                     * type has two modes:\n                     *\n                     * 1. This series type is the only series type used in the\n                     *    chart\n                     *\n                     * 2. This is a combination chart with multiple series types\n                     *\n                     * If a definition does not exist for the specific series type\n                     * and mode, the 'default' lang definitions are used.\n                     *\n                     * Chart and its subproperties can be accessed with the `{chart}` variable.\n                     * The series and its subproperties can be accessed with the `{series}` variable.\n                     *\n                     * The series index (starting from 1) can be accessed with the `{seriesNumber}` variable.\n                     *\n                     * @since 6.0.6\n                     */\n                    summary: {\n                        /* eslint-disable max-len */\n                        'default': '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        defaultCombination: '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        line: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        lineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        spline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        splineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        column: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        columnCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        bar: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        barCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        pie: '{series.name}, pie {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}.',\n                        pieCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Pie with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}.',\n                        scatter: '{series.name}, scatter plot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}.',\n                        scatterCombination: '{series.name}, series {seriesNumber} of {chart.series.length}, scatter plot with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}.',\n                        boxplot: '{series.name}, boxplot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}.',\n                        boxplotCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Boxplot with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}.',\n                        bubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        bubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        map: '{series.name}, map {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}.',\n                        mapCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Map with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}.',\n                        mapline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        maplineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        mapbubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        mapbubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.'\n                    }, /* eslint-enable max-len */\n                    /**\n                     * User supplied description text. This is added in the point\n                     * comment description by default if present.\n                     *\n                     * `{description}` refers to the value given in\n                     * [point.accessibility.description](#series.line.data.accessibility.description).\n                     *\n                     * @since 6.0.6\n                     */\n                    description: '{description}',\n                    /**\n                     * X-axis description for series if there are multiple xAxes in\n                     * the chart.\n                     *\n                     * @since 6.0.6\n                     */\n                    xAxisDescription: 'X axis, {name}',\n                    /**\n                     * Y-axis description for series if there are multiple yAxes in\n                     * the chart.\n                     *\n                     * @since 6.0.6\n                     */\n                    yAxisDescription: 'Y axis, {name}',\n                    /**\n                     * Description for the value of null points.\n                     *\n                     * @since 8.0.0\n                     */\n                    nullPointValue: 'No value',\n                    /**\n                     * Description for annotations on a point, as it is made available\n                     * to assistive technology.\n                     *\n                     * @since 8.0.1\n                     */\n                    pointAnnotationsDescription: '{#each annotations}' +\n                        'Annotation: {this}{/each}'\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return langOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Options/DeprecatedOptions.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* eslint-disable max-len */\n        /*\n         *  List of deprecated options:\n         *\n         *  chart.description -> accessibility.description\n         *  chart.typeDescription -> accessibility.typeDescription\n         *  series.description -> series.accessibility.description\n         *  series.exposeElementToA11y -> series.accessibility.exposeAsGroupOnly\n         *  series.pointDescriptionFormatter ->\n         *      series.accessibility.pointDescriptionFormatter\n         *  series.accessibility.pointDescriptionFormatter ->\n         *      series.accessibility.point.descriptionFormatter\n         *  series.skipKeyboardNavigation ->\n         *      series.accessibility.keyboardNavigation.enabled\n         *  point.description -> point.accessibility.description !!!! WARNING: No longer deprecated and handled, removed for HC8.\n         *  axis.description -> axis.accessibility.description\n         *\n         *  accessibility.pointDateFormat -> accessibility.point.dateFormat\n         *  accessibility.addTableShortcut -> Handled by screenReaderSection.beforeChartFormat\n         *  accessibility.pointDateFormatter -> accessibility.point.dateFormatter\n         *  accessibility.pointDescriptionFormatter -> accessibility.point.descriptionFormatter\n         *  accessibility.pointDescriptionThreshold -> accessibility.series.pointDescriptionEnabledThreshold\n         *  accessibility.pointNavigationThreshold -> accessibility.keyboardNavigation.seriesNavigation.pointNavigationEnabledThreshold\n         *  accessibility.pointValueDecimals -> accessibility.point.valueDecimals\n         *  accessibility.pointValuePrefix -> accessibility.point.valuePrefix\n         *  accessibility.pointValueSuffix -> accessibility.point.valueSuffix\n         *  accessibility.screenReaderSectionFormatter -> accessibility.screenReaderSection.beforeChartFormatter\n         *  accessibility.describeSingleSeries -> accessibility.series.describeSingleSeries\n         *  accessibility.seriesDescriptionFormatter -> accessibility.series.descriptionFormatter\n         *  accessibility.onTableAnchorClick -> accessibility.screenReaderSection.onViewDataTableClick\n         *  accessibility.axisRangeDateFormat -> accessibility.screenReaderSection.axisRangeDateFormat\n         *  accessibility.keyboardNavigation.skipNullPoints -> accessibility.keyboardNavigation.seriesNavigation.skipNullPoints\n         *  accessibility.keyboardNavigation.mode -> accessibility.keyboardNavigation.seriesNavigation.mode\n         *\n         *  lang.accessibility.chartHeading -> no longer used, remove\n         *  lang.accessibility.legendItem -> lang.accessibility.legend.legendItem\n         *  lang.accessibility.legendLabel -> lang.accessibility.legend.legendLabel\n         *  lang.accessibility.mapZoomIn -> lang.accessibility.zoom.mapZoomIn\n         *  lang.accessibility.mapZoomOut -> lang.accessibility.zoom.mapZoomOut\n         *  lang.accessibility.resetZoomButton -> lang.accessibility.zoom.resetZoomButton\n         *  lang.accessibility.screenReaderRegionLabel -> lang.accessibility.screenReaderSection.beforeRegionLabel\n         *  lang.accessibility.rangeSelectorButton -> lang.accessibility.rangeSelector.buttonText\n         *  lang.accessibility.rangeSelectorMaxInput -> lang.accessibility.rangeSelector.maxInputLabel\n         *  lang.accessibility.rangeSelectorMinInput -> lang.accessibility.rangeSelector.minInputLabel\n         *  lang.accessibility.svgContainerEnd -> lang.accessibility.screenReaderSection.endOfChartMarker\n         *  lang.accessibility.viewAsDataTable -> lang.accessibility.table.viewAsDataTableButtonText\n         *  lang.accessibility.tableSummary -> lang.accessibility.table.tableSummary\n         *\n         */\n        /* eslint-enable max-len */\n        const { error, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Set a new option on a root prop, where the option is defined as an array of\n         * suboptions.\n         * @private\n         * @param root\n         * @param {Array<string>} optionAsArray\n         * @param {*} val\n         * @return {void}\n         */\n        function traverseSetOption(root, optionAsArray, val) {\n            let opt = root, prop, i = 0;\n            for (; i < optionAsArray.length - 1; ++i) {\n                prop = optionAsArray[i];\n                opt = opt[prop] = pick(opt[prop], {});\n            }\n            opt[optionAsArray[optionAsArray.length - 1]] = val;\n        }\n        /**\n         * If we have a clear root option node for old and new options and a mapping\n         * between, we can use this generic function for the copy and warn logic.\n         */\n        function deprecateFromOptionsMap(chart, rootOldAsArray, rootNewAsArray, mapToNewOptions) {\n            /**\n             * @private\n             */\n            function getChildProp(root, propAsArray) {\n                return propAsArray.reduce(function (acc, cur) {\n                    return acc[cur];\n                }, root);\n            }\n            const rootOld = getChildProp(chart.options, rootOldAsArray), rootNew = getChildProp(chart.options, rootNewAsArray);\n            Object.keys(mapToNewOptions).forEach(function (oldOptionKey) {\n                const val = rootOld[oldOptionKey];\n                if (typeof val !== 'undefined') {\n                    traverseSetOption(rootNew, mapToNewOptions[oldOptionKey], val);\n                    error(32, false, chart, {\n                        [rootOldAsArray.join('.') + '.' + oldOptionKey]: (rootNewAsArray.join('.') + '.' +\n                            mapToNewOptions[oldOptionKey].join('.'))\n                    });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedChartOptions(chart) {\n            const chartOptions = chart.options.chart, a11yOptions = chart.options.accessibility || {};\n            ['description', 'typeDescription'].forEach(function (prop) {\n                if (chartOptions[prop]) {\n                    a11yOptions[prop] = chartOptions[prop];\n                    error(32, false, chart, { [`chart.${prop}`]: `use accessibility.${prop}` });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedAxisOptions(chart) {\n            chart.axes.forEach(function (axis) {\n                const opts = axis.options;\n                if (opts && opts.description) {\n                    opts.accessibility = opts.accessibility || {};\n                    opts.accessibility.description = opts.description;\n                    error(32, false, chart, {\n                        'axis.description': 'use axis.accessibility.description'\n                    });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedSeriesOptions(chart) {\n            // Map of deprecated series options. New options are defined as\n            // arrays of paths under series.options.\n            const oldToNewSeriesOptions = {\n                description: ['accessibility', 'description'],\n                exposeElementToA11y: ['accessibility', 'exposeAsGroupOnly'],\n                pointDescriptionFormatter: [\n                    'accessibility', 'point', 'descriptionFormatter'\n                ],\n                skipKeyboardNavigation: [\n                    'accessibility', 'keyboardNavigation', 'enabled'\n                ],\n                'accessibility.pointDescriptionFormatter': [\n                    'accessibility', 'point', 'descriptionFormatter'\n                ]\n            };\n            chart.series.forEach(function (series) {\n                // Handle series wide options\n                Object.keys(oldToNewSeriesOptions).forEach(function (oldOption) {\n                    let optionVal = series.options[oldOption];\n                    // Special case\n                    if (oldOption === 'accessibility.pointDescriptionFormatter') {\n                        optionVal = (series.options.accessibility &&\n                            series.options.accessibility\n                                .pointDescriptionFormatter);\n                    }\n                    if (typeof optionVal !== 'undefined') {\n                        // Set the new option\n                        traverseSetOption(series.options, oldToNewSeriesOptions[oldOption], \n                        // Note that skipKeyboardNavigation has inverted option\n                        // value, since we set enabled rather than disabled\n                        oldOption === 'skipKeyboardNavigation' ?\n                            !optionVal : optionVal);\n                        error(32, false, chart, {\n                            [`series.${oldOption}`]: ('series.' +\n                                oldToNewSeriesOptions[oldOption].join('.'))\n                        });\n                    }\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedTopLevelAccessibilityOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility'], ['accessibility'], {\n                pointDateFormat: ['point', 'dateFormat'],\n                pointDateFormatter: ['point', 'dateFormatter'],\n                pointDescriptionFormatter: ['point', 'descriptionFormatter'],\n                pointDescriptionThreshold: [\n                    'series',\n                    'pointDescriptionEnabledThreshold'\n                ],\n                pointNavigationThreshold: [\n                    'keyboardNavigation', 'seriesNavigation',\n                    'pointNavigationEnabledThreshold'\n                ],\n                pointValueDecimals: ['point', 'valueDecimals'],\n                pointValuePrefix: ['point', 'valuePrefix'],\n                pointValueSuffix: ['point', 'valueSuffix'],\n                screenReaderSectionFormatter: [\n                    'screenReaderSection',\n                    'beforeChartFormatter'\n                ],\n                describeSingleSeries: ['series', 'describeSingleSeries'],\n                seriesDescriptionFormatter: ['series', 'descriptionFormatter'],\n                onTableAnchorClick: ['screenReaderSection', 'onViewDataTableClick'],\n                axisRangeDateFormat: ['screenReaderSection', 'axisRangeDateFormat']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedKeyboardNavigationOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility', 'keyboardNavigation'], ['accessibility', 'keyboardNavigation', 'seriesNavigation'], {\n                skipNullPoints: ['skipNullPoints'],\n                mode: ['mode']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedLangOptions(chart) {\n            deprecateFromOptionsMap(chart, ['lang', 'accessibility'], ['lang', 'accessibility'], {\n                legendItem: ['legend', 'legendItem'],\n                legendLabel: ['legend', 'legendLabel'],\n                mapZoomIn: ['zoom', 'mapZoomIn'],\n                mapZoomOut: ['zoom', 'mapZoomOut'],\n                resetZoomButton: ['zoom', 'resetZoomButton'],\n                screenReaderRegionLabel: [\n                    'screenReaderSection',\n                    'beforeRegionLabel'\n                ],\n                rangeSelectorButton: ['rangeSelector', 'buttonText'],\n                rangeSelectorMaxInput: ['rangeSelector', 'maxInputLabel'],\n                rangeSelectorMinInput: ['rangeSelector', 'minInputLabel'],\n                svgContainerEnd: ['screenReaderSection', 'endOfChartMarker'],\n                viewAsDataTable: ['table', 'viewAsDataTableButtonText'],\n                tableSummary: ['table', 'tableSummary']\n            });\n        }\n        /**\n         * Copy options that are deprecated over to new options. Logs warnings to\n         * console if deprecated options are used.\n         *\n         * @private\n         */\n        function copyDeprecatedOptions(chart) {\n            copyDeprecatedChartOptions(chart);\n            copyDeprecatedAxisOptions(chart);\n            if (chart.series) {\n                copyDeprecatedSeriesOptions(chart);\n            }\n            copyDeprecatedTopLevelAccessibilityOptions(chart);\n            copyDeprecatedKeyboardNavigationOptions(chart);\n            copyDeprecatedLangOptions(chart);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return copyDeprecatedOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Accessibility.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/A11yI18n.js'], _modules['Accessibility/Components/ContainerComponent.js'], _modules['Accessibility/FocusBorder.js'], _modules['Accessibility/Components/InfoRegionsComponent.js'], _modules['Accessibility/KeyboardNavigation.js'], _modules['Accessibility/Components/LegendComponent.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Accessibility/Components/NavigatorComponent.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/ProxyProvider.js'], _modules['Accessibility/Components/RangeSelectorComponent.js'], _modules['Accessibility/Components/SeriesComponent/SeriesComponent.js'], _modules['Accessibility/Components/ZoomComponent.js'], _modules['Accessibility/HighContrastMode.js'], _modules['Accessibility/HighContrastTheme.js'], _modules['Accessibility/Options/A11yDefaults.js'], _modules['Accessibility/Options/LangDefaults.js'], _modules['Accessibility/Options/DeprecatedOptions.js']], function (D, H, U, HU, A11yI18n, ContainerComponent, FocusBorderComposition, InfoRegionsComponent, KeyboardNavigation, LegendComponent, MenuComponent, NavigatorComponent, NewDataAnnouncer, ProxyProvider, RangeSelectorComponent, SeriesComponent, ZoomComponent, whcm, highContrastTheme, defaultOptionsA11Y, defaultLangOptions, copyDeprecatedOptions) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility module for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { doc } = H;\n        const { addEvent, extend, fireEvent, merge } = U;\n        const { removeElement } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Accessibility class\n         *\n         * @private\n         * @requires modules/accessibility\n         *\n         * @class\n         * @name Highcharts.Accessibility\n         *\n         * @param {Highcharts.Chart} chart\n         * Chart object\n         */\n        class Accessibility {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the accessibility class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             */\n            init(chart) {\n                this.chart = chart;\n                // Abort on old browsers\n                if (!doc.addEventListener) {\n                    this.zombie = true;\n                    this.components = {};\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                    return;\n                }\n                // Copy over any deprecated options that are used. We could do this on\n                // every update, but it is probably not needed.\n                copyDeprecatedOptions(chart);\n                this.proxyProvider = new ProxyProvider(this.chart);\n                this.initComponents();\n                this.keyboardNavigation = new KeyboardNavigation(chart, this.components);\n            }\n            /**\n             * @private\n             */\n            initComponents() {\n                const chart = this.chart;\n                const proxyProvider = this.proxyProvider;\n                const a11yOptions = chart.options.accessibility;\n                this.components = {\n                    container: new ContainerComponent(),\n                    infoRegions: new InfoRegionsComponent(),\n                    legend: new LegendComponent(),\n                    chartMenu: new MenuComponent(),\n                    rangeSelector: new RangeSelectorComponent(),\n                    series: new SeriesComponent(),\n                    zoom: new ZoomComponent(),\n                    navigator: new NavigatorComponent()\n                };\n                if (a11yOptions.customComponents) {\n                    extend(this.components, a11yOptions.customComponents);\n                }\n                const components = this.components;\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].initBase(chart, proxyProvider);\n                    components[componentName].init();\n                });\n            }\n            /**\n             * Get order to update components in.\n             * @private\n             */\n            getComponentOrder() {\n                if (!this.components) {\n                    return []; // For zombie accessibility object on old browsers\n                }\n                if (!this.components.series) {\n                    return Object.keys(this.components);\n                }\n                const componentsExceptSeries = Object.keys(this.components)\n                    .filter((c) => c !== 'series');\n                // Update series first, so that other components can read accessibility\n                // info on points.\n                return ['series'].concat(componentsExceptSeries);\n            }\n            /**\n             * Update all components.\n             */\n            update() {\n                const components = this.components, chart = this.chart, a11yOptions = chart.options.accessibility;\n                fireEvent(chart, 'beforeA11yUpdate');\n                // Update the chart type list as this is used by multiple modules\n                chart.types = this.getChartTypes();\n                // Update proxies. We don't update proxy positions since most likely we\n                // need to recreate the proxies on update.\n                const kbdNavOrder = a11yOptions.keyboardNavigation.order;\n                this.proxyProvider.updateGroupOrder(kbdNavOrder);\n                // Update markup\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].onChartUpdate();\n                    fireEvent(chart, 'afterA11yComponentUpdate', {\n                        name: componentName,\n                        component: components[componentName]\n                    });\n                });\n                // Update keyboard navigation\n                this.keyboardNavigation.update(kbdNavOrder);\n                // Handle high contrast mode\n                // Should only be applied once, and not if explicitly disabled\n                if (!chart.highContrastModeActive &&\n                    a11yOptions.highContrastMode !== false && (whcm.isHighContrastModeActive() ||\n                    a11yOptions.highContrastMode === true)) {\n                    whcm.setHighContrastTheme(chart);\n                }\n                fireEvent(chart, 'afterA11yUpdate', {\n                    accessibility: this\n                });\n            }\n            /**\n             * Destroy all elements.\n             */\n            destroy() {\n                const chart = this.chart || {};\n                // Destroy components\n                const components = this.components;\n                Object.keys(components).forEach(function (componentName) {\n                    components[componentName].destroy();\n                    components[componentName].destroyBase();\n                });\n                // Destroy proxy provider\n                if (this.proxyProvider) {\n                    this.proxyProvider.destroy();\n                }\n                // Remove announcer container\n                if (chart.announcerContainer) {\n                    removeElement(chart.announcerContainer);\n                }\n                // Kill keyboard nav\n                if (this.keyboardNavigation) {\n                    this.keyboardNavigation.destroy();\n                }\n                // Hide container from screen readers if it exists\n                if (chart.renderTo) {\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                }\n                // Remove focus border if it exists\n                if (chart.focusElement) {\n                    chart.focusElement.removeFocusBorder();\n                }\n            }\n            /**\n             * Return a list of the types of series we have in the chart.\n             * @private\n             */\n            getChartTypes() {\n                const types = {};\n                this.chart.series.forEach(function (series) {\n                    types[series.type] = 1;\n                });\n                return Object.keys(types);\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (Accessibility) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            Accessibility.i18nFormat = A11yI18n.i18nFormat;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Destroy with chart.\n             * @private\n             */\n            function chartOnDestroy() {\n                if (this.accessibility) {\n                    this.accessibility.destroy();\n                }\n            }\n            /**\n             * Handle updates to the module and send render updates to components.\n             * @private\n             */\n            function chartOnRender() {\n                // Update/destroy\n                if (this.a11yDirty && this.renderTo) {\n                    delete this.a11yDirty;\n                    this.updateA11yEnabled();\n                }\n                const a11y = this.accessibility;\n                if (a11y && !a11y.zombie) {\n                    a11y.proxyProvider.updateProxyElementPositions();\n                    a11y.getComponentOrder().forEach(function (componentName) {\n                        a11y.components[componentName].onChartRender();\n                    });\n                }\n            }\n            /**\n             * Update with chart/series/point updates.\n             * @private\n             */\n            function chartOnUpdate(e) {\n                // Merge new options\n                const newOptions = e.options.accessibility;\n                if (newOptions) {\n                    // Handle custom component updating specifically\n                    if (newOptions.customComponents) {\n                        this.options.accessibility.customComponents =\n                            newOptions.customComponents;\n                        delete newOptions.customComponents;\n                    }\n                    merge(true, this.options.accessibility, newOptions);\n                    // Recreate from scratch\n                    if (this.accessibility && this.accessibility.destroy) {\n                        this.accessibility.destroy();\n                        delete this.accessibility;\n                    }\n                }\n                // Mark dirty for update\n                this.a11yDirty = true;\n            }\n            /**\n             * @private\n             */\n            function chartUpdateA11yEnabled() {\n                let a11y = this.accessibility;\n                const accessibilityOptions = this.options.accessibility, svg = this.renderer.boxWrapper.element, title = this.title;\n                if (accessibilityOptions && accessibilityOptions.enabled) {\n                    if (a11y && !a11y.zombie) {\n                        a11y.update();\n                    }\n                    else {\n                        this.accessibility = a11y = new Accessibility(this);\n                        if (a11y && !a11y.zombie) {\n                            a11y.update();\n                        }\n                        // If a11y has been disabled, and is now enabled\n                        if (svg.getAttribute('role') === 'img') {\n                            svg.removeAttribute('role');\n                        }\n                    }\n                }\n                else if (a11y) {\n                    // Destroy if after update we have a11y and it is disabled\n                    if (a11y.destroy) {\n                        a11y.destroy();\n                    }\n                    delete this.accessibility;\n                }\n                else {\n                    // If a11y has been disabled dynamically or is disabled\n                    this.renderTo.setAttribute('role', 'img');\n                    this.renderTo.setAttribute('aria-hidden', false);\n                    this.renderTo.setAttribute('aria-label', ((title && title.element.textContent) || '').replace(/</g, '&lt;'));\n                    svg.setAttribute('aria-hidden', true);\n                    const description = document.getElementsByClassName('highcharts-description')[0];\n                    if (description) {\n                        description.setAttribute('aria-hidden', false);\n                        description.classList.remove('highcharts-linked-description');\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass, PointClass, SeriesClass, SVGElementClass, RangeSelectorClass) {\n                // Ordered:\n                KeyboardNavigation.compose(ChartClass);\n                NewDataAnnouncer.compose(SeriesClass);\n                LegendComponent.compose(ChartClass, LegendClass);\n                MenuComponent.compose(ChartClass);\n                SeriesComponent.compose(ChartClass, PointClass, SeriesClass);\n                A11yI18n.compose(ChartClass);\n                FocusBorderComposition.compose(ChartClass, SVGElementClass);\n                // RangeSelector\n                if (RangeSelectorClass) {\n                    RangeSelectorComponent.compose(ChartClass, RangeSelectorClass);\n                }\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.updateA11yEnabled) {\n                    chartProto.updateA11yEnabled = chartUpdateA11yEnabled;\n                    addEvent(ChartClass, 'destroy', chartOnDestroy);\n                    addEvent(ChartClass, 'render', chartOnRender);\n                    addEvent(ChartClass, 'update', chartOnUpdate);\n                    // Mark dirty for update\n                    ['addSeries', 'init'].forEach((event) => {\n                        addEvent(ChartClass, event, function () {\n                            this.a11yDirty = true;\n                        });\n                    });\n                    // Direct updates (events happen after render)\n                    ['afterApplyDrilldown', 'drillupall'].forEach((event) => {\n                        addEvent(ChartClass, event, function chartOnAfterDrilldown() {\n                            const a11y = this.accessibility;\n                            if (a11y && !a11y.zombie) {\n                                a11y.update();\n                            }\n                        });\n                    });\n                    addEvent(PointClass, 'update', pointOnUpdate);\n                    // Mark dirty for update\n                    ['update', 'updatedData', 'remove'].forEach((event) => {\n                        addEvent(SeriesClass, event, function () {\n                            if (this.chart.accessibility) {\n                                this.chart.a11yDirty = true;\n                            }\n                        });\n                    });\n                }\n            }\n            Accessibility.compose = compose;\n            /**\n             * Mark dirty for update.\n             * @private\n             */\n            function pointOnUpdate() {\n                if (this.series.chart.accessibility) {\n                    this.series.chart.a11yDirty = true;\n                }\n            }\n        })(Accessibility || (Accessibility = {}));\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // Add default options\n        merge(true, defaultOptions, defaultOptionsA11Y, {\n            accessibility: {\n                highContrastTheme: highContrastTheme\n            },\n            lang: defaultLangOptions\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Accessibility;\n    });\n    _registerModule(_modules, 'masters/modules/accessibility.src.js', [_modules['Core/Globals.js'], _modules['Accessibility/Accessibility.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (Highcharts, Accessibility, AccessibilityComponent, ChartUtilities, HTMLUtilities, KeyboardNavigationHandler, SeriesDescriber) {\n\n        const G = Highcharts;\n        // Classes\n        G.i18nFormat = Accessibility.i18nFormat;\n        G.A11yChartUtilities = ChartUtilities;\n        G.A11yHTMLUtilities = HTMLUtilities;\n        G.AccessibilityComponent = AccessibilityComponent;\n        G.KeyboardNavigationHandler = KeyboardNavigationHandler;\n        G.SeriesAccessibilityDescriber = SeriesDescriber;\n        // Compositions\n        Accessibility.compose(G.Chart, G.Legend, G.Point, G.Series, G.SVGElement, G.RangeSelector);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","U","doc","css","simulatedEventTarget","EventTarget","cloneMouseEvent","e","MouseEvent","type","createEvent","evt","initMouseEvent","bubbles","cancelable","view","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","getFakeMouseEvent","position","pos","x","y","composed","buttons","addClass","el","className","classList","add","indexOf","cloneTouchEvent","touchListToTouchArray","l","touchArray","i","length","item","push","TouchEvent","newEvent","touches","targetTouches","changedTouches","defaultPrevented","preventDefault","fakeEvt","escapeStringForHTML","str","replace","getElement","id","getElementById","getHeadingTagNameForElement","element","getIncreasedHeadingLevel","tagName","Math","min","headingLevel","parseInt","slice","isHeading","test","getPreviousSiblingsHeading","sibling","previousSibling","getHeadingRecursive","prevSiblingsHeading","parent","parentElement","parentTagName","removeChildNodes","lastChild","removeChild","removeClass","remove","RegExp","removeElement","parentNode","reverseChildNodes","node","childNodes","appendChild","stripHTMLTagsFromString","isForExport","visuallyHideElement","width","height","overflow","whiteSpace","clip","marginTop","filter","opacity","F","A11yI18nComposition","format","getNestedProperty","pick","i18nFormat","formatString","context","chart","getFirstBracketStatement","sourceStr","offset","startBracket","endBracket","statement","substring","begin","end","tokens","bracketRes","constRes","cursor","value","forEach","token","formatExtendedStatement","ctx","arr","result","eachStart","pluralStart","indexStart","indexEnd","eachEnd","preEach","postEach","eachArguments","eachStatement","split","lenArg","Number","len","isNaN","pluralEnd","pluralArguments","pluralStatement","trim","val","arrayName","ix","reduce","acc","cur","langFormat","langKey","keys","options","lang","compose","ChartClass","chartProto","prototype","HU","stripHTMLTags","defined","find","fireEvent","getSeriesFirstPointElement","series","points","firstPointWithGraphic","p","graphic","getSeriesA11yElement","firstPointEl","graph","group","fireEventOnWrappedOrUnwrappedElement","eventObject","hcEvents","getChartTitle","title","text","renderer","forExport","getAxisDescription","axis","accessibility","description","axisTitle","textStr","categories","dateTime","getAxisRangeDescription","axisOptions","rangeDescription","getCategoryAxisRangeDesc","dataMax","dataMin","numCategories","getAxisTimeLengthDesc","range","max","rangeUnit","Seconds","Minutes","Hours","Days","unit","rangeValue","toFixed","getAxisFromToDescription","dateRangeFormat","screenReaderSection","axisRangeDateFormat","extremes","key","time","dateFormat","toString","rangeFrom","rangeTo","getPointFromXY","res","getSeriesFromName","name","s","unhideChartElementFromAT","setAttribute","renderTo","body","Array","call","hasAttribute","hideSeriesFromAT","seriesEl","scrollAxisToPoint","point","xAxis","yAxis","scrollbar","to","from","getRelativePointAxisPosition","axisStart","toPixels","axisEnd","positionProp","coll","pointPos","updatePosition","trigger","DOMEvent","constructor","elements","createElement","arguments","splice","destroyCreatedElements","addEvent","eventRemovers","remover","removeEvent","event","map","removeAddedEvents","CU","DOMElementProvider","EventProvider","destroy","getKeyboardNavigation","init","onChartRender","onChartUpdate","initBase","proxyProvider","eventProvider","domElementProvider","keyCodes","left","right","up","down","enter","space","esc","tab","pageUp","pageDown","home","fakeClickEvent","destroyBase","keyCodeMap","validate","terminate","response","success","prev","next","noHandler","fail","run","keyCode","which","handlerCodeSet","codeSet","AccessibilityComponent","KeyboardNavigationHandler","handleSVGTitleElement","setSVGContainerLabel","setGraphicContainerAttrs","setRenderToAttrs","makeCreditsAccessible","titleId","index","titleContents","chartTitle","titleElement","svgTitleElement","createElementNS","textContent","insertBefore","firstChild","svgContainerLabel","box","label","container","shouldHaveLandmark","landmarkVerbosity","containerLabel","credits","creditsStr","a11y","keyboardNavigation","tabindexContainer","focus","FocusBorderComposition","svgElementBorderUpdateTriggers","chartRenderFocusBorder","focusElement","focusBorderOptions","focusBorder","removeFocusBorder","enabled","addFocusBorder","margin","stroke","style","color","strokeWidth","lineWidth","r","borderRadius","chartSetFocusToElement","svgElement","browserFocusElement","focusin","hideBrowserFocusOutline","outline","renderFocusBorder","svgElementAddFocusBorder","attribs","bb","getBBox","pad","parentGroup","scaleX","scaleY","scaleBoth","oneDefined","abs","translateX","translateY","borderPosX","borderPosY","borderWidth","borderHeight","isLabel","nodeName","posXCorrection","posYCorrection","isRotated","rotation","correction","attr","attrX","attrY","temp","rect","zIndex","styledMode","avgElementAddUpdateFocusBorderHooks","updateParams","focusBorderUpdateHooks","setterKey","origSetter","_defaultSetter","ret","svgElementAddDestroyFocusBorderHook","focusBorderDestroyHook","origDestroy","svgElementRemoveFocusBorder","Object","SVGElementClass","svgElementProto","setFocusToElement","AST","announceRegion","addAnnounceRegion","announce","message","setElementHTML","clearAnnouncementRegionTimer","clearTimeout","setTimeout","innerHTML","emptyHTML","chartContainer","announcerContainer","createAnnouncerContainer","div","HTMLUtilities","getChartAnnotationLabels","annotations","visible","concat","labels","getLabelText","getAnnotationLabelDescription","a11yDesc","labelText","getAriaLabel","getAttribute","pointValueDescriptions","valDesc","valueDescription","seriesName","desc","numPoints","pointsSelector","annotationText","annotation","annotationPoint","additionalAnnotationPoints","getAnnotationListItems","getAnnotationsInfoHTML","annotationItems","join","getPointAnnotationTexts","pointLabels","A11yI18n","Announcer","AnnotationsA11y","replaceNested","stripEmptyHTMLTags","screenReaderSections","component","initRegionsDefinitions","onDataTableCreated","wasHidden","dataTableDiv","focusDataTable","viewDataTableButton","exporting","updateAllScreenReaderSections","announcer","accessibilityOptions","before","buildContent","formatter","beforeChartFormatter","defaultBeforeChartFormatter","insertIntoDOM","afterInserted","sonifyButtonId","initSonifyButton","dataTableButtonId","initDataTableButton","after","afterChartFormatter","defaultAfterChartFormatter","nextSibling","updateExitAnchor","linkedDescriptionElement","getLinkedDescriptionElement","setLinkedDescriptionAttrs","regionKey","updateScreenReaderSection","linkedDescOption","chartOptions","linkedDescription","query","queryMatch","querySelectorAll","region","content","sectionDiv","hiddenDiv","setScreenReaderSectionAttribs","beforeChartFormat","axesDesc","getAxesDescription","shouldHaveSonifyBtn","sonify","sonification","annotationsList","annotationsTitleStr","headingTagName","typeDescription","getTypeDescriptionText","chartSubtitle","getSubtitleText","chartLongdesc","getLongdescText","xAxisDescription","yAxisDescription","playAsSoundButton","getSonifyButtonText","viewTableButton","getCSV","getDataTableButtonText","annotationsTitle","formattedString","afterChartFormat","endOfChartMarker","getEndOfChartMarkerText","getLinkedDescription","captionOptions","caption","captionText","types","getTypeDescription","firstType","firstSeries","mapTitle","mapView","geoMap","formatContext","numSeries","buildTypeDescriptionFromSeries","typeExplanation","multi","buttonId","subtitle","endMarker","outerHTML","markerText","attributes","tree","tabindex","summary","tableDiv","table","getElementsByTagName","sonifyButton","defaultHandler","stopPropagation","announceMsg","removeAttribute","onclick","onPlayAsSoundClick","tableButtonId","tableId","onViewDataTableClick","viewData","shouldDescribeColl","collectionKey","defaultCondition","axes","hasNoMap","hasCartesian","hasCartesianSeries","showXAxes","angular","showYAxes","getAxisDescriptionText","names","ranges","numAxes","ChartUtilities","getExportMenuButtonElement","exportSVGElements","MenuComponent","onMenuShown","onMenuHidden","createProxyGroup","menu","exportContextMenu","setExportButtonExpandedState","addAccessibleContextMenuAttribs","stateStr","exportButtonProxy","innerElement","focusEl","clearGroup","proxyMenuButton","exportingGroup","buttonEl","exportingShouldHaveA11y","exportingOpts","exportButton","addProxyElement","click","contextButtonTitle","addGroup","exportList","exportDivElements","children","parentDiv","role","onKbdPrevious","onKbdNext","onKbdClick","proxy","svgEl","hideExportMenu","keyboardNavigationHandler","a11yOptions","highlightedExportItemIx","highlightExportItem","wrapAround","highlightLastExportItem","curHighlightedItem","exportButtonElement","openMenu","chartShowExportMenu","chartHideExportMenu","onmouseout","hideMenu","chartHighlightExportItem","listItem","curHighlighted","hasSVGFocusSupport","onmouseover","chartHighlightLastExportItem","showExportMenu","KeyboardNavigation","components","currentModuleIx","NaN","modules","ep","update","onKeydown","onFocus","eventName","onMouseUp","isClickingChart","order","keyboardOptions","updateContainerTabindex","componentName","navModules","removeExitAnchor","makeElementAnExitAnchor","exitAnchor","createExitAnchor","move","direction","curModule","newModule","exiting","focusComesFromChart","contains","tabbingInBackwards","getFirstValidModuleIx","keyboardReset","target","curMod","ev","curNavModule","shouldHaveTabindex","curTabindex","chartTabindex","addExitAnchorEventsToEl","comingInBackwards","mod","chartDismissPopupContent","tooltip","hide","documentOnKeydown","charts","dismissPopupContent","A","Legend","animObject","isNumber","syncTimeout","shouldDoLegendA11y","items","legend","allItems","legendA11yOptions","unsupportedColorAxis","colorAxis","some","c","dataClasses","setLegendItemHoverState","hoverActive","legendItem","setState","LegendComponent","highlightedLegendItemIx","proxyGroup","recreateProxies","updateGroupProxyElementPositions","updateLegendItemProxyVisibility","highlightLegendItem","updateProxyPositionForItem","globalAnimation","duration","curPage","currentPage","clipHeight","a11yProxyElement","hasPages","pages","proxyEl","itemPage","pageIx","round","visibility","removeProxies","highlightAdjacentLegendPage","newPageIx","curPageIx","refreshPosition","focusedElement","activeElement","shouldRestoreFocus","addLegendProxyGroup","proxyLegendItems","updateLegendTitle","removeGroup","legendTitle","legendLabel","updateGroupAttrs","groupRole","proxyLegendItem","itemLabel","itemName","proxyPositioningElement","visual","onKbdArrowKey","shouldHaveLegendNavigation","numItems","legendOptions","display","chartHighlightLegendItem","oldIx","itemToHighlight","scrollLegendToItem","itemIx","scroll","legendItemProp","proxyBtn","legendOnAfterColorizeItem","LegendClass","NavigatorConstructor","isTouchDevice","merge","composedMembers","onChartAfterAddSeries","navigator","setBaseSeries","onChartAfterSetChartSize","scrollbarHeight","scrollButtonSize","inverted","opposite","chartWidth","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","scroller","redraw","animation","onChartBeforeRender","onChartBeforeShowResetZoom","zooming","pinchType","onChartCallback","getExtremes","render","scrollbarOptions","NavigatorClass","pushUnique","callbacks","correctFloat","onAxisInit","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","isXAxis","previousZoom","AxisClass","keepProps","includes","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","translate","horiz","newMax","Color","SeriesRegistry","parse","seriesTypes","maskInside","handles","symbols","backgroundColor","borderColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","compare","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","lineColor","marker","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","align","fontSize","textOutline","crosshair","startOnTick","endOnTick","minPadding","maxPadding","tickWidth","relativeLength","_x","_y","halfWidth","markerPosition","setFixedRange","fixedRange","D","NavigatorDefaults","NavigatorSymbols","RendererRegistry","StockUtilities","setOptions","getRendererType","extend","onSeriesAfterUpdate","isInternal","SeriesClass","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","axisTitleMargin","axisMargin","xPosition","interval","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","defaultOptions","crisp","destroyObjectProperties","swapXY","seg","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","addEvents","buttonsOrder","bar","scrollbarGroup","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","g","fill","arrow","userOptions","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","chartPosition","hasDragged","method","rendered","show","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","Axis","ChartNavigatorComposition","NavigatorComposition","SVGRenderer","clamp","erase","isArray","splat","numExt","extreme","numbers","Navigator","isDirty","drawHandle","verb","drawOutline","zoomedMin","zoomedMax","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","verticalMin","d","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","navigatorGroup","hasMask","handlesOptions","symbolName","symbolUrl","isImg","symbolFn","symbol","addMouseEvents","rotationOriginX","rotationOriginY","invertedUpdate","setOpposite","navigatorEnabled","adaptToUpdatedData","baseSeries","updatedDataHandler","eventsToUnbind","offsets","getXAxisOffsets","scrollbarXAxis","fake","minRange","maxRange","navigatorWidth","plotWidth","plotHeight","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","onMouseMove","getPartsEvents","modifyNavigatorAxisExtremes","events","navigatorItem","shadesMousedown","navigatorPosition","ext","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","unionExtremes","triggerOp","unbind","removeBaseSeriesEvents","modifyBaseAxisExtremes","scrollbarEnabled","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","Boolean","returnFalseOnNoBaseSeries","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","showInNavigator","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navigatorSeries","navSeries","base","baseOptions","mergedNavSeriesOptions","chartNavigatorSeriesOptions","baseNavigatorOptions","linkedNavSeries","userNavOptions","plotOptions","navigatorSeriesData","hasNavigatorData","initSeries","setSortedData","userSeriesOptions","colors","setVisible","getBaseSeriesMin","currentSeriesMin","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","T","updateHandleValues","verbosity","groupFormatStr","groupLabel","handleFormatStr","handleLabel","n","handle","getHandleByIx","handleIx","pointerEvents","oninput","updateNavigator","getNavigatorHandleNavigation","maxHandleProxy","minHandleProxy","delta","parseFloat","updateNavigatorThrottleTimer","beforeAnnounce","performUpdate","chartPos","getChartPosition","minNewX","maxNewX","announceFormatStr","changeAnnouncement","axisRangeDescription","numberFormat","isString","hasMorePointsThanDescriptionThreshold","chartA11yOptions","pointDescriptionEnabledThreshold","pointNumberToString","a11yPointOptions","seriesA11yPointOptions","tooltipOptions","valueDecimals","decimalPoint","thousandsSep","getSeriesAxisDescriptionText","axisCollection","defaultPointDescriptionFormatter","shouldExposeSeriesName","valText","getPointValueDescription","seriesA11yOptions","pointValueDescriptionFormat","seriesValueDescFormat","valueDescriptionFormat","showXDescription","xDesc","getPointXDescription","timeDesc","getPointA11yTimeDescription","dateXAxis","tooltipDateFormat","getXDateFormat","dateTimeLabelFormats","dateFormatter","pointCategory","category","canUseId","fallback","xDescription","getPointValue","a11yPointOpts","seriesA11yPointOpts","valuePrefix","valueSuffix","fallbackKey","fallbackDesc","isNull","pointArrayMap","getPointArrayMapValueDescription","prefix","suffix","pre","suf","keyToValStr","num","propDesc","separator","seriesNameText","annotationsDesc","getPointAnnotationDescription","defaultSeriesDescriptionFormatter","chartTypes","getSeriesDescriptionText","descOpt","shouldDescribeAxis","seriesNumber","xAxisInfo","yAxisInfo","summaryContext","combinationSuffix","axisDescription","descriptionFormat","seriesDescription","authorDescription","describeSeries","is3d","describePointsInSeries","setScreenReaderProps","shouldSetScreenReaderPropsOnPoints","exposeAsGroupOnly","setKeyboardProps","shouldSetKeyboardNavPropsOnPoints","seriesNavOptions","seriesNavigation","pointNavigationEnabledThreshold","shouldDescribeNullPoints","describeNull","pointEl","shouldAddMockPoint","isSunburst","is","shouldDescribeNull","addMockPointElement","findFirstPointWithGraphic","sourcePointIndex","firstGraphic","mockPos","plotX","plotY","mockElement","makeMockElement","mock","hasMockGraphic","pointA11yDisabled","setPointScreenReaderAttribs","pointElement","seriesPointA11yOptions","descriptionFormatter","shouldDescribeSeriesElement","chartHas3d","options3d","hasMultipleSeries","describeSingleSeriesOption","describeSingleSeries","exposeAsGroupOnlyOption","describeSeriesElement","seriesElement","SeriesDescriber","chartHasAnnounceEnabled","announceNewData","NewDataAnnouncer","dirty","allSeries","lastAnnouncementTime","announceType","announceOptions","interruptUser","addEventListeners","onSeriesAdded","announceDirtyData","hasDirty","newSeries","newPoint","findPointInDataArray","candidates","candidate","queueAnnouncement","dirtySeries","annOptions","now","Date","dTime","minAnnounceInterval","getUniqueSeries","arrayA","arrayB","uniqueSeries","queuedAnnouncement","buildAnnouncementMessage","queuedAnnouncementTimer","announcementFormatter","formatterRes","multiple","seriesDesc","pointDesc","seriesOnAddPoint","newDataAnnouncer","seriesOnUpdatedData","proxyElementType","wrapperElementType","innerEl","wrapperEl","hideElementVisually","listStyle","updateTarget","getTargetPosition","fakeEventObject","updateCSSClassName","attrs","a","targetAriaLabel","getTargetAttr","addProxyEventsToElement","bBox","stringHasNoTooltip","groupDiv","noTooltipOnGroup","noTooltipOnTarget","evtType","isTouchEvent","clonedEvent","passive","padding","clickTarget","clickTargetElement","posElement","chartDiv","getBoundingClientRect","rectEl","bottom","ProxyElement","groups","groupOrder","beforeChartProxyPosContainer","createProxyPosContainer","afterChartProxyPosContainer","groupKey","Error","proxyContainerElement","proxyElements","groupElementType","groupElement","existingGroup","proxyContainer","updateGroupOrder","groupKeys","isDOMOrderGroupOrder","seriesIx","beforeKeys","afterKeys","posContainer","updatePosContainerPositions","updateProxyElementPositions","classNamePostfix","getCurrentGroupOrderInDOM","getGroupKeyFromElement","allGroups","getChildrenGroupOrder","childrenOrder","domOrder","groupOrderWithGroups","rendererSVGEl","RangeSelectorComponent","updateSelectorVisibility","setDropdownAttrs","setRangeButtonAttrs","maxInput","minInput","input","setRangeInputAttrs","dropdown","hideFromAT","hasVisibleDropdown","btn","rangeTitle","rangeSelectorZoom","onButtonNavKbdArrowKey","highlightRangeSelectorButton","highlightedRangeSelectorItemIx","onButtonNavKbdClick","oldRangeSelectorItemState","onAfterBtnClick","announcement","onInputKbdMove","rangeSel","newIx","highlightedInputRangeIx","inputEl","onInputNavInit","buttonIxToHighlight","removeInputKeydownHandler","keydownHandler","minRemover","maxRemover","onInputNavTerminate","hideInput","initDropdownNav","buttonGroup","removeDropdownKeydownHandler","isTab","getRangeSelectorButtonNavigation","lastButtonIx","getRangeSelectorInputNavigation","inputGroup","inputEnabled","chartHighlightRangeSelectorButton","curHighlightedIx","curSelectedIx","selected","state","rangeSelectorAfterBtnClick","RangeSelectorClass","ForcedMarkersComposition","forceZeroOpacityMarkerOptions","normal","getPointMarkerOpacity","pointOptions","hasIndividualPointMarkerOptions","_hasPointMarkers","seriesOnAfterRender","markerGroup","a11yMarkersForced","hasForcedA11yMarker","seriesOnAfterSetOptions","resetA11yMarkerOptions","seriesOnRender","shouldForceMarkers","chartA11yEnabled","seriesA11yEnabled","isWithinDescriptionThreshold","handleForcePointMarkers","hadForcedMarker","isStillForcedMarker","unforceSeriesMarkerOptions","resetMarkerOptions","originalOpacity","seriesOnRenderCanvas","Point","Series","getPointIndex","isSkipSeries","seriesKbdNavOptions","isSkipPoint","skipNullPoints","isInside","getFirstValidPointInChart","getFirstValidPointInSeries","highlightLastValidPointInChart","highlightedPoint","highlightNextValidPoint","highlightFirstValidPointInChart","highlight","SeriesKeyboardNavigation","onSeriesDestroy","updateChartFocusAfterDrilling","lastDrilledDownPoint","onDrillupAll","focusedElClassName","isProxyFocused","last","getKeyboardNavigationHandler","onKbdSideways","onKbdVertical","firePointEvent","highlightAdjacentSeries","onHandlerInit","onHandlerTerminate","handler","isNext","attemptHighlightAdjacentPoint","kbdNavOptions","rememberPointFocus","navOptions","mode","highlightMethod","keyboardMoveVertical","hoverSeries","onMouseOut","directionIsNext","highlightAdjacentPoint","chartHighlightAdjacentPoint","curPoint","curPointIndex","curPoints","lastSeries","lastPoint","chartHighlightAdjacentPointVertical","minDistance","bestPoint","yDistance","distance","chartHighlightAdjacentSeries","adjacentNewPoint","getClosestPoint","xWeight","yWeight","dPoint","minIx","hasUndefinedPosition","pointHighlight","highlightVisually","tooltipElement","onMouseOver","tooltipTop","scrollTop","window","scrollY","scrollTo","behavior","seriesHighlightNextValidPoint","start","j","PointClass","pointProto","seriesProto","highlightAdjacentPointVertical","ForcedMarkers","hideTooltipFromATWhenShown","hideSeriesLabelsFromATWhenShown","labelBySeries","getPointsCollection","focusedMapNavButtonIx","updateProxyOverlays","mapNavigation","navButtons","setMapNavButtonAttrs","labelFormatKey","resetZoomButton","createZoomProxyButton","drillUpButton","breadcrumbs","list","lastBreadcrumb","buttonText","getButtonText","buttonProp","getMapZoomNavigation","onMapKbdArrow","_keyCode","onMapKbdTab","onMapKbdClick","onMapNavInit","isY","stepDirection","diff","random","startPos","offsetLeft","offsetTop","endPos","isBackwards","isMoveOutOfRange","zoomBy","zoomIn","zoomOut","initialButton","simpleButtonNavigation","proxyProp","onClick","_handler","drillUp","isMS","isHighContrastModeActive","isEdge","userAgent","matchMedia","matches","getComputedStyle","testDiv","backgroundImage","bi","currentStyle","setHighContrastTheme","highContrastModeActive","theme","highContrastTheme","hasCustomColors","plotOpts","fillColor","colorIndex","seriesOptions","minColor","maxColor","stops","minorGridLineColor","tickColor","edgeColor","connectorColor","pie","boxplot","candlestick","errorbar","itemStyle","itemHoverStyle","itemHiddenStyle","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","buttonTheme","hover","select","inputBoxBorderColor","inputStyle","labelStyle","highContrastMode","defaultChartTitle","chartContainerLabel","svgContainerTitle","graphicContainerLabel","beforeRegionLabel","afterRegionLabel","heading","descriptionSinglePoint","descriptionMultiplePoints","descriptionNoPoints","playAsSoundButtonText","playAsSoundClickAnnouncement","legendLabelNoTitle","zoom","mapZoomIn","mapZoomOut","dropdownLabel","minInputLabel","maxInputLabel","clickButtonAnnouncement","viewAsDataTableButtonText","tableSummary","newDataAnnounce","newSeriesAnnounceSingle","newPointAnnounceSingle","newSeriesAnnounceMultiple","newPointAnnounceMultiple","seriesTypeDescriptions","arearange","areasplinerange","bubble","columnrange","funnel","pyramid","waterfall","emptyChart","mapTypeDescription","unknownMap","combinationChart","defaultSingle","defaultMultiple","splineSingle","splineMultiple","lineSingle","lineMultiple","columnSingle","columnMultiple","barSingle","barMultiple","pieSingle","pieMultiple","scatterSingle","scatterMultiple","boxplotSingle","boxplotMultiple","bubbleSingle","bubbleMultiple","xAxisDescriptionSingular","xAxisDescriptionPlural","yAxisDescriptionSingular","yAxisDescriptionPlural","timeRangeDays","timeRangeHours","timeRangeMinutes","timeRangeSeconds","rangeFromTo","rangeCategories","chartMenuLabel","menuButtonLabel","defaultCombination","line","lineCombination","spline","splineCombination","column","columnCombination","barCombination","pieCombination","scatter","scatterCombination","boxplotCombination","bubbleCombination","mapCombination","mapline","maplineCombination","mapbubble","mapbubbleCombination","nullPointValue","pointAnnotationsDescription","error","traverseSetOption","root","optionAsArray","opt","deprecateFromOptionsMap","rootOldAsArray","rootNewAsArray","mapToNewOptions","getChildProp","propAsArray","rootOld","rootNew","oldOptionKey","copyDeprecatedChartOptions","copyDeprecatedAxisOptions","opts","copyDeprecatedSeriesOptions","oldToNewSeriesOptions","exposeElementToA11y","pointDescriptionFormatter","skipKeyboardNavigation","oldOption","optionVal","pointDateFormat","pointDateFormatter","pointDescriptionThreshold","pointNavigationThreshold","pointValueDecimals","pointValuePrefix","pointValueSuffix","screenReaderSectionFormatter","seriesDescriptionFormatter","onTableAnchorClick","screenReaderRegionLabel","rangeSelectorButton","rangeSelectorMaxInput","rangeSelectorMinInput","svgContainerEnd","viewAsDataTable","ContainerComponent","InfoRegionsComponent","NavigatorComponent","ProxyProvider","SeriesComponent","ZoomComponent","whcm","defaultOptionsA11Y","defaultLangOptions","copyDeprecatedOptions","Accessibility","addEventListener","zombie","initComponents","infoRegions","chartMenu","customComponents","getComponentOrder","getChartTypes","kbdNavOrder","chartOnDestroy","chartOnRender","a11yDirty","updateA11yEnabled","chartOnUpdate","newOptions","chartUpdateA11yEnabled","boxWrapper","document","getElementsByClassName","pointOnUpdate","G","A11yChartUtilities","A11yHTMLUtilities","SeriesAccessibilityDescriber","Chart","SVGElement","RangeSelector"],"mappings":"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"}