{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Support for parallel coordinates in Highcharts\n *\n * (c) 2010-2024 Pawel Fus\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/parallel-coordinates', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js', [], function () {\n        /* *\n         *\n         *  Parallel coordinates module\n         *\n         *  (c) 2010-2024 Pawel Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * @optionparent chart\n         */\n        const chartDefaults = {\n            /**\n             * Flag to render charts as a parallel coordinates plot. In a parallel\n             * coordinates plot (||-coords) by default all required yAxes are generated\n             * and the legend is disabled. This feature requires\n             * `modules/parallel-coordinates.js`.\n             *\n             * @sample {highcharts} /highcharts/demo/parallel-coordinates/\n             *         Parallel coordinates demo\n             * @sample {highcharts} highcharts/parallel-coordinates/polar/\n             *         Star plot, multivariate data in a polar chart\n             *\n             * @since    6.0.0\n             * @product  highcharts\n             * @requires modules/parallel-coordinates\n             */\n            parallelCoordinates: false,\n            /**\n             * Common options for all yAxes rendered in a parallel coordinates plot.\n             * This feature requires `modules/parallel-coordinates.js`.\n             *\n             * The default options are:\n             * ```js\n             * parallelAxes: {\n             *    lineWidth: 1,       // classic mode only\n             *    gridlinesWidth: 0,  // classic mode only\n             *    title: {\n             *        text: '',\n             *        reserveSpace: false\n             *    },\n             *    labels: {\n             *        x: 0,\n             *        y: 0,\n             *        align: 'center',\n             *        reserveSpace: false\n             *    },\n             *    offset: 0\n             * }\n             * ```\n             *\n             * @sample {highcharts} highcharts/parallel-coordinates/parallelaxes/\n             *         Set the same tickAmount for all yAxes\n             *\n             * @extends   yAxis\n             * @since     6.0.0\n             * @product   highcharts\n             * @excluding alternateGridColor, breaks, id, gridLineColor,\n             *            gridLineDashStyle, gridLineWidth, minorGridLineColor,\n             *            minorGridLineDashStyle, minorGridLineWidth, plotBands,\n             *            plotLines, angle, gridLineInterpolation, maxColor, maxZoom,\n             *            minColor, scrollbar, stackLabels, stops,\n             * @requires  modules/parallel-coordinates\n             */\n            parallelAxes: {\n                lineWidth: 1,\n                /**\n                 * Titles for yAxes are taken from\n                 * [xAxis.categories](#xAxis.categories). All options for `xAxis.labels`\n                 * applies to parallel coordinates titles. For example, to style\n                 * categories, use [xAxis.labels.style](#xAxis.labels.style).\n                 *\n                 * @excluding align, enabled, margin, offset, position3d, reserveSpace,\n                 *            rotation, skew3d, style, text, useHTML, x, y\n                 */\n                title: {\n                    text: '',\n                    reserveSpace: false\n                },\n                labels: {\n                    x: 0,\n                    y: 4,\n                    align: 'center',\n                    reserveSpace: false\n                },\n                offset: 0\n            }\n        };\n        const xAxisDefaults = {\n            lineWidth: 0,\n            tickLength: 0,\n            opposite: true,\n            type: 'category'\n        };\n        /**\n         * Parallel coordinates only. Format that will be used for point.y\n         * and available in [tooltip.pointFormat](#tooltip.pointFormat) as\n         * `{point.formattedValue}`. If not set, `{point.formattedValue}`\n         * will use other options, in this order:\n         *\n         * 1. [yAxis.labels.format](#yAxis.labels.format) will be used if\n         *    set\n         *\n         * 2. If yAxis is a category, then category name will be displayed\n         *\n         * 3. If yAxis is a datetime, then value will use the same format as\n         *    yAxis labels\n         *\n         * 4. If yAxis is linear/logarithmic type, then simple value will be\n         *    used\n         *\n         * @sample {highcharts}\n         *         /highcharts/parallel-coordinates/tooltipvalueformat/\n         *         Different tooltipValueFormats's\n         *\n         * @type      {string}\n         * @default   undefined\n         * @since     6.0.0\n         * @product   highcharts\n         * @requires  modules/parallel-coordinates\n         * @apioption yAxis.tooltipValueFormat\n         */\n        ''; // Keeps doclets above separate in JS file\n        /* *\n         *\n         *  Default Options\n         *\n         * */\n        const ParallelCoordinatesDefaults = {\n            chart: chartDefaults,\n            xAxis: xAxisDefaults\n        };\n\n        return ParallelCoordinatesDefaults;\n    });\n    _registerModule(_modules, 'Extensions/ParallelCoordinates/ParallelAxis.js', [_modules['Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js'], _modules['Core/Utilities.js']], function (ParallelCoordinatesDefaults, U) {\n        /* *\n         *\n         *  Parallel coordinates module\n         *\n         *  (c) 2010-2024 Pawel Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent, arrayMax, arrayMin, isNumber, merge, pick, splat } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Support for parallel axes.\n         * @private\n         * @class\n         */\n        class ParallelAxisAdditions {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            constructor(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set predefined left+width and top+height (inverted) for yAxes.\n             * This method modifies options param.\n             *\n             * @private\n             *\n             * @param  {Array<string>} axisPosition\n             * ['left', 'width', 'height', 'top'] or ['top', 'height', 'width', 'left']\n             * for an inverted chart.\n             *\n             * @param  {Highcharts.AxisOptions} options\n             * Axis options.\n             */\n            setPosition(axisPosition, options) {\n                const parallel = this, axis = parallel.axis, chart = axis.chart, fraction = ((parallel.position || 0) + 0.5) /\n                    (chart.parallelInfo.counter + 1);\n                if (chart.polar) {\n                    options.angle = 360 * fraction;\n                }\n                else {\n                    options[axisPosition[0]] = 100 * fraction + '%';\n                    axis[axisPosition[1]] = options[axisPosition[1]] = 0;\n                    // In case of chart.update(inverted), remove old options:\n                    axis[axisPosition[2]] = options[axisPosition[2]] = null;\n                    axis[axisPosition[3]] = options[axisPosition[3]] = null;\n                }\n            }\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ParallelAxis;\n        (function (ParallelAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Adds support for parallel axes.\n             * @private\n             */\n            function compose(AxisClass) {\n                if (!AxisClass.keepProps.includes('parallel')) {\n                    const axisCompo = AxisClass;\n                    // On update, keep parallel additions.\n                    AxisClass.keepProps.push('parallel');\n                    addEvent(axisCompo, 'init', onInit);\n                    addEvent(axisCompo, 'afterSetOptions', onAfterSetOptions);\n                    addEvent(axisCompo, 'getSeriesExtremes', onGetSeriesExtremes);\n                }\n            }\n            ParallelAxis.compose = compose;\n            /**\n             * Update default options with predefined for a parallel coords.\n             * @private\n             */\n            function onAfterSetOptions(e) {\n                const axis = this, chart = axis.chart, parallelCoordinates = axis.parallelCoordinates;\n                let axisPosition = [\n                    'left', 'width', 'height', 'top'\n                ];\n                if (chart.hasParallelCoordinates) {\n                    if (chart.inverted) {\n                        axisPosition = axisPosition.reverse();\n                    }\n                    if (axis.isXAxis) {\n                        axis.options = merge(axis.options, ParallelCoordinatesDefaults.xAxis, e.userOptions);\n                    }\n                    else {\n                        const axisIndex = chart.yAxis.indexOf(axis); // #13608\n                        axis.options = merge(axis.options, axis.chart.options.chart.parallelAxes, e.userOptions);\n                        parallelCoordinates.position = pick(parallelCoordinates.position, axisIndex >= 0 ? axisIndex : chart.yAxis.length);\n                        parallelCoordinates.setPosition(axisPosition, axis.options);\n                    }\n                }\n            }\n            /**\n             * Each axis should gather extremes from points on a particular position in\n             * series.data. Not like the default one, which gathers extremes from all\n             * series bind to this axis. Consider using series.points instead of\n             * series.yData.\n             * @private\n             */\n            function onGetSeriesExtremes(e) {\n                const axis = this;\n                const chart = axis.chart;\n                const parallelCoordinates = axis.parallelCoordinates;\n                if (!parallelCoordinates) {\n                    return;\n                }\n                if (chart && chart.hasParallelCoordinates && !axis.isXAxis) {\n                    const index = parallelCoordinates.position;\n                    let currentPoints = [];\n                    axis.series.forEach(function (series) {\n                        if (series.yData &&\n                            series.visible &&\n                            isNumber(index)) {\n                            const y = series.yData[index];\n                            // Take into account range series points as well (#15752)\n                            currentPoints.push.apply(currentPoints, splat(y));\n                        }\n                    });\n                    currentPoints = currentPoints.filter(isNumber);\n                    axis.dataMin = arrayMin(currentPoints);\n                    axis.dataMax = arrayMax(currentPoints);\n                    e.preventDefault();\n                }\n            }\n            /**\n             * Add parallel addition\n             * @private\n             */\n            function onInit() {\n                const axis = this;\n                if (!axis.parallelCoordinates) {\n                    axis.parallelCoordinates = new ParallelAxisAdditions(axis);\n                }\n            }\n        })(ParallelAxis || (ParallelAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ParallelAxis;\n    });\n    _registerModule(_modules, 'Extensions/ParallelCoordinates/ParallelSeries.js', [_modules['Core/Globals.js'], _modules['Core/Templating.js'], _modules['Core/Utilities.js']], function (H, T, U) {\n        /* *\n         *\n         *  Parallel coordinates module\n         *\n         *  (c) 2010-2024 Pawel Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { format } = T;\n        const { addEvent, defined, erase, extend, insertItem, isArray, isNumber, pick, pushUnique, wrap } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ParallelSeries;\n        (function (ParallelSeries) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'ParallelSeries')) {\n                    const CompoClass = SeriesClass, { line: { prototype: { pointClass: LinePointClass } }, spline: { prototype: { pointClass: SplinePointClass } } } = SeriesClass.types;\n                    addEvent(CompoClass, 'afterTranslate', onSeriesAfterTranslate, { order: 1 });\n                    addEvent(CompoClass, 'bindAxes', onSeriesBindAxes);\n                    addEvent(CompoClass, 'destroy', onSeriesDestroy);\n                    if (LinePointClass) {\n                        wrap(LinePointClass.prototype, 'getLabelConfig', wrapSeriesGetLabelConfig);\n                    }\n                    if (SplinePointClass) {\n                        wrap(SplinePointClass.prototype, 'getLabelConfig', wrapSeriesGetLabelConfig);\n                    }\n                }\n            }\n            ParallelSeries.compose = compose;\n            /**\n             * Translate each point using corresponding yAxis.\n             * @private\n             */\n            function onSeriesAfterTranslate() {\n                const series = this, chart = this.chart, points = series.points, dataLength = points && points.length;\n                let closestPointRangePx = Number.MAX_VALUE, lastPlotX, point;\n                if (this.chart.hasParallelCoordinates) {\n                    for (let i = 0; i < dataLength; i++) {\n                        point = points[i];\n                        if (defined(point.y)) {\n                            if (chart.polar) {\n                                point.plotX = chart.yAxis[i].angleRad || 0;\n                            }\n                            else if (chart.inverted) {\n                                point.plotX = (chart.plotHeight -\n                                    chart.yAxis[i].top +\n                                    chart.plotTop);\n                            }\n                            else {\n                                point.plotX = chart.yAxis[i].left - chart.plotLeft;\n                            }\n                            point.clientX = point.plotX;\n                            point.plotY = chart.yAxis[i]\n                                .translate(point.y, false, true, void 0, true);\n                            // Range series (#15752)\n                            if (isNumber(point.high)) {\n                                point.plotHigh = chart.yAxis[i].translate(point.high, false, true, void 0, true);\n                            }\n                            if (typeof lastPlotX !== 'undefined') {\n                                closestPointRangePx = Math.min(closestPointRangePx, Math.abs(point.plotX - lastPlotX));\n                            }\n                            lastPlotX = point.plotX;\n                            point.isInside = chart.isInsidePlot(point.plotX, point.plotY, { inverted: chart.inverted });\n                        }\n                        else {\n                            point.isNull = true;\n                        }\n                    }\n                    this.closestPointRangePx = closestPointRangePx;\n                }\n            }\n            /**\n             * Bind each series to each yAxis. yAxis needs a reference to all series to\n             * calculate extremes.\n             * @private\n             */\n            function onSeriesBindAxes(e) {\n                const series = this, chart = series.chart;\n                if (chart.hasParallelCoordinates) {\n                    const series = this;\n                    for (const axis of chart.axes) {\n                        insertItem(series, axis.series);\n                        axis.isDirty = true;\n                    }\n                    series.xAxis = chart.xAxis[0];\n                    series.yAxis = chart.yAxis[0];\n                    e.preventDefault();\n                }\n            }\n            /**\n             * On destroy, we need to remove series from each `axis.series`.\n             * @private\n             */\n            function onSeriesDestroy() {\n                const series = this, chart = series.chart;\n                if (chart.hasParallelCoordinates) {\n                    for (const axis of (chart.axes || [])) {\n                        if (axis && axis.series) {\n                            erase(axis.series, series);\n                            axis.isDirty = axis.forceRedraw = true;\n                        }\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapSeriesGetLabelConfig(proceed) {\n                const chart = this.series && this.series.chart, config = proceed.apply(this, [].slice.call(arguments, 1));\n                let formattedValue, yAxisOptions, labelFormat, yAxis;\n                if (chart &&\n                    chart.hasParallelCoordinates &&\n                    !defined(config.formattedValue)) {\n                    yAxis = chart.yAxis[this.x];\n                    yAxisOptions = yAxis.options;\n                    labelFormat = pick(yAxisOptions.tooltipValueFormat, yAxisOptions.labels.format);\n                    if (labelFormat) {\n                        formattedValue = format(labelFormat, extend(this, { value: this.y }), chart);\n                    }\n                    else if (yAxis.dateTime) {\n                        formattedValue = chart.time.dateFormat(chart.time.resolveDTLFormat(yAxisOptions.dateTimeLabelFormats[yAxis.tickPositions.info.unitName]).main, this.y);\n                    }\n                    else if (isArray(yAxisOptions.categories)) {\n                        formattedValue = yAxisOptions.categories[this.y];\n                    }\n                    else {\n                        formattedValue = this.y;\n                    }\n                    config.formattedValue =\n                        config.point.formattedValue = formattedValue;\n                }\n                return config;\n            }\n        })(ParallelSeries || (ParallelSeries = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ParallelSeries;\n    });\n    _registerModule(_modules, 'Extensions/ParallelCoordinates/ParallelCoordinates.js', [_modules['Extensions/ParallelCoordinates/ParallelAxis.js'], _modules['Extensions/ParallelCoordinates/ParallelCoordinatesDefaults.js'], _modules['Extensions/ParallelCoordinates/ParallelSeries.js'], _modules['Core/Utilities.js']], function (ParallelAxis, ParallelCoordinatesDefaults, ParallelSeries, U) {\n        /* *\n         *\n         *  Parallel coordinates module\n         *\n         *  (c) 2010-2024 Pawel Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent, defined, merge, splat } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class ChartAdditions {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Define how many parellel axes we have according to the longest dataset.\n             * This is quite heavy - loop over all series and check series.data.length\n             * Consider:\n             *\n             * - make this an option, so user needs to set this to get better\n             *   performance\n             *\n             * - check only first series for number of points and assume the rest is the\n             *   same\n             *\n             * @private\n             * @function Highcharts.Chart#setParallelInfo\n             * @param {Highcharts.Options} options\n             * User options\n             * @requires modules/parallel-coordinates\n             */\n            setParallelInfo(options) {\n                const chart = (this.chart ||\n                    this), seriesOptions = options.series;\n                chart.parallelInfo = {\n                    counter: 0\n                };\n                for (const series of seriesOptions) {\n                    if (series.data) {\n                        chart.parallelInfo.counter = Math.max(chart.parallelInfo.counter, series.data.length - 1);\n                    }\n                }\n            }\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ParallelCoordinates;\n        (function (ParallelCoordinates) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(AxisClass, ChartClass, highchartsDefaultOptions, SeriesClass) {\n                ParallelAxis.compose(AxisClass);\n                ParallelSeries.compose(SeriesClass);\n                const ChartCompo = ChartClass, addsProto = ChartAdditions.prototype, chartProto = ChartCompo.prototype;\n                if (!chartProto.setParallelInfo) {\n                    chartProto.setParallelInfo = addsProto.setParallelInfo;\n                    addEvent(ChartCompo, 'init', onChartInit);\n                    addEvent(ChartCompo, 'update', onChartUpdate);\n                    merge(true, highchartsDefaultOptions.chart, ParallelCoordinatesDefaults.chart);\n                }\n            }\n            ParallelCoordinates.compose = compose;\n            /**\n             * Initialize parallelCoordinates\n             * @private\n             */\n            function onChartInit(e) {\n                const chart = this, options = e.args[0], defaultYAxis = splat(options.yAxis || {}), newYAxes = [];\n                let yAxisLength = defaultYAxis.length;\n                /**\n                 * Flag used in parallel coordinates plot to check if chart has\n                 * ||-coords (parallel coords).\n                 *\n                 * @requires modules/parallel-coordinates\n                 *\n                 * @name Highcharts.Chart#hasParallelCoordinates\n                 * @type {boolean}\n                 */\n                chart.hasParallelCoordinates = options.chart &&\n                    options.chart.parallelCoordinates;\n                if (chart.hasParallelCoordinates) {\n                    chart.setParallelInfo(options);\n                    // Push empty yAxes in case user did not define them:\n                    for (; yAxisLength <= chart.parallelInfo.counter; yAxisLength++) {\n                        newYAxes.push({});\n                    }\n                    if (!options.legend) {\n                        options.legend = {};\n                    }\n                    if (options.legend &&\n                        typeof options.legend.enabled === 'undefined') {\n                        options.legend.enabled = false;\n                    }\n                    merge(true, options, \n                    // Disable boost\n                    {\n                        boost: {\n                            seriesThreshold: Number.MAX_VALUE\n                        },\n                        plotOptions: {\n                            series: {\n                                boostThreshold: Number.MAX_VALUE\n                            }\n                        }\n                    });\n                    options.yAxis = defaultYAxis.concat(newYAxes);\n                    options.xAxis = merge(ParallelCoordinatesDefaults.xAxis, // Docs\n                    splat(options.xAxis || {})[0]);\n                }\n            }\n            /**\n             * Initialize parallelCoordinates\n             * @private\n             */\n            function onChartUpdate(e) {\n                const chart = this, options = e.options;\n                if (options.chart) {\n                    if (defined(options.chart.parallelCoordinates)) {\n                        chart.hasParallelCoordinates =\n                            options.chart.parallelCoordinates;\n                    }\n                    chart.options.chart.parallelAxes = merge(chart.options.chart.parallelAxes, options.chart.parallelAxes);\n                }\n                if (chart.hasParallelCoordinates) {\n                    // (#10081)\n                    if (options.series) {\n                        chart.setParallelInfo(options);\n                    }\n                    for (const axis of chart.yAxis) {\n                        axis.update({}, false);\n                    }\n                }\n            }\n        })(ParallelCoordinates || (ParallelCoordinates = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ParallelCoordinates;\n    });\n    _registerModule(_modules, 'masters/modules/parallel-coordinates.src.js', [_modules['Core/Globals.js'], _modules['Extensions/ParallelCoordinates/ParallelCoordinates.js']], function (Highcharts, ParallelCoordinates) {\n\n        const G = Highcharts;\n        ParallelCoordinates.compose(G.Axis, G.Chart, G.defaultOptions, G.Series);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","chart","parallelCoordinates","parallelAxes","lineWidth","title","text","reserveSpace","labels","x","y","align","offset","xAxis","tickLength","opposite","type","ParallelCoordinatesDefaults","U","ParallelAxis","addEvent","arrayMax","arrayMin","isNumber","merge","pick","splat","ParallelAxisAdditions","constructor","axis","setPosition","axisPosition","options","parallel","fraction","position","parallelInfo","counter","polar","angle","onAfterSetOptions","e","hasParallelCoordinates","inverted","reverse","isXAxis","userOptions","axisIndex","yAxis","indexOf","length","onGetSeriesExtremes","index","currentPoints","series","forEach","yData","visible","push","filter","dataMin","dataMax","preventDefault","onInit","compose","AxisClass","keepProps","includes","H","T","ParallelSeries","composed","format","defined","erase","extend","insertItem","isArray","pushUnique","wrap","onSeriesAfterTranslate","points","dataLength","closestPointRangePx","Number","MAX_VALUE","lastPlotX","point","i","plotX","angleRad","plotHeight","top","plotTop","left","plotLeft","clientX","plotY","translate","high","plotHigh","Math","min","abs","isInside","isInsidePlot","isNull","onSeriesBindAxes","axes","isDirty","onSeriesDestroy","forceRedraw","wrapSeriesGetLabelConfig","proceed","formattedValue","yAxisOptions","labelFormat","config","slice","call","arguments","tooltipValueFormat","value","dateTime","time","dateFormat","resolveDTLFormat","dateTimeLabelFormats","tickPositions","info","unitName","main","categories","SeriesClass","line","prototype","pointClass","LinePointClass","spline","SplinePointClass","types","order","ParallelCoordinates","ChartAdditions","setParallelInfo","seriesOptions","data","max","onChartInit","defaultYAxis","newYAxes","yAxisLength","legend","enabled","boost","seriesThreshold","plotOptions","boostThreshold","concat","onChartUpdate","update","ChartClass","highchartsDefaultOptions","addsProto","chartProto","ChartCompo","G","Axis","Chart","defaultOptions","Series"],"mappings":"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"}