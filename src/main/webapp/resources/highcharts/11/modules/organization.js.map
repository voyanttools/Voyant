{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n * Organization chart series type\n *\n * (c) 2019-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/organization', ['highcharts', 'highcharts/modules/sankey'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/Organization/OrganizationPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Organization chart module\n         *\n         *  (c) 2018-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sankey: { prototype: { pointClass: SankeyPointClass } } } = SeriesRegistry.seriesTypes;\n        const { defined, find, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get columns offset including all sibling and cousins etc.\n         * @private\n         */\n        function getOffset(node) {\n            let offset = node.linksFrom.length;\n            node.linksFrom.forEach((link) => {\n                if (link.id === link.toNode.linksTo[0].id) {\n                    // Node has children, that hangs directly from it:\n                    offset += getOffset(link.toNode);\n                }\n                else {\n                    // If the node hangs from multiple parents, and this is not\n                    // the last one, ignore it:\n                    offset--;\n                }\n            });\n            return offset;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class OrganizationPoint extends SankeyPointClass {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            constructor(series, options, x) {\n                super(series, options, x);\n                if (!this.isNode) {\n                    this.dataLabelOnNull = true;\n                    this.formatPrefix = 'link';\n                }\n            }\n            /**\n             * All nodes in an org chart are equal width.\n             * @private\n             */\n            getSum() {\n                return 1;\n            }\n            /**\n             * Set node.column for hanging layout\n             * @private\n             */\n            setNodeColumn() {\n                super.setNodeColumn();\n                const node = this, fromNode = node.getFromNode().fromNode;\n                // Hanging layout\n                if (\n                // Not defined by user\n                !defined(node.options.column) &&\n                    // Has links to\n                    node.linksTo.length !== 0 &&\n                    // And parent uses hanging layout\n                    fromNode &&\n                    fromNode.options.layout === 'hanging') {\n                    let i = -1, link;\n                    // Default all children of the hanging node\n                    // to have hanging layout\n                    node.options.layout = pick(node.options.layout, 'hanging');\n                    node.hangsFrom = fromNode;\n                    find(fromNode.linksFrom, (link, index) => {\n                        const found = link.toNode === node;\n                        if (found) {\n                            i = index;\n                        }\n                        return found;\n                    });\n                    // For all siblings' children (recursively)\n                    // increase the column offset to prevent overlapping\n                    for (let j = 0; j < fromNode.linksFrom.length; ++j) {\n                        link = fromNode.linksFrom[j];\n                        if (link.toNode.id === node.id) {\n                            // Break\n                            j = fromNode.linksFrom.length;\n                        }\n                        else {\n                            i += getOffset(link.toNode);\n                        }\n                    }\n                    node.column = (node.column || 0) + i;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OrganizationPoint;\n    });\n    _registerModule(_modules, 'Series/Organization/OrganizationSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Organization chart module\n         *\n         *  (c) 2018-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An organization chart is a diagram that shows the structure of an\n         * organization and the relationships and relative ranks of its parts and\n         * positions.\n         *\n         * @sample       highcharts/demo/organization-chart/\n         *               Organization chart\n         * @sample       highcharts/series-organization/horizontal/\n         *               Horizontal organization chart\n         * @sample       highcharts/series-organization/borderless\n         *               Borderless design\n         * @sample       highcharts/series-organization/center-layout\n         *               Centered layout\n         *\n         * @extends      plotOptions.sankey\n         * @excluding    allowPointSelect, curveFactor, dataSorting\n         * @since        7.1.0\n         * @product      highcharts\n         * @requires     modules/organization\n         * @optionparent plotOptions.organization\n         */\n        const OrganizationSeriesDefaults = {\n            /**\n             * The border color of the node cards.\n             *\n             * @type {Highcharts.ColorString}\n             */\n            borderColor: \"#666666\" /* Palette.neutralColor60 */,\n            /**\n             * The border radius of the node cards.\n             *\n             * @private\n             */\n            borderRadius: 3,\n            /**\n             * Radius for the rounded corners of the links between nodes. This\n             * option is now deprecated, and moved to\n             * [link.radius](#plotOptions.organization.link.radius).\n             *\n             * @sample   highcharts/series-organization/link-options\n             *           Square links\n             *\n             * @deprecated\n             * @apioption series.organization.linkRadius\n             */\n            /**\n             * Link Styling options\n             * @since 10.3.0\n             * @product highcharts\n             */\n            link: {\n                /**\n                 * Modifier of the shape of the curved link. Works best for values\n                 * between 0 and 1, where 0 is a straight line, and 1 is a shape\n                 * close to the default one.\n                 *\n                 * @default 0.5\n                 * @type {number}\n                 * @since 10.3.0\n                 * @product highcharts\n                 * @apioption series.organization.link.offset\n                 */\n                /**\n                 * The color of the links between nodes.\n                 *\n                 * @type {Highcharts.ColorString}\n                 */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /**\n                 * The line width of the links connecting nodes, in pixels.\n                 *\n                 * @sample   highcharts/series-organization/link-options\n                 *           Square links\n                 */\n                lineWidth: 1,\n                /**\n                 * Radius for the rounded corners of the links between nodes.\n                 * Works for `default` link type.\n                 *\n                 * @sample   highcharts/series-organization/link-options\n                 *           Square links\n                 */\n                radius: 10,\n                /**\n                 * Type of the link shape.\n                 *\n                 * @sample   highcharts/series-organization/different-link-types\n                 *           Different link types\n                 *\n                 * @declare Highcharts.OrganizationLinkTypeValue\n                 * @type {'default' | 'curved' | 'straight'}\n                 * @default 'default'\n                 * @product highcharts\n                 */\n                type: 'default'\n            },\n            borderWidth: 1,\n            /**\n             * @declare Highcharts.SeriesOrganizationDataLabelsOptionsObject\n             *\n             * @private\n             */\n            dataLabels: {\n                /* eslint-disable valid-jsdoc */\n                /**\n                 * A callback for defining the format for _nodes_ in the\n                 * organization chart. The `nodeFormat` option takes precedence\n                 * over `nodeFormatter`.\n                 *\n                 * In an organization chart, the `nodeFormatter` is a quite complex\n                 * function of the available options, striving for a good default\n                 * layout of cards with or without images. In organization chart,\n                 * the data labels come with `useHTML` set to true, meaning they\n                 * will be rendered as true HTML above the SVG.\n                 *\n                 * @sample highcharts/series-organization/datalabels-nodeformatter\n                 *         Modify the default label format output\n                 *\n                 * @type  {Highcharts.SeriesSankeyDataLabelsFormatterCallbackFunction}\n                 * @since 6.0.2\n                 */\n                nodeFormatter: function () {\n                    const outerStyle = {\n                        width: '100%',\n                        height: '100%',\n                        display: 'flex',\n                        'flex-direction': 'row',\n                        'align-items': 'center',\n                        'justify-content': 'center'\n                    }, imageStyle = {\n                        'max-height': '100%',\n                        'border-radius': '50%'\n                    }, innerStyle = {\n                        width: '100%',\n                        padding: 0,\n                        'text-align': 'center',\n                        'white-space': 'normal'\n                    }, nameStyle = {\n                        margin: 0\n                    }, titleStyle = {\n                        margin: 0\n                    }, descriptionStyle = {\n                        opacity: 0.75,\n                        margin: '5px'\n                    };\n                    // eslint-disable-next-line valid-jsdoc\n                    /**\n                     * @private\n                     */\n                    function styleAttr(style) {\n                        return Object.keys(style).reduce(function (str, key) {\n                            return str + key + ':' + style[key] + ';';\n                        }, 'style=\"') + '\"';\n                    }\n                    const { description, image, title } = this.point;\n                    if (image) {\n                        imageStyle['max-width'] = '30%';\n                        innerStyle.width = '70%';\n                    }\n                    // PhantomJS doesn't support flex, roll back to absolute\n                    // positioning\n                    if (this\n                        .series.chart.renderer.forExport) {\n                        outerStyle.display = 'block';\n                        innerStyle.position = 'absolute';\n                        innerStyle.left = image ? '30%' : 0;\n                        innerStyle.top = 0;\n                    }\n                    let html = '<div ' + styleAttr(outerStyle) + '>';\n                    if (image) {\n                        html += '<img src=\"' + image + '\" ' +\n                            styleAttr(imageStyle) + '>';\n                    }\n                    html += '<div ' + styleAttr(innerStyle) + '>';\n                    if (this.point.name) {\n                        html += '<h4 ' + styleAttr(nameStyle) + '>' +\n                            this.point.name + '</h4>';\n                    }\n                    if (title) {\n                        html += '<p ' + styleAttr(titleStyle) + '>' +\n                            (title || '') + '</p>';\n                    }\n                    if (description) {\n                        html += '<p ' + styleAttr(descriptionStyle) + '>' +\n                            description + '</p>';\n                    }\n                    html += '</div>' +\n                        '</div>';\n                    return html;\n                },\n                /* eslint-enable valid-jsdoc */\n                style: {\n                    /** @internal */\n                    fontWeight: 'normal',\n                    /** @internal */\n                    fontSize: '0.9em'\n                },\n                useHTML: true,\n                linkTextPath: {\n                    attributes: {\n                        startOffset: '95%',\n                        textAnchor: 'end'\n                    }\n                }\n            },\n            /**\n             * The indentation in pixels of hanging nodes, nodes which parent has\n             * [layout](#series.organization.nodes.layout) set to `hanging`.\n             *\n             * @private\n             */\n            hangingIndent: 20,\n            /**\n             * Defines the indentation of a `hanging` layout parent's children.\n             * Possible options:\n             *\n             * - `inherit` (default): Only the first child adds the indentation,\n             * children of a child with indentation inherit the indentation.\n             * - `cumulative`: All children of a child with indentation add its\n             * own indent. The option may cause overlapping of nodes.\n             * Then use `shrink` option:\n             * - `shrink`: Nodes shrink by the\n             * [hangingIndent](#plotOptions.organization.hangingIndent)\n             * value until they reach the\n             * [minNodeLength](#plotOptions.organization.minNodeLength).\n             *\n             * @sample highcharts/series-organization/hanging-cumulative\n             *         Every indent increases the indentation\n             *\n             * @sample highcharts/series-organization/hanging-shrink\n             *         Every indent decreases the nodes' width\n             *\n             * @type {Highcharts.OrganizationHangingIndentTranslationValue}\n             * @since 10.0.0\n             * @default inherit\n             *\n             * @private\n             */\n            hangingIndentTranslation: 'inherit',\n            /**\n             * Whether links connecting hanging nodes should be drawn on the left\n             * or right side. Useful for RTL layouts.\n             * **Note:** Only effects inverted charts (vertical layout).\n             *\n             * @sample highcharts/series-organization/hanging-side\n             *         Nodes hanging from right side.\n             *\n             * @type {'left'|'right'}\n             * @since 11.3.0\n             * @default 'left'\n             */\n            hangingSide: 'left',\n            /**\n             *\n             * The color of the links between nodes. This option is moved to\n             * [link.color](#plotOptions.organization.link.color).\n             *\n             * @type {Highcharts.ColorString}\n             * @deprecated\n             * @apioption series.organization.linkColor\n             * @private\n             */\n            /**\n             * The line width of the links connecting nodes, in pixels. This option\n             * is now deprecated and moved to the\n             * [link.radius](#plotOptions.organization.link.lineWidth).\n             *\n             * @sample   highcharts/series-organization/link-options\n             *           Square links\n             *\n             * @deprecated\n             * @apioption series.organization.linkLineWidth\n             * @private\n             */\n            /**\n             * In a horizontal chart, the minimum width of the **hanging** nodes\n             * only, in pixels. In a vertical chart, the minimum height of the\n             * **haning** nodes only, in pixels too.\n             *\n             * Note: Used only when\n             * [hangingIndentTranslation](#plotOptions.organization.hangingIndentTranslation)\n             * is set to `shrink`.\n             *\n             * @see [nodeWidth](#plotOptions.organization.nodeWidth)\n             *\n             * @private\n             */\n            minNodeLength: 10,\n            /**\n             * In a horizontal chart, the width of the nodes in pixels. Note that\n             * most organization charts are inverted (vertical), so the name of this\n             * option is counterintuitive.\n             *\n             * @see [minNodeLength](#plotOptions.organization.minNodeLength)\n             *\n             * @private\n             */\n            nodeWidth: 50,\n            tooltip: {\n                nodeFormat: '{point.name}<br>{point.title}<br>{point.description}'\n            }\n        };\n        /**\n         * An `organization` series. If the [type](#series.organization.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.organization\n         * @exclude   dataSorting, boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  modules/sankey\n         * @requires  modules/organization\n         * @apioption series.organization\n         */\n        /**\n         * @type      {Highcharts.SeriesOrganizationDataLabelsOptionsObject|Array<Highcharts.SeriesOrganizationDataLabelsOptionsObject>}\n         * @product   highcharts\n         * @apioption series.organization.data.dataLabels\n         */\n        /**\n         * A collection of options for the individual nodes. The nodes in an org chart\n         * are auto-generated instances of `Highcharts.Point`, but options can be\n         * applied here and linked by the `id`.\n         *\n         * @extends   series.sankey.nodes\n         * @type      {Array<*>}\n         * @product   highcharts\n         * @apioption series.organization.nodes\n         */\n        /**\n         * Individual data label for each node. The options are the same as\n         * the ones for [series.organization.dataLabels](#series.organization.dataLabels).\n         *\n         * @type    {Highcharts.SeriesOrganizationDataLabelsOptionsObject|Array<Highcharts.SeriesOrganizationDataLabelsOptionsObject>}\n         *\n         * @apioption series.organization.nodes.dataLabels\n         */\n        /**\n         * The job description for the node card, will be inserted by the default\n         * `dataLabel.nodeFormatter`.\n         *\n         * @sample highcharts/demo/organization-chart\n         *         Org chart with job descriptions\n         *\n         * @type      {string}\n         * @product   highcharts\n         * @apioption series.organization.nodes.description\n         */\n        /**\n         * An image for the node card, will be inserted by the default\n         * `dataLabel.nodeFormatter`.\n         *\n         * @sample highcharts/demo/organization-chart\n         *         Org chart with images\n         *\n         * @type      {string}\n         * @product   highcharts\n         * @apioption series.organization.nodes.image\n         */\n        /**\n         * The format string specifying what to show for *links* in the\n         * organization chart.\n         *\n         * Best to use with [`linkTextPath`](#series.organization.dataLabels.linkTextPath) enabled.\n         *\n         * @sample highcharts/series-organization/link-labels\n         *         Organization chart with link labels\n         *\n         * @type      {string}\n         * @product   highcharts\n         * @apioption series.organization.dataLabels.linkFormat\n         * @since 11.0.0\n         */\n        /**\n         * Callback to format data labels for _links_ in the\n         * organization chart. The `linkFormat` option takes\n         * precedence over the `linkFormatter`.\n         *\n         * @type      {OrganizationDataLabelsFormatterCallbackFunction}\n         * @product   highcharts\n         * @apioption series.organization.dataLabels.linkFormatter\n         * @since 11.0.0\n         */\n        /**\n         * Options for a _link_ label text which should follow link\n         * connection.\n         *\n         * @sample highcharts/series-organization/link-labels\n         *         Organization chart with link labels\n         *\n         * @type { DataLabelTextPathOptions }\n         * @product highcharts\n         * @apioption series.organization.dataLabels.linkTextPath\n         * @since 11.0.0\n         */\n        /**\n         * Layout for the node's children. If `hanging`, this node's children will hang\n         * below their parent, allowing a tighter packing of nodes in the diagram.\n         *\n         * Note: Since version 10.0.0, the `hanging` layout is set by default for\n         * children of a parent using `hanging` layout.\n         *\n         * @sample highcharts/demo/organization-chart\n         *         Hanging layout\n         *\n         * @type      {Highcharts.SeriesOrganizationNodesLayoutValue}\n         * @default   normal\n         * @product   highcharts\n         * @apioption series.organization.nodes.layout\n         */\n        /**\n         * The job title for the node card, will be inserted by the default\n         * `dataLabel.nodeFormatter`.\n         *\n         * @sample highcharts/demo/organization-chart\n         *         Org chart with job titles\n         *\n         * @type      {string}\n         * @product   highcharts\n         * @apioption series.organization.nodes.title\n         */\n        /**\n         * An array of data points for the series. For the `organization` series\n         * type, points can be given in the following way:\n         *\n         * An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.area.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         from: 'Category1',\n         *         to: 'Category2',\n         *         weight: 2\n         *     }, {\n         *         from: 'Category1',\n         *         to: 'Category3',\n         *         weight: 5\n         *     }]\n         *  ```\n         *\n         * @type      {Array<*>}\n         * @extends   series.sankey.data\n         * @product   highcharts\n         * @apioption series.organization.data\n         */\n        ''; // Keeps doclets above in JS file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OrganizationSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/PathUtilities.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const getLinkPath = {\n            'default': getDefaultPath,\n            straight: getStraightPath,\n            curved: getCurvedPath\n        };\n        /**\n         *\n         */\n        function getDefaultPath(pathParams) {\n            const { x1, y1, x2, y2, width = 0, inverted = false, radius, parentVisible } = pathParams;\n            const path = [\n                ['M', x1, y1],\n                ['L', x1, y1],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2]\n            ];\n            return parentVisible ?\n                applyRadius([\n                    ['M', x1, y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y2],\n                    ['L', x2, y2]\n                ], radius) :\n                path;\n        }\n        /**\n         *\n         */\n        function getStraightPath(pathParams) {\n            const { x1, y1, x2, y2, width = 0, inverted = false, parentVisible } = pathParams;\n            return parentVisible ? [\n                ['M', x1, y1],\n                ['L', x1 + width * (inverted ? -1 : 1), y2],\n                ['L', x2, y2]\n            ] : [\n                ['M', x1, y1],\n                ['L', x1, y2],\n                ['L', x1, y2]\n            ];\n        }\n        /**\n         *\n         */\n        function getCurvedPath(pathParams) {\n            const { x1, y1, x2, y2, offset = 0, width = 0, inverted = false, parentVisible } = pathParams;\n            return parentVisible ?\n                [\n                    ['M', x1, y1],\n                    [\n                        'C',\n                        x1 + offset,\n                        y1,\n                        x1 - offset + width * (inverted ? -1 : 1),\n                        y2,\n                        x1 + width * (inverted ? -1 : 1),\n                        y2\n                    ],\n                    ['L', x2, y2]\n                ] :\n                [\n                    ['M', x1, y1],\n                    ['C', x1, y1, x1, y2, x1, y2],\n                    ['L', x2, y2]\n                ];\n        }\n        /**\n         * General function to apply corner radius to a path\n         * @private\n         */\n        function applyRadius(path, r) {\n            const d = [];\n            for (let i = 0; i < path.length; i++) {\n                const x = path[i][1];\n                const y = path[i][2];\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // MoveTo\n                    if (i === 0) {\n                        d.push(['M', x, y]);\n                    }\n                    else if (i === path.length - 1) {\n                        d.push(['L', x, y]);\n                        // CurveTo\n                    }\n                    else if (r) {\n                        const prevSeg = path[i - 1];\n                        const nextSeg = path[i + 1];\n                        if (prevSeg && nextSeg) {\n                            const x1 = prevSeg[1], y1 = prevSeg[2], x2 = nextSeg[1], y2 = nextSeg[2];\n                            // Only apply to breaks\n                            if (typeof x1 === 'number' &&\n                                typeof x2 === 'number' &&\n                                typeof y1 === 'number' &&\n                                typeof y2 === 'number' &&\n                                x1 !== x2 &&\n                                y1 !== y2) {\n                                const directionX = x1 < x2 ? 1 : -1, directionY = y1 < y2 ? 1 : -1;\n                                d.push([\n                                    'L',\n                                    x - directionX * Math.min(Math.abs(x - x1), r),\n                                    y - directionY * Math.min(Math.abs(y - y1), r)\n                                ], [\n                                    'C',\n                                    x,\n                                    y,\n                                    x,\n                                    y,\n                                    x + directionX * Math.min(Math.abs(x - x2), r),\n                                    y + directionY * Math.min(Math.abs(y - y2), r)\n                                ]);\n                            }\n                        }\n                        // LineTo\n                    }\n                    else {\n                        d.push(['L', x, y]);\n                    }\n                }\n            }\n            return d;\n        }\n        const PathUtilities = {\n            applyRadius,\n            getLinkPath\n        };\n\n        return PathUtilities;\n    });\n    _registerModule(_modules, 'Series/Organization/OrganizationSeries.js', [_modules['Series/Organization/OrganizationPoint.js'], _modules['Series/Organization/OrganizationSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Series/PathUtilities.js'], _modules['Core/Utilities.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Extensions/TextPath.js']], function (OrganizationPoint, OrganizationSeriesDefaults, SeriesRegistry, PathUtilities, U, SVGElement, TextPath) {\n        /* *\n         *\n         *  Organization chart module\n         *\n         *  (c) 2018-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sankey: SankeySeries } = SeriesRegistry.seriesTypes;\n        const { css, crisp, extend, isNumber, merge, pick } = U;\n        TextPath.compose(SVGElement);\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.organization\n         *\n         * @augments Highcharts.seriesTypes.sankey\n         */\n        class OrganizationSeries extends SankeySeries {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            alignDataLabel(point, dataLabel, options) {\n                // Align the data label to the point graphic\n                const shapeArgs = point.shapeArgs;\n                if (options.useHTML && shapeArgs) {\n                    const padjust = (this.options.borderWidth +\n                        2 * this.options.dataLabels.padding);\n                    let width = shapeArgs.width || 0, height = shapeArgs.height || 0;\n                    if (this.chart.inverted) {\n                        width = height;\n                        height = shapeArgs.width || 0;\n                    }\n                    height -= padjust;\n                    width -= padjust;\n                    // Set the size of the surrounding div emulating `g`\n                    const text = dataLabel.text;\n                    if (text) {\n                        css(text.element.parentNode, {\n                            width: width + 'px',\n                            height: height + 'px'\n                        });\n                        // Set properties for the span emulating `text`\n                        css(text.element, {\n                            left: 0,\n                            top: 0,\n                            width: '100%',\n                            height: '100%',\n                            overflow: 'hidden'\n                        });\n                    }\n                    // The getBBox function is used in `alignDataLabel` to align\n                    // inside the box\n                    dataLabel.getBBox = () => ({ width, height, x: 0, y: 0 });\n                    // Overwrite dataLabel dimensions (#13100).\n                    dataLabel.width = width;\n                    dataLabel.height = height;\n                }\n                super.alignDataLabel.apply(this, arguments);\n            }\n            createNode(id) {\n                const node = super.createNode.call(this, id);\n                // All nodes in an org chart are equal width\n                node.getSum = () => 1;\n                return node;\n            }\n            pointAttribs(point, state) {\n                const series = this, attribs = SankeySeries.prototype.pointAttribs.call(series, point, state), level = point.isNode ? point.level : point.fromNode.level, levelOptions = series.mapOptionsToLevel[level || 0] || {}, options = point.options, stateOptions = (levelOptions.states &&\n                    levelOptions.states[state]) ||\n                    {}, borderRadius = pick(stateOptions.borderRadius, options.borderRadius, levelOptions.borderRadius, series.options.borderRadius), linkColor = pick(stateOptions.linkColor, options.linkColor, levelOptions.linkColor, series.options.linkColor, stateOptions.link && stateOptions.link.color, options.link && options.link.color, levelOptions.link && levelOptions.link.color, series.options.link && series.options.link.color), linkLineWidth = pick(stateOptions.linkLineWidth, options.linkLineWidth, levelOptions.linkLineWidth, series.options.linkLineWidth, stateOptions.link && stateOptions.link.lineWidth, options.link && options.link.lineWidth, levelOptions.link && levelOptions.link.lineWidth, series.options.link && series.options.link.lineWidth), linkOpacity = pick(stateOptions.linkOpacity, options.linkOpacity, levelOptions.linkOpacity, series.options.linkOpacity, stateOptions.link && stateOptions.link.linkOpacity, options.link && options.link.linkOpacity, levelOptions.link && levelOptions.link.linkOpacity, series.options.link && series.options.link.linkOpacity);\n                if (!point.isNode) {\n                    attribs.stroke = linkColor;\n                    attribs['stroke-width'] = linkLineWidth;\n                    attribs.opacity = linkOpacity;\n                    delete attribs.fill;\n                }\n                else {\n                    if (isNumber(borderRadius)) {\n                        attribs.r = borderRadius;\n                    }\n                }\n                return attribs;\n            }\n            translateLink(point) {\n                const chart = this.chart, options = this.options, fromNode = point.fromNode, toNode = point.toNode, linkWidth = pick(options.linkLineWidth, options.link.lineWidth, 0), factor = pick(options.link.offset, 0.5), type = pick(point.options.link && point.options.link.type, options.link.type);\n                if (fromNode.shapeArgs && toNode.shapeArgs) {\n                    const hangingIndent = options.hangingIndent, hangingRight = options.hangingSide === 'right', toOffset = toNode.options.offset, percentOffset = /%$/.test(toOffset) && parseInt(toOffset, 10), inverted = chart.inverted;\n                    let x1 = crisp((fromNode.shapeArgs.x || 0) +\n                        (fromNode.shapeArgs.width || 0), linkWidth), y1 = crisp((fromNode.shapeArgs.y || 0) +\n                        (fromNode.shapeArgs.height || 0) / 2, linkWidth), x2 = crisp(toNode.shapeArgs.x || 0, linkWidth), y2 = crisp((toNode.shapeArgs.y || 0) +\n                        (toNode.shapeArgs.height || 0) / 2, linkWidth), xMiddle;\n                    if (inverted) {\n                        x1 -= (fromNode.shapeArgs.width || 0);\n                        x2 += (toNode.shapeArgs.width || 0);\n                    }\n                    xMiddle = this.colDistance ?\n                        crisp(x2 +\n                            ((inverted ? 1 : -1) *\n                                (this.colDistance - this.nodeWidth)) /\n                                2, linkWidth) :\n                        crisp((x2 + x1) / 2, linkWidth);\n                    // Put the link on the side of the node when an offset is given. HR\n                    // node in the main demo.\n                    if (percentOffset &&\n                        (percentOffset >= 50 || percentOffset <= -50)) {\n                        xMiddle = x2 = crisp(x2 + (inverted ? -0.5 : 0.5) *\n                            (toNode.shapeArgs.width || 0), linkWidth);\n                        y2 = toNode.shapeArgs.y || 0;\n                        if (percentOffset > 0) {\n                            y2 += toNode.shapeArgs.height || 0;\n                        }\n                    }\n                    if (toNode.hangsFrom === fromNode) {\n                        if (chart.inverted) {\n                            y1 = !hangingRight ?\n                                crisp((fromNode.shapeArgs.y || 0) +\n                                    (fromNode.shapeArgs.height || 0) -\n                                    hangingIndent / 2, linkWidth) :\n                                crisp((fromNode.shapeArgs.y || 0) + hangingIndent / 2, linkWidth);\n                            y2 = !hangingRight ? ((toNode.shapeArgs.y || 0) +\n                                (toNode.shapeArgs.height || 0)) : (toNode.shapeArgs.y || 0) + hangingIndent / 2;\n                        }\n                        else {\n                            y1 = crisp((fromNode.shapeArgs.y || 0) + hangingIndent / 2, linkWidth);\n                        }\n                        xMiddle = x2 = crisp((toNode.shapeArgs.x || 0) +\n                            (toNode.shapeArgs.width || 0) / 2, linkWidth);\n                    }\n                    point.plotX = xMiddle;\n                    point.plotY = (y1 + y2) / 2;\n                    point.shapeType = 'path';\n                    if (type === 'straight') {\n                        point.shapeArgs = {\n                            d: [\n                                ['M', x1, y1],\n                                ['L', x2, y2]\n                            ]\n                        };\n                    }\n                    else if (type === 'curved') {\n                        const offset = Math.abs(x2 - x1) * factor * (inverted ? -1 : 1);\n                        point.shapeArgs = {\n                            d: [\n                                ['M', x1, y1],\n                                ['C', x1 + offset, y1, x2 - offset, y2, x2, y2]\n                            ]\n                        };\n                    }\n                    else {\n                        point.shapeArgs = {\n                            d: PathUtilities.applyRadius([\n                                ['M', x1, y1],\n                                ['L', xMiddle, y1],\n                                ['L', xMiddle, y2],\n                                ['L', x2, y2]\n                            ], pick(options.linkRadius, options.link.radius))\n                        };\n                    }\n                    point.dlBox = {\n                        x: (x1 + x2) / 2,\n                        y: (y1 + y2) / 2,\n                        height: linkWidth,\n                        width: 0\n                    };\n                }\n            }\n            translateNode(node, column) {\n                super.translateNode(node, column);\n                const chart = this.chart, options = this.options, sum = node.getSum(), translationFactor = this.translationFactor, nodeHeight = Math.max(Math.round(sum * translationFactor), options.minLinkWidth || 0), hangingRight = options.hangingSide === 'right', indent = options.hangingIndent || 0, indentLogic = options.hangingIndentTranslation, minLength = options.minNodeLength || 10, nodeWidth = Math.round(this.nodeWidth), shapeArgs = node.shapeArgs, sign = chart.inverted ? -1 : 1;\n                let parentNode = node.hangsFrom;\n                if (parentNode) {\n                    if (indentLogic === 'cumulative') {\n                        // Move to the right:\n                        shapeArgs.height -= indent;\n                        // If hanging right, first indent is handled by shrinking.\n                        if (chart.inverted && !hangingRight) {\n                            shapeArgs.y -= sign * indent;\n                        }\n                        while (parentNode) {\n                            // Hanging right is the same direction as non-inverted.\n                            shapeArgs.y += (hangingRight ? 1 : sign) * indent;\n                            parentNode = parentNode.hangsFrom;\n                        }\n                    }\n                    else if (indentLogic === 'shrink') {\n                        // Resize the node:\n                        while (parentNode &&\n                            shapeArgs.height > indent + minLength) {\n                            shapeArgs.height -= indent;\n                            // Fixes nodes not dropping in non-inverted charts.\n                            // Hanging right is the same as non-inverted.\n                            if (!chart.inverted || hangingRight) {\n                                shapeArgs.y += indent;\n                            }\n                            parentNode = parentNode.hangsFrom;\n                        }\n                    }\n                    else {\n                        // Option indentLogic === \"inherit\"\n                        // Do nothing (v9.3.2 and prev versions):\n                        shapeArgs.height -= indent;\n                        if (!chart.inverted || hangingRight) {\n                            shapeArgs.y += indent;\n                        }\n                    }\n                }\n                node.nodeHeight = chart.inverted ?\n                    shapeArgs.width :\n                    shapeArgs.height;\n                // Calculate shape args correctly to align nodes to center (#19946)\n                if (node.shapeArgs && !node.hangsFrom) {\n                    node.shapeArgs = merge(node.shapeArgs, {\n                        x: (node.shapeArgs.x || 0) + (nodeWidth / 2) -\n                            ((node.shapeArgs.width || 0) / 2),\n                        y: (node.shapeArgs.y || 0) + (nodeHeight / 2) -\n                            ((node.shapeArgs.height || 0) / 2)\n                    });\n                }\n            }\n            drawDataLabels() {\n                const dlOptions = this.options.dataLabels;\n                if (dlOptions.linkTextPath && dlOptions.linkTextPath.enabled) {\n                    for (const link of this.points) {\n                        link.options.dataLabels = merge(link.options.dataLabels, { useHTML: false });\n                    }\n                }\n                super.drawDataLabels();\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        OrganizationSeries.defaultOptions = merge(SankeySeries.defaultOptions, OrganizationSeriesDefaults);\n        extend(OrganizationSeries.prototype, {\n            pointClass: OrganizationPoint\n        });\n        SeriesRegistry.registerSeriesType('organization', OrganizationSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Layout value for the child nodes in an organization chart. If `hanging`, this\n         * node's children will hang below their parent, allowing a tighter packing of\n         * nodes in the diagram.\n         *\n         * @typedef {\"normal\"|\"hanging\"} Highcharts.SeriesOrganizationNodesLayoutValue\n         */\n        /**\n         * Indent translation value for the child nodes in an organization chart, when\n         * parent has `hanging` layout. Option can shrink nodes (for tight charts),\n         * translate children to the left, or render nodes directly under the parent.\n         *\n         * @typedef {\"inherit\"|\"cumulative\"|\"shrink\"} Highcharts.OrganizationHangingIndentTranslationValue\n         */\n        ''; // Detach doclets above\n\n        return OrganizationSeries;\n    });\n    _registerModule(_modules, 'masters/modules/organization.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","sankey","prototype","pointClass","SankeyPointClass","seriesTypes","defined","find","pick","constructor","series","options","x","isNode","dataLabelOnNull","formatPrefix","getSum","setNodeColumn","node","fromNode","getFromNode","column","linksTo","length","layout","i","link","hangsFrom","linksFrom","index","found","toNode","j","id","getOffset","offset","forEach","borderColor","borderRadius","color","lineWidth","radius","type","borderWidth","dataLabels","nodeFormatter","outerStyle","width","height","display","imageStyle","innerStyle","padding","styleAttr","style","Object","keys","reduce","str","key","description","image","title","point","chart","renderer","forExport","position","left","top","html","name","margin","opacity","fontWeight","fontSize","useHTML","linkTextPath","attributes","startOffset","textAnchor","hangingIndent","hangingIndentTranslation","hangingSide","minNodeLength","nodeWidth","tooltip","nodeFormat","applyRadius","r","d","y","push","prevSeg","nextSeg","x1","y1","x2","y2","directionX","directionY","Math","min","abs","getLinkPath","pathParams","inverted","parentVisible","straight","curved","OrganizationPoint","OrganizationSeriesDefaults","PathUtilities","SVGElement","TextPath","SankeySeries","css","crisp","extend","isNumber","merge","compose","OrganizationSeries","alignDataLabel","dataLabel","shapeArgs","padjust","text","element","parentNode","overflow","getBBox","arguments","createNode","call","pointAttribs","state","attribs","level","levelOptions","mapOptionsToLevel","stateOptions","states","linkColor","linkLineWidth","linkOpacity","stroke","fill","translateLink","linkWidth","factor","hangingRight","toOffset","percentOffset","test","parseInt","xMiddle","colDistance","plotX","plotY","shapeType","linkRadius","dlBox","translateNode","nodeHeight","max","round","sum","translationFactor","minLinkWidth","indent","indentLogic","minLength","sign","drawDataLabels","dlOptions","enabled","points","defaultOptions","registerSeriesType"],"mappings":"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"}