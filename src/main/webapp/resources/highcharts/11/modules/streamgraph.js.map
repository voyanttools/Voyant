{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Streamgraph module\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/streamgraph', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/Streamgraph/StreamgraphSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Streamgraph module\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A streamgraph is a type of stacked area graph which is displaced around a\n         * central axis, resulting in a flowing, organic shape.\n         *\n         * @sample {highcharts|highstock} highcharts/demo/streamgraph/\n         *         Streamgraph\n         *\n         * @extends      plotOptions.areaspline\n         * @since        6.0.0\n         * @product      highcharts highstock\n         * @requires     modules/streamgraph\n         * @optionparent plotOptions.streamgraph\n         */\n        const StreamgraphSeriesDefaults = {\n            /**\n             * @see [fillColor](#plotOptions.streamgraph.fillColor)\n             * @see [fillOpacity](#plotOptions.streamgraph.fillOpacity)\n             *\n             * @apioption plotOptions.streamgraph.color\n             */\n            /**\n             * @see [color](#plotOptions.streamgraph.color)\n             * @see [fillOpacity](#plotOptions.streamgraph.fillOpacity)\n             *\n             * @apioption plotOptions.streamgraph.fillColor\n             */\n            /**\n             * @see [color](#plotOptions.streamgraph.color)\n             * @see [fillColor](#plotOptions.streamgraph.fillColor)\n             *\n             * @apioption plotOptions.streamgraph.fillOpacity\n             */\n            fillOpacity: 1,\n            lineWidth: 0,\n            marker: {\n                enabled: false\n            },\n            stacking: 'stream'\n        };\n        /**\n         * A `streamgraph` series. If the [type](#series.streamgraph.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.streamgraph\n         * @excluding dataParser, dataURL, step, boostThreshold, boostBlending\n         * @product   highcharts highstock\n         * @requires  modules/streamgraph\n         * @apioption series.streamgraph\n         */\n        /**\n         * @see [fillColor](#series.streamgraph.fillColor)\n         * @see [fillOpacity](#series.streamgraph.fillOpacity)\n         *\n         * @apioption series.streamgraph.color\n         */\n        /**\n         * An array of data points for the series. For the `streamgraph` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of numerical values. In this case, the numerical values will be\n         *    interpreted as `y` options. The `x` values will be automatically\n         *    calculated, either starting at 0 and incremented by 1, or from\n         *    `pointStart` and `pointInterval` given in the series options. If the axis\n         *    has categories, these will be used. Example:\n         *    ```js\n         *    data: [0, 5, 3, 5]\n         *    ```\n         *\n         * 2. An array of arrays with 2 values. In this case, the values correspond to\n         *    `x,y`. If the first value is a string, it is applied as the name of the\n         *    point, and the `x` value is inferred.\n         *    ```js\n         *        data: [\n         *            [0, 9],\n         *            [1, 7],\n         *            [2, 6]\n         *        ]\n         *    ```\n         *\n         * 3. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.area.turboThreshold),\n         *    this option is not available.\n         *    ```js\n         *        data: [{\n         *            x: 1,\n         *            y: 9,\n         *            name: \"Point2\",\n         *            color: \"#00FF00\"\n         *        }, {\n         *            x: 1,\n         *            y: 6,\n         *            name: \"Point1\",\n         *            color: \"#FF00FF\"\n         *        }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n         * @extends   series.line.data\n         * @product   highcharts highstock\n         * @apioption series.streamgraph.data\n         */\n        /**\n         * @see [color](#series.streamgraph.color)\n         * @see [fillOpacity](#series.streamgraph.fillOpacity)\n         *\n         * @apioption series.streamgraph.fillColor\n         */\n        /**\n         * @see [color](#series.streamgraph.color)\n         * @see [fillColor](#series.streamgraph.fillColor)\n         *\n         * @type      {number}\n         * @default   1\n         * @apioption series.streamgraph.fillOpacity\n         */\n        ''; // Keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StreamgraphSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Streamgraph/StreamgraphSeries.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Series/Streamgraph/StreamgraphSeriesDefaults.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, StreamgraphSeriesDefaults, U) {\n        /* *\n         *\n         *  Streamgraph module\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { areaspline: AreaSplineSeries } = SeriesRegistry.seriesTypes;\n        const { merge, extend } = U;\n        /**\n         * Streamgraph series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.streamgraph\n         *\n         * @augments Highcharts.Series\n         */\n        class StreamgraphSeries extends AreaSplineSeries {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            // Modifier function for stream stacks. It simply moves the point up or\n            // down in order to center the full stack vertically.\n            streamStacker(pointExtremes, stack, i) {\n                // Y bottom value\n                pointExtremes[0] -= stack.total / 2;\n                // Y value\n                pointExtremes[1] -= stack.total / 2;\n                // Record the Y data for use when getting axis extremes\n                this.stackedYData[i] = pointExtremes;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        StreamgraphSeries.defaultOptions = merge(AreaSplineSeries.defaultOptions, StreamgraphSeriesDefaults);\n        extend(StreamgraphSeries.prototype, {\n            negStacks: false\n        });\n        SeriesRegistry.registerSeriesType('streamgraph', StreamgraphSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StreamgraphSeries;\n    });\n    _registerModule(_modules, 'masters/modules/streamgraph.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","fillOpacity","lineWidth","marker","enabled","stacking","SeriesRegistry","StreamgraphSeriesDefaults","U","areaspline","AreaSplineSeries","seriesTypes","merge","extend","StreamgraphSeries","streamStacker","pointExtremes","stack","i","total","stackedYData","defaultOptions","prototype","negStacks","registerSeriesType"],"mappings":"CAAA;;;;;;;;CAQC,EACA,SAAUA,CAAO,EACV,AAAkB,UAAlB,OAAOC,QAAuBA,OAAOC,OAAO,EAC5CF,EAAQ,OAAU,CAAGA,EACrBC,OAAOC,OAAO,CAAGF,GACV,AAAkB,YAAlB,OAAOG,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,iCAAkC,CAAC,aAAa,CAAE,SAAUE,CAAU,EAGzE,OAFAL,EAAQK,GACRL,EAAQK,UAAU,CAAGA,EACdL,CACX,GAEAA,EAAQ,AAAsB,aAAtB,OAAOK,WAA6BA,WAAaC,KAAAA,EAEjE,EAAE,SAAUD,CAAU,EAClB,aACA,IAAIE,EAAWF,EAAaA,EAAWE,QAAQ,CAAG,CAAC,EACnD,SAASC,EAAgBC,CAAG,CAAEC,CAAI,CAAEC,CAAI,CAAEC,CAAE,EACnCH,EAAII,cAAc,CAACH,KACpBD,CAAG,CAACC,EAAK,CAAGE,EAAGE,KAAK,CAAC,KAAMH,GAEA,YAAvB,OAAOI,aACPV,EAAWW,GAAG,CAACC,aAAa,CAAC,IAAIF,YAC7B,yBACA,CAAEG,OAAQ,CAAER,KAAMA,EAAMT,OAAQQ,CAAG,CAACC,EAAK,AAAC,CAAE,IAI5D,CACAF,EAAgBD,EAAU,kDAAmD,EAAE,CAAE,WAwJ7E,MA1HkC,CAmB9BY,YAAa,EACbC,UAAW,EACXC,OAAQ,CACJC,QAAS,CAAA,CACb,EACAC,SAAU,QACd,CAkGJ,GACAf,EAAgBD,EAAU,0CAA2C,CAACA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,kDAAkD,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUiB,CAAc,CAAEC,CAAyB,CAAEC,CAAC,EAYhQ,GAAM,CAAEC,WAAYC,CAAgB,CAAE,CAAGJ,EAAeK,WAAW,CAC7D,CAAEC,MAAAA,CAAK,CAAEC,OAAAA,CAAM,CAAE,CAAGL,CAU1B,OAAMM,UAA0BJ,EAQ5BK,cAAcC,CAAa,CAAEC,CAAK,CAAEC,CAAC,CAAE,CAEnCF,CAAa,CAAC,EAAE,EAAIC,EAAME,KAAK,CAAG,EAElCH,CAAa,CAAC,EAAE,EAAIC,EAAME,KAAK,CAAG,EAElC,IAAI,CAACC,YAAY,CAACF,EAAE,CAAGF,CAC3B,CACJ,CAiBA,OAXAF,EAAkBO,cAAc,CAAGT,EAAMF,EAAiBW,cAAc,CAAEd,GAC1EM,EAAOC,EAAkBQ,SAAS,CAAE,CAChCC,UAAW,CAAA,CACf,GACAjB,EAAekB,kBAAkB,CAAC,cAAeV,GAO1CA,CACX,GACAxB,EAAgBD,EAAU,qCAAsC,CAACA,CAAQ,CAAC,kBAAkB,CAAC,CAAE,SAAUF,CAAU,EAG/G,OAAOA,CACX,EACJ"}