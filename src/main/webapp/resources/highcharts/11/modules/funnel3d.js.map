{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Highcharts funnel module\n *\n * (c) 2010-2024 Kacper Madej\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/funnel3d', ['highcharts', 'highcharts/highcharts-3d', 'highcharts/modules/cylinder'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/Funnel3D/SVGElement3DFunnel.js', [_modules['Core/Color/Color.js'], _modules['Core/Globals.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Utilities.js']], function (Color, H, RendererRegistry, U) {\n        /* *\n         *\n         *  Highcharts funnel3d series module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { charts } = H;\n        const { Element3D: SVGElement3D } = RendererRegistry.getRendererType().prototype;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class SVGElement3DFunnel extends SVGElement3D {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.mainParts = ['top', 'bottom'];\n                this.parts = [\n                    'top', 'bottom',\n                    'frontUpper', 'backUpper',\n                    'frontLower', 'backLower',\n                    'rightUpper', 'rightLower'\n                ];\n                this.sideGroups = [\n                    'upperGroup', 'lowerGroup'\n                ];\n                this.sideParts = {\n                    upperGroup: ['frontUpper', 'backUpper', 'rightUpper'],\n                    lowerGroup: ['frontLower', 'backLower', 'rightLower']\n                };\n                this.pathType = 'funnel3d';\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            // override opacity and color setters to control opacity\n            opacitySetter(value) {\n                const funnel3d = this, opacity = parseFloat(value), parts = funnel3d.parts, chart = charts[funnel3d.renderer.chartIndex], filterId = 'group-opacity-' + opacity + '-' + chart.index;\n                // Use default for top and bottom\n                funnel3d.parts = funnel3d.mainParts;\n                funnel3d.singleSetterForParts('opacity', opacity);\n                // Restore\n                funnel3d.parts = parts;\n                if (!chart.renderer.filterId) {\n                    chart.renderer.definition({\n                        tagName: 'filter',\n                        attributes: {\n                            id: filterId\n                        },\n                        children: [{\n                                tagName: 'feComponentTransfer',\n                                children: [{\n                                        tagName: 'feFuncA',\n                                        attributes: {\n                                            type: 'table',\n                                            tableValues: '0 ' + opacity\n                                        }\n                                    }]\n                            }]\n                    });\n                    for (const groupName of funnel3d.sideGroups) {\n                        funnel3d[groupName].attr({\n                            filter: 'url(#' + filterId + ')'\n                        });\n                    }\n                    // Styled mode\n                    if (funnel3d.renderer.styledMode) {\n                        chart.renderer.definition({\n                            tagName: 'style',\n                            textContent: '.highcharts-' + filterId +\n                                ' {filter:url(#' + filterId + ')}'\n                        });\n                        for (const groupName of funnel3d.sideGroups) {\n                            funnel3d[groupName].addClass('highcharts-' + filterId);\n                        }\n                    }\n                }\n                return funnel3d;\n            }\n            fillSetter(fill) {\n                let fillColor = color(fill);\n                // Extract alpha channel to use the opacitySetter\n                const funnel3d = this, alpha = fillColor.rgba[3], partsWithColor = {\n                    // Standard color for top and bottom\n                    top: color(fill).brighten(0.1).get(),\n                    bottom: color(fill).brighten(-0.2).get()\n                };\n                if (alpha < 1) {\n                    fillColor.rgba[3] = 1;\n                    fillColor = fillColor.get('rgb');\n                    // Set opacity through the opacitySetter\n                    funnel3d.attr({\n                        opacity: alpha\n                    });\n                }\n                else {\n                    // Use default for full opacity\n                    fillColor = fill;\n                }\n                // Add gradient for sides\n                if (!fillColor.linearGradient &&\n                    !fillColor.radialGradient &&\n                    funnel3d.gradientForSides) {\n                    fillColor = {\n                        linearGradient: { x1: 0, x2: 1, y1: 1, y2: 1 },\n                        stops: [\n                            [0, color(fill).brighten(-0.2).get()],\n                            [0.5, fill],\n                            [1, color(fill).brighten(-0.2).get()]\n                        ]\n                    };\n                }\n                // Gradient support\n                if (fillColor.linearGradient) {\n                    // Color in steps, as each gradient will generate a key\n                    for (const sideGroupName of funnel3d.sideGroups) {\n                        const box = funnel3d[sideGroupName].gradientBox, gradient = fillColor.linearGradient, alteredGradient = merge(fillColor, {\n                            linearGradient: {\n                                x1: box.x + gradient.x1 * box.width,\n                                y1: box.y + gradient.y1 * box.height,\n                                x2: box.x + gradient.x2 * box.width,\n                                y2: box.y + gradient.y2 * box.height\n                            }\n                        });\n                        for (const partName of funnel3d.sideParts[sideGroupName]) {\n                            partsWithColor[partName] = alteredGradient;\n                        }\n                    }\n                }\n                else {\n                    merge(true, partsWithColor, {\n                        frontUpper: fillColor,\n                        backUpper: fillColor,\n                        rightUpper: fillColor,\n                        frontLower: fillColor,\n                        backLower: fillColor,\n                        rightLower: fillColor\n                    });\n                    if (fillColor.radialGradient) {\n                        for (const sideGroupName of funnel3d.sideGroups) {\n                            const gradBox = funnel3d[sideGroupName].gradientBox, centerX = gradBox.x + gradBox.width / 2, centerY = gradBox.y + gradBox.height / 2, diameter = Math.min(gradBox.width, gradBox.height);\n                            for (const partName of funnel3d.sideParts[sideGroupName]) {\n                                funnel3d[partName].setRadialReference([\n                                    centerX, centerY, diameter\n                                ]);\n                            }\n                        }\n                    }\n                }\n                funnel3d.singleSetterForParts('fill', null, partsWithColor);\n                // Fill for animation getter (#6776)\n                funnel3d.color = funnel3d.fill = fill;\n                // Change gradientUnits to userSpaceOnUse for linearGradient\n                if (fillColor.linearGradient) {\n                    for (const part of [funnel3d.frontLower, funnel3d.frontUpper]) {\n                        const elem = part.element, grad = (elem &&\n                            funnel3d.renderer.gradients[elem.gradient]);\n                        if (grad &&\n                            grad.attr('gradientUnits') !== 'userSpaceOnUse') {\n                            grad.attr({\n                                gradientUnits: 'userSpaceOnUse'\n                            });\n                        }\n                    }\n                }\n                return funnel3d;\n            }\n            adjustForGradient() {\n                const funnel3d = this;\n                let bbox;\n                for (const sideGroupName of funnel3d.sideGroups) {\n                    // Use common extremes for groups for matching gradients\n                    let topLeftEdge = {\n                        x: Number.MAX_VALUE,\n                        y: Number.MAX_VALUE\n                    }, bottomRightEdge = {\n                        x: -Number.MAX_VALUE,\n                        y: -Number.MAX_VALUE\n                    };\n                    // Get extremes\n                    for (const partName of funnel3d.sideParts[sideGroupName]) {\n                        const part = funnel3d[partName];\n                        bbox = part.getBBox(true);\n                        topLeftEdge = {\n                            x: Math.min(topLeftEdge.x, bbox.x),\n                            y: Math.min(topLeftEdge.y, bbox.y)\n                        };\n                        bottomRightEdge = {\n                            x: Math.max(bottomRightEdge.x, bbox.x + bbox.width),\n                            y: Math.max(bottomRightEdge.y, bbox.y + bbox.height)\n                        };\n                    }\n                    // Store for color fillSetter\n                    funnel3d[sideGroupName].gradientBox = {\n                        x: topLeftEdge.x,\n                        width: bottomRightEdge.x - topLeftEdge.x,\n                        y: topLeftEdge.y,\n                        height: bottomRightEdge.y - topLeftEdge.y\n                    };\n                }\n            }\n            zIndexSetter() {\n                // `this.added` won't work, because zIndex is set after the prop is set,\n                // but before the graphic is really added\n                if (this.finishedOnAdd) {\n                    this.adjustForGradient();\n                }\n                // Run default\n                return this.renderer.Element.prototype.zIndexSetter.apply(this, arguments);\n            }\n            onAdd() {\n                this.adjustForGradient();\n                this.finishedOnAdd = true;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGElement3DFunnel;\n    });\n    _registerModule(_modules, 'Series/Funnel3D/Funnel3DComposition.js', [_modules['Series/Funnel3D/SVGElement3DFunnel.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (SVGElement3DFunnel, H, U) {\n        /* *\n         *\n         *  Highcharts funnel3d series module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { charts } = H;\n        const { error, extend, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /** @private */\n        function compose(SVGRendererClass) {\n            const rendererProto = SVGRendererClass.prototype;\n            if (!rendererProto.funnel3d) {\n                rendererProto.Element3D.types.funnel3d = SVGElement3DFunnel;\n                extend(rendererProto, {\n                    funnel3d: rendererFunnel3d,\n                    funnel3dPath: rendererFunnel3dPath\n                });\n            }\n        }\n        /** @private */\n        function rendererFunnel3d(shapeArgs) {\n            const renderer = this, funnel3d = renderer.element3d('funnel3d', shapeArgs), styledMode = renderer.styledMode, \n            // Hide stroke for Firefox\n            strokeAttrs = {\n                'stroke-width': 1,\n                stroke: 'none'\n            };\n            // Create groups for sides for opacity setter\n            funnel3d.upperGroup = renderer.g('funnel3d-upper-group').attr({\n                zIndex: funnel3d.frontUpper.zIndex\n            }).add(funnel3d);\n            for (const upperElem of [funnel3d.frontUpper, funnel3d.backUpper, funnel3d.rightUpper]) {\n                if (!styledMode) {\n                    upperElem.attr(strokeAttrs);\n                }\n                upperElem.add(funnel3d.upperGroup);\n            }\n            funnel3d.lowerGroup = renderer.g('funnel3d-lower-group').attr({\n                zIndex: funnel3d.frontLower.zIndex\n            }).add(funnel3d);\n            for (const lowerElem of [funnel3d.frontLower, funnel3d.backLower, funnel3d.rightLower]) {\n                if (!styledMode) {\n                    lowerElem.attr(strokeAttrs);\n                }\n                lowerElem.add(funnel3d.lowerGroup);\n            }\n            funnel3d.gradientForSides = shapeArgs.gradientForSides;\n            return funnel3d;\n        }\n        /**\n         * Generates paths and zIndexes.\n         * @private\n         */\n        function rendererFunnel3dPath(shapeArgs) {\n            // Check getCylinderEnd for better error message if\n            // the cylinder module is missing\n            if (!this.getCylinderEnd) {\n                error('A required Highcharts module is missing: cylinder.js', true, charts[this.chartIndex]);\n            }\n            const renderer = this, chart = charts[renderer.chartIndex], \n            // Adjust angles for visible edges\n            // based on alpha, selected through visual tests\n            alphaCorrection = shapeArgs.alphaCorrection = 90 - Math.abs((chart.options.chart.options3d.alpha % 180) -\n                90), \n            // Set zIndexes of parts based on cuboid logic, for\n            // consistency\n            cuboidData = this.cuboidPath.call(renderer, merge(shapeArgs, {\n                depth: shapeArgs.width,\n                width: (shapeArgs.width + shapeArgs.bottom.width) / 2\n            })), isTopFirst = cuboidData.isTop, isFrontFirst = !cuboidData.isFront, hasMiddle = !!shapeArgs.middle, \n            //\n            top = renderer.getCylinderEnd(chart, merge(shapeArgs, {\n                x: shapeArgs.x - shapeArgs.width / 2,\n                z: shapeArgs.z - shapeArgs.width / 2,\n                alphaCorrection: alphaCorrection\n            })), bottomWidth = shapeArgs.bottom.width, bottomArgs = merge(shapeArgs, {\n                width: bottomWidth,\n                x: shapeArgs.x - bottomWidth / 2,\n                z: shapeArgs.z - bottomWidth / 2,\n                alphaCorrection: alphaCorrection\n            }), bottom = renderer.getCylinderEnd(chart, bottomArgs, true);\n            let middleWidth = bottomWidth, middleTopArgs = bottomArgs, middleTop = bottom, middleBottom = bottom, \n            // Masking for cylinders or a missing part of a side shape\n            useAlphaCorrection;\n            if (hasMiddle) {\n                middleWidth = shapeArgs.middle.width;\n                middleTopArgs = merge(shapeArgs, {\n                    y: (shapeArgs.y +\n                        shapeArgs.middle.fraction * shapeArgs.height),\n                    width: middleWidth,\n                    x: shapeArgs.x - middleWidth / 2,\n                    z: shapeArgs.z - middleWidth / 2\n                });\n                middleTop = renderer.getCylinderEnd(chart, middleTopArgs, false);\n                middleBottom = renderer.getCylinderEnd(chart, middleTopArgs, false);\n            }\n            const ret = {\n                top: top,\n                bottom: bottom,\n                frontUpper: renderer.getCylinderFront(top, middleTop),\n                zIndexes: {\n                    group: cuboidData.zIndexes.group,\n                    top: isTopFirst !== 0 ? 0 : 3,\n                    bottom: isTopFirst !== 1 ? 0 : 3,\n                    frontUpper: isFrontFirst ? 2 : 1,\n                    backUpper: isFrontFirst ? 1 : 2,\n                    rightUpper: isFrontFirst ? 2 : 1\n                }\n            };\n            ret.backUpper = renderer.getCylinderBack(top, middleTop);\n            useAlphaCorrection = (Math.min(middleWidth, shapeArgs.width) /\n                Math.max(middleWidth, shapeArgs.width)) !== 1;\n            ret.rightUpper = renderer.getCylinderFront(renderer.getCylinderEnd(chart, merge(shapeArgs, {\n                x: shapeArgs.x - shapeArgs.width / 2,\n                z: shapeArgs.z - shapeArgs.width / 2,\n                alphaCorrection: useAlphaCorrection ?\n                    -alphaCorrection : 0\n            }), false), renderer.getCylinderEnd(chart, merge(middleTopArgs, {\n                alphaCorrection: useAlphaCorrection ?\n                    -alphaCorrection : 0\n            }), !hasMiddle));\n            if (hasMiddle) {\n                useAlphaCorrection = (Math.min(middleWidth, bottomWidth) /\n                    Math.max(middleWidth, bottomWidth)) !== 1;\n                merge(true, ret, {\n                    frontLower: renderer.getCylinderFront(middleBottom, bottom),\n                    backLower: renderer.getCylinderBack(middleBottom, bottom),\n                    rightLower: renderer.getCylinderFront(renderer.getCylinderEnd(chart, merge(bottomArgs, {\n                        alphaCorrection: useAlphaCorrection ?\n                            -alphaCorrection : 0\n                    }), true), renderer.getCylinderEnd(chart, merge(middleTopArgs, {\n                        alphaCorrection: useAlphaCorrection ?\n                            -alphaCorrection : 0\n                    }), false)),\n                    zIndexes: {\n                        frontLower: isFrontFirst ? 2 : 1,\n                        backLower: isFrontFirst ? 1 : 2,\n                        rightLower: isFrontFirst ? 1 : 2\n                    }\n                });\n            }\n            return ret;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const Funnel3DComposition = {\n            compose\n        };\n\n        return Funnel3DComposition;\n    });\n    _registerModule(_modules, 'Series/Funnel3D/Funnel3DSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A funnel3d is a 3d version of funnel series type. Funnel charts are\n         * a type of chart often used to visualize stages in a sales project,\n         * where the top are the initial stages with the most clients.\n         *\n         * It requires that the `highcharts-3d.js`, `cylinder.js` and\n         * `funnel3d.js` module are loaded.\n         *\n         * @sample highcharts/demo/funnel3d/\n         *         Funnel3d\n         *\n         * @extends      plotOptions.column\n         * @excluding    allAreas, boostThreshold, colorAxis, compare, compareBase,\n         *               dataSorting, boostBlending\n         * @product      highcharts\n         * @since        7.1.0\n         * @requires     highcharts-3d\n         * @requires     modules/cylinder\n         * @requires     modules/funnel3d\n         * @optionparent plotOptions.funnel3d\n         */\n        const Funnel3DSeriesDefaults = {\n            /** @ignore-option */\n            center: ['50%', '50%'],\n            /**\n             * The max width of the series compared to the width of the plot area,\n             * or the pixel width if it is a number.\n             *\n             * @type    {number|string}\n             * @sample  {highcharts} highcharts/demo/funnel3d/ Funnel3d demo\n             * @product highcharts\n             */\n            width: '90%',\n            /**\n             * The width of the neck, the lower part of the funnel. A number defines\n             * pixel width, a percentage string defines a percentage of the plot\n             * area width.\n             *\n             * @type    {number|string}\n             * @sample  {highcharts} highcharts/demo/funnel3d/ Funnel3d demo\n             * @product highcharts\n             */\n            neckWidth: '30%',\n            /**\n             * The height of the series. If it is a number it defines\n             * the pixel height, if it is a percentage string it is the percentage\n             * of the plot area height.\n             *\n             * @type    {number|string}\n             * @sample  {highcharts} highcharts/demo/funnel3d/ Funnel3d demo\n             * @product highcharts\n             */\n            height: '100%',\n            /**\n             * The height of the neck, the lower part of the funnel. A number\n             * defines pixel width, a percentage string defines a percentage\n             * of the plot area height.\n             *\n             * @type    {number|string}\n             * @sample  {highcharts} highcharts/demo/funnel3d/ Funnel3d demo\n             * @product highcharts\n             */\n            neckHeight: '25%',\n            /**\n             * A reversed funnel has the widest area down. A reversed funnel with\n             * no neck width and neck height is a pyramid.\n             *\n             * @product highcharts\n             */\n            reversed: false,\n            /**\n             * By default sides fill is set to a gradient through this option being\n             * set to `true`. Set to `false` to get solid color for the sides.\n             *\n             * @product highcharts\n             */\n            gradientForSides: true,\n            animation: false,\n            edgeWidth: 0,\n            colorByPoint: true,\n            showInLegend: false,\n            dataLabels: {\n                align: 'right',\n                crop: false,\n                inside: false,\n                overflow: 'allow'\n            }\n        };\n        /**\n         * A `funnel3d` series. If the [type](#series.funnel3d.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @sample {highcharts} highcharts/demo/funnel3d/\n         *         Funnel3d demo\n         *\n         * @since     7.1.0\n         * @extends   series,plotOptions.funnel3d\n         * @excluding allAreas,boostThreshold,colorAxis,compare,compareBase\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @requires  modules/cylinder\n         * @requires  modules/funnel3d\n         * @apioption series.funnel3d\n         */\n        /**\n         * An array of data points for the series. For the `funnel3d` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of numerical values. In this case, the numerical values\n         * will be interpreted as `y` options. The `x` values will be automatically\n         * calculated, either starting at 0 and incremented by 1, or from `pointStart`\n         * and `pointInterval` given in the series options. If the axis has\n         * categories, these will be used. Example:\n         *\n         *  ```js\n         *  data: [0, 5, 3, 5]\n         *  ```\n         *\n         * 2.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.funnel3d.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         y: 2,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         y: 4,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<number|Array<number>|*>}\n         * @extends   series.column.data\n         * @product   highcharts\n         * @apioption series.funnel3d.data\n         */\n        /**\n         * By default sides fill is set to a gradient through this option being\n         * set to `true`. Set to `false` to get solid color for the sides.\n         *\n         * @type      {boolean}\n         * @product   highcharts\n         * @apioption series.funnel3d.data.gradientForSides\n         */\n        ''; // Detachs doclets above\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Funnel3DSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Funnel3D/Funnel3DPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Highcharts funnel3d series module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { seriesTypes: { column: ColumnSeries } } = SeriesRegistry;\n        const { extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Funnel3DPoint extends ColumnSeries.prototype.pointClass {\n        }\n        extend(Funnel3DPoint.prototype, {\n            shapeType: 'funnel3d'\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Funnel3DPoint;\n    });\n    _registerModule(_modules, 'Series/Funnel3D/Funnel3DSeries.js', [_modules['Series/Funnel3D/Funnel3DComposition.js'], _modules['Series/Funnel3D/Funnel3DSeriesDefaults.js'], _modules['Series/Funnel3D/Funnel3DPoint.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Funnel3DComposition, Funnel3DSeriesDefaults, Funnel3DPoint, H, Math3D, SeriesRegistry, U) {\n        /* *\n         *\n         *  Highcharts funnel3d series module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { perspective } = Math3D;\n        const { series: Series, seriesTypes: { column: ColumnSeries } } = SeriesRegistry;\n        const { extend, merge, pick, relativeLength } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The funnel3d series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.funnel3d\n         * @augments seriesTypes.column\n         * @requires highcharts-3d\n         * @requires modules/cylinder\n         * @requires modules/funnel3d\n         */\n        class Funnel3DSeries extends ColumnSeries {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            alignDataLabel(point, _dataLabel, options) {\n                const series = this, dlBoxRaw = point.dlBoxRaw, inverted = series.chart.inverted, below = point.plotY > pick(series.translatedThreshold, series.yAxis.len), inside = pick(options.inside, !!series.options.stacking), dlBox = {\n                    x: dlBoxRaw.x,\n                    y: dlBoxRaw.y,\n                    height: 0\n                };\n                options.align = pick(options.align, !inverted || inside ? 'center' : below ? 'right' : 'left');\n                options.verticalAlign = pick(options.verticalAlign, inverted || inside ? 'middle' : below ? 'top' : 'bottom');\n                if (options.verticalAlign !== 'top') {\n                    dlBox.y += dlBoxRaw.bottom /\n                        (options.verticalAlign === 'bottom' ? 1 : 2);\n                }\n                dlBox.width = series.getWidthAt(dlBox.y);\n                if (series.options.reversed) {\n                    dlBox.width = dlBoxRaw.fullWidth - dlBox.width;\n                }\n                if (inside) {\n                    dlBox.x -= dlBox.width / 2;\n                }\n                else {\n                    // Swap for inside\n                    if (options.align === 'left') {\n                        options.align = 'right';\n                        dlBox.x -= dlBox.width * 1.5;\n                    }\n                    else if (options.align === 'right') {\n                        options.align = 'left';\n                        dlBox.x += dlBox.width / 2;\n                    }\n                    else {\n                        dlBox.x -= dlBox.width / 2;\n                    }\n                }\n                point.dlBox = dlBox;\n                ColumnSeries.prototype.alignDataLabel.apply(series, arguments);\n            }\n            /**\n             * Override default axis options with series required options for axes.\n             * @private\n             */\n            bindAxes() {\n                Series.prototype.bindAxes.apply(this, arguments);\n                extend(this.xAxis.options, {\n                    gridLineWidth: 0,\n                    lineWidth: 0,\n                    title: void 0,\n                    tickPositions: []\n                });\n                merge(true, this.yAxis.options, {\n                    gridLineWidth: 0,\n                    title: void 0,\n                    labels: {\n                        enabled: false\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            translate() {\n                Series.prototype.translate.apply(this, arguments);\n                const series = this, chart = series.chart, options = series.options, reversed = options.reversed, ignoreHiddenPoint = options.ignoreHiddenPoint, plotWidth = chart.plotWidth, plotHeight = chart.plotHeight, center = options.center, centerX = relativeLength(center[0], plotWidth), centerY = relativeLength(center[1], plotHeight), width = relativeLength(options.width, plotWidth), height = relativeLength(options.height, plotHeight), neckWidth = relativeLength(options.neckWidth, plotWidth), neckHeight = relativeLength(options.neckHeight, plotHeight), neckY = (centerY - height / 2) + height - neckHeight, points = series.points;\n                let sum = 0, cumulative = 0, // Start at top\n                tempWidth, getWidthAt, fraction, tooltipPos, \n                //\n                y1, y3, y5, \n                //\n                h, shapeArgs; // @todo: Type it. It's an extended SVGAttributes.\n                // Return the width at a specific y coordinate\n                series.getWidthAt = getWidthAt = function (y) {\n                    const top = (centerY - height / 2);\n                    return (y > neckY || height === neckHeight) ?\n                        neckWidth :\n                        neckWidth + (width - neckWidth) *\n                            (1 - (y - top) / (height - neckHeight));\n                };\n                // Expose\n                series.center = [centerX, centerY, height];\n                series.centerX = centerX;\n                /*\n                    * Individual point coordinate naming:\n                    *\n                    *  _________centerX,y1________\n                    *  \\                         /\n                    *   \\                       /\n                    *    \\                     /\n                    *     \\                   /\n                    *      \\                 /\n                    *        ___centerX,y3___\n                    *\n                    * Additional for the base of the neck:\n                    *\n                    *       |               |\n                    *       |               |\n                    *       |               |\n                    *        ___centerX,y5___\n                    */\n                // get the total sum\n                for (const point of points) {\n                    if (!ignoreHiddenPoint || point.visible !== false) {\n                        sum += point.y;\n                    }\n                }\n                for (const point of points) {\n                    // Set start and end positions\n                    y5 = null;\n                    fraction = sum ? point.y / sum : 0;\n                    y1 = centerY - height / 2 + cumulative * height;\n                    y3 = y1 + fraction * height;\n                    tempWidth = getWidthAt(y1);\n                    h = y3 - y1;\n                    shapeArgs = {\n                        // For fill setter\n                        gradientForSides: pick(point.options.gradientForSides, options.gradientForSides),\n                        x: centerX,\n                        y: y1,\n                        height: h,\n                        width: tempWidth,\n                        z: 1,\n                        top: {\n                            width: tempWidth\n                        }\n                    };\n                    tempWidth = getWidthAt(y3);\n                    shapeArgs.bottom = {\n                        fraction: fraction,\n                        width: tempWidth\n                    };\n                    // The entire point is within the neck\n                    if (y1 >= neckY) {\n                        shapeArgs.isCylinder = true;\n                    }\n                    else if (y3 > neckY) {\n                        // The base of the neck\n                        y5 = y3;\n                        tempWidth = getWidthAt(neckY);\n                        y3 = neckY;\n                        shapeArgs.bottom.width = tempWidth;\n                        shapeArgs.middle = {\n                            fraction: h ? (neckY - y1) / h : 0,\n                            width: tempWidth\n                        };\n                    }\n                    if (reversed) {\n                        shapeArgs.y = y1 = centerY + height / 2 -\n                            (cumulative + fraction) * height;\n                        if (shapeArgs.middle) {\n                            shapeArgs.middle.fraction = 1 -\n                                (h ? shapeArgs.middle.fraction : 0);\n                        }\n                        tempWidth = shapeArgs.width;\n                        shapeArgs.width = shapeArgs.bottom.width;\n                        shapeArgs.bottom.width = tempWidth;\n                    }\n                    point.shapeArgs = extend(point.shapeArgs, shapeArgs);\n                    // For tooltips and data labels context\n                    point.percentage = fraction * 100;\n                    point.plotX = centerX;\n                    if (reversed) {\n                        point.plotY = centerY + height / 2 -\n                            (cumulative + fraction / 2) * height;\n                    }\n                    else {\n                        point.plotY = (y1 + (y5 || y3)) / 2;\n                    }\n                    // Placement of tooltips and data labels in 3D\n                    tooltipPos = perspective([{\n                            x: centerX,\n                            y: point.plotY,\n                            z: reversed ?\n                                -(width - getWidthAt(point.plotY)) / 2 :\n                                -(getWidthAt(point.plotY)) / 2\n                        }], chart, true)[0];\n                    point.tooltipPos = [tooltipPos.x, tooltipPos.y];\n                    // Base to be used when alignment options are known\n                    point.dlBoxRaw = {\n                        x: centerX,\n                        width: getWidthAt(point.plotY),\n                        y: y1,\n                        bottom: shapeArgs.height || 0,\n                        fullWidth: width\n                    };\n                    if (!ignoreHiddenPoint || point.visible !== false) {\n                        cumulative += fraction;\n                    }\n                }\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        Funnel3DSeries.compose = Funnel3DComposition.compose;\n        Funnel3DSeries.defaultOptions = merge(ColumnSeries.defaultOptions, Funnel3DSeriesDefaults);\n        extend(Funnel3DSeries.prototype, {\n            pointClass: Funnel3DPoint,\n            translate3dShapes: noop\n        });\n        SeriesRegistry.registerSeriesType('funnel3d', Funnel3DSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Funnel3DSeries;\n    });\n    _registerModule(_modules, 'masters/modules/funnel3d.src.js', [_modules['Core/Globals.js'], _modules['Series/Funnel3D/Funnel3DSeries.js'], _modules['Core/Renderer/RendererRegistry.js']], function (Highcharts, Funnel3DSeries, RendererRegistry) {\n\n        Funnel3DSeries.compose(RendererRegistry.getRendererType());\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","Color","H","RendererRegistry","U","parse","color","charts","Element3D","SVGElement3D","getRendererType","prototype","merge","constructor","arguments","mainParts","parts","sideGroups","sideParts","upperGroup","lowerGroup","pathType","opacitySetter","value","opacity","parseFloat","funnel3d","chart","renderer","chartIndex","filterId","index","singleSetterForParts","groupName","definition","tagName","attributes","id","children","type","tableValues","attr","filter","styledMode","textContent","addClass","fillSetter","fill","fillColor","alpha","rgba","partsWithColor","top","brighten","get","bottom","linearGradient","radialGradient","gradientForSides","x1","x2","y1","y2","stops","sideGroupName","box","gradientBox","gradient","alteredGradient","x","width","y","height","partName","frontUpper","backUpper","rightUpper","frontLower","backLower","rightLower","gradBox","centerX","centerY","diameter","Math","min","setRadialReference","part","elem","element","grad","gradients","gradientUnits","adjustForGradient","bbox","topLeftEdge","Number","MAX_VALUE","bottomRightEdge","getBBox","max","zIndexSetter","finishedOnAdd","Element","onAdd","SVGElement3DFunnel","error","extend","rendererFunnel3d","shapeArgs","element3d","strokeAttrs","stroke","upperElem","g","zIndex","add","lowerElem","rendererFunnel3dPath","getCylinderEnd","alphaCorrection","abs","options","options3d","cuboidData","cuboidPath","call","depth","isTopFirst","isTop","isFrontFirst","isFront","hasMiddle","middle","z","bottomWidth","bottomArgs","middleWidth","middleTopArgs","middleTop","middleBottom","useAlphaCorrection","fraction","ret","getCylinderFront","zIndexes","group","getCylinderBack","compose","SVGRendererClass","rendererProto","types","funnel3dPath","center","neckWidth","neckHeight","reversed","animation","edgeWidth","colorByPoint","showInLegend","dataLabels","align","crop","inside","overflow","SeriesRegistry","seriesTypes","column","ColumnSeries","Funnel3DPoint","pointClass","shapeType","Funnel3DComposition","Funnel3DSeriesDefaults","Math3D","noop","perspective","series","Series","pick","relativeLength","Funnel3DSeries","alignDataLabel","point","_dataLabel","dlBoxRaw","inverted","below","plotY","translatedThreshold","yAxis","len","stacking","dlBox","verticalAlign","getWidthAt","fullWidth","bindAxes","xAxis","gridLineWidth","lineWidth","title","tickPositions","labels","enabled","translate","ignoreHiddenPoint","plotWidth","plotHeight","neckY","points","sum","cumulative","tempWidth","tooltipPos","y3","y5","h","visible","isCylinder","percentage","plotX","defaultOptions","translate3dShapes","registerSeriesType"],"mappings":"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"}