{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v11.4.8 (2024-08-29)\n *\n * CurrentDateIndicator\n *\n * (c) 2010-2024 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/current-date-indicator', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/CurrentDateIndication.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, merge, pushUnique, wrap } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Show an indicator on the axis for the current date and time. Can be a\n         * boolean or a configuration object similar to\n         * [xAxis.plotLines](#xAxis.plotLines).\n         *\n         * @sample gantt/current-date-indicator/demo\n         *         Current date indicator enabled\n         * @sample gantt/current-date-indicator/object-config\n         *         Current date indicator with custom options\n         *\n         * @declare   Highcharts.CurrentDateIndicatorOptions\n         * @type      {boolean|CurrentDateIndicatorOptions}\n         * @default   true\n         * @extends   xAxis.plotLines\n         * @excluding value\n         * @product   gantt\n         * @apioption xAxis.currentDateIndicator\n         */\n        const defaultOptions = {\n            color: \"#ccd3ff\" /* Palette.highlightColor20 */,\n            width: 2,\n            /**\n             * @declare Highcharts.AxisCurrentDateIndicatorLabelOptions\n             */\n            label: {\n                /**\n                 * Format of the label. This options is passed as the fist argument to\n                 * [dateFormat](/class-reference/Highcharts.Time#dateFormat) function.\n                 *\n                 * @type      {string}\n                 * @default   %a, %b %d %Y, %H:%M\n                 * @product   gantt\n                 * @apioption xAxis.currentDateIndicator.label.format\n                 */\n                format: '%a, %b %d %Y, %H:%M',\n                formatter: function (value, format) {\n                    return this.axis.chart.time.dateFormat(format || '', value);\n                },\n                rotation: 0,\n                /**\n                 * @type {Highcharts.CSSObject}\n                 */\n                style: {\n                    /** @internal */\n                    fontSize: '0.7em'\n                }\n            }\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, PlotLineOrBandClass) {\n            if (pushUnique(composed, 'CurrentDateIndication')) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                addEvent(PlotLineOrBandClass, 'render', onPlotLineOrBandRender);\n                wrap(PlotLineOrBandClass.prototype, 'getLabelText', wrapPlotLineOrBandGetLabelText);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            const options = this.options, cdiOptions = options.currentDateIndicator;\n            if (cdiOptions) {\n                const plotLineOptions = typeof cdiOptions === 'object' ?\n                    merge(defaultOptions, cdiOptions) :\n                    merge(defaultOptions);\n                plotLineOptions.value = Date.now();\n                plotLineOptions.className = 'highcharts-current-date-indicator';\n                if (!options.plotLines) {\n                    options.plotLines = [];\n                }\n                options.plotLines.push(plotLineOptions);\n            }\n        }\n        /**\n         * @private\n         */\n        function onPlotLineOrBandRender() {\n            // If the label already exists, update its text\n            if (this.label) {\n                this.label.attr({\n                    text: this.getLabelText(this.options.label)\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapPlotLineOrBandGetLabelText(defaultMethod, defaultLabelOptions) {\n            const options = this.options;\n            if (options &&\n                options.className &&\n                options.className.indexOf('highcharts-current-date-indicator') !== -1 &&\n                options.label &&\n                typeof options.label.formatter === 'function') {\n                options.value = Date.now();\n                return options.label.formatter\n                    .call(this, options.value, options.label.format);\n            }\n            return defaultMethod.call(this, defaultLabelOptions);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const CurrentDateIndication = {\n            compose\n        };\n\n        return CurrentDateIndication;\n    });\n    _registerModule(_modules, 'masters/modules/current-date-indicator.src.js', [_modules['Core/Globals.js'], _modules['Extensions/CurrentDateIndication.js']], function (Highcharts, CurrentDateIndication) {\n\n        const G = Highcharts;\n        CurrentDateIndication.compose(G.Axis, G.PlotLineOrBand);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","U","composed","addEvent","merge","pushUnique","wrap","defaultOptions","color","width","label","format","formatter","value","axis","chart","time","dateFormat","rotation","style","fontSize","onAxisAfterSetOptions","options","cdiOptions","currentDateIndicator","plotLineOptions","Date","now","className","plotLines","push","onPlotLineOrBandRender","attr","text","getLabelText","wrapPlotLineOrBandGetLabelText","defaultMethod","defaultLabelOptions","indexOf","call","compose","AxisClass","PlotLineOrBandClass","prototype","CurrentDateIndication","G","Axis","PlotLineOrBand"],"mappings":"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"}