{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * 3D features for Highcharts JS\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/highcharts-3d', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Math3D.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { deg2rad } = H;\n        const { pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable max-len */\n        /**\n         * Apply 3-D rotation\n         * Euler Angles (XYZ):\n         *     cosA = cos(Alfa|Roll)\n         *     cosB = cos(Beta|Pitch)\n         *     cosG = cos(Gamma|Yaw)\n         *\n         * Composite rotation:\n         * |          cosB * cosG             |           cosB * sinG            |    -sinB    |\n         * | sinA * sinB * cosG - cosA * sinG | sinA * sinB * sinG + cosA * cosG | sinA * cosB |\n         * | cosA * sinB * cosG + sinA * sinG | cosA * sinB * sinG - sinA * cosG | cosA * cosB |\n         *\n         * Now, Gamma/Yaw is not used (angle=0), so we assume cosG = 1 and sinG = 0, so\n         * we get:\n         * |     cosB    |   0    |   - sinB    |\n         * | sinA * sinB |  cosA  | sinA * cosB |\n         * | cosA * sinB | - sinA | cosA * cosB |\n         *\n         * But in browsers, y is reversed, so we get sinA => -sinA. The general result\n         * is:\n         * |      cosB     |   0    |    - sinB     |     | x |     | px |\n         * | - sinA * sinB |  cosA  | - sinA * cosB |  x  | y |  =  | py |\n         * |  cosA * sinB  |  sinA  |  cosA * cosB  |     | z |     | pz |\n         *\n         * @private\n         * @function rotate3D\n         */\n        /* eslint-enable max-len */\n        /**\n         * Rotates the position as defined in angles.\n         * @private\n         * @param {number} x\n         *        X coordinate\n         * @param {number} y\n         *        Y coordinate\n         * @param {number} z\n         *        Z coordinate\n         * @param {Highcharts.Rotation3DObject} angles\n         *        Rotation angles\n         * @return {Highcharts.Position3DObject}\n         *         Rotated position\n         */\n        function rotate3D(x, y, z, angles) {\n            return {\n                x: angles.cosB * x - angles.sinB * z,\n                y: -angles.sinA * angles.sinB * x + angles.cosA * y -\n                    angles.cosB * angles.sinA * z,\n                z: angles.cosA * angles.sinB * x + angles.sinA * y +\n                    angles.cosA * angles.cosB * z\n            };\n        }\n        /**\n         * Transforms a given array of points according to the angles in chart.options.\n         *\n         * @private\n         * @function Highcharts.perspective\n         *\n         * @param {Array<Highcharts.Position3DObject>} points\n         * The array of points\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @param {boolean} [useInvertedPersp]\n         * Whether to use inverted perspective in calculations\n         *\n         * @return {Array<Highcharts.Position3DObject>}\n         * An array of transformed points\n         *\n         * @requires highcharts-3d\n         */\n        function perspective(points, chart, insidePlotArea, useInvertedPersp) {\n            const options3d = chart.options.chart.options3d, \n            /* The useInvertedPersp argument is used for inverted charts with\n             * already inverted elements, such as dataLabels or tooltip positions.\n             */\n            inverted = pick(useInvertedPersp, insidePlotArea ? chart.inverted : false), origin = {\n                x: chart.plotWidth / 2,\n                y: chart.plotHeight / 2,\n                z: options3d.depth / 2,\n                vd: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0)\n            }, scale = chart.scale3d || 1, beta = deg2rad * options3d.beta * (inverted ? -1 : 1), alpha = deg2rad * options3d.alpha * (inverted ? -1 : 1), angles = {\n                cosA: Math.cos(alpha),\n                cosB: Math.cos(-beta),\n                sinA: Math.sin(alpha),\n                sinB: Math.sin(-beta)\n            };\n            if (!insidePlotArea) {\n                origin.x += chart.plotLeft;\n                origin.y += chart.plotTop;\n            }\n            // Transform each point\n            return points.map(function (point) {\n                const rotated = rotate3D((inverted ? point.y : point.x) - origin.x, (inverted ? point.x : point.y) - origin.y, (point.z || 0) - origin.z, angles), \n                // Apply perspective\n                coordinate = perspective3D(rotated, origin, origin.vd);\n                // Apply translation\n                coordinate.x = coordinate.x * scale + origin.x;\n                coordinate.y = coordinate.y * scale + origin.y;\n                coordinate.z = rotated.z * scale + origin.z;\n                return {\n                    x: (inverted ? coordinate.y : coordinate.x),\n                    y: (inverted ? coordinate.x : coordinate.y),\n                    z: coordinate.z\n                };\n            });\n        }\n        /**\n         * Perspective3D function is available in global Highcharts scope because is\n         * needed also outside of perspective() function (#8042).\n         * @private\n         * @function Highcharts.perspective3D\n         *\n         * @param {Highcharts.Position3DObject} coordinate\n         * 3D position\n         *\n         * @param {Highcharts.Position3DObject} origin\n         * 3D root position\n         *\n         * @param {number} distance\n         * Perspective distance\n         *\n         * @return {Highcharts.PositionObject}\n         * Perspective 3D Position\n         *\n         * @requires highcharts-3d\n         */\n        function perspective3D(coordinate, origin, distance) {\n            const projection = ((distance > 0) &&\n                (distance < Number.POSITIVE_INFINITY)) ?\n                distance / (coordinate.z + origin.z + distance) :\n                1;\n            return {\n                x: coordinate.x * projection,\n                y: coordinate.y * projection\n            };\n        }\n        /**\n         * Calculate a distance from camera to points - made for calculating zIndex of\n         * scatter points.\n         *\n         * @private\n         * @function Highcharts.pointCameraDistance\n         *\n         * @param {Highcharts.Dictionary<number>} coordinates\n         * Coordinates of the specific point\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @return {number}\n         * Distance from camera to point\n         *\n         * @requires highcharts-3d\n         */\n        function pointCameraDistance(coordinates, chart) {\n            const options3d = chart.options.chart.options3d, cameraPosition = {\n                x: chart.plotWidth / 2,\n                y: chart.plotHeight / 2,\n                z: pick(options3d.depth, 1) * pick(options3d.viewDistance, 0) +\n                    options3d.depth\n            }, \n            // Added support for objects with plotX or x coordinates.\n            distance = Math.sqrt(Math.pow(cameraPosition.x - pick(coordinates.plotX, coordinates.x), 2) +\n                Math.pow(cameraPosition.y - pick(coordinates.plotY, coordinates.y), 2) +\n                Math.pow(cameraPosition.z - pick(coordinates.plotZ, coordinates.z), 2));\n            return distance;\n        }\n        /**\n         * Calculate area of a 2D polygon using Shoelace algorithm\n         * https://en.wikipedia.org/wiki/Shoelace_formula\n         *\n         * @private\n         * @function Highcharts.shapeArea\n         *\n         * @param {Array<Highcharts.PositionObject>} vertexes\n         * 2D Polygon\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea(vertexes) {\n            let area = 0, i, j;\n            for (i = 0; i < vertexes.length; i++) {\n                j = (i + 1) % vertexes.length;\n                area += vertexes[i].x * vertexes[j].y - vertexes[j].x * vertexes[i].y;\n            }\n            return area / 2;\n        }\n        /**\n         * Calculate area of a 3D polygon after perspective projection\n         *\n         * @private\n         * @function Highcharts.shapeArea3d\n         *\n         * @param {Array<Highcharts.Position3DObject>} vertexes\n         * 3D Polygon\n         *\n         * @param {Highcharts.Chart} chart\n         * Related chart\n         *\n         * @param {boolean} [insidePlotArea]\n         * Whether to verify that the points are inside the plotArea\n         *\n         * @return {number}\n         * Calculated area\n         *\n         * @requires highcharts-3d\n         */\n        function shapeArea3D(vertexes, chart, insidePlotArea) {\n            return shapeArea(perspective(vertexes, chart, insidePlotArea));\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const Math3D = {\n            perspective,\n            perspective3D,\n            pointCameraDistance,\n            shapeArea,\n            shapeArea3D\n        };\n\n        return Math3D;\n    });\n    _registerModule(_modules, 'Core/Chart/Chart3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Defaults.js'], _modules['Core/Math3D.js'], _modules['Core/Utilities.js']], function (Color, D, Math3D, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Extension for 3D charts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { defaultOptions: genericDefaultOptions } = D;\n        const { perspective, shapeArea3D } = Math3D;\n        const { addEvent, isArray, merge, pick, wrap } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var Chart3D;\n        (function (Chart3D) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            /**\n             * @optionparent\n             * @private\n             */\n            Chart3D.defaultOptions = {\n                chart: {\n                    /**\n                     * Options to render charts in 3 dimensions. This feature requires\n                     * `highcharts-3d.js`, found in the download package or online at\n                     * [code.highcharts.com/highcharts-3d.js](https://code.highcharts.com/highcharts-3d.js).\n                     *\n                     * @since    4.0\n                     * @product  highcharts\n                     * @requires highcharts-3d\n                     */\n                    options3d: {\n                        /**\n                         * Whether to render the chart using the 3D functionality.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        enabled: false,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        alpha: 0,\n                        /**\n                         * One of the two rotation angles for the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        beta: 0,\n                        /**\n                         * The total depth of the chart.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        depth: 100,\n                        /**\n                         * Whether the 3d box should automatically adjust to the chart\n                         * plot area.\n                         *\n                         * @since   4.2.4\n                         * @product highcharts\n                         */\n                        fitToPlot: true,\n                        /**\n                         * Defines the distance the viewer is standing in front of the\n                         * chart, this setting is important to calculate the perspective\n                         * effect in column and scatter charts. It is not used for 3D\n                         * pie charts.\n                         *\n                         * @since   4.0\n                         * @product highcharts\n                         */\n                        viewDistance: 25,\n                        /**\n                         * Set it to `\"auto\"` to automatically move the labels to the\n                         * best edge.\n                         *\n                         * @type    {\"auto\"|null}\n                         * @since   5.0.12\n                         * @product highcharts\n                         */\n                        axisLabelPosition: null,\n                        /**\n                         * Provides the option to draw a frame around the charts by\n                         * defining a bottom, front and back panel.\n                         *\n                         * @since    4.0\n                         * @product  highcharts\n                         * @requires highcharts-3d\n                         */\n                        frame: {\n                            /**\n                             * Whether the frames are visible.\n                             */\n                            visible: 'default',\n                            /**\n                             * General pixel thickness for the frame faces.\n                             */\n                            size: 1,\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             *\n                             * @since    4.0\n                             * @product  highcharts\n                             * @requires highcharts-3d\n                             */\n                            /**\n                             * The color of the panel.\n                             *\n                             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                             * @default   transparent\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.color\n                             */\n                            /**\n                             * The thickness of the panel.\n                             *\n                             * @type      {number}\n                             * @default   1\n                             * @since     4.0\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.size\n                             */\n                            /**\n                             * Whether to display the frame. Possible values are `true`,\n                             * `false`, `\"auto\"` to display only the frames behind the\n                             * data, and `\"default\"` to display faces behind the data\n                             * based on the axis layout, ignoring the point of view.\n                             *\n                             * @sample {highcharts} highcharts/3d/scatter-frame/\n                             *         Auto frames\n                             *\n                             * @type      {boolean|\"default\"|\"auto\"}\n                             * @default   default\n                             * @since     5.0.12\n                             * @product   highcharts\n                             * @apioption chart.options3d.frame.bottom.visible\n                             */\n                            /**\n                             * The bottom of the frame around a 3D chart.\n                             */\n                            bottom: {},\n                            /**\n                             * The top of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            top: {},\n                            /**\n                             * The left side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            left: {},\n                            /**\n                             * The right of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            right: {},\n                            /**\n                             * The back side of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            back: {},\n                            /**\n                             * The front of the frame around a 3D chart.\n                             *\n                             * @extends chart.options3d.frame.bottom\n                             */\n                            front: {}\n                        }\n                    }\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass, FxClass) {\n                const chartProto = ChartClass.prototype;\n                const fxProto = FxClass.prototype;\n                /**\n                 * Shorthand to check the is3d flag.\n                 * @private\n                 * @return {boolean}\n                 * Whether it is a 3D chart.\n                 */\n                chartProto.is3d = function () {\n                    return !!this.options.chart.options3d?.enabled;\n                };\n                chartProto.propsRequireDirtyBox.push('chart.options3d');\n                chartProto.propsRequireUpdateSeries.push('chart.options3d');\n                /**\n                 * Animation setter for matrix property.\n                 * @private\n                 */\n                fxProto.matrixSetter = function () {\n                    let interpolated;\n                    if (this.pos < 1 &&\n                        (isArray(this.start) || isArray(this.end))) {\n                        const start = (this.start ||\n                            [1, 0, 0, 1, 0, 0]), end = this.end || [1, 0, 0, 1, 0, 0];\n                        interpolated = [];\n                        for (let i = 0; i < 6; i++) {\n                            interpolated.push(this.pos * end[i] + (1 - this.pos) * start[i]);\n                        }\n                    }\n                    else {\n                        interpolated = this.end;\n                    }\n                    this.elem.attr(this.prop, interpolated, null, true);\n                };\n                merge(true, genericDefaultOptions, Chart3D.defaultOptions);\n                addEvent(ChartClass, 'init', onInit);\n                addEvent(ChartClass, 'addSeries', onAddSeries);\n                addEvent(ChartClass, 'afterDrawChartBox', onAfterDrawChartBox);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n                addEvent(ChartClass, 'afterInit', onAfterInit);\n                addEvent(ChartClass, 'afterSetChartSize', onAfterSetChartSize);\n                addEvent(ChartClass, 'beforeRedraw', onBeforeRedraw);\n                addEvent(ChartClass, 'beforeRender', onBeforeRender);\n                wrap(chartProto, 'isInsidePlot', wrapIsInsidePlot);\n                wrap(chartProto, 'renderSeries', wrapRenderSeries);\n                wrap(chartProto, 'setClassName', wrapSetClassName);\n            }\n            Chart3D.compose = compose;\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAddSeries(e) {\n                if (this.is3d()) {\n                    if (e.options.type === 'scatter') {\n                        e.options.type = 'scatter3d';\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterDrawChartBox() {\n                if (this.chart3d &&\n                    this.is3d()) {\n                    const chart = this, renderer = chart.renderer, options3d = chart.options.chart.options3d, frame = chart.chart3d.get3dFrame(), xm = chart.plotLeft, xp = chart.plotLeft + chart.plotWidth, ym = chart.plotTop, yp = chart.plotTop + chart.plotHeight, zm = 0, zp = options3d.depth, xmm = xm - (frame.left.visible ? frame.left.size : 0), xpp = xp + (frame.right.visible ? frame.right.size : 0), ymm = ym - (frame.top.visible ? frame.top.size : 0), ypp = yp + (frame.bottom.visible ? frame.bottom.size : 0), zmm = zm - (frame.front.visible ? frame.front.size : 0), zpp = zp + (frame.back.visible ? frame.back.size : 0), verb = chart.hasRendered ? 'animate' : 'attr';\n                    chart.chart3d.frame3d = frame;\n                    if (!chart.frameShapes) {\n                        chart.frameShapes = {\n                            bottom: renderer.polyhedron().add(),\n                            top: renderer.polyhedron().add(),\n                            left: renderer.polyhedron().add(),\n                            right: renderer.polyhedron().add(),\n                            back: renderer.polyhedron().add(),\n                            front: renderer.polyhedron().add()\n                        };\n                    }\n                    chart.frameShapes.bottom[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-bottom',\n                        zIndex: frame.bottom.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.bottom.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.bottom.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.bottom.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.top[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-top',\n                        zIndex: frame.top.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.top.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.top.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.top.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.top.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.left[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-left',\n                        zIndex: frame.left.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.left.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.left.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.left.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.left.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.right[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-right',\n                        zIndex: frame.right.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }],\n                                enabled: frame.right.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }],\n                                enabled: frame.right.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.right.visible && !frame.front.visible\n                            },\n                            {\n                                fill: color(frame.right.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.right.visible && !frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.back[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-back',\n                        zIndex: frame.back.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.back.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xm,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zp\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zp\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zp\n                                    }],\n                                enabled: frame.back.visible\n                            },\n                            {\n                                fill: color(frame.back.color).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zpp\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zpp\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zpp\n                                    }],\n                                enabled: frame.back.visible\n                            }]\n                    });\n                    chart.frameShapes.front[verb]({\n                        'class': 'highcharts-3d-frame highcharts-3d-frame-front',\n                        zIndex: frame.front.frontFacing ? -1000 : 1000,\n                        faces: [{\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.bottom.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.top.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.left.visible\n                            },\n                            {\n                                fill: color(frame.front.color).brighten(-0.1).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible && !frame.right.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xp,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: ym,\n                                        z: zm\n                                    }, {\n                                        x: xm,\n                                        y: yp,\n                                        z: zm\n                                    }, {\n                                        x: xp,\n                                        y: yp,\n                                        z: zm\n                                    }],\n                                enabled: frame.front.visible\n                            },\n                            {\n                                fill: color(frame.front.color).get(),\n                                vertexes: [{\n                                        x: xpp,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ypp,\n                                        z: zmm\n                                    }, {\n                                        x: xmm,\n                                        y: ymm,\n                                        z: zmm\n                                    }, {\n                                        x: xpp,\n                                        y: ymm,\n                                        z: zmm\n                                    }],\n                                enabled: frame.front.visible\n                            }]\n                    });\n                }\n            }\n            /**\n             * Add the required CSS classes for column sides (#6018)\n             * @private\n             */\n            function onAfterGetContainer() {\n                if (this.styledMode) {\n                    // Add definitions used by brighter and darker faces of the cuboids.\n                    [{\n                            name: 'darker',\n                            slope: 0.6\n                        }, {\n                            name: 'brighter',\n                            slope: 1.4\n                        }].forEach(function (cfg) {\n                        this.renderer.definition({\n                            tagName: 'filter',\n                            attributes: {\n                                id: 'highcharts-' + cfg.name\n                            },\n                            children: [{\n                                    tagName: 'feComponentTransfer',\n                                    children: [{\n                                            tagName: 'feFuncR',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncG',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }, {\n                                            tagName: 'feFuncB',\n                                            attributes: {\n                                                type: 'linear',\n                                                slope: cfg.slope\n                                            }\n                                        }]\n                                }]\n                        });\n                    }, this);\n                }\n            }\n            /**\n             * Legacy support for HC < 6 to make 'scatter' series in a 3D chart route to\n             * the real 'scatter3d' series type. (#8407)\n             * @private\n             */\n            function onAfterInit() {\n                const options = this.options;\n                if (this.is3d()) {\n                    (options.series || []).forEach(function (s) {\n                        const type = (s.type ||\n                            options.chart.type ||\n                            options.chart.defaultSeriesType);\n                        if (type === 'scatter') {\n                            s.type = 'scatter3d';\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            function onAfterSetChartSize() {\n                const chart = this, options3d = chart.options.chart.options3d;\n                if (chart.chart3d &&\n                    chart.is3d()) {\n                    // Add a 0-360 normalisation for alfa and beta angles in 3d graph\n                    if (options3d) {\n                        options3d.alpha = options3d.alpha % 360 +\n                            (options3d.alpha >= 0 ? 0 : 360);\n                        options3d.beta = options3d.beta % 360 +\n                            (options3d.beta >= 0 ? 0 : 360);\n                    }\n                    const inverted = chart.inverted, clipBox = chart.clipBox, margin = chart.margin, x = inverted ? 'y' : 'x', y = inverted ? 'x' : 'y', w = inverted ? 'height' : 'width', h = inverted ? 'width' : 'height';\n                    clipBox[x] = -(margin[3] || 0);\n                    clipBox[y] = -(margin[0] || 0);\n                    clipBox[w] = (chart.chartWidth + (margin[3] || 0) + (margin[1] || 0));\n                    clipBox[h] = (chart.chartHeight + (margin[0] || 0) + (margin[2] || 0));\n                    // Set scale, used later in perspective method():\n                    // getScale uses perspective, so scale3d has to be reset.\n                    chart.scale3d = 1;\n                    if (options3d.fitToPlot === true) {\n                        chart.scale3d = chart.chart3d.getScale(options3d.depth);\n                    }\n                    // Recalculate the 3d frame with every call of setChartSize,\n                    // instead of doing it after every redraw(). It avoids ticks\n                    // and axis title outside of chart.\n                    chart.chart3d.frame3d = chart.chart3d.get3dFrame(); // #7942\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRedraw() {\n                if (this.is3d()) {\n                    // Set to force a redraw of all elements\n                    this.isDirtyBox = true;\n                }\n            }\n            /**\n             * @private\n             */\n            function onBeforeRender() {\n                if (this.chart3d && this.is3d()) {\n                    this.chart3d.frame3d = this.chart3d.get3dFrame();\n                }\n            }\n            /**\n             * @private\n             */\n            function onInit() {\n                if (!this.chart3d) {\n                    this.chart3d = new Additions(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapIsInsidePlot(proceed) {\n                return this.is3d() || proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            /**\n             * Draw the series in the reverse order (#3803, #3917)\n             * @private\n             */\n            function wrapRenderSeries(proceed) {\n                let series, i = this.series.length;\n                if (this.is3d()) {\n                    while (i--) {\n                        series = this.series[i];\n                        series.translate();\n                        series.render();\n                    }\n                }\n                else {\n                    proceed.call(this);\n                }\n            }\n            /**\n             * @private\n             */\n            function wrapSetClassName(proceed) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n                if (this.is3d()) {\n                    this.container.className += ' highcharts-3d-chart';\n                }\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            class Additions {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                constructor(chart) {\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                get3dFrame() {\n                    const chart = this.chart, options3d = chart.options.chart.options3d, frameOptions = options3d.frame, xm = chart.plotLeft, xp = chart.plotLeft + chart.plotWidth, ym = chart.plotTop, yp = chart.plotTop + chart.plotHeight, zm = 0, zp = options3d.depth, faceOrientation = function (vertexes) {\n                        const area = shapeArea3D(vertexes, chart);\n                        // Give it 0.5 squared-pixel as a margin for rounding errors\n                        if (area > 0.5) {\n                            return 1;\n                        }\n                        if (area < -0.5) {\n                            return -1;\n                        }\n                        return 0;\n                    }, bottomOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xp, y: yp, z: zm },\n                        { x: xm, y: yp, z: zm }\n                    ]), topOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: ym, z: zp },\n                        { x: xm, y: ym, z: zp }\n                    ]), leftOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zm },\n                        { x: xm, y: ym, z: zp },\n                        { x: xm, y: yp, z: zp },\n                        { x: xm, y: yp, z: zm }\n                    ]), rightOrientation = faceOrientation([\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: ym, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: yp, z: zp }\n                    ]), frontOrientation = faceOrientation([\n                        { x: xm, y: yp, z: zm },\n                        { x: xp, y: yp, z: zm },\n                        { x: xp, y: ym, z: zm },\n                        { x: xm, y: ym, z: zm }\n                    ]), backOrientation = faceOrientation([\n                        { x: xm, y: ym, z: zp },\n                        { x: xp, y: ym, z: zp },\n                        { x: xp, y: yp, z: zp },\n                        { x: xm, y: yp, z: zp }\n                    ]), defaultShowFront = false, defaultShowBack = true;\n                    let defaultShowBottom = false, defaultShowTop = false, defaultShowLeft = false, defaultShowRight = false;\n                    // The 'default' criteria to visible faces of the frame is looking\n                    // up every axis to decide whenever the left/right//top/bottom sides\n                    // of the frame will be shown\n                    []\n                        .concat(chart.xAxis, chart.yAxis, chart.zAxis)\n                        .forEach(function (axis) {\n                        if (axis) {\n                            if (axis.horiz) {\n                                if (axis.opposite) {\n                                    defaultShowTop = true;\n                                }\n                                else {\n                                    defaultShowBottom = true;\n                                }\n                            }\n                            else {\n                                if (axis.opposite) {\n                                    defaultShowRight = true;\n                                }\n                                else {\n                                    defaultShowLeft = true;\n                                }\n                            }\n                        }\n                    });\n                    const getFaceOptions = function (sources, faceOrientation, defaultVisible) {\n                        const faceAttrs = ['size', 'color', 'visible'], options = {};\n                        for (let i = 0; i < faceAttrs.length; i++) {\n                            const attr = faceAttrs[i];\n                            for (let j = 0; j < sources.length; j++) {\n                                if (typeof sources[j] === 'object') {\n                                    const val = sources[j][attr];\n                                    if (typeof val !== 'undefined' && val !== null) {\n                                        options[attr] = val;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        let isVisible = defaultVisible;\n                        if (options.visible === true || options.visible === false) {\n                            isVisible = options.visible;\n                        }\n                        else if (options.visible === 'auto') {\n                            isVisible = faceOrientation > 0;\n                        }\n                        return {\n                            size: pick(options.size, 1),\n                            color: pick(options.color, 'none'),\n                            frontFacing: faceOrientation > 0,\n                            visible: isVisible\n                        };\n                    };\n                    // Docs @TODO: Add all frame options (left, right, top, bottom,\n                    // front, back) to apioptions JSDoc once the new system is up.\n                    const ret = {\n                        axes: {},\n                        // FIXME: Previously, left/right, top/bottom and front/back\n                        // pairs shared size and color.\n                        // For compatibility and consistency sake, when one face have\n                        // size/color/visibility set, the opposite face will default to\n                        // the same values. Also, left/right used to be called 'side',\n                        // so that's also added as a fallback.\n                        bottom: getFaceOptions([frameOptions.bottom, frameOptions.top, frameOptions], bottomOrientation, defaultShowBottom),\n                        top: getFaceOptions([frameOptions.top, frameOptions.bottom, frameOptions], topOrientation, defaultShowTop),\n                        left: getFaceOptions([\n                            frameOptions.left,\n                            frameOptions.right,\n                            frameOptions.side,\n                            frameOptions\n                        ], leftOrientation, defaultShowLeft),\n                        right: getFaceOptions([\n                            frameOptions.right,\n                            frameOptions.left,\n                            frameOptions.side,\n                            frameOptions\n                        ], rightOrientation, defaultShowRight),\n                        back: getFaceOptions([frameOptions.back, frameOptions.front, frameOptions], backOrientation, defaultShowBack),\n                        front: getFaceOptions([frameOptions.front, frameOptions.back, frameOptions], frontOrientation, defaultShowFront)\n                    };\n                    // Decide the bast place to put axis title/labels based on the\n                    // visible faces. Ideally, The labels can only be on the edge\n                    // between a visible face and an invisible one. Also, the Y label\n                    // should be one the left-most edge (right-most if opposite).\n                    if (options3d.axisLabelPosition === 'auto') {\n                        const isValidEdge = function (face1, face2) {\n                            return ((face1.visible !== face2.visible) ||\n                                (face1.visible &&\n                                    face2.visible &&\n                                    (face1.frontFacing !== face2.frontFacing)));\n                        };\n                        const yEdges = [];\n                        if (isValidEdge(ret.left, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.left, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xm,\n                                z: zp,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.front)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zm,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        if (isValidEdge(ret.right, ret.back)) {\n                            yEdges.push({\n                                y: (ym + yp) / 2,\n                                x: xp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        const xBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.front)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.back)) {\n                            xBottomEdges.push({\n                                x: (xm + xp) / 2,\n                                y: yp,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        const xTopEdges = [];\n                        if (isValidEdge(ret.top, ret.front)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zm,\n                                xDir: { x: 1, y: 0, z: 0 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.back)) {\n                            xTopEdges.push({\n                                x: (xm + xp) / 2,\n                                y: ym,\n                                z: zp,\n                                xDir: { x: -1, y: 0, z: 0 }\n                            });\n                        }\n                        const zBottomEdges = [];\n                        if (isValidEdge(ret.bottom, ret.left)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.bottom, ret.right)) {\n                            zBottomEdges.push({\n                                z: (zm + zp) / 2,\n                                y: yp,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        const zTopEdges = [];\n                        if (isValidEdge(ret.top, ret.left)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xm,\n                                xDir: { x: 0, y: 0, z: -1 }\n                            });\n                        }\n                        if (isValidEdge(ret.top, ret.right)) {\n                            zTopEdges.push({\n                                z: (zm + zp) / 2,\n                                y: ym,\n                                x: xp,\n                                xDir: { x: 0, y: 0, z: 1 }\n                            });\n                        }\n                        const pickEdge = function (edges, axis, mult) {\n                            if (edges.length === 0) {\n                                return null;\n                            }\n                            if (edges.length === 1) {\n                                return edges[0];\n                            }\n                            const projections = perspective(edges, chart, false);\n                            let best = 0;\n                            for (let i = 1; i < projections.length; i++) {\n                                if (mult * projections[i][axis] >\n                                    mult * projections[best][axis]) {\n                                    best = i;\n                                }\n                                else if ((mult * projections[i][axis] ===\n                                    mult * projections[best][axis]) &&\n                                    (projections[i].z < projections[best].z)) {\n                                    best = i;\n                                }\n                            }\n                            return edges[best];\n                        };\n                        ret.axes = {\n                            y: {\n                                'left': pickEdge(yEdges, 'x', -1),\n                                'right': pickEdge(yEdges, 'x', +1)\n                            },\n                            x: {\n                                'top': pickEdge(xTopEdges, 'y', -1),\n                                'bottom': pickEdge(xBottomEdges, 'y', +1)\n                            },\n                            z: {\n                                'top': pickEdge(zTopEdges, 'y', -1),\n                                'bottom': pickEdge(zBottomEdges, 'y', +1)\n                            }\n                        };\n                    }\n                    else {\n                        ret.axes = {\n                            y: {\n                                'left': {\n                                    x: xm, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'right': {\n                                    x: xp, z: zm, xDir: { x: 0, y: 0, z: 1 }\n                                }\n                            },\n                            x: {\n                                'top': {\n                                    y: ym, z: zm, xDir: { x: 1, y: 0, z: 0 }\n                                },\n                                'bottom': {\n                                    y: yp,\n                                    z: zm,\n                                    xDir: { x: 1, y: 0, z: 0 }\n                                }\n                            },\n                            z: {\n                                'top': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: ym,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                },\n                                'bottom': {\n                                    x: defaultShowLeft ? xp : xm,\n                                    y: yp,\n                                    xDir: defaultShowLeft ?\n                                        { x: 0, y: 0, z: 1 } :\n                                        { x: 0, y: 0, z: -1 }\n                                }\n                            }\n                        };\n                    }\n                    return ret;\n                }\n                /**\n                 * Calculate scale of the 3D view. That is required to fit chart's 3D\n                 * projection into the actual plotting area. Reported as #4933.\n                 *\n                 * **Note:**\n                 * This function should ideally take the plot values instead of a chart\n                 * object, but since the chart object is needed for perspective it is\n                 * not practical. Possible to make both getScale and perspective more\n                 * logical and also immutable.\n                 *\n                 * @private\n                 * @function getScale\n                 *\n                 * @param {number} depth\n                 * The depth of the chart\n                 *\n                 * @return {number}\n                 * The scale to fit the 3D chart into the plotting area.\n                 *\n                 * @requires highcharts-3d\n                 */\n                getScale(depth) {\n                    const chart = this.chart, plotLeft = chart.plotLeft, plotRight = chart.plotWidth + plotLeft, plotTop = chart.plotTop, plotBottom = chart.plotHeight + plotTop, originX = plotLeft + chart.plotWidth / 2, originY = plotTop + chart.plotHeight / 2, bbox3d = {\n                        minX: Number.MAX_VALUE,\n                        maxX: -Number.MAX_VALUE,\n                        minY: Number.MAX_VALUE,\n                        maxY: -Number.MAX_VALUE\n                    };\n                    let corners, scale = 1;\n                    // Top left corners:\n                    corners = [{\n                            x: plotLeft,\n                            y: plotTop,\n                            z: 0\n                        }, {\n                            x: plotLeft,\n                            y: plotTop,\n                            z: depth\n                        }];\n                    // Top right corners:\n                    [0, 1].forEach(function (i) {\n                        corners.push({\n                            x: plotRight,\n                            y: corners[i].y,\n                            z: corners[i].z\n                        });\n                    });\n                    // All bottom corners:\n                    [0, 1, 2, 3].forEach(function (i) {\n                        corners.push({\n                            x: corners[i].x,\n                            y: plotBottom,\n                            z: corners[i].z\n                        });\n                    });\n                    // Calculate 3D corners:\n                    corners = perspective(corners, chart, false);\n                    // Get bounding box of 3D element:\n                    corners.forEach(function (corner) {\n                        bbox3d.minX = Math.min(bbox3d.minX, corner.x);\n                        bbox3d.maxX = Math.max(bbox3d.maxX, corner.x);\n                        bbox3d.minY = Math.min(bbox3d.minY, corner.y);\n                        bbox3d.maxY = Math.max(bbox3d.maxY, corner.y);\n                    });\n                    // Left edge:\n                    if (plotLeft > bbox3d.minX) {\n                        scale = Math.min(scale, 1 - Math.abs((plotLeft + originX) / (bbox3d.minX + originX)) % 1);\n                    }\n                    // Right edge:\n                    if (plotRight < bbox3d.maxX) {\n                        scale = Math.min(scale, (plotRight - originX) / (bbox3d.maxX - originX));\n                    }\n                    // Top edge:\n                    if (plotTop > bbox3d.minY) {\n                        if (bbox3d.minY < 0) {\n                            scale = Math.min(scale, (plotTop + originY) / (-bbox3d.minY + plotTop + originY));\n                        }\n                        else {\n                            scale = Math.min(scale, 1 - (plotTop + originY) / (bbox3d.minY + originY) % 1);\n                        }\n                    }\n                    // Bottom edge:\n                    if (plotBottom < bbox3d.maxY) {\n                        scale = Math.min(scale, Math.abs((plotBottom - originY) / (bbox3d.maxY - originY)));\n                    }\n                    return scale;\n                }\n            }\n            Chart3D.Additions = Additions;\n        })(Chart3D || (Chart3D = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Note: As of v5.0.12, `frame.left` or `frame.right` should be used instead.\n         *\n         * The side for the frame around a 3D chart.\n         *\n         * @deprecated\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption chart.options3d.frame.side\n         */\n        /**\n         * The color of the panel.\n         *\n         * @deprecated\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   transparent\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.color\n         */\n        /**\n         * The thickness of the panel.\n         *\n         * @deprecated\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @apioption chart.options3d.frame.side.size\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Chart3D;\n    });\n    _registerModule(_modules, 'Series/Area3D/Area3DSeries.js', [_modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, Math3D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { perspective } = Math3D;\n        const { line: { prototype: lineProto } } = SeriesRegistry.seriesTypes;\n        const { pushUnique, wrap } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         *\n         */\n        function compose(AreaSeriesClass) {\n            if (pushUnique(composed, 'Area3DSeries')) {\n                wrap(AreaSeriesClass.prototype, 'getGraphPath', wrapAreaSeriesGetGraphPath);\n            }\n        }\n        /**\n         *\n         */\n        function wrapAreaSeriesGetGraphPath(proceed) {\n            const series = this, svgPath = proceed.apply(series, [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (!series.chart.is3d()) {\n                return svgPath;\n            }\n            const getGraphPath = lineProto.getGraphPath, options = series.options, translatedThreshold = Math.round(// #10909\n            series.yAxis.getThreshold(options.threshold));\n            let bottomPoints = [];\n            if (series.rawPointsX) {\n                for (let i = 0; i < series.points.length; i++) {\n                    bottomPoints.push({\n                        x: series.rawPointsX[i],\n                        y: options.stacking ?\n                            series.points[i].yBottom : translatedThreshold,\n                        z: series.zPadding\n                    });\n                }\n            }\n            const options3d = series.chart.options.chart.options3d;\n            bottomPoints = perspective(bottomPoints, series.chart, true).map((point) => ({ plotX: point.x, plotY: point.y, plotZ: point.z }));\n            if (series.group && options3d && options3d.depth && options3d.beta) {\n                // Markers should take the global zIndex of series group.\n                if (series.markerGroup) {\n                    series.markerGroup.add(series.group);\n                    series.markerGroup.attr({\n                        translateX: 0,\n                        translateY: 0\n                    });\n                }\n                series.group.attr({\n                    zIndex: Math.max(1, (options3d.beta > 270 || options3d.beta < 90) ?\n                        options3d.depth - Math.round(series.zPadding || 0) :\n                        Math.round(series.zPadding || 0))\n                });\n            }\n            bottomPoints.reversed = true;\n            const bottomPath = getGraphPath.call(series, bottomPoints, true, true);\n            if (bottomPath[0] && bottomPath[0][0] === 'M') {\n                bottomPath[0] = ['L', bottomPath[0][1], bottomPath[0][2]];\n            }\n            if (series.areaPath) {\n                // Remove previously used bottomPath and add the new one.\n                const areaPath = series.areaPath.splice(0, series.areaPath.length / 2).concat(bottomPath);\n                // Use old xMap in the new areaPath\n                areaPath.xMap = series.areaPath.xMap;\n                series.areaPath = areaPath;\n            }\n            series.graphPath = svgPath;\n            return svgPath;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const Area3DSeries = {\n            compose\n        };\n\n        return Area3DSeries;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Extension for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent xAxis\n         */\n        const Axis3DDefaults = {\n            labels: {\n                /**\n                 * Defines how the labels are be repositioned according to the 3D\n                 * chart orientation.\n                 *\n                 * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                 *   the tick marks, despite the chart orientation. This is the\n                 *   backwards compatible behavior, and causes skewing of X and Z\n                 *   axes.\n                 *\n                 * - `'chart'`: Preserve 3D position relative to the chart. This\n                 *   looks nice, but hard to read if the text isn't forward-facing.\n                 *\n                 * - `'flap'`: Rotated text along the axis to compensate for the\n                 *   chart orientation. This tries to maintain text as legible as\n                 *   possible on all orientations.\n                 *\n                 * - `'ortho'`: Rotated text along the axis direction so that the\n                 *   labels are orthogonal to the axis. This is very similar to\n                 *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                 *   still present).\n                 *\n                 * @sample highcharts/3d/skewed-labels/\n                 *         Skewed labels\n                 *\n                 * @since      5.0.15\n                 * @validvalue ['offset', 'chart', 'flap', 'ortho']\n                 * @product    highcharts\n                 * @requires   highcharts-3d\n                 */\n                position3d: 'offset',\n                /**\n                 * If enabled, the axis labels will skewed to follow the\n                 * perspective.\n                 *\n                 * This will fix overlapping labels and titles, but texts become\n                 * less legible due to the distortion.\n                 *\n                 * The final appearance depends heavily on `labels.position3d`.\n                 *\n                 * @sample highcharts/3d/skewed-labels/\n                 *         Skewed labels\n                 *\n                 * @since    5.0.15\n                 * @product  highcharts\n                 * @requires highcharts-3d\n                 */\n                skew3d: false\n            },\n            title: {\n                /**\n                 * Defines how the title is repositioned according to the 3D chart\n                 * orientation.\n                 *\n                 * - `'offset'`: Maintain a fixed horizontal/vertical distance from\n                 *   the tick marks, despite the chart orientation. This is the\n                 *   backwards compatible behavior, and causes skewing of X and Z\n                 *   axes.\n                 *\n                 * - `'chart'`: Preserve 3D position relative to the chart. This\n                 *   looks nice, but hard to read if the text isn't forward-facing.\n                 *\n                 * - `'flap'`: Rotated text along the axis to compensate for the\n                 *   chart orientation. This tries to maintain text as legible as\n                 *   possible on all orientations.\n                 *\n                 * - `'ortho'`: Rotated text along the axis direction so that the\n                 *   labels are orthogonal to the axis. This is very similar to\n                 *   `'flap'`, but prevents skewing the labels (X and Y scaling are\n                 *   still present).\n                 *\n                 * - `undefined`: Will use the config from `labels.position3d`\n                 *\n                 * @sample highcharts/3d/skewed-labels/\n                 *         Skewed labels\n                 *\n                 * @type     {\"offset\"|\"chart\"|\"flap\"|\"ortho\"|null}\n                 * @since    5.0.15\n                 * @product  highcharts\n                 * @requires highcharts-3d\n                 */\n                position3d: null,\n                /**\n                 * If enabled, the axis title will skewed to follow the perspective.\n                 *\n                 * This will fix overlapping labels and titles, but texts become\n                 * less legible due to the distortion.\n                 *\n                 * The final appearance depends heavily on `title.position3d`.\n                 *\n                 * A `null` value will use the config from `labels.skew3d`.\n                 *\n                 * @sample highcharts/3d/skewed-labels/\n                 *         Skewed labels\n                 *\n                 * @type     {boolean|null}\n                 * @since    5.0.15\n                 * @product  highcharts\n                 * @requires highcharts-3d\n                 */\n                skew3d: null\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/Tick3DComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Extension for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, extend, pushUnique, wrap } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(TickClass) {\n            if (pushUnique(composed, 'Axis.Tick3D')) {\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                wrap(TickClass.prototype, 'getMarkPath', wrapTickGetMarkPath);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            const axis3D = this.axis.axis3D;\n            if (axis3D) {\n                extend(e.pos, axis3D.fix3dPosition(e.pos));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapTickGetMarkPath(proceed) {\n            const axis3D = this.axis.axis3D, path = proceed.apply(this, [].slice.call(arguments, 1));\n            if (axis3D) {\n                const start = path[0];\n                const end = path[1];\n                if (start[0] === 'M' && end[0] === 'L') {\n                    const pArr = [\n                        axis3D.fix3dPosition({ x: start[1], y: start[2], z: 0 }),\n                        axis3D.fix3dPosition({ x: end[1], y: end[2], z: 0 })\n                    ];\n                    return this.axis.chart.renderer.toLineSegments(pArr);\n                }\n            }\n            return path;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const Tick3DAdditions = {\n            compose\n        };\n\n        return Tick3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Axis/Axis3DComposition.js', [_modules['Core/Axis/Axis3DDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Axis/Tick3DComposition.js'], _modules['Core/Utilities.js']], function (Axis3DDefaults, D, H, Math3D, Tick3D, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Extension for 3d axes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { deg2rad } = H;\n        const { perspective, perspective3D, shapeArea } = Math3D;\n        const { addEvent, merge, pick, wrap } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            const axis = this, chart = axis.chart, options = axis.options;\n            if (chart.is3d && chart.is3d() && axis.coll !== 'colorAxis') {\n                options.tickWidth = pick(options.tickWidth, 0);\n                options.gridLineWidth = pick(options.gridLineWidth, 1);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisDrawCrosshair(e) {\n            const axis = this;\n            if (axis.chart.is3d() &&\n                axis.coll !== 'colorAxis') {\n                if (e.point) {\n                    e.point.crosshairPos = axis.isXAxis ?\n                        e.point.axisXpos :\n                        axis.len - e.point.axisYpos;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            const axis = this;\n            if (!axis.axis3D) {\n                axis.axis3D = new Axis3DAdditions(axis);\n            }\n        }\n        /**\n         * Do not draw axislines in 3D.\n         * @private\n         */\n        function wrapAxisGetLinePath(proceed) {\n            const axis = this;\n            // Do not do this if the chart is not 3D\n            if (!axis.chart.is3d() || axis.coll === 'colorAxis') {\n                return proceed.apply(axis, [].slice.call(arguments, 1));\n            }\n            return [];\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotBandPath(proceed) {\n            // Do not do this if the chart is not 3D\n            if (!this.chart.is3d() || this.coll === 'colorAxis') {\n                return proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            const args = arguments, from = args[1], to = args[2], path = [], fromPath = this.getPlotLinePath({ value: from }), toPath = this.getPlotLinePath({ value: to });\n            if (fromPath && toPath) {\n                for (let i = 0; i < fromPath.length; i += 2) {\n                    const fromStartSeg = fromPath[i], fromEndSeg = fromPath[i + 1], toStartSeg = toPath[i], toEndSeg = toPath[i + 1];\n                    if (fromStartSeg[0] === 'M' &&\n                        fromEndSeg[0] === 'L' &&\n                        toStartSeg[0] === 'M' &&\n                        toEndSeg[0] === 'L') {\n                        path.push(fromStartSeg, fromEndSeg, toEndSeg, \n                        // `lineTo` instead of `moveTo`\n                        ['L', toStartSeg[1], toStartSeg[2]], ['Z']);\n                    }\n                }\n            }\n            return path;\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetPlotLinePath(proceed) {\n            const axis = this, axis3D = axis.axis3D, chart = axis.chart, path = proceed.apply(axis, [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (axis.coll === 'colorAxis' ||\n                !chart.chart3d ||\n                !chart.is3d()) {\n                return path;\n            }\n            if (path === null) {\n                return path;\n            }\n            const options3d = chart.options.chart.options3d, d = axis.isZAxis ? chart.plotWidth : options3d.depth, frame = chart.chart3d.frame3d, startSegment = path[0], endSegment = path[1];\n            let pArr, pathSegments = [];\n            if (startSegment[0] === 'M' && endSegment[0] === 'L') {\n                pArr = [\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: startSegment[1], y: startSegment[2], z: d }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: 0 }),\n                    axis3D.swapZ({ x: endSegment[1], y: endSegment[2], z: d })\n                ];\n                if (!this.horiz) { // Y-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else if (this.isZAxis) { // Z-Axis\n                    if (frame.left.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.right.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                else { // X-Axis\n                    if (frame.front.visible) {\n                        pathSegments.push(pArr[0], pArr[2]);\n                    }\n                    if (frame.back.visible) {\n                        pathSegments.push(pArr[1], pArr[3]);\n                    }\n                    if (frame.top.visible) {\n                        pathSegments.push(pArr[0], pArr[1]);\n                    }\n                    if (frame.bottom.visible) {\n                        pathSegments.push(pArr[2], pArr[3]);\n                    }\n                }\n                pathSegments = perspective(pathSegments, this.chart, false);\n            }\n            return chart.renderer.toLineSegments(pathSegments);\n        }\n        /**\n         * Wrap getSlotWidth function to calculate individual width value for each\n         * slot (#8042).\n         * @private\n         */\n        function wrapAxisGetSlotWidth(proceed, tick) {\n            const axis = this, { chart, gridGroup, tickPositions, ticks } = axis;\n            if (axis.categories &&\n                chart.frameShapes &&\n                chart.is3d() &&\n                gridGroup &&\n                tick &&\n                tick.label) {\n                const firstGridLine = (gridGroup.element.childNodes[0].getBBox()), frame3DLeft = chart.frameShapes.left.getBBox(), options3d = chart.options.chart.options3d, origin = {\n                    x: chart.plotWidth / 2,\n                    y: chart.plotHeight / 2,\n                    z: options3d.depth / 2,\n                    vd: (pick(options3d.depth, 1) *\n                        pick(options3d.viewDistance, 0))\n                }, index = tickPositions.indexOf(tick.pos), prevTick = ticks[tickPositions[index - 1]], nextTick = ticks[tickPositions[index + 1]];\n                let labelPos, prevLabelPos, nextLabelPos;\n                // Check whether the tick is not the first one and previous tick\n                // exists, then calculate position of previous label.\n                if (prevTick?.label?.xy) {\n                    prevLabelPos = perspective3D({\n                        x: prevTick.label.xy.x,\n                        y: prevTick.label.xy.y,\n                        z: null\n                    }, origin, origin.vd);\n                }\n                // If next label position is defined, then recalculate its position\n                // basing on the perspective.\n                if (nextTick && nextTick.label && nextTick.label.xy) {\n                    nextLabelPos = perspective3D({\n                        x: nextTick.label.xy.x,\n                        y: nextTick.label.xy.y,\n                        z: null\n                    }, origin, origin.vd);\n                }\n                labelPos = {\n                    x: tick.label.xy.x,\n                    y: tick.label.xy.y,\n                    z: null\n                };\n                labelPos = perspective3D(labelPos, origin, origin.vd);\n                // If tick is first one, check whether next label position is\n                // already calculated, then return difference between the first and\n                // the second label. If there is no next label position calculated,\n                // return the difference between the first grid line and left 3d\n                // frame.\n                return Math.abs(prevLabelPos ?\n                    labelPos.x - prevLabelPos.x : nextLabelPos ?\n                    nextLabelPos.x - labelPos.x :\n                    firstGridLine.x - frame3DLeft.x);\n            }\n            return proceed.apply(axis, [].slice.call(arguments, 1));\n        }\n        /**\n         * @private\n         */\n        function wrapAxisGetTitlePosition(proceed) {\n            const pos = proceed.apply(this, [].slice.call(arguments, 1));\n            return this.axis3D ?\n                this.axis3D.fix3dPosition(pos, true) :\n                pos;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Adds 3D support to axes.\n         * @private\n         * @class\n         */\n        class Axis3DAdditions {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends axis class with 3D support.\n             * @private\n             */\n            static compose(AxisClass, TickClass) {\n                Tick3D.compose(TickClass);\n                if (!AxisClass.keepProps.includes('axis3D')) {\n                    merge(true, defaultOptions.xAxis, Axis3DDefaults);\n                    AxisClass.keepProps.push('axis3D');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    addEvent(AxisClass, 'drawCrosshair', onAxisDrawCrosshair);\n                    const axisProto = AxisClass.prototype;\n                    wrap(axisProto, 'getLinePath', wrapAxisGetLinePath);\n                    wrap(axisProto, 'getPlotBandPath', wrapAxisGetPlotBandPath);\n                    wrap(axisProto, 'getPlotLinePath', wrapAxisGetPlotLinePath);\n                    wrap(axisProto, 'getSlotWidth', wrapAxisGetSlotWidth);\n                    wrap(axisProto, 'getTitlePosition', wrapAxisGetTitlePosition);\n                }\n            }\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            constructor(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             * @param {Highcharts.Axis} axis\n             * Related axis.\n             * @param {Highcharts.Position3DObject} pos\n             * Position to fix.\n             * @param {boolean} [isTitle]\n             * Whether this is a title position.\n             * @return {Highcharts.Position3DObject}\n             * Fixed position.\n             */\n            fix3dPosition(pos, isTitle) {\n                const axis3D = this;\n                const axis = axis3D.axis;\n                const chart = axis.chart;\n                // Do not do this if the chart is not 3D\n                if (axis.coll === 'colorAxis' ||\n                    !chart.chart3d ||\n                    !chart.is3d()) {\n                    return pos;\n                }\n                const alpha = deg2rad * chart.options.chart.options3d.alpha, beta = deg2rad * chart.options.chart.options3d.beta, positionMode = pick(isTitle && axis.options.title.position3d, axis.options.labels.position3d), skew = pick(isTitle && axis.options.title.skew3d, axis.options.labels.skew3d), frame = chart.chart3d.frame3d, plotLeft = chart.plotLeft, plotRight = chart.plotWidth + plotLeft, plotTop = chart.plotTop, plotBottom = chart.plotHeight + plotTop;\n                let offsetX = 0, offsetY = 0, vecX, vecY = { x: 0, y: 1, z: 0 }, \n                // Indicates that we are labelling an X or Z axis on the \"back\" of\n                // the chart\n                reverseFlap = false;\n                pos = axis.axis3D.swapZ({ x: pos.x, y: pos.y, z: 0 });\n                if (axis.isZAxis) { // Z Axis\n                    if (axis.opposite) {\n                        if (frame.axes.z.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.x = frame.axes.z.top.x;\n                        pos.y = frame.axes.z.top.y;\n                        vecX = frame.axes.z.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.z.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.x = frame.axes.z.bottom.x;\n                        pos.y = frame.axes.z.bottom.y;\n                        vecX = frame.axes.z.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else if (axis.horiz) { // X Axis\n                    if (axis.opposite) {\n                        if (frame.axes.x.top === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotTop;\n                        pos.y = frame.axes.x.top.y;\n                        pos.z = frame.axes.x.top.z;\n                        vecX = frame.axes.x.top.xDir;\n                        reverseFlap = !frame.top.frontFacing;\n                    }\n                    else {\n                        if (frame.axes.x.bottom === null) {\n                            return {};\n                        }\n                        offsetY = pos.y - plotBottom;\n                        pos.y = frame.axes.x.bottom.y;\n                        pos.z = frame.axes.x.bottom.z;\n                        vecX = frame.axes.x.bottom.xDir;\n                        reverseFlap = !frame.bottom.frontFacing;\n                    }\n                }\n                else { // Y Axis\n                    if (axis.opposite) {\n                        if (frame.axes.y.right === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotRight;\n                        pos.x = frame.axes.y.right.x;\n                        pos.z = frame.axes.y.right.z;\n                        vecX = frame.axes.y.right.xDir;\n                        // Rotate 90º on opposite edge\n                        vecX = { x: vecX.z, y: vecX.y, z: -vecX.x };\n                    }\n                    else {\n                        if (frame.axes.y.left === null) {\n                            return {};\n                        }\n                        offsetX = pos.x - plotLeft;\n                        pos.x = frame.axes.y.left.x;\n                        pos.z = frame.axes.y.left.z;\n                        vecX = frame.axes.y.left.xDir;\n                    }\n                }\n                if (positionMode === 'chart') {\n                    // Labels preserve their direction relative to the chart\n                    // nothing to do\n                }\n                else if (positionMode === 'flap') {\n                    // Labels are rotated around the axis direction to face the screen\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        let sin = Math.sin(alpha);\n                        const cos = Math.cos(alpha);\n                        if (axis.opposite) {\n                            sin = -sin;\n                        }\n                        if (reverseFlap) {\n                            sin = -sin;\n                        }\n                        vecY = { x: vecX.z * sin, y: cos, z: -vecX.x * sin };\n                    }\n                }\n                else if (positionMode === 'ortho') {\n                    // Labels will be rotated to be orthogonal to the axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        const sina = Math.sin(alpha);\n                        const cosa = Math.cos(alpha);\n                        const sinb = Math.sin(beta);\n                        const cosb = Math.cos(beta);\n                        const vecZ = { x: sinb * cosa, y: -sina, z: -cosa * cosb };\n                        vecY = {\n                            x: vecX.y * vecZ.z - vecX.z * vecZ.y,\n                            y: vecX.z * vecZ.x - vecX.x * vecZ.z,\n                            z: vecX.x * vecZ.y - vecX.y * vecZ.x\n                        };\n                        let scale = 1 / Math.sqrt(vecY.x * vecY.x + vecY.y * vecY.y + vecY.z * vecY.z);\n                        if (reverseFlap) {\n                            scale = -scale;\n                        }\n                        vecY = {\n                            x: scale * vecY.x, y: scale * vecY.y, z: scale * vecY.z\n                        };\n                    }\n                }\n                else { // Position mode  == 'offset'\n                    // Labels will be skewd to maintain vertical / horizontal offsets\n                    // from axis\n                    if (!axis.horiz) { // Y Axis\n                        vecX = { x: Math.cos(beta), y: 0, z: Math.sin(beta) };\n                    }\n                    else { // X and Z Axis\n                        vecY = {\n                            x: Math.sin(beta) * Math.sin(alpha),\n                            y: Math.cos(alpha),\n                            z: -Math.cos(beta) * Math.sin(alpha)\n                        };\n                    }\n                }\n                pos.x += offsetX * vecX.x + offsetY * vecY.x;\n                pos.y += offsetX * vecX.y + offsetY * vecY.y;\n                pos.z += offsetX * vecX.z + offsetY * vecY.z;\n                const projected = perspective([pos], axis.chart)[0];\n                if (skew) {\n                    // Check if the label text would be mirrored\n                    const isMirrored = shapeArea(perspective([\n                        pos,\n                        { x: pos.x + vecX.x, y: pos.y + vecX.y, z: pos.z + vecX.z },\n                        { x: pos.x + vecY.x, y: pos.y + vecY.y, z: pos.z + vecY.z }\n                    ], axis.chart)) < 0;\n                    if (isMirrored) {\n                        vecX = { x: -vecX.x, y: -vecX.y, z: -vecX.z };\n                    }\n                    const pointsProjected = perspective([\n                        { x: pos.x, y: pos.y, z: pos.z },\n                        { x: pos.x + vecX.x, y: pos.y + vecX.y, z: pos.z + vecX.z },\n                        { x: pos.x + vecY.x, y: pos.y + vecY.y, z: pos.z + vecY.z }\n                    ], axis.chart);\n                    projected.matrix = [\n                        pointsProjected[1].x - pointsProjected[0].x,\n                        pointsProjected[1].y - pointsProjected[0].y,\n                        pointsProjected[2].x - pointsProjected[0].x,\n                        pointsProjected[2].y - pointsProjected[0].y,\n                        projected.x,\n                        projected.y\n                    ];\n                    projected.matrix[4] -= projected.x * projected.matrix[0] +\n                        projected.y * projected.matrix[2];\n                    projected.matrix[5] -= projected.x * projected.matrix[1] +\n                        projected.y * projected.matrix[3];\n                }\n                return projected;\n            }\n            /**\n             * @private\n             */\n            swapZ(p, insidePlotArea) {\n                const axis = this.axis;\n                if (axis.isZAxis) {\n                    const plotLeft = insidePlotArea ? 0 : axis.chart.plotLeft;\n                    return {\n                        x: plotLeft + p.z,\n                        y: p.y,\n                        z: p.x - plotLeft\n                    };\n                }\n                return p;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Axis3DAdditions;\n    });\n    _registerModule(_modules, 'Core/Series/Series3D.js', [_modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (H, Math3D, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Extension to the Series object in 3D charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { perspective } = Math3D;\n        const { addEvent, extend, isNumber, merge, pick, pushUnique } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Series3D extends Series {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(SeriesClass) {\n                if (pushUnique(composed, 'Core.Series3D')) {\n                    addEvent(SeriesClass, 'afterTranslate', function () {\n                        if (this.chart.is3d()) {\n                            this.translate3dPoints();\n                        }\n                    });\n                    extend(SeriesClass.prototype, {\n                        translate3dPoints: Series3D.prototype.translate3dPoints\n                    });\n                }\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Translate the plotX, plotY properties and add plotZ.\n             * @private\n             */\n            translate3dPoints() {\n                const series = this, seriesOptions = series.options, chart = series.chart, zAxis = pick(series.zAxis, chart.options.zAxis[0]), rawPoints = [], rawPointsX = [], stack = seriesOptions.stacking ?\n                    (isNumber(seriesOptions.stack) ? seriesOptions.stack : 0) :\n                    series.index || 0;\n                let projectedPoint, zValue;\n                series.zPadding = stack *\n                    (seriesOptions.depth || 0 + (seriesOptions.groupZPadding || 1));\n                series.data.forEach((rawPoint) => {\n                    if (zAxis && zAxis.translate) {\n                        zValue = zAxis.logarithmic && zAxis.val2lin ?\n                            zAxis.val2lin(rawPoint.z) :\n                            rawPoint.z; // #4562\n                        rawPoint.plotZ = zAxis.translate(zValue);\n                        rawPoint.isInside = rawPoint.isInside ?\n                            (zValue >= zAxis.min &&\n                                zValue <= zAxis.max) :\n                            false;\n                    }\n                    else {\n                        rawPoint.plotZ = series.zPadding;\n                    }\n                    rawPoint.axisXpos = rawPoint.plotX;\n                    rawPoint.axisYpos = rawPoint.plotY;\n                    rawPoint.axisZpos = rawPoint.plotZ;\n                    rawPoints.push({\n                        x: rawPoint.plotX,\n                        y: rawPoint.plotY,\n                        z: rawPoint.plotZ\n                    });\n                    rawPointsX.push(rawPoint.plotX || 0);\n                });\n                series.rawPointsX = rawPointsX;\n                const projectedPoints = perspective(rawPoints, chart, true);\n                series.data.forEach((rawPoint, i) => {\n                    projectedPoint = projectedPoints[i];\n                    rawPoint.plotX = projectedPoint.x;\n                    rawPoint.plotY = projectedPoint.y;\n                    rawPoint.plotZ = projectedPoint.z;\n                });\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        Series3D.defaultOptions = merge(Series.defaultOptions);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Series3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGElement3D.js', [_modules['Core/Color/Color.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Utilities.js']], function (Color, RendererRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { Element: SVGElement } = RendererRegistry.getRendererType().prototype;\n        const { defined, pick } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class SVGElement3D extends SVGElement {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.parts = ['front', 'top', 'side'];\n                this.pathType = 'cuboid';\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The init is used by base - renderer.Element\n             * @private\n             */\n            initArgs(args) {\n                const elem3d = this, renderer = elem3d.renderer, paths = renderer[elem3d.pathType + 'Path'](args), zIndexes = paths.zIndexes;\n                // Build parts\n                for (const part of elem3d.parts) {\n                    const attribs = {\n                        'class': 'highcharts-3d-' + part,\n                        zIndex: zIndexes[part] || 0\n                    };\n                    if (renderer.styledMode) {\n                        if (part === 'top') {\n                            attribs.filter = 'url(#highcharts-brighter)';\n                        }\n                        else if (part === 'side') {\n                            attribs.filter = 'url(#highcharts-darker)';\n                        }\n                    }\n                    elem3d[part] = renderer.path(paths[part])\n                        .attr(attribs)\n                        .add(elem3d);\n                }\n                elem3d.attr({\n                    'stroke-linejoin': 'round',\n                    zIndex: zIndexes.group\n                });\n                // Store information if any side of element was rendered by force.\n                elem3d.forcedSides = paths.forcedSides;\n            }\n            /**\n             * Single property setter that applies options to each part\n             * @private\n             */\n            singleSetterForParts(prop, val, values, verb, duration, complete) {\n                const elem3d = this, newAttr = {}, optionsToApply = [null, null, (verb || 'attr'), duration, complete], hasZIndexes = values && values.zIndexes;\n                if (!values) {\n                    newAttr[prop] = val;\n                    optionsToApply[0] = newAttr;\n                }\n                else {\n                    // It is needed to deal with the whole group zIndexing\n                    // in case of graph rotation\n                    if (hasZIndexes && hasZIndexes.group) {\n                        elem3d.attr({\n                            zIndex: hasZIndexes.group\n                        });\n                    }\n                    for (const part of Object.keys(values)) {\n                        newAttr[part] = {};\n                        newAttr[part][prop] = values[part];\n                        // Include zIndexes if provided\n                        if (hasZIndexes) {\n                            newAttr[part].zIndex = values.zIndexes[part] || 0;\n                        }\n                    }\n                    optionsToApply[1] = newAttr;\n                }\n                return this.processParts.apply(elem3d, optionsToApply);\n            }\n            /**\n             * Calls function for each part. Used for attr, animate and destroy.\n             * @private\n             */\n            processParts(props, partsProps, verb, duration, complete) {\n                const elem3d = this;\n                for (const part of elem3d.parts) {\n                    // If different props for different parts\n                    if (partsProps) {\n                        props = pick(partsProps[part], false);\n                    }\n                    // Only if something to set, but allow undefined\n                    if (props !== false) {\n                        elem3d[part][verb](props, duration, complete);\n                    }\n                }\n                return elem3d;\n            }\n            /**\n             * Destroy all parts\n             * @private\n             */\n            destroy() {\n                this.processParts(null, null, 'destroy');\n                return super.destroy();\n            }\n            // Following functions are SVGElement3DCuboid (= base)\n            attr(args, val, complete, continueAnimation) {\n                // Resolve setting attributes by string name\n                if (typeof args === 'string' && typeof val !== 'undefined') {\n                    const key = args;\n                    args = {};\n                    args[key] = val;\n                }\n                if (args.shapeArgs || defined(args.x)) {\n                    return this.singleSetterForParts('d', null, this.renderer[this.pathType + 'Path'](args.shapeArgs || args));\n                }\n                return super.attr(args, void 0, complete, continueAnimation);\n            }\n            animate(args, duration, complete) {\n                if (defined(args.x) && defined(args.y)) {\n                    const paths = this.renderer[this.pathType + 'Path'](args), forcedSides = paths.forcedSides;\n                    this.singleSetterForParts('d', null, paths, 'animate', duration, complete);\n                    this.attr({\n                        zIndex: paths.zIndexes.group\n                    });\n                    // If sides that are forced to render changed, recalculate colors.\n                    if (forcedSides !== this.forcedSides) {\n                        this.forcedSides = forcedSides;\n                        if (!this.renderer.styledMode) {\n                            this.fillSetter(this.fill);\n                        }\n                    }\n                }\n                else {\n                    super.animate(args, duration, complete);\n                }\n                return this;\n            }\n            fillSetter(fill) {\n                const elem3d = this;\n                elem3d.forcedSides = elem3d.forcedSides || [];\n                elem3d.singleSetterForParts('fill', null, {\n                    front: fill,\n                    // Do not change color if side was forced to render.\n                    top: color(fill).brighten(elem3d.forcedSides.indexOf('top') >= 0 ? 0 : 0.1).get(),\n                    side: color(fill).brighten(elem3d.forcedSides.indexOf('side') >= 0 ? 0 : -0.1).get()\n                });\n                // Fill for animation getter (#6776)\n                elem3d.color = elem3d.fill = fill;\n                return elem3d;\n            }\n        }\n        SVGElement3D.types = {\n            base: SVGElement3D,\n            cuboid: SVGElement3D\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGElement3D;\n    });\n    _registerModule(_modules, 'Core/Renderer/SVG/SVGRenderer3D.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Color/Color.js'], _modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Renderer/SVG/SVGElement3D.js'], _modules['Core/Utilities.js']], function (A, Color, H, Math3D, SVGElement3D, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Extensions to the SVGRenderer class to enable 3D shapes\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { parse: color } = Color;\n        const { charts, deg2rad } = H;\n        const { perspective, shapeArea } = Math3D;\n        const { defined, extend, merge, pick } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const cos = Math.cos, sin = Math.sin, PI = Math.PI, dFactor = (4 * (Math.sqrt(2) - 1) / 3) / (PI / 2);\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Method to construct a curved path. Can 'wrap' around more then 180\n         * degrees.\n         * @private\n         */\n        function curveTo(cx, cy, rx, ry, start, end, dx, dy) {\n            const arcAngle = end - start;\n            let result = [];\n            if ((end > start) && (end - start > Math.PI / 2 + 0.0001)) {\n                result = result.concat(curveTo(cx, cy, rx, ry, start, start + (Math.PI / 2), dx, dy));\n                result = result.concat(curveTo(cx, cy, rx, ry, start + (Math.PI / 2), end, dx, dy));\n                return result;\n            }\n            if ((end < start) && (start - end > Math.PI / 2 + 0.0001)) {\n                result = result.concat(curveTo(cx, cy, rx, ry, start, start - (Math.PI / 2), dx, dy));\n                result = result.concat(curveTo(cx, cy, rx, ry, start - (Math.PI / 2), end, dx, dy));\n                return result;\n            }\n            return [[\n                    'C',\n                    cx + (rx * Math.cos(start)) -\n                        ((rx * dFactor * arcAngle) * Math.sin(start)) + dx,\n                    cy + (ry * Math.sin(start)) +\n                        ((ry * dFactor * arcAngle) * Math.cos(start)) + dy,\n                    cx + (rx * Math.cos(end)) +\n                        ((rx * dFactor * arcAngle) * Math.sin(end)) + dx,\n                    cy + (ry * Math.sin(end)) -\n                        ((ry * dFactor * arcAngle) * Math.cos(end)) + dy,\n                    cx + (rx * Math.cos(end)) + dx,\n                    cy + (ry * Math.sin(end)) + dy\n                ]];\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var SVGRenderer3D;\n        (function (SVGRenderer3D) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(SVGRendererClass) {\n                const rendererProto = SVGRendererClass.prototype;\n                if (!rendererProto.element3d) {\n                    extend(rendererProto, {\n                        Element3D: SVGElement3D,\n                        arc3d,\n                        arc3dPath,\n                        cuboid,\n                        cuboidPath,\n                        element3d,\n                        face3d,\n                        polyhedron,\n                        toLinePath,\n                        toLineSegments\n                    });\n                }\n            }\n            SVGRenderer3D.compose = compose;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function toLinePath(points, closed) {\n                const result = [];\n                // Put \"L x y\" for each point\n                for (const point of points) {\n                    result.push(['L', point.x, point.y]);\n                }\n                if (points.length) {\n                    // Set the first element to M\n                    result[0][0] = 'M';\n                    // If it is a closed line, add Z\n                    if (closed) {\n                        result.push(['Z']);\n                    }\n                }\n                return result;\n            }\n            /** @private */\n            function toLineSegments(points) {\n                const result = [];\n                let m = true;\n                for (const point of points) {\n                    result.push(m ? ['M', point.x, point.y] : ['L', point.x, point.y]);\n                    m = !m;\n                }\n                return result;\n            }\n            /**\n             * A 3-D Face is defined by it's 3D vertexes, and is only visible if it's\n             * vertexes are counter-clockwise (Back-face culling). It is used as a\n             * polyhedron Element.\n             * @private\n             */\n            function face3d(args) {\n                const renderer = this, elementProto = renderer.Element.prototype, ret = renderer.createElement('path');\n                ret.vertexes = [];\n                ret.insidePlotArea = false;\n                ret.enabled = true;\n                /* eslint-disable no-invalid-this */\n                ret.attr = function (hash) {\n                    if (typeof hash === 'object' &&\n                        (defined(hash.enabled) ||\n                            defined(hash.vertexes) ||\n                            defined(hash.insidePlotArea))) {\n                        this.enabled = pick(hash.enabled, this.enabled);\n                        this.vertexes = pick(hash.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(hash.insidePlotArea, this.insidePlotArea);\n                        delete hash.enabled;\n                        delete hash.vertexes;\n                        delete hash.insidePlotArea;\n                        const chart = charts[renderer.chartIndex], vertexes2d = perspective(this.vertexes, chart, this.insidePlotArea), path = renderer.toLinePath(vertexes2d, true), area = shapeArea(vertexes2d);\n                        hash.d = path;\n                        hash.visibility = (this.enabled && area > 0) ?\n                            'inherit' : 'hidden';\n                    }\n                    return elementProto.attr.apply(this, arguments);\n                };\n                ret.animate = function (params) {\n                    if (typeof params === 'object' &&\n                        (defined(params.enabled) ||\n                            defined(params.vertexes) ||\n                            defined(params.insidePlotArea))) {\n                        this.enabled = pick(params.enabled, this.enabled);\n                        this.vertexes = pick(params.vertexes, this.vertexes);\n                        this.insidePlotArea = pick(params.insidePlotArea, this.insidePlotArea);\n                        delete params.enabled;\n                        delete params.vertexes;\n                        delete params.insidePlotArea;\n                        const chart = charts[renderer.chartIndex], vertexes2d = perspective(this.vertexes, chart, this.insidePlotArea), path = renderer.toLinePath(vertexes2d, true), area = shapeArea(vertexes2d), visibility = (this.enabled && area > 0) ?\n                            'visible' : 'hidden';\n                        params.d = path;\n                        this.attr('visibility', visibility);\n                    }\n                    return elementProto.animate.apply(this, arguments);\n                };\n                /* eslint-enable no-invalid-this */\n                return ret.attr(args);\n            }\n            /**\n             * A Polyhedron is a handy way of defining a group of 3-D faces. It's only\n             * attribute is `faces`, an array of attributes of each one of it's Face3D\n             * instances.\n             * @private\n             */\n            function polyhedron(args) {\n                const renderer = this, elementProto = renderer.Element.prototype, result = renderer.g(), destroy = result.destroy;\n                if (!this.styledMode) {\n                    result.attr({\n                        'stroke-linejoin': 'round'\n                    });\n                }\n                result.faces = [];\n                // Destroy all children\n                result.destroy = function () {\n                    for (let i = 0; i < result.faces.length; i++) {\n                        result.faces[i].destroy();\n                    }\n                    return destroy.call(this);\n                };\n                result.attr = function (hash, val, complete, continueAnimation) {\n                    if (typeof hash === 'object' && defined(hash.faces)) {\n                        while (result.faces.length > hash.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < hash.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (let i = 0; i < hash.faces.length; i++) {\n                            if (renderer.styledMode) {\n                                delete hash.faces[i].fill;\n                            }\n                            result.faces[i].attr(hash.faces[i], null, complete, continueAnimation);\n                        }\n                        delete hash.faces;\n                    }\n                    return elementProto.attr.apply(this, arguments);\n                };\n                result.animate = function (params, duration, complete) {\n                    if (params && params.faces) {\n                        while (result.faces.length > params.faces.length) {\n                            result.faces.pop().destroy();\n                        }\n                        while (result.faces.length < params.faces.length) {\n                            result.faces.push(renderer.face3d().add(result));\n                        }\n                        for (let i = 0; i < params.faces.length; i++) {\n                            result.faces[i].animate(params.faces[i], duration, complete);\n                        }\n                        delete params.faces;\n                    }\n                    return elementProto.animate.apply(this, arguments);\n                };\n                return result.attr(args);\n            }\n            /**\n             * Return result, generalization\n             * @private\n             * @requires highcharts-3d\n             */\n            function element3d(type, shapeArgs) {\n                const elem3d = new SVGElement3D.types[type](this, 'g');\n                elem3d.initArgs(shapeArgs);\n                return elem3d;\n            }\n            /**\n             * Generalized, so now use simply\n             * @private\n             */\n            function cuboid(shapeArgs) {\n                return this.element3d('cuboid', shapeArgs);\n            }\n            /**\n             * Generates a cuboid path and zIndexes\n             * @private\n             */\n            function cuboidPath(shapeArgs) {\n                const x = shapeArgs.x || 0, y = shapeArgs.y || 0, z = shapeArgs.z || 0, \n                // For side calculation (right/left)\n                // there is a need for height (and other shapeArgs arguments)\n                // to be at least 1px\n                h = shapeArgs.height || 0, w = shapeArgs.width || 0, d = shapeArgs.depth || 0, chart = charts[this.chartIndex], options3d = chart.options.chart.options3d, alpha = options3d.alpha, \n                // Priority for x axis is the biggest,\n                // because of x direction has biggest influence on zIndex\n                incrementX = 1000000, \n                // Y axis has the smallest priority in case of our charts\n                // (needs to be set because of stacking)\n                incrementY = 10, incrementZ = 100, forcedSides = [];\n                let shape, zIndex = 0, \n                // The 8 corners of the cube\n                pArr = [{\n                        x: x,\n                        y: y,\n                        z: z\n                    }, {\n                        x: x + w,\n                        y: y,\n                        z: z\n                    }, {\n                        x: x + w,\n                        y: y + h,\n                        z: z\n                    }, {\n                        x: x,\n                        y: y + h,\n                        z: z\n                    }, {\n                        x: x,\n                        y: y + h,\n                        z: z + d\n                    }, {\n                        x: x + w,\n                        y: y + h,\n                        z: z + d\n                    }, {\n                        x: x + w,\n                        y: y,\n                        z: z + d\n                    }, {\n                        x: x,\n                        y: y,\n                        z: z + d\n                    }];\n                // Apply perspective\n                pArr = perspective(pArr, chart, shapeArgs.insidePlotArea);\n                /**\n                 * Helper method to decide which side is visible\n                 * @private\n                 */\n                const mapSidePath = (i) => {\n                    // Added support for 0 value in columns, where height is 0\n                    // but the shape is rendered.\n                    // Height is used from 1st to 6th element of pArr\n                    if (h === 0 && i > 1 && i < 6) { // [2, 3, 4, 5]\n                        return {\n                            x: pArr[i].x,\n                            // When height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate\n                            // cuboid for side calculation\n                            y: pArr[i].y + 10,\n                            z: pArr[i].z\n                        };\n                    }\n                    // It is needed to calculate dummy sides (front/back) for\n                    // breaking points in case of x and depth values. If column has\n                    // side, it means that x values of front and back side are\n                    // different.\n                    if (pArr[0].x === pArr[7].x && i >= 4) { // [4, 5, 6, 7]\n                        return {\n                            x: pArr[i].x + 10,\n                            // When height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate\n                            // cuboid for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z\n                        };\n                    }\n                    // Added dummy depth\n                    if (d === 0 && i < 2 || i > 5) { // [0, 1, 6, 7]\n                        return {\n                            x: pArr[i].x,\n                            // When height is 0 instead of cuboid we render plane\n                            // so it is needed to add fake 10 height to imitate\n                            // cuboid for side calculation\n                            y: pArr[i].y,\n                            z: pArr[i].z + 10\n                        };\n                    }\n                    return pArr[i];\n                }, \n                /**\n                 * Method creating the final side\n                 * @private\n                 */\n                mapPath = (i) => (pArr[i]), \n                /**\n                 * First value - path with specific face\n                 * Second value - added info about side for later calculations.\n                 *                 Possible second values are 0 for path1, 1 for\n                 *                 path2 and -1 for no path chosen.\n                 * Third value - string containing information about current side of\n                 *               cuboid for forcing side rendering.\n                 * @private\n                 */\n                pickShape = (verticesIndex1, verticesIndex2, side) => {\n                    const // An array of vertices for cuboid face\n                    face1 = verticesIndex1.map(mapPath), face2 = verticesIndex2.map(mapPath), \n                    // Dummy face is calculated the same way as standard face,\n                    // but if cuboid height is 0 additional height is added so\n                    // it is possible to use this vertices array for visible\n                    // face calculation\n                    dummyFace1 = verticesIndex1.map(mapSidePath), dummyFace2 = verticesIndex2.map(mapSidePath);\n                    let ret = [[], -1];\n                    if (shapeArea(face1) < 0) {\n                        ret = [face1, 0];\n                    }\n                    else if (shapeArea(face2) < 0) {\n                        ret = [face2, 1];\n                    }\n                    else if (side) {\n                        forcedSides.push(side);\n                        if (shapeArea(dummyFace1) < 0) {\n                            ret = [face1, 0];\n                        }\n                        else if (shapeArea(dummyFace2) < 0) {\n                            ret = [face2, 1];\n                        }\n                        else {\n                            ret = [face1, 0]; // Force side calculation.\n                        }\n                    }\n                    return ret;\n                };\n                // Front or back\n                const front = [3, 2, 1, 0], back = [7, 6, 5, 4];\n                shape = pickShape(front, back, 'front');\n                const path1 = shape[0], isFront = shape[1];\n                // Top or bottom\n                const top = [1, 6, 7, 0], bottom = [4, 5, 2, 3];\n                shape = pickShape(top, bottom, 'top');\n                const path2 = shape[0], isTop = shape[1];\n                // Side\n                const right = [1, 2, 5, 6], left = [0, 7, 4, 3];\n                shape = pickShape(right, left, 'side');\n                const path3 = shape[0], isRight = shape[1];\n                /* New block used for calculating zIndex. It is basing on X, Y and Z\n                position of specific columns. All zIndexes (for X, Y and Z values) are\n                added to the final zIndex, where every value has different priority. The\n                biggest priority is in X and Z directions, the lowest index is for\n                stacked columns (Y direction and the same X and Z positions). Big\n                differences between priorities is made because we need to ensure that\n                even for big changes in Y and Z parameters all columns will be drawn\n                correctly. */\n                if (isRight === 1) {\n                    // It is needed to connect value with current chart width\n                    // for big chart size.\n                    zIndex += incrementX * (chart.plotWidth - x);\n                }\n                else if (!isRight) {\n                    zIndex += incrementX * x;\n                }\n                zIndex += incrementY * (!isTop ||\n                    // Numbers checked empirically\n                    (alpha >= 0 && alpha <= 180 || alpha < 360 && alpha > 357.5) ?\n                    chart.plotHeight - y : 10 + y);\n                if (isFront === 1) {\n                    zIndex += incrementZ * (z);\n                }\n                else if (!isFront) {\n                    zIndex += incrementZ * (1000 - z);\n                }\n                return {\n                    front: this.toLinePath(path1, true),\n                    top: this.toLinePath(path2, true),\n                    side: this.toLinePath(path3, true),\n                    zIndexes: {\n                        group: Math.round(zIndex)\n                    },\n                    forcedSides: forcedSides,\n                    // Additional info about zIndexes\n                    isFront: isFront,\n                    isTop: isTop\n                }; // #4774\n            }\n            /** @private */\n            function arc3d(attribs) {\n                const renderer = this, wrapper = renderer.g(), elementProto = renderer.Element.prototype, customAttribs = ['x', 'y', 'r', 'innerR', 'start', 'end', 'depth'];\n                /**\n                 * Get custom attributes. Don't mutate the original object and return an\n                 * object with only custom attr.\n                 * @private\n                 */\n                function suckOutCustom(params) {\n                    const ca = {};\n                    let hasCA = false, key;\n                    params = merge(params); // Don't mutate the original object\n                    for (key in params) {\n                        if (customAttribs.indexOf(key) !== -1) {\n                            ca[key] = params[key];\n                            delete params[key];\n                            hasCA = true;\n                        }\n                    }\n                    return hasCA ? [ca, params] : false;\n                }\n                attribs = merge(attribs);\n                attribs.alpha = (attribs.alpha || 0) * deg2rad;\n                attribs.beta = (attribs.beta || 0) * deg2rad;\n                // Create the different sub sections of the shape\n                wrapper.top = renderer.path();\n                wrapper.side1 = renderer.path();\n                wrapper.side2 = renderer.path();\n                wrapper.inn = renderer.path();\n                wrapper.out = renderer.path();\n                /* eslint-disable no-invalid-this */\n                // Add all faces\n                wrapper.onAdd = function () {\n                    const parent = wrapper.parentGroup, className = wrapper.attr('class');\n                    wrapper.top.add(wrapper);\n                    // These faces are added outside the wrapper group because the\n                    // z-index relates to neighbour elements as well\n                    for (const face of ['out', 'inn', 'side1', 'side2']) {\n                        wrapper[face]\n                            .attr({\n                            'class': className + ' highcharts-3d-side'\n                        })\n                            .add(parent);\n                    }\n                };\n                // Cascade to faces\n                for (const fn of ['addClass', 'removeClass']) {\n                    wrapper[fn] = function () {\n                        const args = arguments;\n                        for (const face of ['top', 'out', 'inn', 'side1', 'side2']) {\n                            wrapper[face][fn].apply(wrapper[face], args);\n                        }\n                    };\n                }\n                /**\n                 * Compute the transformed paths and set them to the composite shapes\n                 * @private\n                 */\n                wrapper.setPaths = function (attribs) {\n                    const paths = wrapper.renderer.arc3dPath(attribs), zIndex = paths.zTop * 100;\n                    wrapper.attribs = attribs;\n                    wrapper.top.attr({ d: paths.top, zIndex: paths.zTop });\n                    wrapper.inn.attr({ d: paths.inn, zIndex: paths.zInn });\n                    wrapper.out.attr({ d: paths.out, zIndex: paths.zOut });\n                    wrapper.side1.attr({ d: paths.side1, zIndex: paths.zSide1 });\n                    wrapper.side2.attr({ d: paths.side2, zIndex: paths.zSide2 });\n                    // Show all children\n                    wrapper.zIndex = zIndex;\n                    wrapper.attr({ zIndex: zIndex });\n                    // Set the radial gradient center the first time\n                    if (attribs.center) {\n                        wrapper.top.setRadialReference(attribs.center);\n                        delete attribs.center;\n                    }\n                };\n                wrapper.setPaths(attribs);\n                /**\n                 * Apply the fill to the top and a darker shade to the sides\n                 * @private\n                 */\n                wrapper.fillSetter = function (value) {\n                    const darker = color(value).brighten(-0.1).get();\n                    this.fill = value;\n                    this.side1.attr({ fill: darker });\n                    this.side2.attr({ fill: darker });\n                    this.inn.attr({ fill: darker });\n                    this.out.attr({ fill: darker });\n                    this.top.attr({ fill: value });\n                    return this;\n                };\n                // Apply the same value to all. These properties cascade down to the\n                // children when set to the composite arc3d.\n                for (const setter of ['opacity', 'translateX', 'translateY', 'visibility']) {\n                    wrapper[setter + 'Setter'] = function (value, key) {\n                        wrapper[key] = value;\n                        for (const el of ['out', 'inn', 'side1', 'side2', 'top']) {\n                            wrapper[el].attr(key, value);\n                        }\n                    };\n                }\n                // Override attr to remove shape attributes and use those to set child\n                // paths\n                wrapper.attr = function (params) {\n                    let ca, paramArr;\n                    if (typeof params === 'object') {\n                        paramArr = suckOutCustom(params);\n                        if (paramArr) {\n                            ca = paramArr[0];\n                            arguments[0] = paramArr[1];\n                            extend(wrapper.attribs, ca);\n                            wrapper.setPaths(wrapper.attribs);\n                        }\n                    }\n                    return elementProto.attr.apply(wrapper, arguments);\n                };\n                // Override the animate function by sucking out custom parameters\n                // related to the shapes directly, and update the shapes from the\n                // animation step.\n                wrapper.animate = function (params, animation, complete) {\n                    const from = this.attribs, randomProp = ('data-' + Math.random().toString(26).substring(2, 9));\n                    let paramArr, to;\n                    // Attribute-line properties connected to 3D. These shouldn't have\n                    // been in the attribs collection in the first place.\n                    delete params.center;\n                    delete params.z;\n                    delete params.alpha;\n                    delete params.beta;\n                    const anim = animObject(pick(animation, this.renderer.globalAnimation));\n                    if (anim.duration) {\n                        paramArr = suckOutCustom(params);\n                        // Params need to have a property in order for the step to run\n                        // (#5765, #7097, #7437)\n                        wrapper[randomProp] = 0;\n                        params[randomProp] = 1;\n                        wrapper[randomProp + 'Setter'] = H.noop;\n                        if (paramArr) {\n                            to = paramArr[0]; // Custom attr\n                            anim.step = function (a, fx) {\n                                const interpolate = (key) => (from[key] + (pick(to[key], from[key]) -\n                                    from[key]) * fx.pos);\n                                if (fx.prop === randomProp) {\n                                    fx.elem.setPaths(merge(from, {\n                                        x: interpolate('x'),\n                                        y: interpolate('y'),\n                                        r: interpolate('r'),\n                                        innerR: interpolate('innerR'),\n                                        start: interpolate('start'),\n                                        end: interpolate('end'),\n                                        depth: interpolate('depth')\n                                    }));\n                                }\n                            };\n                        }\n                        animation = anim; // Only when duration (#5572)\n                    }\n                    return elementProto.animate.call(this, params, animation, complete);\n                };\n                // Destroy all children\n                wrapper.destroy = function () {\n                    this.top.destroy();\n                    this.out.destroy();\n                    this.inn.destroy();\n                    this.side1.destroy();\n                    this.side2.destroy();\n                    return elementProto.destroy.call(this);\n                };\n                // Hide all children\n                wrapper.hide = function () {\n                    this.top.hide();\n                    this.out.hide();\n                    this.inn.hide();\n                    this.side1.hide();\n                    this.side2.hide();\n                };\n                wrapper.show = function (inherit) {\n                    this.top.show(inherit);\n                    this.out.show(inherit);\n                    this.inn.show(inherit);\n                    this.side1.show(inherit);\n                    this.side2.show(inherit);\n                };\n                /* eslint-enable no-invalid-this */\n                return wrapper;\n            }\n            /**\n             * Generate the paths required to draw a 3D arc.\n             * @private\n             */\n            function arc3dPath(shapeArgs) {\n                const cx = shapeArgs.x || 0, // X coordinate of the center\n                cy = shapeArgs.y || 0, // Y coordinate of the center\n                start = shapeArgs.start || 0, // Start angle\n                end = (shapeArgs.end || 0) - 0.00001, // End angle\n                r = shapeArgs.r || 0, // Radius\n                ir = shapeArgs.innerR || 0, // Inner radius\n                d = shapeArgs.depth || 0, // Depth\n                alpha = shapeArgs.alpha || 0, // Alpha rotation of the chart\n                beta = shapeArgs.beta || 0; // Beta rotation of the chart\n                // Derived Variables\n                const cs = Math.cos(start), // Cosinus of the start angle\n                ss = Math.sin(start), // Sinus of the start angle\n                ce = Math.cos(end), // Cosinus of the end angle\n                se = Math.sin(end), // Sinus of the end angle\n                rx = r * Math.cos(beta), // X-radius\n                ry = r * Math.cos(alpha), // Y-radius\n                irx = ir * Math.cos(beta), // X-radius (inner)\n                iry = ir * Math.cos(alpha), // Y-radius (inner)\n                dx = d * Math.sin(beta), // Distance between top and bottom in x\n                dy = d * Math.sin(alpha); // Distance between top and bottom in y\n                // TOP\n                let top = [\n                    ['M', cx + (rx * cs), cy + (ry * ss)]\n                ];\n                top = top.concat(curveTo(cx, cy, rx, ry, start, end, 0, 0));\n                top.push([\n                    'L', cx + (irx * ce), cy + (iry * se)\n                ]);\n                top = top.concat(curveTo(cx, cy, irx, iry, end, start, 0, 0));\n                top.push(['Z']);\n                // OUTSIDE\n                const b = (beta > 0 ? Math.PI / 2 : 0), a = (alpha > 0 ? 0 : Math.PI / 2);\n                const start2 = start > -b ? start : (end > -b ? -b : start), end2 = end < PI - a ? end : (start < PI - a ? PI - a : end), midEnd = 2 * PI - a;\n                // When slice goes over bottom middle, need to add both, left and right\n                // outer side. Additionally, when we cross right hand edge, create sharp\n                // edge. Outer shape/wall:\n                //\n                //            -------\n                //          /    ^    \\\n                //    4)   /   /   \\   \\  1)\n                //        /   /     \\   \\\n                //       /   /       \\   \\\n                // (c)=> ====         ==== <=(d)\n                //       \\   \\       /   /\n                //        \\   \\<=(a)/   /\n                //         \\   \\   /   / <=(b)\n                //    3)    \\    v    /  2)\n                //            -------\n                //\n                // (a) - inner side\n                // (b) - outer side\n                // (c) - left edge (sharp)\n                // (d) - right edge (sharp)\n                // 1..n - rendering order for startAngle = 0, when set to e.g 90, order\n                // changes clockwise (1->2, 2->3, n->1) and counterclockwise for\n                // negative startAngle\n                let out = [\n                    ['M', cx + (rx * cos(start2)), cy + (ry * sin(start2))]\n                ];\n                out = out.concat(curveTo(cx, cy, rx, ry, start2, end2, 0, 0));\n                // When shape is wide, it can cross both, (c) and (d) edges, when using\n                // startAngle\n                if (end > midEnd && start < midEnd) {\n                    // Go to outer side\n                    out.push([\n                        'L', cx + (rx * cos(end2)) + dx, cy + (ry * sin(end2)) + dy\n                    ]);\n                    // Curve to the right edge of the slice (d)\n                    out = out.concat(curveTo(cx, cy, rx, ry, end2, midEnd, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(curveTo(cx, cy, rx, ry, midEnd, end, 0, 0));\n                    // Go to the outer side\n                    out.push([\n                        'L', cx + (rx * cos(end)) + dx, cy + (ry * sin(end)) + dy\n                    ]);\n                    // Go back to middle (d)\n                    out = out.concat(curveTo(cx, cy, rx, ry, end, midEnd, dx, dy));\n                    out.push([\n                        'L', cx + (rx * cos(midEnd)), cy + (ry * sin(midEnd))\n                    ]);\n                    // Go back to the left edge\n                    out = out.concat(curveTo(cx, cy, rx, ry, midEnd, end2, 0, 0));\n                    // But shape can cross also only (c) edge:\n                }\n                else if (end > PI - a && start < PI - a) {\n                    // Go to outer side\n                    out.push([\n                        'L',\n                        cx + (rx * Math.cos(end2)) + dx,\n                        cy + (ry * Math.sin(end2)) + dy\n                    ]);\n                    // Curve to the true end of the slice\n                    out = out.concat(curveTo(cx, cy, rx, ry, end2, end, dx, dy));\n                    // Go to the inner side\n                    out.push([\n                        'L', cx + (rx * Math.cos(end)), cy + (ry * Math.sin(end))\n                    ]);\n                    // Go back to the artificial end2\n                    out = out.concat(curveTo(cx, cy, rx, ry, end, end2, 0, 0));\n                }\n                out.push([\n                    'L',\n                    cx + (rx * Math.cos(end2)) + dx,\n                    cy + (ry * Math.sin(end2)) + dy\n                ]);\n                out = out.concat(curveTo(cx, cy, rx, ry, end2, start2, dx, dy));\n                out.push(['Z']);\n                // INSIDE\n                let inn = [\n                    ['M', cx + (irx * cs), cy + (iry * ss)]\n                ];\n                inn = inn.concat(curveTo(cx, cy, irx, iry, start, end, 0, 0));\n                inn.push([\n                    'L',\n                    cx + (irx * Math.cos(end)) + dx,\n                    cy + (iry * Math.sin(end)) + dy\n                ]);\n                inn = inn.concat(curveTo(cx, cy, irx, iry, end, start, dx, dy));\n                inn.push(['Z']);\n                // SIDES\n                const side1 = [\n                    ['M', cx + (rx * cs), cy + (ry * ss)],\n                    ['L', cx + (rx * cs) + dx, cy + (ry * ss) + dy],\n                    ['L', cx + (irx * cs) + dx, cy + (iry * ss) + dy],\n                    ['L', cx + (irx * cs), cy + (iry * ss)],\n                    ['Z']\n                ];\n                const side2 = [\n                    ['M', cx + (rx * ce), cy + (ry * se)],\n                    ['L', cx + (rx * ce) + dx, cy + (ry * se) + dy],\n                    ['L', cx + (irx * ce) + dx, cy + (iry * se) + dy],\n                    ['L', cx + (irx * ce), cy + (iry * se)],\n                    ['Z']\n                ];\n                // Correction for changed position of vanishing point caused by alpha\n                // and beta rotations\n                const angleCorr = Math.atan2(dy, -dx);\n                let angleEnd = Math.abs(end + angleCorr), angleStart = Math.abs(start + angleCorr), angleMid = Math.abs((start + end) / 2 + angleCorr);\n                /**\n                 * Set to 0-PI range\n                 * @private\n                 */\n                function toZeroPIRange(angle) {\n                    angle = angle % (2 * Math.PI);\n                    if (angle > Math.PI) {\n                        angle = 2 * Math.PI - angle;\n                    }\n                    return angle;\n                }\n                angleEnd = toZeroPIRange(angleEnd);\n                angleStart = toZeroPIRange(angleStart);\n                angleMid = toZeroPIRange(angleMid);\n                // *1e5 is to compensate pInt in zIndexSetter\n                const incPrecision = 1e5, a1 = angleMid * incPrecision, a2 = angleStart * incPrecision, a3 = angleEnd * incPrecision;\n                return {\n                    top: top,\n                    // Max angle is PI, so this is always higher\n                    zTop: Math.PI * incPrecision + 1,\n                    out: out,\n                    zOut: Math.max(a1, a2, a3),\n                    inn: inn,\n                    zInn: Math.max(a1, a2, a3),\n                    side1: side1,\n                    // To keep below zOut and zInn in case of same values\n                    zSide1: a3 * 0.99,\n                    side2: side2,\n                    zSide2: a2 * 0.99\n                };\n            }\n        })(SVGRenderer3D || (SVGRenderer3D = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SVGRenderer3D;\n    });\n    _registerModule(_modules, 'Core/Axis/ZAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (Axis, D, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { addEvent, merge, pick, splat } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartAddZAxis(options) {\n            return new ZAxis(this, options);\n        }\n        /**\n         * Get the Z axis in addition to the default X and Y.\n         * @private\n         */\n        function onChartAfterGetAxes() {\n            const zAxisOptions = this.options.zAxis = splat(this.options.zAxis || {});\n            if (!this.is3d()) {\n                return;\n            }\n            this.zAxis = [];\n            zAxisOptions.forEach((axisOptions) => {\n                this.addZAxis(axisOptions).setScale();\n            });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * 3D axis for z coordinates.\n         * @private\n         */\n        class ZAxis extends Axis {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.isZAxis = true;\n            }\n            static compose(ChartClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.addZAxis) {\n                    defaultOptions.zAxis = merge(defaultOptions.xAxis, {\n                        offset: 0,\n                        lineWidth: 0\n                    });\n                    chartProto.addZAxis = chartAddZAxis;\n                    chartProto.collectionsWithInit.zAxis = [chartProto.addZAxis];\n                    chartProto.collectionsWithUpdate.push('zAxis');\n                    addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n                }\n            }\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            init(chart, userOptions) {\n                // #14793, this used to be set on the prototype\n                this.isZAxis = true;\n                super.init(chart, userOptions, 'zAxis');\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getSeriesExtremes() {\n                this.hasVisibleSeries = false;\n                // Reset properties in case we're redrawing (#3353)\n                this.dataMin = this.dataMax = this.ignoreMinPadding = (this.ignoreMaxPadding = void 0);\n                if (this.stacking) {\n                    this.stacking.buildStacks();\n                }\n                // Loop through this axis' series\n                this.series.forEach((series) => {\n                    if (series.reserveSpace()) {\n                        let threshold = series.options.threshold;\n                        this.hasVisibleSeries = true;\n                        // Validate threshold in logarithmic axes\n                        if (this.positiveValuesOnly && threshold <= 0) {\n                            threshold = void 0;\n                        }\n                        const zData = series.zData;\n                        if (zData.length) {\n                            this.dataMin = Math.min(pick(this.dataMin, zData[0]), Math.min.apply(null, zData));\n                            this.dataMax = Math.max(pick(this.dataMax, zData[0]), Math.max.apply(null, zData));\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            setAxisSize() {\n                const chart = this.chart;\n                super.setAxisSize();\n                this.width = this.len = (chart.options.chart.options3d &&\n                    chart.options.chart.options3d.depth) || 0;\n                this.right = chart.chartWidth - this.width - this.left;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZAxis;\n    });\n    _registerModule(_modules, 'Series/Column3D/Column3DComposition.js', [_modules['Core/Globals.js'], _modules['Core/Math3D.js'], _modules['Core/Utilities.js']], function (H, Math3D, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { perspective } = Math3D;\n        const { addEvent, extend, pick, pushUnique, wrap } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /** @private */\n        function columnSeriesTranslate3dShapes() {\n            const series = this, chart = series.chart, seriesOptions = series.options, depth = seriesOptions.depth, stack = seriesOptions.stacking ?\n                (seriesOptions.stack || 0) :\n                series.index; // #4743\n            let z = stack * (depth + (seriesOptions.groupZPadding || 1)), borderCrisp = series.borderWidth % 2 ? 0.5 : 0, point2dPos; // Position of point in 2D, used for 3D position calculation\n            if (chart.inverted && !series.yAxis.reversed) {\n                borderCrisp *= -1;\n            }\n            if (seriesOptions.grouping !== false) {\n                z = 0;\n            }\n            z += (seriesOptions.groupZPadding || 1);\n            for (const point of series.points) {\n                // #7103 Reset outside3dPlot flag\n                point.outside3dPlot = null;\n                if (point.y !== null) {\n                    const shapeArgs = extend({ x: 0, y: 0, width: 0, height: 0 }, point.shapeArgs || {}), \n                    // Array for final shapeArgs calculation.\n                    // We are checking two dimensions (x and y).\n                    dimensions = [['x', 'width'], ['y', 'height']], tooltipPos = point.tooltipPos;\n                    let borderlessBase; // Crisped rects can have +/- 0.5 pixels offset.\n                    // #3131 We need to check if column is inside plotArea.\n                    for (const d of dimensions) {\n                        borderlessBase = shapeArgs[d[0]] - borderCrisp;\n                        if (borderlessBase < 0) {\n                            // If borderLessBase is smaller than 0, it is needed to set\n                            // its value to 0 or 0.5 depending on borderWidth\n                            // borderWidth may be even or odd.\n                            shapeArgs[d[1]] += shapeArgs[d[0]] + borderCrisp;\n                            shapeArgs[d[0]] = -borderCrisp;\n                            borderlessBase = 0;\n                        }\n                        if ((borderlessBase + shapeArgs[d[1]] >\n                            series[d[0] + 'Axis'].len) &&\n                            // Do not change height/width of column if 0 (#6708)\n                            shapeArgs[d[1]] !== 0) {\n                            shapeArgs[d[1]] =\n                                series[d[0] + 'Axis'].len -\n                                    shapeArgs[d[0]];\n                        }\n                        if (\n                        // Do not remove columns with zero height/width.\n                        shapeArgs[d[1]] !== 0 &&\n                            (shapeArgs[d[0]] >= series[d[0] + 'Axis'].len ||\n                                shapeArgs[d[0]] + shapeArgs[d[1]] <= borderCrisp)) {\n                            // Set args to 0 if column is outside the chart.\n                            for (const key in shapeArgs) { // eslint-disable-line guard-for-in\n                                // #13840\n                                shapeArgs[key] = key === 'y' ? -9999 : 0;\n                            }\n                            // #7103 outside3dPlot flag is set on Points which are\n                            // currently outside of plot.\n                            point.outside3dPlot = true;\n                        }\n                    }\n                    // Change from 2d to 3d\n                    if (point.shapeType === 'roundedRect') {\n                        point.shapeType = 'cuboid';\n                    }\n                    point.shapeArgs = extend(shapeArgs, {\n                        z,\n                        depth,\n                        insidePlotArea: true\n                    });\n                    // Point's position in 2D\n                    point2dPos = {\n                        x: shapeArgs.x + shapeArgs.width / 2,\n                        y: shapeArgs.y,\n                        z: z + depth / 2 // The center of column in Z dimension\n                    };\n                    // Recalculate point positions for inverted graphs\n                    if (chart.inverted) {\n                        point2dPos.x = shapeArgs.height;\n                        point2dPos.y = point.clientX || 0;\n                    }\n                    // Crosshair positions\n                    point.axisXpos = point2dPos.x;\n                    point.axisYpos = point2dPos.y;\n                    point.axisZpos = point2dPos.z;\n                    // Calculate and store point's position in 3D,\n                    // using perspective method.\n                    point.plot3d = perspective([point2dPos], chart, true, false)[0];\n                    // Translate the tooltip position in 3d space\n                    if (tooltipPos) {\n                        const translatedTTPos = perspective([{\n                                x: tooltipPos[0],\n                                y: tooltipPos[1],\n                                z: z + depth / 2 // The center of column in Z dimension\n                            }], chart, true, false)[0];\n                        point.tooltipPos = [translatedTTPos.x, translatedTTPos.y];\n                    }\n                }\n            }\n            // Store for later use #4067\n            series.z = z;\n        }\n        /** @private */\n        function compose(SeriesClass, StackItemClass) {\n            if (pushUnique(composed, 'Column3D')) {\n                const seriesProto = SeriesClass.prototype, stackItemProto = StackItemClass.prototype, { column: ColumnSeriesClass, columnRange: ColumnRangeSeriesClass } = SeriesClass.types;\n                wrap(seriesProto, 'alignDataLabel', wrapSeriesAlignDataLabel);\n                wrap(seriesProto, 'justifyDataLabel', wrapSeriesJustifyDataLabel);\n                wrap(stackItemProto, 'getStackBox', wrapStackItemGetStackBox);\n                if (ColumnSeriesClass) {\n                    const columnSeriesProto = ColumnSeriesClass.prototype, columnPointProto = columnSeriesProto.pointClass.prototype;\n                    columnSeriesProto.translate3dPoints = () => void 0;\n                    columnSeriesProto.translate3dShapes = columnSeriesTranslate3dShapes;\n                    addEvent(columnSeriesProto, 'afterInit', onColumnSeriesAfterInit);\n                    wrap(columnPointProto, 'hasNewShapeType', wrapColumnPointHasNewShapeType);\n                    wrap(columnSeriesProto, 'animate', wrapColumnSeriesAnimate);\n                    wrap(columnSeriesProto, 'plotGroup', wrapColumnSeriesPlotGroup);\n                    wrap(columnSeriesProto, 'pointAttribs', wrapColumnSeriesPointAttribs);\n                    wrap(columnSeriesProto, 'setState', wrapColumnSeriesSetState);\n                    wrap(columnSeriesProto, 'setVisible', wrapColumnSeriesSetVisible);\n                    wrap(columnSeriesProto, 'translate', wrapColumnSeriesTranslate);\n                }\n                if (ColumnRangeSeriesClass) {\n                    const columnRangeSeriesProto = ColumnRangeSeriesClass.prototype, columnRangePointProto = columnRangeSeriesProto.pointClass.prototype;\n                    wrap(columnRangePointProto, 'hasNewShapeType', wrapColumnPointHasNewShapeType);\n                    wrap(columnRangeSeriesProto, 'plotGroup', wrapColumnSeriesPlotGroup);\n                    wrap(columnRangeSeriesProto, 'pointAttribs', wrapColumnSeriesPointAttribs);\n                    wrap(columnRangeSeriesProto, 'setState', wrapColumnSeriesSetState);\n                    wrap(columnRangeSeriesProto, 'setVisible', wrapColumnSeriesSetVisible);\n                }\n            }\n        }\n        /**\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart with stacks\n         * @param {string} stacking\n         * Stacking option\n         */\n        function retrieveStacks(chart, stacking) {\n            const series = chart.series, stacks = { totalStacks: 0 };\n            let stackNumber, i = 1;\n            series.forEach(function (s) {\n                stackNumber = pick(s.options.stack, (stacking ? 0 : series.length - 1 - s.index)); // #3841, #4532\n                if (!stacks[stackNumber]) {\n                    stacks[stackNumber] = { series: [s], position: i };\n                    i++;\n                }\n                else {\n                    stacks[stackNumber].series.push(s);\n                }\n            });\n            stacks.totalStacks = i + 1;\n            return stacks;\n        }\n        /** @private */\n        function onColumnSeriesAfterInit() {\n            if (this.chart.is3d()) {\n                const series = this, seriesOptions = series.options, grouping = seriesOptions.grouping, stacking = seriesOptions.stacking, reversedStacks = series.yAxis.options.reversedStacks;\n                let z = 0;\n                // @todo grouping === true ?\n                if (!(typeof grouping !== 'undefined' && !grouping)) {\n                    const stacks = retrieveStacks(this.chart, stacking), stack = seriesOptions.stack || 0;\n                    let i; // Position within the stack\n                    for (i = 0; i < stacks[stack].series.length; i++) {\n                        if (stacks[stack].series[i] === this) {\n                            break;\n                        }\n                    }\n                    z = (10 * (stacks.totalStacks - stacks[stack].position)) +\n                        (reversedStacks ? i : -i); // #4369\n                    // In case when axis is reversed, columns are also reversed inside\n                    // the group (#3737)\n                    if (!this.xAxis.reversed) {\n                        z = (stacks.totalStacks * 10) - z;\n                    }\n                }\n                seriesOptions.depth = seriesOptions.depth || 25;\n                series.z = series.z || 0;\n                seriesOptions.zIndex = z;\n            }\n        }\n        /**\n         * In 3D mode, simple checking for a new shape to animate is not enough.\n         * Additionally check if graphic is a group of elements\n         * @private\n         */\n        function wrapColumnPointHasNewShapeType(proceed, ...args) {\n            return this.series.chart.is3d() ?\n                this.graphic && this.graphic.element.nodeName !== 'g' :\n                proceed.apply(this, args);\n        }\n        /** @private */\n        function wrapColumnSeriesAnimate(proceed) {\n            if (!this.chart.is3d()) {\n                proceed.apply(this, [].slice.call(arguments, 1));\n            }\n            else {\n                const args = arguments, init = args[1], yAxis = this.yAxis, series = this, reversed = this.yAxis.reversed;\n                if (init) {\n                    for (const point of series.points) {\n                        if (point.y !== null) {\n                            point.height = point.shapeArgs.height;\n                            point.shapey = point.shapeArgs.y; // #2968\n                            point.shapeArgs.height = 1;\n                            if (!reversed) {\n                                if (point.stackY) {\n                                    point.shapeArgs.y =\n                                        point.plotY +\n                                            yAxis.translate(point.stackY);\n                                }\n                                else {\n                                    point.shapeArgs.y =\n                                        point.plotY +\n                                            (point.negative ?\n                                                -point.height :\n                                                point.height);\n                                }\n                            }\n                        }\n                    }\n                }\n                else { // Run the animation\n                    for (const point of series.points) {\n                        if (point.y !== null) {\n                            point.shapeArgs.height = point.height;\n                            point.shapeArgs.y = point.shapey; // #2968\n                            // null value do not have a graphic\n                            if (point.graphic) {\n                                point.graphic[point.outside3dPlot ?\n                                    'attr' :\n                                    'animate'](point.shapeArgs, series.options.animation);\n                            }\n                        }\n                    }\n                    // Redraw datalabels to the correct position\n                    this.drawDataLabels();\n                }\n            }\n        }\n        /**\n         * In case of 3d columns there is no sense to add these columns to a specific\n         * series group. If a series is added to a group all columns will have the same\n         * zIndex in comparison to another series.\n         * @private\n         */\n        function wrapColumnSeriesPlotGroup(proceed, prop, _name, _visibility, _zIndex, parent) {\n            if (prop !== 'dataLabelsGroup' && prop !== 'markerGroup') {\n                if (this.chart.is3d()) {\n                    if (this[prop]) {\n                        delete this[prop];\n                    }\n                    if (parent) {\n                        if (!this.chart.columnGroup) {\n                            this.chart.columnGroup =\n                                this.chart.renderer.g('columnGroup').add(parent);\n                        }\n                        this[prop] = this.chart.columnGroup;\n                        this.chart.columnGroup.attr(this.getPlotBox());\n                        this[prop].survive = true;\n                        if (prop === 'group') {\n                            arguments[3] = 'visible';\n                            // For 3D column group and markerGroup should be visible\n                        }\n                    }\n                }\n            }\n            return proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        }\n        /** @private */\n        function wrapColumnSeriesPointAttribs(proceed) {\n            const attr = proceed.apply(this, [].slice.call(arguments, 1));\n            if (this.chart.is3d && this.chart.is3d()) {\n                // Set the fill color to the fill color to provide a smooth edge\n                attr.stroke = this.options.edgeColor || attr.fill;\n                attr['stroke-width'] = pick(this.options.edgeWidth, 1); // #4055\n            }\n            return attr;\n        }\n        /**\n         * In 3D mode, all column-series are rendered in one main group. Because of that\n         * we need to apply inactive state on all points.\n         * @private\n         */\n        function wrapColumnSeriesSetState(proceed, state, inherit) {\n            const is3d = this.chart.is3d && this.chart.is3d();\n            if (is3d) {\n                this.options.inactiveOtherPoints = true;\n            }\n            proceed.call(this, state, inherit);\n            if (is3d) {\n                this.options.inactiveOtherPoints = false;\n            }\n        }\n        /**\n         * When series is not added to group it is needed to change setVisible method to\n         * allow correct Legend funcionality. This wrap is basing on pie chart series.\n         * @private\n         */\n        function wrapColumnSeriesSetVisible(proceed, vis) {\n            const series = this;\n            if (series.chart.is3d()) {\n                for (const point of series.points) {\n                    point.visible = point.options.visible = vis =\n                        typeof vis === 'undefined' ?\n                            !pick(series.visible, point.visible) : vis;\n                    series.options.data[series.data.indexOf(point)] =\n                        point.options;\n                    if (point.graphic) {\n                        point.graphic.attr({\n                            visibility: vis ? 'visible' : 'hidden'\n                        });\n                    }\n                }\n            }\n            proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n        }\n        /** @private */\n        function wrapColumnSeriesTranslate(proceed) {\n            proceed.apply(this, [].slice.call(arguments, 1));\n            // Do not do this if the chart is not 3D\n            if (this.chart.is3d()) {\n                this.translate3dShapes();\n            }\n        }\n        /** @private */\n        function wrapSeriesAlignDataLabel(proceed, point, _dataLabel, options, alignTo) {\n            const chart = this.chart;\n            // In 3D we need to pass point.outsidePlot option to the justifyDataLabel\n            // method for disabling justifying dataLabels in columns outside plot\n            options.outside3dPlot = point.outside3dPlot;\n            // Only do this for 3D columns and it's derived series\n            if (chart.is3d() &&\n                this.is('column')) {\n                const series = this, seriesOptions = series.options, inside = pick(options.inside, !!series.options.stacking), options3d = chart.options.chart.options3d, xOffset = point.pointWidth / 2 || 0;\n                let dLPosition = {\n                    x: alignTo.x + xOffset,\n                    y: alignTo.y,\n                    z: series.z + seriesOptions.depth / 2\n                };\n                if (chart.inverted) {\n                    // Inside dataLabels are positioned according to above\n                    // logic and there is no need to position them using\n                    // non-3D algorighm (that use alignTo.width)\n                    if (inside) {\n                        alignTo.width = 0;\n                        dLPosition.x += point.shapeArgs.height / 2;\n                    }\n                    // When chart is upside down\n                    // (alpha angle between 180 and 360 degrees)\n                    // it is needed to add column width to calculated value.\n                    if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                        dLPosition.y += point.shapeArgs.width;\n                    }\n                }\n                // `dLPosition` is recalculated for 3D graphs\n                dLPosition = perspective([dLPosition], chart, true, false)[0];\n                alignTo.x = dLPosition.x - xOffset;\n                // #7103 If point is outside of plotArea, hide data label.\n                alignTo.y = point.outside3dPlot ? -9e9 : dLPosition.y;\n            }\n            proceed.apply(this, [].slice.call(arguments, 1));\n        }\n        /**\n         * Don't use justifyDataLabel when point is outsidePlot.\n         * @private\n         */\n        function wrapSeriesJustifyDataLabel(proceed) {\n            return (!(arguments[2].outside3dPlot) ?\n                proceed.apply(this, [].slice.call(arguments, 1)) :\n                false);\n        }\n        /**\n         * Added stackLabels position calculation for 3D charts.\n         * @private\n         */\n        function wrapStackItemGetStackBox(proceed, stackBoxProps) {\n            const stackBox = proceed.apply(this, [].slice.call(arguments, 1));\n            // Only do this for 3D graph\n            const stackItem = this, chart = this.axis.chart, { width: xWidth } = stackBoxProps;\n            if (chart.is3d() && stackItem.base) {\n                // First element of stackItem.base is an index of base series.\n                const baseSeriesInd = +(stackItem.base).split(',')[0];\n                const columnSeries = chart.series[baseSeriesInd];\n                const options3d = chart.options.chart.options3d;\n                // Only do this if base series is a column or inherited type,\n                // use its barW, z and depth parameters\n                // for correct stackLabels position calculation\n                if (columnSeries &&\n                    columnSeries.type === 'column') {\n                    let dLPosition = {\n                        x: stackBox.x + (chart.inverted ? stackBox.height : xWidth / 2),\n                        y: stackBox.y,\n                        z: columnSeries.options.depth / 2\n                    };\n                    if (chart.inverted) {\n                        // Do not use default offset calculation logic\n                        // for 3D inverted stackLabels.\n                        stackBox.width = 0;\n                        // When chart is upside down\n                        // (alpha angle between 180 and 360 degrees)\n                        // it is needed to add column width to calculated value.\n                        if (options3d.alpha >= 90 && options3d.alpha <= 270) {\n                            dLPosition.y += xWidth;\n                        }\n                    }\n                    dLPosition = perspective([dLPosition], chart, true, false)[0];\n                    stackBox.x = dLPosition.x - xWidth / 2;\n                    stackBox.y = dLPosition.y;\n                }\n            }\n            return stackBox;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const Column3DComposition = {\n            compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Depth of the columns in a 3D column chart.\n         *\n         * @type      {number}\n         * @default   25\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.depth\n         */\n        /**\n         * 3D columns only. The color of the edges. Similar to `borderColor`, except it\n         * defaults to the same color as the column.\n         *\n         * @type      {Highcharts.ColorString}\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeColor\n         */\n        /**\n         * 3D columns only. The width of the colored edges.\n         *\n         * @type      {number}\n         * @default   1\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.edgeWidth\n         */\n        /**\n         * The spacing between columns on the Z Axis in a 3D chart.\n         *\n         * @type      {number}\n         * @default   1\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.column.groupZPadding\n         */\n        ''; // Keeps doclets above in transpiled file\n\n        return Column3DComposition;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { pie: { prototype: { pointClass: PiePoint } } } = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Pie3DPoint extends PiePoint {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            haloPath() {\n                return this.series?.chart.is3d() ?\n                    [] : super.haloPath.apply(this, arguments);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Pie3DPoint;\n    });\n    _registerModule(_modules, 'Series/Pie3D/Pie3DSeries.js', [_modules['Core/Globals.js'], _modules['Series/Pie3D/Pie3DPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, Pie3DPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  3D pie series\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed, deg2rad } = H;\n        const { pie: PieSeries } = SeriesRegistry.seriesTypes;\n        const { extend, pick, pushUnique } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Pie3DSeries extends PieSeries {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(SeriesClass) {\n                if (pushUnique(composed, 'Pie3D')) {\n                    SeriesClass.types.pie = Pie3DSeries;\n                }\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            addPoint() {\n                super.addPoint.apply(this, arguments);\n                if (this.chart.is3d()) {\n                    // Destroy (and rebuild) everything!!!\n                    this.update(this.userOptions, true); // #3845 pass the old options\n                }\n            }\n            /**\n             * @private\n             */\n            animate(init) {\n                if (!this.chart.is3d()) {\n                    super.animate.apply(this, arguments);\n                }\n                else {\n                    const center = this.center, group = this.group, markerGroup = this.markerGroup;\n                    let animation = this.options.animation, attribs;\n                    if (animation === true) {\n                        animation = {};\n                    }\n                    // Initialize the animation\n                    if (init) {\n                        // Scale down the group and place it in the center\n                        group.oldtranslateX = pick(group.oldtranslateX, group.translateX);\n                        group.oldtranslateY = pick(group.oldtranslateY, group.translateY);\n                        attribs = {\n                            translateX: center[0],\n                            translateY: center[1],\n                            scaleX: 0.001, // #1499\n                            scaleY: 0.001\n                        };\n                        group.attr(attribs);\n                        if (markerGroup) {\n                            markerGroup.attrSetters = group.attrSetters;\n                            markerGroup.attr(attribs);\n                        }\n                        // Run the animation\n                    }\n                    else {\n                        attribs = {\n                            translateX: group.oldtranslateX,\n                            translateY: group.oldtranslateY,\n                            scaleX: 1,\n                            scaleY: 1\n                        };\n                        group.animate(attribs, animation);\n                        if (markerGroup) {\n                            markerGroup.animate(attribs, animation);\n                        }\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            getDataLabelPosition(point, distance) {\n                const labelPosition = super.getDataLabelPosition(point, distance);\n                if (this.chart.is3d()) {\n                    const options3d = this.chart.options.chart.options3d, shapeArgs = point.shapeArgs, r = shapeArgs.r, \n                    // #3240 issue with datalabels for 0 and null values\n                    a1 = ((shapeArgs.alpha || options3d?.alpha) *\n                        deg2rad), b1 = ((shapeArgs.beta || options3d?.beta) *\n                        deg2rad), a2 = (shapeArgs.start + shapeArgs.end) / 2, connectorPosition = labelPosition.connectorPosition, yOffset = (-r * (1 - Math.cos(a1)) * Math.sin(a2)), xOffset = r * (Math.cos(b1) - 1) * Math.cos(a2);\n                    // Apply perspective on label positions\n                    for (const coordinates of [\n                        labelPosition?.natural,\n                        connectorPosition.breakAt,\n                        connectorPosition.touchingSliceAt\n                    ]) {\n                        coordinates.x += xOffset;\n                        coordinates.y += yOffset;\n                    }\n                }\n                return labelPosition;\n            }\n            /**\n             * @private\n             */\n            pointAttribs(point) {\n                const attr = super.pointAttribs.apply(this, arguments), options = this.options;\n                if (this.chart.is3d() && !this.chart.styledMode) {\n                    attr.stroke = options.edgeColor || point.color || this.color;\n                    attr['stroke-width'] = pick(options.edgeWidth, 1);\n                }\n                return attr;\n            }\n            /**\n             * @private\n             */\n            translate() {\n                super.translate.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                const series = this, seriesOptions = series.options, depth = seriesOptions.depth || 0, options3d = series.chart.options.chart.options3d, alpha = options3d.alpha, beta = options3d.beta;\n                let z = seriesOptions.stacking ?\n                    (seriesOptions.stack || 0) * depth :\n                    series._i * depth;\n                z += depth / 2;\n                if (seriesOptions.grouping !== false) {\n                    z = 0;\n                }\n                for (const point of series.points) {\n                    const shapeArgs = point.shapeArgs;\n                    point.shapeType = 'arc3d';\n                    shapeArgs.z = z;\n                    shapeArgs.depth = depth * 0.75;\n                    shapeArgs.alpha = alpha;\n                    shapeArgs.beta = beta;\n                    shapeArgs.center = series.center;\n                    const angle = (shapeArgs.end + shapeArgs.start) / 2;\n                    point.slicedTranslation = {\n                        translateX: Math.round(Math.cos(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad)),\n                        translateY: Math.round(Math.sin(angle) *\n                            seriesOptions.slicedOffset *\n                            Math.cos(alpha * deg2rad))\n                    };\n                }\n            }\n            /**\n             * @private\n             */\n            drawTracker() {\n                super.drawTracker.apply(this, arguments);\n                // Do not do this if the chart is not 3D\n                if (!this.chart.is3d()) {\n                    return;\n                }\n                for (const point of this.points) {\n                    if (point.graphic) {\n                        for (const face of ['out', 'inn', 'side1', 'side2']) {\n                            if (point.graphic) {\n                                point.graphic[face].element.point = point;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        extend(Pie3DSeries.prototype, {\n            pointClass: Pie3DPoint\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The thickness of a 3D pie.\n         *\n         * @type      {number}\n         * @default   0\n         * @since     4.0\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption plotOptions.pie.depth\n         */\n        ''; // Keeps doclets above after transpiledion\n\n        return Pie3DSeries;\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DPoint.js', [_modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Utilities.js']], function (ScatterSeries, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { pointClass: ScatterPoint } = ScatterSeries.prototype;\n        const { defined } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Scatter3DPoint extends ScatterPoint {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            applyOptions() {\n                super.applyOptions.apply(this, arguments);\n                if (!defined(this.z)) {\n                    this.z = 0;\n                }\n                return this;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scatter3DPoint;\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A 3D scatter plot uses x, y and z coordinates to display values for three\n         * variables for a set of data.\n         *\n         * @sample {highcharts} highcharts/3d/scatter/\n         *         Simple 3D scatter\n         * @sample {highcharts} highcharts/demo/3d-scatter-draggable\n         *         Draggable 3d scatter\n         *\n         * @extends      plotOptions.scatter\n         * @excluding    dragDrop, cluster, boostThreshold, boostBlending\n         * @product      highcharts\n         * @requires     highcharts-3d\n         * @optionparent plotOptions.scatter3d\n         */\n        const Scatter3DSeriesDefaults = {\n            tooltip: {\n                pointFormat: 'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>'\n            }\n        };\n        /**\n         * A `scatter3d` series. If the [type](#series.scatter3d.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * scatter3d](#plotOptions.scatter3d).\n         *\n         * @extends   series,plotOptions.scatter3d\n         * @excluding boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  highcharts-3d\n         * @apioption series.scatter3d\n         */\n        /**\n         * An array of data points for the series. For the `scatter3d` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 values. In this case, the values correspond\n         * to `x,y,z`. If the first value is a string, it is applied as the name\n         * of the point, and the `x` value is inferred.\n         *\n         *  ```js\n         *     data: [\n         *         [0, 0, 1],\n         *         [1, 8, 7],\n         *         [2, 9, 2]\n         *     ]\n         *  ```\n         *\n         * 3.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series'\n         * [turboThreshold](#series.scatter3d.turboThreshold), this option is not\n         * available.\n         *\n         *  ```js\n         *     data: [{\n         *         x: 1,\n         *         y: 2,\n         *         z: 24,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         x: 1,\n         *         y: 4,\n         *         z: 12,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.scatter.data\n         * @product   highcharts\n         * @apioption series.scatter3d.data\n         */\n        /**\n         * The z value for each data point.\n         *\n         * @type      {number}\n         * @product   highcharts\n         * @apioption series.scatter3d.data.z\n         */\n        ''; // Detachs doclets above\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scatter3DSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Scatter3D/Scatter3DSeries.js', [_modules['Core/Math3D.js'], _modules['Series/Scatter3D/Scatter3DPoint.js'], _modules['Series/Scatter3D/Scatter3DSeriesDefaults.js'], _modules['Series/Scatter/ScatterSeries.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Math3D, Scatter3DPoint, Scatter3DSeriesDefaults, ScatterSeries, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  Scatter 3D series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { pointCameraDistance } = Math3D;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.scatter3d\n         *\n         * @augments Highcharts.Series\n         */\n        class Scatter3DSeries extends ScatterSeries {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            pointAttribs(point) {\n                const attribs = super.pointAttribs.apply(this, arguments);\n                if (this.chart.is3d() && point) {\n                    attribs.zIndex =\n                        pointCameraDistance(point, this.chart);\n                }\n                return attribs;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        Scatter3DSeries.defaultOptions = merge(ScatterSeries.defaultOptions, Scatter3DSeriesDefaults);\n        extend(Scatter3DSeries.prototype, {\n            axisTypes: ['xAxis', 'yAxis', 'zAxis'],\n            // Require direct touch rather than using the k-d-tree, because the\n            // k-d-tree currently doesn't take the xyz coordinate system into\n            // account (#4552)\n            directTouch: true,\n            parallelArrays: ['x', 'y', 'z'],\n            pointArrayMap: ['x', 'y', 'z'],\n            pointClass: Scatter3DPoint\n        });\n        SeriesRegistry.registerSeriesType('scatter3d', Scatter3DSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scatter3DSeries;\n    });\n    _registerModule(_modules, 'masters/highcharts-3d.src.js', [_modules['Core/Globals.js'], _modules['Core/Chart/Chart3D.js'], _modules['Series/Area3D/Area3DSeries.js'], _modules['Core/Axis/Axis3DComposition.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Series/Series3D.js'], _modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Renderer/SVG/SVGRenderer3D.js'], _modules['Core/Axis/ZAxis.js'], _modules['Series/Column3D/Column3DComposition.js'], _modules['Series/Pie3D/Pie3DSeries.js']], function (Highcharts, Chart3D, Area3DSeries, Axis3DComposition, RendererRegistry, Series3D, StackItem, SVGRenderer3D, ZAxis, Column3DComposition, Pie3DSeries) {\n\n        const G = Highcharts;\n        // Compositions\n        Area3DSeries.compose(G.seriesTypes.area);\n        Axis3DComposition.compose(G.Axis, G.Tick);\n        Chart3D.compose(G.Chart, G.Fx);\n        Column3DComposition.compose(G.Series, StackItem);\n        Pie3DSeries.compose(G.Series);\n        Series3D.compose(G.Series);\n        SVGRenderer3D.compose(RendererRegistry.getRendererType());\n        ZAxis.compose(G.Chart);\n\n        return G;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","U","deg2rad","pick","perspective","points","chart","insidePlotArea","useInvertedPersp","options3d","options","inverted","origin","x","plotWidth","y","plotHeight","z","depth","vd","viewDistance","scale","scale3d","beta","alpha","angles","cosA","Math","cos","cosB","sinA","sin","sinB","plotLeft","plotTop","map","point","rotated","coordinate","perspective3D","distance","projection","Number","POSITIVE_INFINITY","shapeArea","vertexes","area","i","j","length","pointCameraDistance","coordinates","cameraPosition","sqrt","pow","plotX","plotY","plotZ","shapeArea3D","Color","D","Math3D","Chart3D","parse","color","defaultOptions","genericDefaultOptions","addEvent","isArray","merge","wrap","onAddSeries","e","is3d","type","onAfterDrawChartBox","chart3d","renderer","frame","get3dFrame","xm","xp","ym","yp","zp","xmm","left","visible","size","xpp","right","ymm","top","ypp","bottom","zmm","zm","front","zpp","back","verb","hasRendered","frame3d","frameShapes","polyhedron","add","zIndex","frontFacing","faces","fill","brighten","get","enabled","onAfterGetContainer","styledMode","name","slope","forEach","cfg","definition","tagName","attributes","id","children","onAfterInit","series","s","defaultSeriesType","onAfterSetChartSize","clipBox","margin","chartWidth","chartHeight","fitToPlot","getScale","onBeforeRedraw","isDirtyBox","onBeforeRender","onInit","Additions","wrapIsInsidePlot","proceed","slice","call","arguments","wrapRenderSeries","translate","render","wrapSetClassName","container","className","axisLabelPosition","compose","ChartClass","FxClass","chartProto","prototype","fxProto","propsRequireDirtyBox","push","propsRequireUpdateSeries","matrixSetter","interpolated","pos","start","end","elem","attr","prop","constructor","frameOptions","faceOrientation","bottomOrientation","topOrientation","leftOrientation","rightOrientation","frontOrientation","backOrientation","defaultShowBottom","defaultShowTop","defaultShowLeft","defaultShowRight","concat","xAxis","yAxis","zAxis","axis","horiz","opposite","getFaceOptions","sources","defaultVisible","faceAttrs","val","isVisible","ret","axes","side","isValidEdge","face1","face2","yEdges","xDir","xBottomEdges","xTopEdges","zBottomEdges","zTopEdges","pickEdge","edges","mult","projections","best","plotRight","plotBottom","originX","originY","bbox3d","minX","MAX_VALUE","maxX","minY","maxY","corners","corner","min","max","abs","SeriesRegistry","composed","line","lineProto","seriesTypes","pushUnique","wrapAreaSeriesGetGraphPath","svgPath","getGraphPath","translatedThreshold","round","getThreshold","threshold","bottomPoints","rawPointsX","stacking","yBottom","zPadding","group","markerGroup","translateX","translateY","reversed","bottomPath","areaPath","splice","xMap","graphPath","AreaSeriesClass","labels","position3d","skew3d","title","extend","onTickAfterGetLabelPosition","axis3D","fix3dPosition","wrapTickGetMarkPath","pArr","toLineSegments","TickClass","Axis3DDefaults","Tick3D","onAxisAfterSetOptions","coll","tickWidth","gridLineWidth","onAxisDrawCrosshair","crosshairPos","isXAxis","axisXpos","len","axisYpos","onAxisInit","Axis3DAdditions","wrapAxisGetLinePath","wrapAxisGetPlotBandPath","from","to","fromPath","getPlotLinePath","value","toPath","fromStartSeg","fromEndSeg","toStartSeg","toEndSeg","wrapAxisGetPlotLinePath","d","isZAxis","startSegment","endSegment","pathSegments","swapZ","wrapAxisGetSlotWidth","tick","gridGroup","tickPositions","ticks","categories","label","labelPos","prevLabelPos","nextLabelPos","firstGridLine","element","childNodes","getBBox","frame3DLeft","index","indexOf","prevTick","nextTick","xy","wrapAxisGetTitlePosition","AxisClass","keepProps","includes","axisProto","isTitle","positionMode","skew","offsetX","offsetY","vecX","vecY","reverseFlap","sina","cosa","vecZ","sinb","projected","pointsProjected","matrix","p","Series","isNumber","Series3D","SeriesClass","translate3dPoints","projectedPoint","zValue","seriesOptions","rawPoints","stack","groupZPadding","data","rawPoint","logarithmic","val2lin","isInside","axisZpos","projectedPoints","RendererRegistry","Element","SVGElement","getRendererType","defined","SVGElement3D","parts","pathType","initArgs","elem3d","paths","zIndexes","part","attribs","filter","forcedSides","singleSetterForParts","values","duration","complete","newAttr","optionsToApply","hasZIndexes","Object","keys","processParts","props","partsProps","destroy","continueAnimation","key","shapeArgs","animate","fillSetter","types","base","cuboid","A","SVGRenderer3D","animObject","charts","PI","dFactor","curveTo","cx","cy","rx","ry","dx","dy","arcAngle","result","toLinePath","closed","m","face3d","elementProto","createElement","hash","chartIndex","vertexes2d","visibility","params","g","pop","element3d","cuboidPath","h","height","w","width","shape","mapSidePath","mapPath","pickShape","verticesIndex1","verticesIndex2","dummyFace1","dummyFace2","path1","isFront","path2","isTop","path3","isRight","incrementX","incrementY","incrementZ","arc3d","wrapper","customAttribs","suckOutCustom","ca","hasCA","side1","side2","inn","out","onAdd","parent","parentGroup","face","setter","setPaths","arc3dPath","zTop","zInn","zOut","zSide1","zSide2","center","setRadialReference","darker","el","paramArr","animation","randomProp","random","toString","substring","anim","globalAnimation","noop","step","a","fx","interpolate","r","innerR","hide","show","inherit","ir","cs","ss","ce","se","irx","iry","b","start2","end2","midEnd","angleCorr","atan2","angleEnd","angleStart","angleMid","toZeroPIRange","angle","a1","a2","a3","SVGRendererClass","rendererProto","Element3D","Axis","splat","chartAddZAxis","ZAxis","onChartAfterGetAxes","zAxisOptions","axisOptions","addZAxis","setScale","offset","lineWidth","collectionsWithInit","collectionsWithUpdate","init","userOptions","getSeriesExtremes","hasVisibleSeries","dataMin","dataMax","ignoreMinPadding","ignoreMaxPadding","buildStacks","reserveSpace","positiveValuesOnly","zData","setAxisSize","columnSeriesTranslate3dShapes","borderCrisp","borderWidth","point2dPos","grouping","outside3dPlot","borderlessBase","dimensions","tooltipPos","shapeType","clientX","plot3d","translatedTTPos","onColumnSeriesAfterInit","reversedStacks","stacks","retrieveStacks","totalStacks","stackNumber","position","wrapColumnPointHasNewShapeType","graphic","nodeName","wrapColumnSeriesAnimate","shapey","stackY","negative","drawDataLabels","wrapColumnSeriesPlotGroup","_name","_visibility","_zIndex","columnGroup","getPlotBox","survive","Array","wrapColumnSeriesPointAttribs","stroke","edgeColor","edgeWidth","wrapColumnSeriesSetState","state","inactiveOtherPoints","wrapColumnSeriesSetVisible","vis","wrapColumnSeriesTranslate","translate3dShapes","wrapSeriesAlignDataLabel","_dataLabel","alignTo","is","inside","xOffset","pointWidth","dLPosition","wrapSeriesJustifyDataLabel","wrapStackItemGetStackBox","stackBoxProps","stackBox","xWidth","stackItem","baseSeriesInd","split","columnSeries","StackItemClass","seriesProto","stackItemProto","column","ColumnSeriesClass","columnRange","ColumnRangeSeriesClass","columnSeriesProto","columnPointProto","pointClass","columnRangeSeriesProto","pie","PiePoint","haloPath","Pie3DPoint","PieSeries","Pie3DSeries","addPoint","update","oldtranslateX","oldtranslateY","scaleX","scaleY","attrSetters","getDataLabelPosition","labelPosition","b1","connectorPosition","yOffset","natural","breakAt","touchingSliceAt","pointAttribs","_i","slicedTranslation","slicedOffset","drawTracker","ScatterSeries","ScatterPoint","applyOptions","tooltip","pointFormat","Scatter3DPoint","Scatter3DSeriesDefaults","Scatter3DSeries","axisTypes","directTouch","parallelArrays","pointArrayMap","registerSeriesType","Area3DSeries","Axis3DComposition","StackItem","Column3DComposition","G","Tick","Chart","Fx"],"mappings":"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"}