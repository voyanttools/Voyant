{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.8 (2024-08-29)\n *\n * Advanced Highcharts Stock tools\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/stock-tools', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Chart/ChartNavigationComposition.js', [], function () {\n        /**\n         *\n         *  (c) 2010-2024 Pawe≈Ç Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ChartNavigationComposition;\n        (function (ChartNavigationComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(chart) {\n                if (!chart.navigation) {\n                    chart.navigation = new Additions(chart);\n                }\n                return chart;\n            }\n            ChartNavigationComposition.compose = compose;\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Initializes `chart.navigation` object which delegates `update()` methods\n             * to all other common classes (used in exporting and navigationBindings).\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function Additions(chart) {\n                    this.updates = [];\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Registers an `update()` method in the `chart.navigation` object.\n                 *\n                 * @private\n                 * @param {UpdateFunction} updateFn\n                 * The `update()` method that will be called in `chart.update()`.\n                 */\n                Additions.prototype.addUpdate = function (updateFn) {\n                    this.chart.navigation.updates.push(updateFn);\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.update = function (options, redraw) {\n                    var _this = this;\n                    this.updates.forEach(function (updateFn) {\n                        updateFn.call(_this.chart, options, redraw);\n                    });\n                };\n                return Additions;\n            }());\n            ChartNavigationComposition.Additions = Additions;\n        })(ChartNavigationComposition || (ChartNavigationComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ChartNavigationComposition;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsDefaults.js', [_modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Utilities.js']], function (NBU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getAssignedAxis = NBU.getAssignedAxis;\n        var isNumber = U.isNumber, merge = U.merge;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * Configure the Popup strings in the chart. Requires the\n             * `annotations.js` or `annotations-advanced.src.js` module to be\n             * loaded.\n             * @since   7.0.0\n             * @product highcharts highstock\n             */\n            navigation: {\n                /**\n                 * Translations for all field names used in popup.\n                 *\n                 * @product highcharts highstock\n                 */\n                popup: {\n                    simpleShapes: 'Simple shapes',\n                    lines: 'Lines',\n                    circle: 'Circle',\n                    ellipse: 'Ellipse',\n                    rectangle: 'Rectangle',\n                    label: 'Label',\n                    shapeOptions: 'Shape options',\n                    typeOptions: 'Details',\n                    fill: 'Fill',\n                    format: 'Text',\n                    strokeWidth: 'Line width',\n                    stroke: 'Line color',\n                    title: 'Title',\n                    name: 'Name',\n                    labelOptions: 'Label options',\n                    labels: 'Labels',\n                    backgroundColor: 'Background color',\n                    backgroundColors: 'Background colors',\n                    borderColor: 'Border color',\n                    borderRadius: 'Border radius',\n                    borderWidth: 'Border width',\n                    style: 'Style',\n                    padding: 'Padding',\n                    fontSize: 'Font size',\n                    color: 'Color',\n                    height: 'Height',\n                    shapes: 'Shape options'\n                }\n            }\n        };\n        /**\n         * @optionparent navigation\n         * @product      highcharts highstock\n         */\n        var navigation = {\n            /**\n             * A CSS class name where all bindings will be attached to. Multiple\n             * charts on the same page should have separate class names to prevent\n             * duplicating events.\n             *\n             * Default value of versions < 7.0.4 `highcharts-bindings-wrapper`\n             *\n             * @since     7.0.0\n             * @type      {string}\n             */\n            bindingsClassName: 'highcharts-bindings-container',\n            /**\n             * Bindings definitions for custom HTML buttons. Each binding implements\n             * simple event-driven interface:\n             *\n             * - `className`: classname used to bind event to\n             *\n             * - `init`: initial event, fired on button click\n             *\n             * - `start`: fired on first click on a chart\n             *\n             * - `steps`: array of sequential events fired one after another on each\n             *   of users clicks\n             *\n             * - `end`: last event to be called after last step event\n             *\n             * @type         {Highcharts.Dictionary<Highcharts.NavigationBindingsOptionsObject>|*}\n             *\n             * @sample {highstock} stock/stocktools/stocktools-thresholds\n             *               Custom bindings\n             * @sample {highcharts} highcharts/annotations/bindings/\n             *               Simple binding\n             * @sample {highcharts} highcharts/annotations/bindings-custom-annotation/\n             *               Custom annotation binding\n             *\n             * @since        7.0.0\n             * @requires     modules/annotations\n             * @product      highcharts highstock\n             */\n            bindings: {\n                /**\n                 * A circle annotation bindings. Includes `start` and one event in\n                 * `steps` array.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-circle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                circleAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-circle-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        var _a;\n                        var coords = (_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.getCoordinates(e), coordsX = coords && getAssignedAxis(coords.xAxis), coordsY = coords && getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'circle',\n                            type: 'basicAnnotation',\n                            shapes: [{\n                                    type: 'circle',\n                                    point: {\n                                        x: coordsX.value,\n                                        y: coordsY.value,\n                                        xAxis: coordsX.axis.index,\n                                        yAxis: coordsY.axis.index\n                                    },\n                                    r: 5\n                                }]\n                        }, navigation.annotationsOptions, navigation.bindings.circleAnnotation\n                            .annotationsOptions));\n                    },\n                    /** @ignore-option */\n                    steps: [\n                        function (e, annotation) {\n                            var shapes = annotation.options.shapes, mockPointOpts = ((shapes && shapes[0] && shapes[0].point) ||\n                                {});\n                            var distance;\n                            if (isNumber(mockPointOpts.xAxis) &&\n                                isNumber(mockPointOpts.yAxis)) {\n                                var inverted = this.chart.inverted, x = this.chart.xAxis[mockPointOpts.xAxis]\n                                    .toPixels(mockPointOpts.x), y = this.chart.yAxis[mockPointOpts.yAxis]\n                                    .toPixels(mockPointOpts.y);\n                                distance = Math.max(Math.sqrt(Math.pow(inverted ? y - e.chartX : x - e.chartX, 2) +\n                                    Math.pow(inverted ? x - e.chartY : y - e.chartY, 2)), 5);\n                            }\n                            annotation.update({\n                                shapes: [{\n                                        r: distance\n                                    }]\n                            });\n                        }\n                    ]\n                },\n                /**\n                 * A ellipse annotation bindings. Includes `start` and two events in\n                 * `steps` array. First updates the second point, responsible for a\n                 * rx width, and second updates the ry width.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-ellipse-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                ellipseAnnotation: {\n                    className: 'highcharts-ellipse-annotation',\n                    start: function (e) {\n                        var _a;\n                        var coords = (_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.getCoordinates(e), coordsX = coords && getAssignedAxis(coords.xAxis), coordsY = coords && getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'ellipse',\n                            type: 'basicAnnotation',\n                            shapes: [\n                                {\n                                    type: 'ellipse',\n                                    xAxis: coordsX.axis.index,\n                                    yAxis: coordsY.axis.index,\n                                    points: [{\n                                            x: coordsX.value,\n                                            y: coordsY.value\n                                        }, {\n                                            x: coordsX.value,\n                                            y: coordsY.value\n                                        }],\n                                    ry: 1\n                                }\n                            ]\n                        }, navigation.annotationsOptions, navigation.bindings.ellipseAnnotation\n                            .annotationOptions));\n                    },\n                    steps: [\n                        function (e, annotation) {\n                            var target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[1]);\n                            target.translatePoint(e.chartX - position.x, e.chartY - position.y, 1);\n                            target.redraw(false);\n                        },\n                        function (e, annotation) {\n                            var target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[0]), position2 = target.getAbsolutePosition(target.points[1]), newR = target.getDistanceFromLine(position, position2, e.chartX, e.chartY), yAxis = target.getYAxis(), newRY = Math.abs(yAxis.toValue(0) - yAxis.toValue(newR));\n                            target.setYRadius(newRY);\n                            target.redraw(false);\n                        }\n                    ]\n                },\n                /**\n                 * A rectangle annotation bindings. Includes `start` and one event\n                 * in `steps` array.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-rectangle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                rectangleAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-rectangle-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        var _a;\n                        var coords = (_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.getCoordinates(e), coordsX = coords && getAssignedAxis(coords.xAxis), coordsY = coords && getAssignedAxis(coords.yAxis);\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        var x = coordsX.value, y = coordsY.value, xAxis = coordsX.axis.index, yAxis = coordsY.axis.index, navigation = this.chart.options.navigation;\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'rectangle',\n                            type: 'basicAnnotation',\n                            shapes: [{\n                                    type: 'path',\n                                    points: [\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { command: 'Z' }\n                                    ]\n                                }]\n                        }, navigation\n                            .annotationsOptions, navigation\n                            .bindings\n                            .rectangleAnnotation\n                            .annotationsOptions));\n                    },\n                    /** @ignore-option */\n                    steps: [\n                        function (e, annotation) {\n                            var _a;\n                            var shapes = annotation.options.shapes, points = ((shapes && shapes[0] && shapes[0].points) ||\n                                []), coords = (_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.getCoordinates(e), coordsX = coords && getAssignedAxis(coords.xAxis), coordsY = coords && getAssignedAxis(coords.yAxis);\n                            if (coordsX && coordsY) {\n                                var x = coordsX.value, y = coordsY.value;\n                                // Top right point\n                                points[1].x = x;\n                                // Bottom right point (cursor position)\n                                points[2].x = x;\n                                points[2].y = y;\n                                // Bottom left\n                                points[3].y = y;\n                                annotation.update({\n                                    shapes: [{\n                                            points: points\n                                        }]\n                                });\n                            }\n                        }\n                    ]\n                },\n                /**\n                 * A label annotation bindings. Includes `start` event only.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-label-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                labelAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-label-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        var _a;\n                        var coords = (_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.getCoordinates(e), coordsX = coords && getAssignedAxis(coords.xAxis), coordsY = coords && getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'label',\n                            type: 'basicAnnotation',\n                            labelOptions: {\n                                format: '{y:.2f}',\n                                overflow: 'none',\n                                crop: true\n                            },\n                            labels: [{\n                                    point: {\n                                        xAxis: coordsX.axis.index,\n                                        yAxis: coordsY.axis.index,\n                                        x: coordsX.value,\n                                        y: coordsY.value\n                                    }\n                                }]\n                        }, navigation\n                            .annotationsOptions, navigation\n                            .bindings\n                            .labelAnnotation\n                            .annotationsOptions));\n                    }\n                }\n            },\n            /**\n             * Path where Highcharts will look for icons. Change this to use icons\n             * from a different server.\n             *\n             * @type      {string}\n             * @default   https://code.highcharts.com/11.4.8/gfx/stock-icons/\n             * @since     7.1.3\n             * @apioption navigation.iconsURL\n             */\n            /**\n             * A `showPopup` event. Fired when selecting for example an annotation.\n             *\n             * @type      {Function}\n             * @apioption navigation.events.showPopup\n             */\n            /**\n             * A `closePopup` event. Fired when Popup should be hidden, for example\n             * when clicking on an annotation again.\n             *\n             * @type      {Function}\n             * @apioption navigation.events.closePopup\n             */\n            /**\n             * Event fired on a button click.\n             *\n             * @type      {Function}\n             * @sample    highcharts/annotations/gui/\n             *            Change icon in a dropddown on event\n             * @sample    highcharts/annotations/gui-buttons/\n             *            Change button class on event\n             * @apioption navigation.events.selectButton\n             */\n            /**\n             * Event fired when button state should change, for example after\n             * adding an annotation.\n             *\n             * @type      {Function}\n             * @sample    highcharts/annotations/gui/\n             *            Change icon in a dropddown on event\n             * @sample    highcharts/annotations/gui-buttons/\n             *            Change button class on event\n             * @apioption navigation.events.deselectButton\n             */\n            /**\n             * Events to communicate between Stock Tools and custom GUI.\n             *\n             * @since        7.0.0\n             * @product      highcharts highstock\n             * @optionparent navigation.events\n             */\n            events: {},\n            /**\n             * Additional options to be merged into all annotations.\n             *\n             * @sample stock/stocktools/navigation-annotation-options\n             *         Set red color of all line annotations\n             *\n             * @type      {Highcharts.AnnotationsOptions}\n             * @extends   annotations\n             * @exclude   crookedLine, elliottWave, fibonacci, infinityLine,\n             *            measure, pitchfork, tunnel, verticalLine, basicAnnotation\n             * @requires     modules/annotations\n             * @apioption navigation.annotationsOptions\n             */\n            annotationsOptions: {\n                animation: {\n                    defer: 0\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigationBindingDefaults = {\n            lang: lang,\n            navigation: navigation\n        };\n\n        return NavigationBindingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindings.js', [_modules['Core/Chart/ChartNavigationComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Extensions/Annotations/NavigationBindingsDefaults.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Utilities.js']], function (ChartNavigationComposition, D, F, H, NavigationBindingDefaults, NBU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var format = F.format;\n        var composed = H.composed, doc = H.doc, win = H.win;\n        var getAssignedAxis = NBU.getAssignedAxis, getFieldType = NBU.getFieldType;\n        var addEvent = U.addEvent, attr = U.attr, defined = U.defined, fireEvent = U.fireEvent, isArray = U.isArray, isFunction = U.isFunction, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, objectEach = U.objectEach, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * IE 9-11 polyfill for Element.closest():\n         * @private\n         */\n        function closestPolyfill(el, s) {\n            var ElementProto = win.Element.prototype, elementMatches = ElementProto.matches ||\n                ElementProto.msMatchesSelector ||\n                ElementProto.webkitMatchesSelector;\n            var ret = null;\n            if (ElementProto.closest) {\n                ret = ElementProto.closest.call(el, s);\n            }\n            else {\n                do {\n                    if (elementMatches.call(el, s)) {\n                        return el;\n                    }\n                    el = el.parentElement || el.parentNode;\n                } while (el !== null && el.nodeType === 1);\n            }\n            return ret;\n        }\n        /**\n         * @private\n         */\n        function onAnnotationRemove() {\n            if (this.chart.navigationBindings) {\n                this.chart.navigationBindings.deselectAnnotation();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartDestroy() {\n            if (this.navigationBindings) {\n                this.navigationBindings.destroy();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartLoad() {\n            var options = this.options;\n            if (options && options.navigation && options.navigation.bindings) {\n                this.navigationBindings = new NavigationBindings(this, options.navigation);\n                this.navigationBindings.initEvents();\n                this.navigationBindings.initUpdate();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var navigationBindings = this.navigationBindings, disabledClassName = 'highcharts-disabled-btn';\n            if (this && navigationBindings) {\n                // Check if the buttons should be enabled/disabled based on\n                // visible series.\n                var buttonsEnabled_1 = false;\n                this.series.forEach(function (series) {\n                    if (!series.options.isInternal && series.visible) {\n                        buttonsEnabled_1 = true;\n                    }\n                });\n                if (this.navigationBindings &&\n                    this.navigationBindings.container &&\n                    this.navigationBindings.container[0]) {\n                    var container_1 = this.navigationBindings.container[0];\n                    objectEach(navigationBindings.boundClassNames, function (value, key) {\n                        // Get the HTML element corresponding to the className taken\n                        // from StockToolsBindings.\n                        var buttonNode = container_1.querySelectorAll('.' + key);\n                        if (buttonNode) {\n                            for (var i = 0; i < buttonNode.length; i++) {\n                                var button = buttonNode[i], cls = button.className;\n                                if (value.noDataState === 'normal') {\n                                    // If button has noDataState: 'normal', and has\n                                    // disabledClassName, remove this className.\n                                    if (cls.indexOf(disabledClassName) !== -1) {\n                                        button.classList.remove(disabledClassName);\n                                    }\n                                }\n                                else if (!buttonsEnabled_1) {\n                                    if (cls.indexOf(disabledClassName) === -1) {\n                                        button.className += ' ' + disabledClassName;\n                                    }\n                                }\n                                else {\n                                    // Enable all buttons by deleting the className.\n                                    if (cls.indexOf(disabledClassName) !== -1) {\n                                        button.classList.remove(disabledClassName);\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsClosePopup() {\n            this.deselectAnnotation();\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsDeselectButton() {\n            this.selectedButtonElement = null;\n        }\n        /**\n         * Show edit-annotation form:\n         * @private\n         */\n        function selectableAnnotation(annotationType) {\n            var originalClick = annotationType.prototype.defaultOptions.events &&\n                annotationType.prototype.defaultOptions.events.click;\n            /**\n             * Select and show popup\n             * @private\n             */\n            function selectAndShowPopup(eventArguments) {\n                var annotation = this, navigation = annotation.chart.navigationBindings, prevAnnotation = navigation.activeAnnotation;\n                if (originalClick) {\n                    originalClick.call(annotation, eventArguments);\n                }\n                if (prevAnnotation !== annotation) {\n                    // Select current:\n                    navigation.deselectAnnotation();\n                    navigation.activeAnnotation = annotation;\n                    annotation.setControlPointsVisibility(true);\n                    fireEvent(navigation, 'showPopup', {\n                        annotation: annotation,\n                        formType: 'annotation-toolbar',\n                        options: navigation.annotationToFields(annotation),\n                        onSubmit: function (data) {\n                            if (data.actionType === 'remove') {\n                                navigation.activeAnnotation = false;\n                                navigation.chart.removeAnnotation(annotation);\n                            }\n                            else {\n                                var config = {};\n                                navigation.fieldsToOptions(data.fields, config);\n                                navigation.deselectAnnotation();\n                                var typeOptions = config.typeOptions;\n                                if (annotation.options.type === 'measure') {\n                                    // Manually disable crooshars according to\n                                    // stroke width of the shape:\n                                    typeOptions.crosshairY.enabled = (typeOptions.crosshairY\n                                        .strokeWidth !== 0);\n                                    typeOptions.crosshairX.enabled = (typeOptions.crosshairX\n                                        .strokeWidth !== 0);\n                                }\n                                annotation.update(config);\n                            }\n                        }\n                    });\n                }\n                else {\n                    // Deselect current:\n                    fireEvent(navigation, 'closePopup');\n                }\n                // Let bubble event to chart.click:\n                eventArguments.activeAnnotation = true;\n            }\n            // #18276, show popup on touchend, but not on touchmove\n            var touchStartX, touchStartY;\n            /**\n             *\n             */\n            function saveCoords(e) {\n                touchStartX = e.touches[0].clientX;\n                touchStartY = e.touches[0].clientY;\n            }\n            /**\n             *\n             */\n            function checkForTouchmove(e) {\n                var hasMoved = touchStartX ? Math.sqrt(Math.pow(touchStartX - e.changedTouches[0].clientX, 2) +\n                    Math.pow(touchStartY - e.changedTouches[0].clientY, 2)) >= 4 : false;\n                if (!hasMoved) {\n                    selectAndShowPopup.call(this, e);\n                }\n            }\n            merge(true, annotationType.prototype.defaultOptions.events, {\n                click: selectAndShowPopup,\n                touchstart: saveCoords,\n                touchend: checkForTouchmove\n            });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        var NavigationBindings = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function NavigationBindings(chart, options) {\n                this.boundClassNames = void 0;\n                this.chart = chart;\n                this.options = options;\n                this.eventsToUnbind = [];\n                this.container =\n                    this.chart.container.getElementsByClassName(this.options.bindingsClassName || '');\n                if (!this.container.length) {\n                    this.container = doc.getElementsByClassName(this.options.bindingsClassName || '');\n                }\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            NavigationBindings.compose = function (AnnotationClass, ChartClass) {\n                if (pushUnique(composed, 'NavigationBindings')) {\n                    addEvent(AnnotationClass, 'remove', onAnnotationRemove);\n                    // Basic shapes:\n                    selectableAnnotation(AnnotationClass);\n                    // Advanced annotations:\n                    objectEach(AnnotationClass.types, function (annotationType) {\n                        selectableAnnotation(annotationType);\n                    });\n                    addEvent(ChartClass, 'destroy', onChartDestroy);\n                    addEvent(ChartClass, 'load', onChartLoad);\n                    addEvent(ChartClass, 'render', onChartRender);\n                    addEvent(NavigationBindings, 'closePopup', onNavigationBindingsClosePopup);\n                    addEvent(NavigationBindings, 'deselectButton', onNavigationBindingsDeselectButton);\n                    setOptions(NavigationBindingDefaults);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            NavigationBindings.prototype.getCoords = function (e) {\n                var _a;\n                var coords = (_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.getCoordinates(e);\n                return [\n                    coords && getAssignedAxis(coords.xAxis),\n                    coords && getAssignedAxis(coords.yAxis)\n                ];\n            };\n            /**\n             * Init all events connected to NavigationBindings.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#initEvents\n             */\n            NavigationBindings.prototype.initEvents = function () {\n                var navigation = this, chart = navigation.chart, bindingsContainer = navigation.container, options = navigation.options;\n                // Shorthand object for getting events for buttons:\n                navigation.boundClassNames = {};\n                objectEach((options.bindings || {}), function (value) {\n                    navigation.boundClassNames[value.className] = value;\n                });\n                // Handle multiple containers with the same class names:\n                [].forEach.call(bindingsContainer, function (subContainer) {\n                    navigation.eventsToUnbind.push(addEvent(subContainer, 'click', function (event) {\n                        var bindings = navigation.getButtonEvents(subContainer, event);\n                        if (bindings &&\n                            (!bindings.button.classList\n                                .contains('highcharts-disabled-btn'))) {\n                            navigation.bindingsButtonClick(bindings.button, bindings.events, event);\n                        }\n                    }));\n                });\n                objectEach((options.events || {}), function (callback, eventName) {\n                    if (isFunction(callback)) {\n                        navigation.eventsToUnbind.push(addEvent(navigation, eventName, callback, { passive: false }));\n                    }\n                });\n                navigation.eventsToUnbind.push(addEvent(chart.container, 'click', function (e) {\n                    if (!chart.cancelClick &&\n                        chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop, {\n                            visiblePlotOnly: true\n                        })) {\n                        navigation.bindingsChartClick(this, e);\n                    }\n                }));\n                navigation.eventsToUnbind.push(addEvent(chart.container, H.isTouchDevice ? 'touchmove' : 'mousemove', function (e) {\n                    navigation.bindingsContainerMouseMove(this, e);\n                }, H.isTouchDevice ? { passive: false } : void 0));\n            };\n            /**\n             * Common chart.update() delegation, shared between bindings and exporting.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#initUpdate\n             */\n            NavigationBindings.prototype.initUpdate = function () {\n                var navigation = this;\n                ChartNavigationComposition\n                    .compose(this.chart).navigation\n                    .addUpdate(function (options) {\n                    navigation.update(options);\n                });\n            };\n            /**\n             * Hook for click on a button, method selects/unselects buttons,\n             * then calls `bindings.init` callback.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsButtonClick\n             *\n             * @param {Highcharts.HTMLDOMElement} [button]\n             *        Clicked button\n             *\n             * @param {Object} events\n             *        Events passed down from bindings (`init`, `start`, `step`, `end`)\n             *\n             * @param {Highcharts.PointerEventObject} clickEvent\n             *        Browser's click event\n             */\n            NavigationBindings.prototype.bindingsButtonClick = function (button, events, clickEvent) {\n                var navigation = this, chart = navigation.chart, svgContainer = chart.renderer.boxWrapper;\n                var shouldEventBeFired = true;\n                if (navigation.selectedButtonElement) {\n                    if (navigation.selectedButtonElement.classList === button.classList) {\n                        shouldEventBeFired = false;\n                    }\n                    fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                    if (navigation.nextEvent) {\n                        // Remove in-progress annotations adders:\n                        if (navigation.currentUserDetails &&\n                            navigation.currentUserDetails.coll === 'annotations') {\n                            chart.removeAnnotation(navigation.currentUserDetails);\n                        }\n                        navigation.mouseMoveEvent = navigation.nextEvent = false;\n                    }\n                }\n                if (shouldEventBeFired) {\n                    navigation.selectedButton = events;\n                    navigation.selectedButtonElement = button;\n                    fireEvent(navigation, 'selectButton', { button: button });\n                    // Call \"init\" event, for example to open modal window\n                    if (events.init) {\n                        events.init.call(navigation, button, clickEvent);\n                    }\n                    if (events.start || events.steps) {\n                        chart.renderer.boxWrapper.addClass('highcharts-draw-mode');\n                    }\n                }\n                else {\n                    chart.stockTools && button.classList.remove('highcharts-active');\n                    svgContainer.removeClass('highcharts-draw-mode');\n                    navigation.nextEvent = false;\n                    navigation.mouseMoveEvent = false;\n                    navigation.selectedButton = null;\n                }\n            };\n            /**\n             * Hook for click on a chart, first click on a chart calls `start` event,\n             * then on all subsequent clicks iterate over `steps` array.\n             * When finished, calls `end` event.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsChartClick\n             *\n             * @param {Highcharts.Chart} chart\n             *        Chart that click was performed on.\n             *\n             * @param {Highcharts.PointerEventObject} clickEvent\n             *        Browser's click event.\n             */\n            NavigationBindings.prototype.bindingsChartClick = function (chart, clickEvent) {\n                chart = this.chart;\n                var navigation = this, activeAnnotation = navigation.activeAnnotation, selectedButton = navigation.selectedButton, svgContainer = chart.renderer.boxWrapper;\n                if (activeAnnotation) {\n                    // Click outside popups, should close them and deselect the\n                    // annotation\n                    if (!activeAnnotation.cancelClick && // #15729\n                        !clickEvent.activeAnnotation &&\n                        // Element could be removed in the child action, e.g. button\n                        clickEvent.target.parentNode &&\n                        // TO DO: Polyfill for IE11?\n                        !closestPolyfill(clickEvent.target, '.highcharts-popup')) {\n                        fireEvent(navigation, 'closePopup');\n                    }\n                    else if (activeAnnotation.cancelClick) {\n                        // Reset cancelClick after the other event handlers have run\n                        setTimeout(function () {\n                            activeAnnotation.cancelClick = false;\n                        }, 0);\n                    }\n                }\n                if (!selectedButton || !selectedButton.start) {\n                    return;\n                }\n                if (!navigation.nextEvent) {\n                    // Call init method:\n                    navigation.currentUserDetails = selectedButton.start.call(navigation, clickEvent);\n                    // If steps exists (e.g. Annotations), bind them:\n                    if (navigation.currentUserDetails && selectedButton.steps) {\n                        navigation.stepIndex = 0;\n                        navigation.steps = true;\n                        navigation.mouseMoveEvent = navigation.nextEvent =\n                            selectedButton.steps[navigation.stepIndex];\n                    }\n                    else {\n                        fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                        svgContainer.removeClass('highcharts-draw-mode');\n                        navigation.steps = false;\n                        navigation.selectedButton = null;\n                        // First click is also the last one:\n                        if (selectedButton.end) {\n                            selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                        }\n                    }\n                }\n                else {\n                    navigation.nextEvent(clickEvent, navigation.currentUserDetails);\n                    if (navigation.steps) {\n                        navigation.stepIndex++;\n                        if (selectedButton.steps[navigation.stepIndex]) {\n                            // If we have more steps, bind them one by one:\n                            navigation.mouseMoveEvent = navigation.nextEvent = selectedButton.steps[navigation.stepIndex];\n                        }\n                        else {\n                            fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                            svgContainer.removeClass('highcharts-draw-mode');\n                            // That was the last step, call end():\n                            if (selectedButton.end) {\n                                selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                            }\n                            navigation.nextEvent = false;\n                            navigation.mouseMoveEvent = false;\n                            navigation.selectedButton = null;\n                        }\n                    }\n                }\n            };\n            /**\n             * Hook for mouse move on a chart's container. It calls current step.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsContainerMouseMove\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             *        Chart's container.\n             *\n             * @param {global.Event} moveEvent\n             *        Browser's move event.\n             */\n            NavigationBindings.prototype.bindingsContainerMouseMove = function (_container, moveEvent) {\n                if (this.mouseMoveEvent) {\n                    this.mouseMoveEvent(moveEvent, this.currentUserDetails);\n                }\n            };\n            /**\n             * Translate fields (e.g. `params.period` or `marker.styles.color`) to\n             * Highcharts options object (e.g. `{ params: { period } }`).\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#fieldsToOptions<T>\n             *\n             * @param {Highcharts.Dictionary<string>} fields\n             *        Fields from popup form.\n             *\n             * @param {T} config\n             *        Default config to be modified.\n             *\n             * @return {T}\n             *         Modified config\n             */\n            NavigationBindings.prototype.fieldsToOptions = function (fields, config) {\n                objectEach(fields, function (value, field) {\n                    var parsedValue = parseFloat(value), path = field.split('.'), pathLength = path.length - 1;\n                    // If it's a number (not \"format\" options), parse it:\n                    if (isNumber(parsedValue) &&\n                        !value.match(/px|em/g) &&\n                        !field.match(/format/g)) {\n                        value = parsedValue;\n                    }\n                    // Remove values like 0\n                    if (value !== 'undefined') {\n                        var parent_1 = config;\n                        path.forEach(function (name, index) {\n                            if (name !== '__proto__' && name !== 'constructor') {\n                                var nextName = pick(path[index + 1], '');\n                                if (pathLength === index) {\n                                    // Last index, put value:\n                                    parent_1[name] = value;\n                                }\n                                else if (!parent_1[name]) {\n                                    // Create middle property:\n                                    parent_1[name] = nextName.match(/\\d/g) ?\n                                        [] :\n                                        {};\n                                    parent_1 = parent_1[name];\n                                }\n                                else {\n                                    // Jump into next property\n                                    parent_1 = parent_1[name];\n                                }\n                            }\n                        });\n                    }\n                });\n                return config;\n            };\n            /**\n             * Shorthand method to deselect an annotation.\n             *\n             * @function Highcharts.NavigationBindings#deselectAnnotation\n             */\n            NavigationBindings.prototype.deselectAnnotation = function () {\n                if (this.activeAnnotation) {\n                    this.activeAnnotation.setControlPointsVisibility(false);\n                    this.activeAnnotation = false;\n                }\n            };\n            /**\n             * Generates API config for popup in the same format as options for\n             * Annotation object.\n             *\n             * @function Highcharts.NavigationBindings#annotationToFields\n             *\n             * @param {Highcharts.Annotation} annotation\n             *        Annotations object\n             *\n             * @return {Highcharts.Dictionary<string>}\n             *         Annotation options to be displayed in popup box\n             */\n            NavigationBindings.prototype.annotationToFields = function (annotation) {\n                var options = annotation.options, editables = NavigationBindings.annotationsEditable, nestedEditables = editables.nestedOptions, type = pick(options.type, options.shapes && options.shapes[0] &&\n                    options.shapes[0].type, options.labels && options.labels[0] &&\n                    options.labels[0].type, 'label'), nonEditables = NavigationBindings.annotationsNonEditable[options.langKey] || [], visualOptions = {\n                    langKey: options.langKey,\n                    type: type\n                };\n                /**\n                 * Nested options traversing. Method goes down to the options and copies\n                 * allowed options (with values) to new object, which is last parameter:\n                 * \"parent\".\n                 *\n                 * @private\n                 *\n                 * @param {*} option\n                 *        Atomic type or object/array\n                 *\n                 * @param {string} key\n                 *        Option name, for example \"visible\" or \"x\", \"y\"\n                 *\n                 * @param {Object} parentEditables\n                 *        Editables from NavigationBindings.annotationsEditable\n                 *\n                 * @param {Object} parent\n                 *        Where new options will be assigned\n                 */\n                function traverse(option, key, parentEditables, parent, parentKey) {\n                    var nextParent;\n                    if (parentEditables &&\n                        defined(option) &&\n                        nonEditables.indexOf(key) === -1 &&\n                        ((parentEditables.indexOf &&\n                            parentEditables.indexOf(key)) >= 0 ||\n                            parentEditables[key] || // Nested array\n                            parentEditables === true // Simple array\n                        )) {\n                        // Roots:\n                        if (isArray(option)) {\n                            parent[key] = [];\n                            option.forEach(function (arrayOption, i) {\n                                if (!isObject(arrayOption)) {\n                                    // Simple arrays, e.g. [String, Number, Boolean]\n                                    traverse(arrayOption, 0, nestedEditables[key], parent[key], key);\n                                }\n                                else {\n                                    // Advanced arrays, e.g. [Object, Object]\n                                    parent[key][i] = {};\n                                    objectEach(arrayOption, function (nestedOption, nestedKey) {\n                                        traverse(nestedOption, nestedKey, nestedEditables[key], parent[key][i], key);\n                                    });\n                                }\n                            });\n                        }\n                        else if (isObject(option)) {\n                            nextParent = {};\n                            if (isArray(parent)) {\n                                parent.push(nextParent);\n                                nextParent[key] = {};\n                                nextParent = nextParent[key];\n                            }\n                            else {\n                                parent[key] = nextParent;\n                            }\n                            objectEach(option, function (nestedOption, nestedKey) {\n                                traverse(nestedOption, nestedKey, key === 0 ?\n                                    parentEditables :\n                                    nestedEditables[key], nextParent, key);\n                            });\n                        }\n                        else {\n                            // Leaf:\n                            if (key === 'format') {\n                                parent[key] = [\n                                    format(option, annotation.labels[0].points[0]).toString(),\n                                    'text'\n                                ];\n                            }\n                            else if (isArray(parent)) {\n                                parent.push([option, getFieldType(parentKey, option)]);\n                            }\n                            else {\n                                parent[key] = [option, getFieldType(key, option)];\n                            }\n                        }\n                    }\n                }\n                objectEach(options, function (option, key) {\n                    if (key === 'typeOptions') {\n                        visualOptions[key] = {};\n                        objectEach(options[key], function (typeOption, typeKey) {\n                            traverse(typeOption, typeKey, nestedEditables, visualOptions[key], typeKey);\n                        });\n                    }\n                    else {\n                        traverse(option, key, editables[type], visualOptions, key);\n                    }\n                });\n                return visualOptions;\n            };\n            /**\n             * Get all class names for all parents in the element. Iterates until finds\n             * main container.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#getClickedClassNames\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             * Container that event is bound to.\n             *\n             * @param {global.Event} event\n             * Browser's event.\n             *\n             * @return {Array<Array<string, Highcharts.HTMLDOMElement>>}\n             * Array of class names with corresponding elements\n             */\n            NavigationBindings.prototype.getClickedClassNames = function (container, event) {\n                var element = event.target, classNames = [], elemClassName;\n                while (element && element.tagName) {\n                    elemClassName = attr(element, 'class');\n                    if (elemClassName) {\n                        classNames = classNames.concat(elemClassName\n                            .split(' ')\n                            // eslint-disable-next-line no-loop-func\n                            .map(function (name) { return ([name, element]); }));\n                    }\n                    element = element.parentNode;\n                    if (element === container) {\n                        return classNames;\n                    }\n                }\n                return classNames;\n            };\n            /**\n             * Get events bound to a button. It's a custom event delegation to find all\n             * events connected to the element.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#getButtonEvents\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             *        Container that event is bound to.\n             *\n             * @param {global.Event} event\n             *        Browser's event.\n             *\n             * @return {Object}\n             *         Object with events (init, start, steps, and end)\n             */\n            NavigationBindings.prototype.getButtonEvents = function (container, event) {\n                var navigation = this, classNames = this.getClickedClassNames(container, event);\n                var bindings;\n                classNames.forEach(function (className) {\n                    if (navigation.boundClassNames[className[0]] && !bindings) {\n                        bindings = {\n                            events: navigation.boundClassNames[className[0]],\n                            button: className[1]\n                        };\n                    }\n                });\n                return bindings;\n            };\n            /**\n             * Bindings are just events, so the whole update process is simply\n             * removing old events and adding new ones.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#update\n             */\n            NavigationBindings.prototype.update = function (options) {\n                this.options = merge(true, this.options, options);\n                this.removeEvents();\n                this.initEvents();\n            };\n            /**\n             * Remove all events created in the navigation.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#removeEvents\n             */\n            NavigationBindings.prototype.removeEvents = function () {\n                this.eventsToUnbind.forEach(function (unbinder) { return unbinder(); });\n            };\n            /**\n             * @private\n             * @function Highcharts.NavigationBindings#destroy\n             */\n            NavigationBindings.prototype.destroy = function () {\n                this.removeEvents();\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            // Define which options from annotations should show up in edit box:\n            NavigationBindings.annotationsEditable = {\n                // `typeOptions` are always available\n                // Nested and shared options:\n                nestedOptions: {\n                    labelOptions: ['style', 'format', 'backgroundColor'],\n                    labels: ['style'],\n                    label: ['style'],\n                    style: ['fontSize', 'color'],\n                    background: ['fill', 'strokeWidth', 'stroke'],\n                    innerBackground: ['fill', 'strokeWidth', 'stroke'],\n                    outerBackground: ['fill', 'strokeWidth', 'stroke'],\n                    shapeOptions: ['fill', 'strokeWidth', 'stroke'],\n                    shapes: ['fill', 'strokeWidth', 'stroke'],\n                    line: ['strokeWidth', 'stroke'],\n                    backgroundColors: [true],\n                    connector: ['fill', 'strokeWidth', 'stroke'],\n                    crosshairX: ['strokeWidth', 'stroke'],\n                    crosshairY: ['strokeWidth', 'stroke']\n                },\n                // Simple shapes:\n                circle: ['shapes'],\n                ellipse: ['shapes'],\n                verticalLine: [],\n                label: ['labelOptions'],\n                // Measure\n                measure: ['background', 'crosshairY', 'crosshairX'],\n                // Others:\n                fibonacci: [],\n                tunnel: ['background', 'line', 'height'],\n                pitchfork: ['innerBackground', 'outerBackground'],\n                rect: ['shapes'],\n                // Crooked lines, elliots, arrows etc:\n                crookedLine: [],\n                basicAnnotation: ['shapes', 'labelOptions']\n            };\n            // Define non editable fields per annotation, for example Rectangle inherits\n            // options from Measure, but crosshairs are not available\n            NavigationBindings.annotationsNonEditable = {\n                rectangle: ['crosshairX', 'crosshairY', 'labelOptions'],\n                ellipse: ['labelOptions'],\n                circle: ['labelOptions']\n            };\n            return NavigationBindings;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * A config object for navigation bindings in annotations.\n         *\n         * @interface Highcharts.NavigationBindingsOptionsObject\n         */ /**\n        * ClassName of the element for a binding.\n        * @name Highcharts.NavigationBindingsOptionsObject#className\n        * @type {string|undefined}\n        */ /**\n        * Last event to be fired after last step event.\n        * @name Highcharts.NavigationBindingsOptionsObject#end\n        * @type {Function|undefined}\n        */ /**\n        * Initial event, fired on a button click.\n        * @name Highcharts.NavigationBindingsOptionsObject#init\n        * @type {Function|undefined}\n        */ /**\n        * Event fired on first click on a chart.\n        * @name Highcharts.NavigationBindingsOptionsObject#start\n        * @type {Function|undefined}\n        */ /**\n        * Last event to be fired after last step event. Array of step events to be\n        * called sequentially after each user click.\n        * @name Highcharts.NavigationBindingsOptionsObject#steps\n        * @type {Array<Function>|undefined}\n        */\n        (''); // Keeps doclets above in JS file\n\n        return NavigationBindings;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsUtilities.js', [_modules['Core/Defaults.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (D, NBU, Series, U) {\n        /**\n         *\n         *  Events generator for Stock tools\n         *\n         *  (c) 2009-2024 Pawe≈Ç Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getOptions = D.getOptions;\n        var getAssignedAxis = NBU.getAssignedAxis, getFieldType = NBU.getFieldType;\n        var defined = U.defined, fireEvent = U.fireEvent, isNumber = U.isNumber, uniqueKey = U.uniqueKey;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @private\n         */\n        var indicatorsWithAxes = [\n            'apo',\n            'ad',\n            'aroon',\n            'aroonoscillator',\n            'atr',\n            'ao',\n            'cci',\n            'chaikin',\n            'cmf',\n            'cmo',\n            'disparityindex',\n            'dmi',\n            'dpo',\n            'linearRegressionAngle',\n            'linearRegressionIntercept',\n            'linearRegressionSlope',\n            'klinger',\n            'macd',\n            'mfi',\n            'momentum',\n            'natr',\n            'obv',\n            'ppo',\n            'roc',\n            'rsi',\n            'slowstochastic',\n            'stochastic',\n            'trix',\n            'williamsr'\n        ];\n        /**\n         * @private\n         */\n        var indicatorsWithVolume = [\n            'ad',\n            'cmf',\n            'klinger',\n            'mfi',\n            'obv',\n            'vbp',\n            'vwap'\n        ];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Generates function which will add a flag series using modal in GUI.\n         * Method fires an event \"showPopup\" with config:\n         * `{type, options, callback}`.\n         *\n         * Example: NavigationBindings.utils.addFlagFromForm('url(...)') - will\n         * generate function that shows modal in GUI.\n         *\n         * @private\n         * @function bindingsUtils.addFlagFromForm\n         *\n         * @param {Highcharts.FlagsShapeValue} type\n         *        Type of flag series, e.g. \"squarepin\"\n         *\n         * @return {Function}\n         *         Callback to be used in `start` callback\n         */\n        function addFlagFromForm(type) {\n            return function (e) {\n                var navigation = this, chart = navigation.chart, toolbar = chart.stockTools, point = attractToPoint(e, chart);\n                if (!point) {\n                    return;\n                }\n                var pointConfig = {\n                    x: point.x,\n                    y: point.y\n                };\n                var seriesOptions = {\n                    type: 'flags',\n                    onSeries: point.series.id,\n                    shape: type,\n                    data: [pointConfig],\n                    xAxis: point.xAxis,\n                    yAxis: point.yAxis,\n                    point: {\n                        events: {\n                            click: function () {\n                                var point = this, options = point.options;\n                                fireEvent(navigation, 'showPopup', {\n                                    point: point,\n                                    formType: 'annotation-toolbar',\n                                    options: {\n                                        langKey: 'flags',\n                                        type: 'flags',\n                                        title: [\n                                            options.title,\n                                            getFieldType('title', options.title)\n                                        ],\n                                        name: [\n                                            options.name,\n                                            getFieldType('name', options.name)\n                                        ]\n                                    },\n                                    onSubmit: function (updated) {\n                                        if (updated.actionType === 'remove') {\n                                            point.remove();\n                                        }\n                                        else {\n                                            point.update(navigation.fieldsToOptions(updated.fields, {}));\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }\n                };\n                if (!toolbar || !toolbar.guiEnabled) {\n                    chart.addSeries(seriesOptions);\n                }\n                fireEvent(navigation, 'showPopup', {\n                    formType: 'flag',\n                    // Enabled options:\n                    options: {\n                        langKey: 'flags',\n                        type: 'flags',\n                        title: ['A', getFieldType('label', 'A')],\n                        name: ['Flag A', getFieldType('label', 'Flag A')]\n                    },\n                    // Callback on submit:\n                    onSubmit: function (data) {\n                        navigation.fieldsToOptions(data.fields, seriesOptions.data[0]);\n                        chart.addSeries(seriesOptions);\n                    }\n                });\n            };\n        }\n        /**\n         * @private\n         * @todo\n         * Consider using getHoverData(), but always kdTree (columns?)\n         */\n        function attractToPoint(e, chart) {\n            var _a;\n            var coords = (_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.getCoordinates(e);\n            var coordsX, coordsY, distX = Number.MAX_VALUE, closestPoint;\n            if (chart.navigationBindings && coords) {\n                coordsX = getAssignedAxis(coords.xAxis);\n                coordsY = getAssignedAxis(coords.yAxis);\n            }\n            // Exit if clicked out of axes area.\n            if (!coordsX || !coordsY) {\n                return;\n            }\n            var x = coordsX.value;\n            var y = coordsY.value;\n            // Search by 'x' but only in yAxis' series.\n            coordsY.axis.series.forEach(function (series) {\n                if (series.points) {\n                    var point = series.searchPoint(e, true);\n                    if (point && distX > Math.abs(point.x - x)) {\n                        distX = Math.abs(point.x - x);\n                        closestPoint = point;\n                    }\n                }\n            });\n            if (closestPoint && closestPoint.x && closestPoint.y) {\n                return {\n                    x: closestPoint.x,\n                    y: closestPoint.y,\n                    below: y < closestPoint.y,\n                    series: closestPoint.series,\n                    xAxis: closestPoint.series.xAxis.index || 0,\n                    yAxis: closestPoint.series.yAxis.index || 0\n                };\n            }\n        }\n        /**\n         * Shorthand to check if given yAxis comes from navigator.\n         *\n         * @private\n         * @function bindingsUtils.isNotNavigatorYAxis\n         *\n         * @param {Highcharts.Axis} axis\n         * Axis to check.\n         *\n         * @return {boolean}\n         * True, if axis comes from navigator.\n         */\n        function isNotNavigatorYAxis(axis) {\n            return axis.userOptions.className !== 'highcharts-navigator-yaxis';\n        }\n        /**\n         * Check if any of the price indicators are enabled.\n         * @private\n         * @function bindingsUtils.isLastPriceEnabled\n         *\n         * @param {Array} series\n         *        Array of series.\n         *\n         * @return {boolean}\n         *         Tells which indicator is enabled.\n         */\n        function isPriceIndicatorEnabled(series) {\n            return series.some(function (s) { return s.lastVisiblePrice || s.lastPrice; });\n        }\n        /**\n         * @private\n         */\n        function manageIndicators(data) {\n            var chart = this.chart, seriesConfig = {\n                linkedTo: data.linkedTo,\n                type: data.type\n            };\n            var yAxis, parentSeries, defaultOptions, series;\n            if (data.actionType === 'edit') {\n                this.fieldsToOptions(data.fields, seriesConfig);\n                series = chart.get(data.seriesId);\n                if (series) {\n                    series.update(seriesConfig, false);\n                }\n            }\n            else if (data.actionType === 'remove') {\n                series = chart.get(data.seriesId);\n                if (series) {\n                    yAxis = series.yAxis;\n                    if (series.linkedSeries) {\n                        series.linkedSeries.forEach(function (linkedSeries) {\n                            linkedSeries.remove(false);\n                        });\n                    }\n                    series.remove(false);\n                    if (indicatorsWithAxes.indexOf(series.type) >= 0) {\n                        var removedYAxisProps = {\n                            height: yAxis.options.height,\n                            top: yAxis.options.top\n                        };\n                        yAxis.remove(false);\n                        this.resizeYAxes(removedYAxisProps);\n                    }\n                }\n            }\n            else {\n                seriesConfig.id = uniqueKey();\n                this.fieldsToOptions(data.fields, seriesConfig);\n                parentSeries = chart.get(seriesConfig.linkedTo);\n                defaultOptions = getOptions().plotOptions;\n                // Make sure that indicator uses the SUM approx if SUM approx is used\n                // by parent series (#13950).\n                if (typeof parentSeries !== 'undefined' &&\n                    parentSeries instanceof Series &&\n                    parentSeries.getDGApproximation() === 'sum' &&\n                    // If indicator has defined approx type, use it (e.g. \"ranges\")\n                    !defined(defaultOptions && defaultOptions[seriesConfig.type] &&\n                        defaultOptions.dataGrouping &&\n                        defaultOptions.dataGrouping.approximation)) {\n                    seriesConfig.dataGrouping = {\n                        approximation: 'sum'\n                    };\n                }\n                if (indicatorsWithAxes.indexOf(data.type) >= 0) {\n                    yAxis = chart.addAxis({\n                        id: uniqueKey(),\n                        offset: 0,\n                        opposite: true,\n                        title: {\n                            text: ''\n                        },\n                        tickPixelInterval: 40,\n                        showLastLabel: false,\n                        labels: {\n                            align: 'left',\n                            y: -2\n                        }\n                    }, false, false);\n                    seriesConfig.yAxis = yAxis.options.id;\n                    this.resizeYAxes();\n                }\n                else {\n                    seriesConfig.yAxis = chart.get(data.linkedTo).options.yAxis;\n                }\n                if (indicatorsWithVolume.indexOf(data.type) >= 0) {\n                    seriesConfig.params.volumeSeriesID = chart.series.filter(function (series) {\n                        return series.options.type === 'column';\n                    })[0].options.id;\n                }\n                chart.addSeries(seriesConfig, false);\n            }\n            fireEvent(this, 'deselectButton', {\n                button: this.selectedButtonElement\n            });\n            chart.redraw();\n        }\n        /**\n         * Update height for an annotation. Height is calculated as a difference\n         * between last point in `typeOptions` and current position. It's a value,\n         * not pixels height.\n         *\n         * @private\n         * @function bindingsUtils.updateHeight\n         *\n         * @param {Highcharts.PointerEventObject} e\n         *        normalized browser event\n         *\n         * @param {Highcharts.Annotation} annotation\n         *        Annotation to be updated\n         */\n        function updateHeight(e, annotation) {\n            var options = annotation.options.typeOptions, yAxis = isNumber(options.yAxis) && this.chart.yAxis[options.yAxis];\n            if (yAxis && options.points) {\n                annotation.update({\n                    typeOptions: {\n                        height: yAxis.toValue(e[yAxis.horiz ? 'chartX' : 'chartY']) -\n                            (options.points[1].y || 0)\n                    }\n                });\n            }\n        }\n        /**\n         * Update each point after specified index, most of the annotations use\n         * this. For example crooked line: logic behind updating each point is the\n         * same, only index changes when adding an annotation.\n         *\n         * Example: NavigationBindings.utils.updateNthPoint(1) - will generate\n         * function that updates all consecutive points except point with index=0.\n         *\n         * @private\n         * @function bindingsUtils.updateNthPoint\n         *\n         * @param {number} startIndex\n         *        Index from which point should update\n         *\n         * @return {Function}\n         *         Callback to be used in steps array\n         */\n        function updateNthPoint(startIndex) {\n            return function (e, annotation) {\n                var options = annotation.options.typeOptions, xAxis = isNumber(options.xAxis) && this.chart.xAxis[options.xAxis], yAxis = isNumber(options.yAxis) && this.chart.yAxis[options.yAxis];\n                if (xAxis && yAxis) {\n                    options.points.forEach(function (point, index) {\n                        if (index >= startIndex) {\n                            point.x = xAxis.toValue(e[xAxis.horiz ? 'chartX' : 'chartY']);\n                            point.y = yAxis.toValue(e[yAxis.horiz ? 'chartX' : 'chartY']);\n                        }\n                    });\n                    annotation.update({\n                        typeOptions: {\n                            points: options.points\n                        }\n                    });\n                }\n            };\n        }\n        /**\n         * Update size of background (rect) in some annotations: Measure, Simple\n         * Rect.\n         *\n         * @private\n         * @function Highcharts.NavigationBindingsUtilsObject.updateRectSize\n         *\n         * @param {Highcharts.PointerEventObject} event\n         * Normalized browser event\n         *\n         * @param {Highcharts.Annotation} annotation\n         * Annotation to be updated\n         */\n        function updateRectSize(event, annotation) {\n            var chart = annotation.chart, options = annotation.options.typeOptions, xAxis = isNumber(options.xAxis) && chart.xAxis[options.xAxis], yAxis = isNumber(options.yAxis) && chart.yAxis[options.yAxis];\n            if (xAxis && yAxis) {\n                var x = xAxis.toValue(event[xAxis.horiz ? 'chartX' : 'chartY']), y = yAxis.toValue(event[yAxis.horiz ? 'chartX' : 'chartY']), width = x - options.point.x, height = options.point.y - y;\n                annotation.update({\n                    typeOptions: {\n                        background: {\n                            width: chart.inverted ? height : width,\n                            height: chart.inverted ? width : height\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * Compares two arrays of strings, checking their length and if corresponding\n         * elements are equal.\n         *\n         * @param {string[]} a\n         *        The first array to compare.\n         * @param {string[]} b\n         *        The second array to compare.\n         * @return {boolean}\n         *          Return `true` if the arrays are equal, otherwise `false`.\n         */\n        function shallowArraysEqual(a, b) {\n            if (!defined(a) || !defined(b)) {\n                return false;\n            }\n            if (a.length !== b.length) {\n                return false;\n            }\n            for (var i = 0; i < a.length; i++) {\n                if (a[i] !== b[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var StockToolsUtilities = {\n            indicatorsWithAxes: indicatorsWithAxes,\n            indicatorsWithVolume: indicatorsWithVolume,\n            addFlagFromForm: addFlagFromForm,\n            attractToPoint: attractToPoint,\n            getAssignedAxis: getAssignedAxis,\n            isNotNavigatorYAxis: isNotNavigatorYAxis,\n            isPriceIndicatorEnabled: isPriceIndicatorEnabled,\n            manageIndicators: manageIndicators,\n            shallowArraysEqual: shallowArraysEqual,\n            updateHeight: updateHeight,\n            updateNthPoint: updateNthPoint,\n            updateRectSize: updateRectSize\n        };\n\n        return StockToolsUtilities;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsBindings.js', [_modules['Core/Globals.js'], _modules['Stock/StockTools/StockToolsUtilities.js'], _modules['Core/Utilities.js']], function (H, STU, U) {\n        /**\n         *\n         *  Events generator for Stock tools\n         *\n         *  (c) 2009-2024 Pawe≈Ç Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addFlagFromForm = STU.addFlagFromForm, attractToPoint = STU.attractToPoint, isNotNavigatorYAxis = STU.isNotNavigatorYAxis, isPriceIndicatorEnabled = STU.isPriceIndicatorEnabled, manageIndicators = STU.manageIndicators, updateHeight = STU.updateHeight, updateNthPoint = STU.updateNthPoint, updateRectSize = STU.updateRectSize;\n        var fireEvent = U.fireEvent, merge = U.merge;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @sample {highstock} stock/stocktools/custom-stock-tools-bindings\n         *         Custom stock tools bindings\n         *\n         * @type         {Highcharts.Dictionary<Highcharts.NavigationBindingsOptionsObject>}\n         * @since        7.0.0\n         * @optionparent navigation.bindings\n         */\n        var StockToolsBindings = {\n            // Line type annotations:\n            /**\n             * A segment annotation bindings. Includes `start` and one event in `steps`\n             * array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-segment\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            segment: {\n                /** @ignore-option */\n                className: 'highcharts-segment',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'segment',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.segment.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A segment with an arrow annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-arrow-segment\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            arrowSegment: {\n                /** @ignore-option */\n                className: 'highcharts-arrow-segment',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'arrowSegment',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            line: {\n                                markerEnd: 'arrow'\n                            },\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.arrowSegment.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A ray annotation bindings. Includes `start` and one event in `steps`\n             * array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-ray\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            ray: {\n                /** @ignore-option */\n                className: 'highcharts-ray',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'ray',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'ray',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.ray.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A ray with an arrow annotation bindings. Includes `start` and one event\n             * in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-arrow-ray\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            arrowRay: {\n                /** @ignore-option */\n                className: 'highcharts-arrow-ray',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'arrowRay',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'ray',\n                            line: {\n                                markerEnd: 'arrow'\n                            },\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.arrowRay.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A line annotation. Includes `start` and one event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-infinity-line\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            infinityLine: {\n                /** @ignore-option */\n                className: 'highcharts-infinity-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'infinityLine',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'line',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.infinityLine.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A line with arrow annotation. Includes `start` and one event in `steps`\n             * array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-arrow-infinity-line\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            arrowInfinityLine: {\n                /** @ignore-option */\n                className: 'highcharts-arrow-infinity-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'arrowInfinityLine',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'line',\n                            line: {\n                                markerEnd: 'arrow'\n                            },\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.arrowInfinityLine\n                        .annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A horizontal line annotation. Includes `start` event.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-horizontal-line\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            horizontalLine: {\n                /** @ignore-option */\n                className: 'highcharts-horizontal-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'horizontalLine',\n                        type: 'infinityLine',\n                        draggable: 'y',\n                        typeOptions: {\n                            type: 'horizontalLine',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .horizontalLine.annotationsOptions);\n                    this.chart.addAnnotation(options);\n                }\n            },\n            /**\n             * A vertical line annotation. Includes `start` event.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-vertical-line\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            verticalLine: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalLine',\n                        type: 'infinityLine',\n                        draggable: 'x',\n                        typeOptions: {\n                            type: 'verticalLine',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.verticalLine.annotationsOptions);\n                    this.chart.addAnnotation(options);\n                }\n            },\n            /**\n             * Crooked line (three points) annotation bindings. Includes `start` and two\n             * events in `steps` (for second and third points in crooked line) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-crooked3\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            // Crooked Line type annotations:\n            crooked3: {\n                /** @ignore-option */\n                className: 'highcharts-crooked3',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'crooked3',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y }\n                            ]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.crooked3.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2)\n                ]\n            },\n            /**\n             * Crooked line (five points) annotation bindings. Includes `start` and four\n             * events in `steps` (for all consequent points in crooked line) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-crooked5\", \"start\": function() {}, \"steps\": [function() {}, function() {}, function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            crooked5: {\n                /** @ignore-option */\n                className: 'highcharts-crooked5',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'crooked5',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y }\n                            ]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.crooked5.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2),\n                    updateNthPoint(3),\n                    updateNthPoint(4)\n                ]\n            },\n            /**\n             * Elliott wave (three points) annotation bindings. Includes `start` and two\n             * events in `steps` (for second and third points) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-elliott3\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            elliott3: {\n                /** @ignore-option */\n                className: 'highcharts-elliott3',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'elliott3',\n                        type: 'elliottWave',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y }\n                            ]\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.elliott3.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2),\n                    updateNthPoint(3)\n                ]\n            },\n            /**\n             * Elliott wave (five points) annotation bindings. Includes `start` and four\n             * event in `steps` (for all consequent points in Elliott wave) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-elliott3\", \"start\": function() {}, \"steps\": [function() {}, function() {}, function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            elliott5: {\n                /** @ignore-option */\n                className: 'highcharts-elliott5',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'elliott5',\n                        type: 'elliottWave',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y },\n                                { x: x, y: y }\n                            ]\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.elliott5.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2),\n                    updateNthPoint(3),\n                    updateNthPoint(4),\n                    updateNthPoint(5)\n                ]\n            },\n            /**\n             * A measure (x-dimension) annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-measure-x\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            measureX: {\n                /** @ignore-option */\n                className: 'highcharts-measure-x',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'measure',\n                        type: 'measure',\n                        typeOptions: {\n                            selectType: 'x',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            point: { x: x, y: y },\n                            crosshairX: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            crosshairY: {\n                                enabled: false,\n                                strokeWidth: 0,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            background: {\n                                width: 0,\n                                height: 0,\n                                strokeWidth: 0,\n                                stroke: \"#ffffff\" /* Palette.backgroundColor */\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.measureX.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateRectSize\n                ]\n            },\n            /**\n             * A measure (y-dimension) annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-measure-y\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            measureY: {\n                /** @ignore-option */\n                className: 'highcharts-measure-y',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'measure',\n                        type: 'measure',\n                        typeOptions: {\n                            selectType: 'y',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            point: { x: x, y: y },\n                            crosshairX: {\n                                enabled: false,\n                                strokeWidth: 0,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            crosshairY: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            background: {\n                                width: 0,\n                                height: 0,\n                                strokeWidth: 0,\n                                stroke: \"#ffffff\" /* Palette.backgroundColor */\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.measureY.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateRectSize\n                ]\n            },\n            /**\n             * A measure (xy-dimension) annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-measure-xy\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            measureXY: {\n                /** @ignore-option */\n                className: 'highcharts-measure-xy',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'measure',\n                        type: 'measure',\n                        typeOptions: {\n                            selectType: 'xy',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            point: { x: x, y: y },\n                            background: {\n                                width: 0,\n                                height: 0,\n                                strokeWidth: 10\n                            },\n                            crosshairX: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            crosshairY: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.measureXY.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateRectSize\n                ]\n            },\n            // Advanced type annotations:\n            /**\n             * A fibonacci annotation bindings. Includes `start` and two events in\n             * `steps` array (updates second point, then height).\n             *\n             *   @sample {highstock} stock/stocktools/custom-stock-tools-bindings\n             *     Custom stock tools bindings\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-fibonacci\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": { \"typeOptions\": { \"reversed\": false }}}\n             */\n            fibonacci: {\n                className: 'highcharts-fibonacci',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'fibonacci',\n                        type: 'fibonacci',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x: x, y: y },\n                                { x: x, y: y }\n                            ]\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.fibonacci.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateHeight\n                ]\n            },\n            /**\n             * A parallel channel (tunnel) annotation bindings. Includes `start` and\n             * two events in `steps` array (updates second point, then height).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-parallel-channel\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            parallelChannel: {\n                /** @ignore-option */\n                className: 'highcharts-parallel-channel',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'parallelChannel',\n                        type: 'tunnel',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x: x, y: y },\n                                { x: x, y: y }\n                            ]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.parallelChannel\n                        .annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateHeight\n                ]\n            },\n            /**\n             * An Andrew's pitchfork annotation bindings. Includes `start` and two\n             * events in `steps` array (sets second and third control points).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-pitchfork\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            pitchfork: {\n                /** @ignore-option */\n                className: 'highcharts-pitchfork',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'pitchfork',\n                        type: 'pitchfork',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value,\n                                    controlPoint: {\n                                        style: {\n                                            fill: \"#f21313\" /* Palette.negativeColor */\n                                        }\n                                    }\n                                },\n                                { x: x, y: y },\n                                { x: x, y: y }\n                            ],\n                            innerBackground: {\n                                fill: 'rgba(100, 170, 255, 0.8)'\n                            }\n                        },\n                        shapeOptions: {\n                            strokeWidth: 2\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.pitchfork.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2)\n                ]\n            },\n            // Labels with arrow and auto increments\n            /**\n             * A vertical counter annotation bindings. Includes `start` event. On click,\n             * finds the closest point and marks it with a numeric annotation -\n             * incrementing counter on each add.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-vertical-counter\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            verticalCounter: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-counter',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    this.verticalCounter = this.verticalCounter || 0;\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalCounter',\n                        type: 'verticalLine',\n                        typeOptions: {\n                            point: {\n                                x: closestPoint.x,\n                                y: closestPoint.y,\n                                xAxis: closestPoint.xAxis,\n                                yAxis: closestPoint.yAxis\n                            },\n                            label: {\n                                offset: closestPoint.below ? 40 : -40,\n                                text: this.verticalCounter.toString()\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */,\n                                fontSize: '0.7em'\n                            }\n                        },\n                        shapeOptions: {\n                            stroke: 'rgba(0, 0, 0, 0.75)',\n                            strokeWidth: 1\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .verticalCounter.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    this.verticalCounter++;\n                    annotation.options.events.click.call(annotation, {});\n                }\n            },\n            /**\n             * A time cycles annotation bindings. Includes `start` event and 1 `step`\n             * event. first click marks the beginning of the circle, and the second one\n             * sets its diameter.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-time-cycles\", \"start\": function() {}, \"steps\": [function (){}] \"annotationsOptions\": {}}\n             */\n            timeCycles: {\n                className: 'highcharts-time-cycles',\n                start: function (e) {\n                    var closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'timeCycles',\n                        type: 'timeCycles',\n                        typeOptions: {\n                            xAxis: closestPoint.xAxis,\n                            yAxis: closestPoint.yAxis,\n                            points: [{\n                                    x: closestPoint.x\n                                }, {\n                                    x: closestPoint.x\n                                }],\n                            line: {\n                                stroke: 'rgba(0, 0, 0, 0.75)',\n                                fill: 'transparent',\n                                strokeWidth: 2\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.timeCycles.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    annotation.options.events.click.call(annotation, {});\n                    return annotation;\n                },\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            verticalLabel: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-label',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalLabel',\n                        type: 'verticalLine',\n                        typeOptions: {\n                            point: {\n                                x: closestPoint.x,\n                                y: closestPoint.y,\n                                xAxis: closestPoint.xAxis,\n                                yAxis: closestPoint.yAxis\n                            },\n                            label: {\n                                offset: closestPoint.below ? 40 : -40\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */,\n                                fontSize: '0.7em'\n                            }\n                        },\n                        shapeOptions: {\n                            stroke: 'rgba(0, 0, 0, 0.75)',\n                            strokeWidth: 1\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .verticalLabel.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    annotation.options.events.click.call(annotation, {});\n                }\n            },\n            /**\n             * A vertical arrow annotation bindings. Includes `start` event. On click,\n             * finds the closest point and marks it with an arrow.\n             * `#06b535` is the color of the arrow when\n             * pointing from above and `#f21313`\n             * when pointing from below the point.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-vertical-arrow\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            verticalArrow: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-arrow',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalArrow',\n                        type: 'verticalLine',\n                        typeOptions: {\n                            point: {\n                                x: closestPoint.x,\n                                y: closestPoint.y,\n                                xAxis: closestPoint.xAxis,\n                                yAxis: closestPoint.yAxis\n                            },\n                            label: {\n                                offset: closestPoint.below ? 40 : -40,\n                                format: ' '\n                            },\n                            connector: {\n                                fill: 'none',\n                                stroke: closestPoint.below ?\n                                    \"#f21313\" /* Palette.negativeColor */ :\n                                    \"#06b535\" /* Palette.positiveColor */\n                            }\n                        },\n                        shapeOptions: {\n                            stroke: 'rgba(0, 0, 0, 0.75)',\n                            strokeWidth: 1\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .verticalArrow.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    annotation.options.events.click.call(annotation, {});\n                }\n            },\n            /**\n             * The Fibonacci Time Zones annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-fibonacci-time-zones\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            fibonacciTimeZones: {\n                /** @ignore-option */\n                className: 'highcharts-fibonacci-time-zones',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    var _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    var navigation = this.chart.options.navigation, options = merge({\n                        type: 'fibonacciTimeZones',\n                        langKey: 'fibonacciTimeZones',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.fibonacciTimeZones\n                        .annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                // eslint-disable-next-line valid-jsdoc\n                steps: [\n                    function (e, annotation) {\n                        var mockPointOpts = annotation.options.typeOptions.points, x = mockPointOpts && mockPointOpts[0].x, _a = this.getCoords(e), coordsX = _a[0], coordsY = _a[1];\n                        if (coordsX && coordsY) {\n                            annotation.update({\n                                typeOptions: {\n                                    xAxis: coordsX.axis.index,\n                                    yAxis: coordsY.axis.index,\n                                    points: [{\n                                            x: x\n                                        }, {\n                                            x: coordsX.value\n                                        }]\n                                }\n                            });\n                        }\n                    }\n                ]\n            },\n            // Flag types:\n            /**\n             * A flag series bindings. Includes `start` event. On click, finds the\n             * closest point and marks it with a flag with `'circlepin'` shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-circlepin\", \"start\": function() {}}\n             */\n            flagCirclepin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-circlepin',\n                /** @ignore-option */\n                start: addFlagFromForm('circlepin')\n            },\n            /**\n             * A flag series bindings. Includes `start` event. On click, finds the\n             * closest point and marks it with a flag with `'diamondpin'` shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-diamondpin\", \"start\": function() {}}\n             */\n            flagDiamondpin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-diamondpin',\n                /** @ignore-option */\n                start: addFlagFromForm('flag')\n            },\n            /**\n             * A flag series bindings. Includes `start` event.\n             * On click, finds the closest point and marks it with a flag with\n             * `'squarepin'` shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-squarepin\", \"start\": function() {}}\n             */\n            flagSquarepin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-squarepin',\n                /** @ignore-option */\n                start: addFlagFromForm('squarepin')\n            },\n            /**\n             * A flag series bindings. Includes `start` event.\n             * On click, finds the closest point and marks it with a flag without pin\n             * shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-simplepin\", \"start\": function() {}}\n             */\n            flagSimplepin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-simplepin',\n                /** @ignore-option */\n                start: addFlagFromForm('nopin')\n            },\n            // Other tools:\n            /**\n             * Enables zooming in xAxis on a chart. Includes `start` event which\n             * changes [chart.zoomType](#chart.zoomType).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-zoom-x\", \"init\": function() {}}\n             */\n            zoomX: {\n                /** @ignore-option */\n                className: 'highcharts-zoom-x',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.update({\n                        chart: {\n                            zooming: {\n                                type: 'x'\n                            }\n                        }\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Enables zooming in yAxis on a chart. Includes `start` event which\n             * changes [chart.zoomType](#chart.zoomType).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-zoom-y\", \"init\": function() {}}\n             */\n            zoomY: {\n                /** @ignore-option */\n                className: 'highcharts-zoom-y',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.update({\n                        chart: {\n                            zooming: {\n                                type: 'y'\n                            }\n                        }\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Enables zooming in xAxis and yAxis on a chart. Includes `start` event\n             * which changes [chart.zoomType](#chart.zoomType).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-zoom-xy\", \"init\": function() {}}\n             */\n            zoomXY: {\n                /** @ignore-option */\n                className: 'highcharts-zoom-xy',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.update({\n                        chart: {\n                            zooming: {\n                                type: 'xy'\n                            }\n                        }\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'line'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-line\", \"init\": function() {}}\n             */\n            seriesTypeLine: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'line',\n                        useOhlcData: true\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'ohlc'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-ohlc\", \"init\": function() {}}\n             */\n            seriesTypeOhlc: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-ohlc',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'ohlc'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'candlestick'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-candlestick\", \"init\": function() {}}\n             */\n            seriesTypeCandlestick: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-candlestick',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'candlestick'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'heikinashi'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-heikinashi\", \"init\": function() {}}\n             */\n            seriesTypeHeikinAshi: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-heikinashi',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'heikinashi'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Change main series to `'hlc'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-hlc\", \"init\": function () {}}\n             */\n            seriesTypeHLC: {\n                className: 'highcharts-series-type-hlc',\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'hlc',\n                        useOhlcData: true\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'hollowcandlestick'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-hollowcandlestick\", \"init\": function() {}}\n             */\n            seriesTypeHollowCandlestick: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-hollowcandlestick',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'hollowcandlestick'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Displays chart in fullscreen.\n             *\n             * **Note**: Fullscreen is not supported on iPhone due to iOS limitations.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"noDataState\": \"normal\", \"highcharts-full-screen\", \"init\": function() {}}\n             */\n            fullScreen: {\n                /** @ignore-option */\n                className: 'highcharts-full-screen',\n                noDataState: 'normal',\n                /** @ignore-option */\n                init: function (button) {\n                    if (this.chart.fullscreen) {\n                        this.chart.fullscreen.toggle();\n                    }\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Hides/shows two price indicators:\n             * - last price in the dataset\n             * - last price in the selected range\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-current-price-indicator\", \"init\": function() {}}\n             */\n            currentPriceIndicator: {\n                /** @ignore-option */\n                className: 'highcharts-current-price-indicator',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    var chart = this.chart, series = chart.series, gui = chart.stockTools, priceIndicatorEnabled = isPriceIndicatorEnabled(chart.series);\n                    if (gui && gui.guiEnabled) {\n                        series.forEach(function (series) {\n                            series.update({\n                                lastPrice: { enabled: !priceIndicatorEnabled },\n                                lastVisiblePrice: {\n                                    enabled: !priceIndicatorEnabled,\n                                    label: { enabled: true }\n                                }\n                            }, false);\n                        });\n                        chart.redraw();\n                    }\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Indicators bindings. Includes `init` event to show a popup.\n             *\n             * Note: In order to show base series from the chart in the popup's\n             * dropdown each series requires\n             * [series.id](https://api.highcharts.com/highstock/series.line.id) to be\n             * defined.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-indicators\", \"init\": function() {}}\n             */\n            indicators: {\n                /** @ignore-option */\n                className: 'highcharts-indicators',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function () {\n                    var navigation = this;\n                    fireEvent(navigation, 'showPopup', {\n                        formType: 'indicators',\n                        options: {},\n                        // Callback on submit:\n                        onSubmit: function (data) {\n                            manageIndicators.call(navigation, data);\n                        }\n                    });\n                }\n            },\n            /**\n             * Hides/shows all annotations on a chart.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-toggle-annotations\", \"init\": function() {}}\n             */\n            toggleAnnotations: {\n                /** @ignore-option */\n                className: 'highcharts-toggle-annotations',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    var chart = this.chart, gui = chart.stockTools, iconsURL = gui.getIconsURL();\n                    this.toggledAnnotations = !this.toggledAnnotations;\n                    (chart.annotations || []).forEach(function (annotation) {\n                        annotation.setVisibility(!this.toggledAnnotations);\n                    }, this);\n                    if (gui && gui.guiEnabled) {\n                        if (this.toggledAnnotations) {\n                            button.firstChild.style['background-image'] =\n                                'url(\"' + iconsURL +\n                                    'annotations-hidden.svg\")';\n                        }\n                        else {\n                            button.firstChild.style['background-image'] =\n                                'url(\"' + iconsURL +\n                                    'annotations-visible.svg\")';\n                        }\n                    }\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Save a chart in localStorage under `highcharts-chart` key.\n             * Stored items:\n             * - annotations\n             * - indicators (with yAxes)\n             * - flags\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-save-chart\", \"noDataState\": \"normal\", \"init\": function() {}}\n             */\n            saveChart: {\n                /** @ignore-option */\n                className: 'highcharts-save-chart',\n                noDataState: 'normal',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    var navigation = this, chart = navigation.chart, annotations = [], indicators = [], flags = [], yAxes = [];\n                    chart.annotations.forEach(function (annotation, index) {\n                        annotations[index] = annotation.userOptions;\n                    });\n                    chart.series.forEach(function (series) {\n                        if (series.is('sma')) {\n                            indicators.push(series.userOptions);\n                        }\n                        else if (series.type === 'flags') {\n                            flags.push(series.userOptions);\n                        }\n                    });\n                    chart.yAxis.forEach(function (yAxis) {\n                        if (isNotNavigatorYAxis(yAxis)) {\n                            yAxes.push(yAxis.options);\n                        }\n                    });\n                    H.win.localStorage.setItem('highcharts-chart', JSON.stringify({\n                        annotations: annotations,\n                        indicators: indicators,\n                        flags: flags,\n                        yAxes: yAxes\n                    }));\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StockToolsBindings;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsDefaults.js', [], function () {\n        /* *\n         *\n         *  GUI generator for Stock tools\n         *\n         *  (c) 2009-2024 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * Configure the stockTools GUI titles(hints) in the chart. Requires\n             * the `stock-tools.js` module to be loaded.\n             *\n             * @product highstock\n             * @since   7.0.0\n             */\n            stockTools: {\n                gui: {\n                    // Main buttons:\n                    simpleShapes: 'Simple shapes',\n                    lines: 'Lines',\n                    crookedLines: 'Crooked lines',\n                    measure: 'Measure',\n                    advanced: 'Advanced',\n                    toggleAnnotations: 'Toggle annotations',\n                    verticalLabels: 'Vertical labels',\n                    flags: 'Flags',\n                    zoomChange: 'Zoom change',\n                    typeChange: 'Type change',\n                    saveChart: 'Save chart',\n                    indicators: 'Indicators',\n                    currentPriceIndicator: 'Current Price Indicators',\n                    // Other features:\n                    zoomX: 'Zoom X',\n                    zoomY: 'Zoom Y',\n                    zoomXY: 'Zooom XY',\n                    fullScreen: 'Fullscreen',\n                    typeOHLC: 'OHLC',\n                    typeLine: 'Line',\n                    typeCandlestick: 'Candlestick',\n                    typeHLC: 'HLC',\n                    typeHollowCandlestick: 'Hollow Candlestick',\n                    typeHeikinAshi: 'Heikin Ashi',\n                    // Basic shapes:\n                    circle: 'Circle',\n                    ellipse: 'Ellipse',\n                    label: 'Label',\n                    rectangle: 'Rectangle',\n                    // Flags:\n                    flagCirclepin: 'Flag circle',\n                    flagDiamondpin: 'Flag diamond',\n                    flagSquarepin: 'Flag square',\n                    flagSimplepin: 'Flag simple',\n                    // Measures:\n                    measureXY: 'Measure XY',\n                    measureX: 'Measure X',\n                    measureY: 'Measure Y',\n                    // Segment, ray and line:\n                    segment: 'Segment',\n                    arrowSegment: 'Arrow segment',\n                    ray: 'Ray',\n                    arrowRay: 'Arrow ray',\n                    line: 'Line',\n                    arrowInfinityLine: 'Arrow line',\n                    horizontalLine: 'Horizontal line',\n                    verticalLine: 'Vertical line',\n                    infinityLine: 'Infinity line',\n                    // Crooked lines:\n                    crooked3: 'Crooked 3 line',\n                    crooked5: 'Crooked 5 line',\n                    elliott3: 'Elliott 3 line',\n                    elliott5: 'Elliott 5 line',\n                    // Counters:\n                    verticalCounter: 'Vertical counter',\n                    verticalLabel: 'Vertical label',\n                    verticalArrow: 'Vertical arrow',\n                    // Advanced:\n                    fibonacci: 'Fibonacci',\n                    fibonacciTimeZones: 'Fibonacci Time Zones',\n                    pitchfork: 'Pitchfork',\n                    parallelChannel: 'Parallel channel',\n                    timeCycles: 'Time Cycles'\n                }\n            },\n            navigation: {\n                popup: {\n                    // Annotations:\n                    circle: 'Circle',\n                    ellipse: 'Ellipse',\n                    rectangle: 'Rectangle',\n                    label: 'Label',\n                    segment: 'Segment',\n                    arrowSegment: 'Arrow segment',\n                    ray: 'Ray',\n                    arrowRay: 'Arrow ray',\n                    line: 'Line',\n                    arrowInfinityLine: 'Arrow line',\n                    horizontalLine: 'Horizontal line',\n                    verticalLine: 'Vertical line',\n                    crooked3: 'Crooked 3 line',\n                    crooked5: 'Crooked 5 line',\n                    elliott3: 'Elliott 3 line',\n                    elliott5: 'Elliott 5 line',\n                    verticalCounter: 'Vertical counter',\n                    verticalLabel: 'Vertical label',\n                    verticalArrow: 'Vertical arrow',\n                    fibonacci: 'Fibonacci',\n                    fibonacciTimeZones: 'Fibonacci Time Zones',\n                    pitchfork: 'Pitchfork',\n                    parallelChannel: 'Parallel channel',\n                    infinityLine: 'Infinity line',\n                    measure: 'Measure',\n                    measureXY: 'Measure XY',\n                    measureX: 'Measure X',\n                    measureY: 'Measure Y',\n                    timeCycles: 'Time Cycles',\n                    // Flags:\n                    flags: 'Flags',\n                    // GUI elements:\n                    addButton: 'Add',\n                    saveButton: 'Save',\n                    editButton: 'Edit',\n                    removeButton: 'Remove',\n                    series: 'Series',\n                    volume: 'Volume',\n                    connector: 'Connector',\n                    // Field names:\n                    innerBackground: 'Inner background',\n                    outerBackground: 'Outer background',\n                    crosshairX: 'Crosshair X',\n                    crosshairY: 'Crosshair Y',\n                    tunnel: 'Tunnel',\n                    background: 'Background',\n                    // Indicators' searchbox (#16019):\n                    noFilterMatch: 'No match',\n                    // Indicators' params (#15170):\n                    searchIndicators: 'Search Indicators',\n                    clearFilter: '\\u2715 clear filter',\n                    index: 'Index',\n                    period: 'Period',\n                    periods: 'Periods',\n                    standardDeviation: 'Standard deviation',\n                    periodTenkan: 'Tenkan period',\n                    periodSenkouSpanB: 'Senkou Span B period',\n                    periodATR: 'ATR period',\n                    multiplierATR: 'ATR multiplier',\n                    shortPeriod: 'Short period',\n                    longPeriod: 'Long period',\n                    signalPeriod: 'Signal period',\n                    decimals: 'Decimals',\n                    algorithm: 'Algorithm',\n                    topBand: 'Top band',\n                    bottomBand: 'Bottom band',\n                    initialAccelerationFactor: 'Initial acceleration factor',\n                    maxAccelerationFactor: 'Max acceleration factor',\n                    increment: 'Increment',\n                    multiplier: 'Multiplier',\n                    ranges: 'Ranges',\n                    highIndex: 'High index',\n                    lowIndex: 'Low index',\n                    deviation: 'Deviation',\n                    xAxisUnit: 'x-axis unit',\n                    factor: 'Factor',\n                    fastAvgPeriod: 'Fast average period',\n                    slowAvgPeriod: 'Slow average period',\n                    average: 'Average',\n                    /**\n                     * Configure the aliases for indicator names.\n                     *\n                     * @product highstock\n                     * @since 9.3.0\n                     */\n                    indicatorAliases: {\n                        // Overlays\n                        /**\n                         * Acceleration Bands alias.\n                         *\n                         * @default ['Acceleration Bands']\n                         * @type    {Array<string>}\n                         */\n                        abands: ['Acceleration Bands'],\n                        /**\n                         * Bollinger Bands alias.\n                         *\n                         * @default ['Bollinger Bands']\n                         * @type    {Array<string>}\n                         */\n                        bb: ['Bollinger Bands'],\n                        /**\n                         * Double Exponential Moving Average alias.\n                         *\n                         * @default ['Double Exponential Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        dema: ['Double Exponential Moving Average'],\n                        /**\n                         *  Exponential Moving Average alias.\n                         *\n                         * @default ['Exponential Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        ema: ['Exponential Moving Average'],\n                        /**\n                         *  Ichimoku Kinko Hyo alias.\n                         *\n                         * @default ['Ichimoku Kinko Hyo']\n                         * @type    {Array<string>}\n                         */\n                        ikh: ['Ichimoku Kinko Hyo'],\n                        /**\n                         *  Keltner Channels alias.\n                         *\n                         * @default ['Keltner Channels']\n                         * @type    {Array<string>}\n                         */\n                        keltnerchannels: ['Keltner Channels'],\n                        /**\n                         *  Linear Regression alias.\n                         *\n                         * @default ['Linear Regression']\n                         * @type    {Array<string>}\n                         */\n                        linearRegression: ['Linear Regression'],\n                        /**\n                         *  Pivot Points alias.\n                         *\n                         * @default ['Pivot Points']\n                         * @type    {Array<string>}\n                         */\n                        pivotpoints: ['Pivot Points'],\n                        /**\n                         *  Price Channel alias.\n                         *\n                         * @default ['Price Channel']\n                         * @type    {Array<string>}\n                         */\n                        pc: ['Price Channel'],\n                        /**\n                         *  Price Envelopes alias.\n                         *\n                         * @default ['Price Envelopes']\n                         * @type    {Array<string>}\n                         */\n                        priceenvelopes: ['Price Envelopes'],\n                        /**\n                         *  Parabolic SAR alias.\n                         *\n                         * @default ['Parabolic SAR']\n                         * @type    {Array<string>}\n                         */\n                        psar: ['Parabolic SAR'],\n                        /**\n                         *  Simple Moving Average alias.\n                         *\n                         * @default ['Simple Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        sma: ['Simple Moving Average'],\n                        /**\n                         *  Super Trend alias.\n                         *\n                         * @default ['Super Trend']\n                         * @type    {Array<string>}\n                         */\n                        supertrend: ['Super Trend'],\n                        /**\n                         *  Triple Exponential Moving Average alias.\n                         *\n                         * @default ['Triple Exponential Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        tema: ['Triple Exponential Moving Average'],\n                        /**\n                         *  Volume by Price alias.\n                         *\n                         * @default ['Volume by Price']\n                         * @type    {Array<string>}\n                         */\n                        vbp: ['Volume by Price'],\n                        /**\n                         *  Volume Weighted Moving Average alias.\n                         *\n                         * @default ['Volume Weighted Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        vwap: ['Volume Weighted Moving Average'],\n                        /**\n                         *  Weighted Moving Average alias.\n                         *\n                         * @default ['Weighted Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        wma: ['Weighted Moving Average'],\n                        /**\n                         *  Zig Zagalias.\n                         *\n                         * @default ['Zig Zag']\n                         * @type    {Array<string>}\n                         */\n                        zigzag: ['Zig Zag'],\n                        // Oscilators\n                        /**\n                         *  Absolute price indicator alias.\n                         *\n                         * @default ['Absolute price indicator']\n                         * @type    {Array<string>}\n                         */\n                        apo: ['Absolute price indicator'],\n                        /**\n                         * Accumulation/Distribution alias.\n                         *\n                         * @default ['Accumulation/Distribution‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        ad: ['Accumulation/Distribution'],\n                        /**\n                         *  Aroon alias.\n                         *\n                         * @default ['Aroon']\n                         * @type    {Array<string>}\n                         */\n                        aroon: ['Aroon'],\n                        /**\n                         *  Aroon oscillator alias.\n                         *\n                         * @default ['Aroon oscillator']\n                         * @type    {Array<string>}\n                         */\n                        aroonoscillator: ['Aroon oscillator'],\n                        /**\n                         *  Average True Range alias.\n                         *\n                         * @default ['Average True Range‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        atr: ['Average True Range'],\n                        /**\n                         *  Awesome oscillator alias.\n                         *\n                         * @default ['Awesome oscillator‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        ao: ['Awesome oscillator'],\n                        /**\n                         *  Commodity Channel Index alias.\n                         *\n                         * @default ['Commodity Channel Index‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        cci: ['Commodity Channel Index'],\n                        /**\n                         *  Chaikin alias.\n                         *\n                         * @default ['Chaikin‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        chaikin: ['Chaikin'],\n                        /**\n                         *  Chaikin Money Flow alias.\n                         *\n                         * @default ['Chaikin Money Flow‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        cmf: ['Chaikin Money Flow'],\n                        /**\n                         *  Chande Momentum Oscillator alias.\n                         *\n                         * @default ['Chande Momentum Oscillator‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        cmo: ['Chande Momentum Oscillator'],\n                        /**\n                         *  Disparity Index alias.\n                         *\n                         * @default ['Disparity Index‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        disparityindex: ['Disparity Index'],\n                        /**\n                         *  Directional Movement Index alias.\n                         *\n                         * @default ['Directional Movement Index‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        dmi: ['Directional Movement Index'],\n                        /**\n                         *  Detrended price oscillator alias.\n                         *\n                         * @default ['Detrended price oscillator‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        dpo: ['Detrended price oscillator'],\n                        /**\n                         *  Klinger Oscillator alias.\n                         *\n                         * @default [‚ÄòKlinger Oscillator‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        klinger: ['Klinger Oscillator'],\n                        /**\n                         *  Linear Regression Angle alias.\n                         *\n                         * @default [‚ÄòLinear Regression Angle‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        linearRegressionAngle: ['Linear Regression Angle'],\n                        /**\n                         *  Linear Regression Intercept alias.\n                         *\n                         * @default [‚ÄòLinear Regression Intercept‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        linearRegressionIntercept: ['Linear Regression Intercept'],\n                        /**\n                         *  Linear Regression Slope alias.\n                         *\n                         * @default [‚ÄòLinear Regression Slope‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        linearRegressionSlope: ['Linear Regression Slope'],\n                        /**\n                         *  Moving Average Convergence Divergence alias.\n                         *\n                         * @default ['Moving Average Convergence Divergence‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        macd: ['Moving Average Convergence Divergence'],\n                        /**\n                         *  Money Flow Index alias.\n                         *\n                         * @default ['Money Flow Index‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        mfi: ['Money Flow Index'],\n                        /**\n                         *  Momentum alias.\n                         *\n                         * @default [‚ÄòMomentum‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        momentum: ['Momentum'],\n                        /**\n                         *  Normalized Average True Range alias.\n                         *\n                         * @default ['Normalized Average True Range‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        natr: ['Normalized Average True Range'],\n                        /**\n                         *  On-Balance Volume alias.\n                         *\n                         * @default ['On-Balance Volume‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        obv: ['On-Balance Volume'],\n                        /**\n                         * Percentage Price oscillator alias.\n                         *\n                         * @default ['Percentage Price oscillator‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        ppo: ['Percentage Price oscillator'],\n                        /**\n                         *  Rate of Change alias.\n                         *\n                         * @default ['Rate of Change‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        roc: ['Rate of Change'],\n                        /**\n                         *  Relative Strength Index alias.\n                         *\n                         * @default ['Relative Strength Index‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        rsi: ['Relative Strength Index'],\n                        /**\n                         *  Slow Stochastic alias.\n                         *\n                         * @default [‚ÄòSlow Stochastic‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        slowstochastic: ['Slow Stochastic'],\n                        /**\n                         *  Stochastic alias.\n                         *\n                         * @default [‚ÄòStochastic‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        stochastic: ['Stochastic'],\n                        /**\n                         *  TRIX alias.\n                         *\n                         * @default [‚ÄòTRIX‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        trix: ['TRIX'],\n                        /**\n                         *  Williams %R alias.\n                         *\n                         * @default [‚ÄòWilliams %R‚Äô]\n                         * @type    {Array<string>}\n                         */\n                        williamsr: ['Williams %R']\n                    }\n                }\n            }\n        };\n        /**\n         * Configure the stockTools gui strings in the chart. Requires the\n         * [stockTools module]() to be loaded. For a description of the module\n         * and information on its features, see [Highcharts StockTools]().\n         *\n         * @product highstock\n         *\n         * @sample stock/demo/stock-tools-gui Stock Tools GUI\n         *\n         * @sample stock/demo/stock-tools-custom-gui Stock Tools customized GUI\n         *\n         * @since        7.0.0\n         * @optionparent stockTools\n         */\n        var stockTools = {\n            /**\n             * Definitions of buttons in Stock Tools GUI.\n             */\n            gui: {\n                /**\n                 * Path where Highcharts will look for icons. Change this to use\n                 * icons from a different server.\n                 *\n                 * Since 7.1.3 use [iconsURL](#navigation.iconsURL) for popup and\n                 * stock tools.\n                 *\n                 * @deprecated\n                 * @apioption stockTools.gui.iconsURL\n                 *\n                 */\n                /**\n                 * Enable or disable the stockTools gui.\n                 */\n                enabled: true,\n                /**\n                 * A CSS class name to apply to the stocktools' div,\n                 * allowing unique CSS styling for each chart.\n                 */\n                className: 'highcharts-bindings-wrapper',\n                /**\n                 * A CSS class name to apply to the container of buttons,\n                 * allowing unique CSS styling for each chart.\n                 */\n                toolbarClassName: 'stocktools-toolbar',\n                /**\n                 * A collection of strings pointing to config options for the\n                 * toolbar items. Each name refers to a unique key from the\n                 * definitions object.\n                 *\n                 * @type    {Array<string>}\n                 * @default [\n                 *   'indicators',\n                 *   'separator',\n                 *   'simpleShapes',\n                 *   'lines',\n                 *   'crookedLines',\n                 *   'measure',\n                 *   'advanced',\n                 *   'toggleAnnotations',\n                 *   'separator',\n                 *   'verticalLabels',\n                 *   'flags',\n                 *   'separator',\n                 *   'zoomChange',\n                 *   'fullScreen',\n                 *   'typeChange',\n                 *   'separator',\n                 *   'currentPriceIndicator',\n                 *   'saveChart'\n                 * ]\n                 */\n                buttons: [\n                    'indicators',\n                    'separator',\n                    'simpleShapes',\n                    'lines',\n                    'crookedLines',\n                    'measure',\n                    'advanced',\n                    'toggleAnnotations',\n                    'separator',\n                    'verticalLabels',\n                    'flags',\n                    'separator',\n                    'zoomChange',\n                    'fullScreen',\n                    'typeChange',\n                    'separator',\n                    'currentPriceIndicator',\n                    'saveChart'\n                ],\n                /**\n                 * An options object of the buttons definitions. Each name refers to\n                 * unique key from buttons array.\n                 */\n                definitions: {\n                    separator: {\n                        elementType: 'span',\n                        /**\n                         * A predefined background symbol for the button.\n                         */\n                        symbol: 'separator.svg'\n                    },\n                    simpleShapes: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'label',\n                         *   'circle',\n                         *   'ellipse',\n                         *   'rectangle'\n                         * ]\n                         *\n                         */\n                        items: [\n                            'label',\n                            'circle',\n                            'ellipse',\n                            'rectangle'\n                        ],\n                        circle: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'circle.svg'\n                        },\n                        ellipse: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'ellipse.svg'\n                        },\n                        rectangle: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'rectangle.svg'\n                        },\n                        label: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'label.svg'\n                        }\n                    },\n                    flags: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'flagCirclepin',\n                         *   'flagDiamondpin',\n                         *   'flagSquarepin',\n                         *   'flagSimplepin'\n                         * ]\n                         *\n                         */\n                        items: [\n                            'flagCirclepin',\n                            'flagDiamondpin',\n                            'flagSquarepin',\n                            'flagSimplepin'\n                        ],\n                        flagSimplepin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'flag-basic.svg'\n                        },\n                        flagDiamondpin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'flag-diamond.svg'\n                        },\n                        flagSquarepin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'flag-trapeze.svg'\n                        },\n                        flagCirclepin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'flag-elipse.svg'\n                        }\n                    },\n                    lines: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'segment',\n                         *   'arrowSegment',\n                         *   'ray',\n                         *   'arrowRay',\n                         *   'line',\n                         *   'arrowInfinityLine',\n                         *   'horizontalLine',\n                         *   'verticalLine'\n                         * ]\n                         */\n                        items: [\n                            'segment',\n                            'arrowSegment',\n                            'ray',\n                            'arrowRay',\n                            'line',\n                            'arrowInfinityLine',\n                            'horizontalLine',\n                            'verticalLine'\n                        ],\n                        segment: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'segment.svg'\n                        },\n                        arrowSegment: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'arrow-segment.svg'\n                        },\n                        ray: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'ray.svg'\n                        },\n                        arrowRay: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'arrow-ray.svg'\n                        },\n                        line: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'line.svg'\n                        },\n                        arrowInfinityLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'arrow-line.svg'\n                        },\n                        verticalLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-line.svg'\n                        },\n                        horizontalLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'horizontal-line.svg'\n                        }\n                    },\n                    crookedLines: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'elliott3',\n                         *   'elliott5',\n                         *   'crooked3',\n                         *   'crooked5'\n                         * ]\n                         *\n                         */\n                        items: [\n                            'elliott3',\n                            'elliott5',\n                            'crooked3',\n                            'crooked5'\n                        ],\n                        crooked3: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'crooked-3.svg'\n                        },\n                        crooked5: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'crooked-5.svg'\n                        },\n                        elliott3: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'elliott-3.svg'\n                        },\n                        elliott5: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'elliott-5.svg'\n                        }\n                    },\n                    verticalLabels: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'verticalCounter',\n                         *   'verticalLabel',\n                         *   'verticalArrow'\n                         * ]\n                         */\n                        items: [\n                            'verticalCounter',\n                            'verticalLabel',\n                            'verticalArrow'\n                        ],\n                        verticalCounter: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-counter.svg'\n                        },\n                        verticalLabel: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-label.svg'\n                        },\n                        verticalArrow: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-arrow.svg'\n                        }\n                    },\n                    advanced: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'fibonacci',\n                         *   'fibonacciTimeZones',\n                         *   'pitchfork',\n                         *   'parallelChannel',\n                         *   'timeCycles'\n                         * ]\n                         */\n                        items: [\n                            'fibonacci',\n                            'fibonacciTimeZones',\n                            'pitchfork',\n                            'parallelChannel',\n                            'timeCycles'\n                        ],\n                        pitchfork: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'pitchfork.svg'\n                        },\n                        fibonacci: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'fibonacci.svg'\n                        },\n                        fibonacciTimeZones: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'fibonacci-timezone.svg'\n                        },\n                        parallelChannel: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'parallel-channel.svg'\n                        },\n                        timeCycles: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type {string}\n                             */\n                            symbol: 'time-cycles.svg'\n                        }\n                    },\n                    measure: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'measureXY',\n                         *   'measureX',\n                         *   'measureY'\n                         * ]\n                         */\n                        items: [\n                            'measureXY',\n                            'measureX',\n                            'measureY'\n                        ],\n                        measureX: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'measure-x.svg'\n                        },\n                        measureY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'measure-y.svg'\n                        },\n                        measureXY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'measure-xy.svg'\n                        }\n                    },\n                    toggleAnnotations: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'annotations-visible.svg'\n                    },\n                    currentPriceIndicator: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'current-price-show.svg'\n                    },\n                    indicators: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'indicators.svg'\n                    },\n                    zoomChange: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'zoomX',\n                         *   'zoomY',\n                         *   'zoomXY'\n                         * ]\n                         */\n                        items: [\n                            'zoomX',\n                            'zoomY',\n                            'zoomXY'\n                        ],\n                        zoomX: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'zoom-x.svg'\n                        },\n                        zoomY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'zoom-y.svg'\n                        },\n                        zoomXY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'zoom-xy.svg'\n                        }\n                    },\n                    typeChange: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'typeOHLC',\n                         *   'typeLine',\n                         *   'typeCandlestick'\n                         *   'typeHollowCandlestick'\n                         * ]\n                         */\n                        items: [\n                            'typeOHLC',\n                            'typeLine',\n                            'typeCandlestick',\n                            'typeHollowCandlestick',\n                            'typeHLC',\n                            'typeHeikinAshi'\n                        ],\n                        typeOHLC: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-ohlc.svg'\n                        },\n                        typeLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-line.svg'\n                        },\n                        typeCandlestick: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-candlestick.svg'\n                        },\n                        typeHLC: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-hlc.svg'\n                        },\n                        typeHeikinAshi: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-heikin-ashi.svg'\n                        },\n                        typeHollowCandlestick: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-hollow-candlestick.svg'\n                        }\n                    },\n                    fullScreen: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'fullscreen.svg'\n                    },\n                    saveChart: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'save-chart.svg'\n                    }\n                },\n                /**\n                 * Whether the stock tools toolbar is visible.\n                 *\n                 * @since 11.4.4\n                 */\n                visible: true\n            }\n        };\n        /* *\n         *\n         *  Default Exports\n         *\n         * */\n        var StockToolsDefaults = {\n            lang: lang,\n            stockTools: stockTools\n        };\n\n        return StockToolsDefaults;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockTools.js', [_modules['Core/Defaults.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Stock/StockTools/StockToolsBindings.js'], _modules['Stock/StockTools/StockToolsDefaults.js'], _modules['Stock/StockTools/StockToolsUtilities.js'], _modules['Core/Utilities.js']], function (D, NBU, StockToolsBindings, StockToolsDefaults, STU, U) {\n        /**\n         *\n         *  Events generator for Stock tools\n         *\n         *  (c) 2009-2024 Pawe≈Ç Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var getAssignedAxis = NBU.getAssignedAxis;\n        var isNotNavigatorYAxis = STU.isNotNavigatorYAxis, isPriceIndicatorEnabled = STU.isPriceIndicatorEnabled;\n        var correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(NavigationBindingsClass) {\n            var _a;\n            var navigationProto = NavigationBindingsClass.prototype;\n            if (!((_a = navigationProto.utils) === null || _a === void 0 ? void 0 : _a.manageIndicators)) {\n                // Extends NavigationBindings to support indicators and resizers:\n                navigationProto.getYAxisPositions = navigationGetYAxisPositions;\n                navigationProto.getYAxisResizers = navigationGetYAxisResizers;\n                navigationProto.recalculateYAxisPositions =\n                    navigationRecalculateYAxisPositions;\n                navigationProto.resizeYAxes = navigationResizeYAxes;\n                navigationProto.utils = navigationProto.utils || {};\n                navigationProto.utils.indicatorsWithAxes = STU.indicatorsWithAxes;\n                navigationProto.utils.indicatorsWithVolume = STU.indicatorsWithVolume;\n                navigationProto.utils.getAssignedAxis = getAssignedAxis;\n                navigationProto.utils.isPriceIndicatorEnabled = isPriceIndicatorEnabled;\n                navigationProto.utils.manageIndicators = STU.manageIndicators;\n                setOptions(StockToolsDefaults);\n                setOptions({\n                    navigation: {\n                        bindings: StockToolsBindings\n                    }\n                });\n            }\n        }\n        /**\n         * Get current positions for all yAxes. If new axis does not have position,\n         * returned is default height and last available top place.\n         *\n         * @private\n         * @function Highcharts.NavigationBindings#getYAxisPositions\n         *\n         * @param {Array<Highcharts.Axis>} yAxes\n         *        Array of yAxes available in the chart.\n         *\n         * @param {number} plotHeight\n         *        Available height in the chart.\n         *\n         * @param {number} defaultHeight\n         *        Default height in percents.\n         *\n         * @param {Highcharts.AxisPositions} removedYAxisProps\n         *        Height and top value of the removed yAxis in percents.\n         *\n         * @return {Highcharts.YAxisPositions}\n         *         An object containing an array of calculated positions\n         *         in percentages. Format: `{top: Number, height: Number}`\n         *         and maximum value of top + height of axes.\n         */\n        function navigationGetYAxisPositions(yAxes, plotHeight, defaultHeight, removedYAxisProps) {\n            var allAxesHeight = 0, previousAxisHeight, removedHeight, removedTop;\n            /** @private */\n            function isPercentage(prop) {\n                return defined(prop) && !isNumber(prop) && prop.match('%');\n            }\n            if (removedYAxisProps) {\n                removedTop = correctFloat((parseFloat(removedYAxisProps.top) / 100));\n                removedHeight = correctFloat((parseFloat(removedYAxisProps.height) / 100));\n            }\n            var positions = yAxes.map(function (yAxis, index) {\n                var height = correctFloat(isPercentage(yAxis.options.height) ?\n                    parseFloat(yAxis.options.height) / 100 :\n                    yAxis.height / plotHeight), top = correctFloat(isPercentage(yAxis.options.top) ?\n                    parseFloat(yAxis.options.top) / 100 :\n                    (yAxis.top - yAxis.chart.plotTop) / plotHeight);\n                if (!removedHeight) {\n                    // New axis' height is NaN so we can check if\n                    // the axis is newly created this way\n                    if (!isNumber(height)) {\n                        // Check if the previous axis is the\n                        // indicator axis (every indicator inherits from sma)\n                        height = yAxes[index - 1].series\n                            .every(function (s) { return s.is('sma'); }) ?\n                            previousAxisHeight : defaultHeight / 100;\n                    }\n                    if (!isNumber(top)) {\n                        top = allAxesHeight;\n                    }\n                    previousAxisHeight = height;\n                    allAxesHeight = correctFloat(Math.max(allAxesHeight, (top || 0) + (height || 0)));\n                }\n                else {\n                    // Move all axes which were below the removed axis up.\n                    if (top > removedTop) {\n                        top -= removedHeight;\n                    }\n                    allAxesHeight = Math.max(allAxesHeight, (top || 0) + (height || 0));\n                }\n                return {\n                    height: height * 100,\n                    top: top * 100\n                };\n            });\n            return { positions: positions, allAxesHeight: allAxesHeight };\n        }\n        /**\n         * Get current resize options for each yAxis. Note that each resize is\n         * linked to the next axis, except the last one which shouldn't affect\n         * axes in the navigator. Because indicator can be removed with it's yAxis\n         * in the middle of yAxis array, we need to bind closest yAxes back.\n         *\n         * @private\n         * @function Highcharts.NavigationBindings#getYAxisResizers\n         *\n         * @param {Array<Highcharts.Axis>} yAxes\n         *        Array of yAxes available in the chart\n         *\n         * @return {Array<object>}\n         *         An array of resizer options.\n         *         Format: `{enabled: Boolean, controlledAxis: { next: [String]}}`\n         */\n        function navigationGetYAxisResizers(yAxes) {\n            var resizers = [];\n            yAxes.forEach(function (_yAxis, index) {\n                var nextYAxis = yAxes[index + 1];\n                // We have next axis, bind them:\n                if (nextYAxis) {\n                    resizers[index] = {\n                        enabled: true,\n                        controlledAxis: {\n                            next: [\n                                pick(nextYAxis.options.id, nextYAxis.index)\n                            ]\n                        }\n                    };\n                }\n                else {\n                    // Remove binding:\n                    resizers[index] = {\n                        enabled: false\n                    };\n                }\n            });\n            return resizers;\n        }\n        /**\n         * Utility to modify calculated positions according to the remaining/needed\n         * space. Later, these positions are used in `yAxis.update({ top, height })`\n         *\n         * @private\n         * @function Highcharts.NavigationBindings#recalculateYAxisPositions\n         * @param {Array<Highcharts.Dictionary<number>>} positions\n         * Default positions of all yAxes.\n         * @param {number} changedSpace\n         * How much space should be added or removed.\n         * @param {boolean} modifyHeight\n         * Update only `top` or both `top` and `height`.\n         * @param {number} adder\n         * `-1` or `1`, to determine whether we should add or remove space.\n         *\n         * @return {Array<object>}\n         *         Modified positions,\n         */\n        function navigationRecalculateYAxisPositions(positions, changedSpace, modifyHeight, adder) {\n            positions.forEach(function (position, index) {\n                var prevPosition = positions[index - 1];\n                position.top = !prevPosition ? 0 :\n                    correctFloat(prevPosition.height + prevPosition.top);\n                if (modifyHeight) {\n                    position.height = correctFloat(position.height + adder * changedSpace);\n                }\n            });\n            return positions;\n        }\n        /**\n         * Resize all yAxes (except navigator) to fit the plotting height. Method\n         * checks if new axis is added, if the new axis will fit under previous\n         * axes it is placed there. If not, current plot area is scaled\n         * to make room for new axis.\n         *\n         * If axis is removed, the current plot area stretches to fit into 100%\n         * of the plot area.\n         *\n         * @private\n         */\n        function navigationResizeYAxes(removedYAxisProps) {\n            // The height of the new axis before rescalling. In %, but as a number.\n            var defaultHeight = 20;\n            var chart = this.chart, \n            // Only non-navigator axes\n            yAxes = chart.yAxis.filter(isNotNavigatorYAxis), plotHeight = chart.plotHeight, \n            // Gather current heights (in %)\n            _a = this.getYAxisPositions(yAxes, plotHeight, defaultHeight, removedYAxisProps), positions = _a.positions, allAxesHeight = _a.allAxesHeight, resizers = this.getYAxisResizers(yAxes);\n            // Check if the axis is being either added or removed and\n            // if the new indicator axis will fit under existing axes.\n            // if so, there is no need to scale them.\n            if (!removedYAxisProps &&\n                allAxesHeight <= correctFloat(0.8 + defaultHeight / 100)) {\n                positions[positions.length - 1] = {\n                    height: defaultHeight,\n                    top: correctFloat(allAxesHeight * 100 - defaultHeight)\n                };\n            }\n            else {\n                positions.forEach(function (position) {\n                    position.height = (position.height / (allAxesHeight * 100)) * 100;\n                    position.top = (position.top / (allAxesHeight * 100)) * 100;\n                });\n            }\n            positions.forEach(function (position, index) {\n                yAxes[index].update({\n                    height: position.height + '%',\n                    top: position.top + '%',\n                    resize: resizers[index],\n                    offset: 0\n                }, false);\n            });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var StockTools = {\n            compose: compose\n        };\n\n        return StockTools;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolbar.js', [_modules['Core/Utilities.js'], _modules['Core/Renderer/HTML/AST.js'], _modules['Stock/StockTools/StockToolsUtilities.js']], function (U, AST, StockToolsUtilities) {\n        /* *\n         *\n         *  GUI generator for Stock tools\n         *\n         *  (c) 2009-2024 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, fireEvent = U.fireEvent, getStyle = U.getStyle, isArray = U.isArray, merge = U.merge, pick = U.pick;\n        var shallowArraysEqual = StockToolsUtilities.shallowArraysEqual;\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * Toolbar Class\n         *\n         * @private\n         * @class\n         *\n         * @param {object} options\n         *        Options of toolbar\n         *\n         * @param {Highcharts.Dictionary<string>|undefined} langOptions\n         *        Language options\n         *\n         * @param {Highcharts.Chart} chart\n         *        Reference to chart\n         */\n        var Toolbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Toolbar(options, langOptions, chart) {\n                this.width = 0;\n                this.isDirty = false;\n                this.chart = chart;\n                this.options = options;\n                this.lang = langOptions;\n                // Set url for icons.\n                this.iconsURL = this.getIconsURL();\n                this.guiEnabled = options.enabled;\n                this.visible = pick(options.visible, true);\n                this.guiClassName = options.className;\n                this.toolbarClassName = options.toolbarClassName;\n                // General events collection which should be removed upon\n                // destroy/update:\n                this.eventsToUnbind = [];\n                if (this.guiEnabled) {\n                    this.createContainer();\n                    this.createButtons();\n                    this.showHideNavigation();\n                }\n                fireEvent(this, 'afterInit');\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Create and set up stockTools buttons with their events and submenus.\n             * @private\n             */\n            Toolbar.prototype.createButtons = function () {\n                var _this = this;\n                var lang = this.lang, guiOptions = this.options, toolbar = this.toolbar, buttons = guiOptions.buttons, defs = guiOptions.definitions, allButtons = toolbar.childNodes;\n                this.buttonList = buttons;\n                // Create buttons\n                buttons.forEach(function (btnName) {\n                    var button = _this.addButton(toolbar, defs, btnName, lang);\n                    _this.eventsToUnbind.push(addEvent(button.buttonWrapper, 'click', function () { return _this.eraseActiveButtons(allButtons, button.buttonWrapper); }));\n                    if (isArray(defs[btnName].items)) {\n                        // Create submenu buttons\n                        _this.addSubmenu(button, defs[btnName]);\n                    }\n                });\n            };\n            /**\n             * Create submenu (list of buttons) for the option. In example main button\n             * is Line, in submenu will be buttons with types of lines.\n             *\n             * @private\n             *\n             * @param {Highcharts.Dictionary<Highcharts.HTMLDOMElement>} parentBtn\n             *        Button which has submenu\n             *\n             * @param {Highcharts.StockToolsGuiDefinitionsButtonsOptions} button\n             *        List of all buttons\n             */\n            Toolbar.prototype.addSubmenu = function (parentBtn, button) {\n                var _this = this;\n                var submenuArrow = parentBtn.submenuArrow, buttonWrapper = parentBtn.buttonWrapper, buttonWidth = getStyle(buttonWrapper, 'width'), wrapper = this.wrapper, menuWrapper = this.listWrapper, allButtons = this.toolbar.childNodes, \n                // Create submenu container\n                submenuWrapper = this.submenu = createElement('ul', {\n                    className: 'highcharts-submenu-wrapper'\n                }, void 0, buttonWrapper);\n                // Create submenu buttons and select the first one\n                this.addSubmenuItems(buttonWrapper, button);\n                // Show / hide submenu\n                this.eventsToUnbind.push(addEvent(submenuArrow, 'click', function (e) {\n                    e.stopPropagation();\n                    // Erase active class on all other buttons\n                    _this.eraseActiveButtons(allButtons, buttonWrapper);\n                    // Hide menu\n                    if (buttonWrapper.className\n                        .indexOf('highcharts-current') >= 0) {\n                        menuWrapper.style.width =\n                            menuWrapper.startWidth + 'px';\n                        buttonWrapper.classList.remove('highcharts-current');\n                        submenuWrapper.style.display = 'none';\n                    }\n                    else {\n                        // Show menu\n                        // to calculate height of element\n                        submenuWrapper.style.display = 'block';\n                        var topMargin = submenuWrapper.offsetHeight -\n                            buttonWrapper.offsetHeight - 3;\n                        // Calculate position of submenu in the box\n                        // if submenu is inside, reset top margin\n                        if (\n                        // Cut on the bottom\n                        !(submenuWrapper.offsetHeight +\n                            buttonWrapper.offsetTop >\n                            wrapper.offsetHeight &&\n                            // Cut on the top\n                            buttonWrapper.offsetTop > topMargin)) {\n                            topMargin = 0;\n                        }\n                        // Apply calculated styles\n                        css(submenuWrapper, {\n                            top: -topMargin + 'px',\n                            left: buttonWidth + 3 + 'px'\n                        });\n                        buttonWrapper.className += ' highcharts-current';\n                        menuWrapper.startWidth = wrapper.offsetWidth;\n                        menuWrapper.style.width = menuWrapper.startWidth +\n                            getStyle(menuWrapper, 'padding-left') +\n                            submenuWrapper.offsetWidth + 3 + 'px';\n                    }\n                }));\n            };\n            /**\n             * Create buttons in submenu\n             *\n             * @private\n             *\n             * @param {Highcharts.HTMLDOMElement} buttonWrapper\n             *        Button where submenu is placed\n             *\n             * @param {Highcharts.StockToolsGuiDefinitionsButtonsOptions} button\n             *        List of all buttons options\n             */\n            Toolbar.prototype.addSubmenuItems = function (buttonWrapper, button) {\n                var _this = this;\n                var _self = this, submenuWrapper = this.submenu, lang = this.lang, menuWrapper = this.listWrapper, items = button.items;\n                var submenuBtn;\n                // Add items to submenu\n                items.forEach(function (btnName) {\n                    // Add buttons to submenu\n                    submenuBtn = _this.addButton(submenuWrapper, button, btnName, lang);\n                    _this.eventsToUnbind.push(addEvent(submenuBtn.mainButton, 'click', function () {\n                        _self.switchSymbol(this, buttonWrapper, true);\n                        menuWrapper.style.width =\n                            menuWrapper.startWidth + 'px';\n                        submenuWrapper.style.display = 'none';\n                    }));\n                });\n                // Select first submenu item\n                var firstSubmenuItem = submenuWrapper.querySelectorAll('li > .highcharts-menu-item-btn')[0];\n                // Replace current symbol, in main button, with submenu's button style\n                this.switchSymbol(firstSubmenuItem, false);\n            };\n            /**\n             * Erase active class on all other buttons.\n             * @private\n             */\n            Toolbar.prototype.eraseActiveButtons = function (buttons, currentButton, submenuItems) {\n                [].forEach.call(buttons, function (btn) {\n                    if (btn !== currentButton) {\n                        btn.classList.remove('highcharts-current');\n                        btn.classList.remove('highcharts-active');\n                        submenuItems =\n                            btn.querySelectorAll('.highcharts-submenu-wrapper');\n                        // Hide submenu\n                        if (submenuItems.length > 0) {\n                            submenuItems[0].style.display = 'none';\n                        }\n                    }\n                });\n            };\n            /**\n             * Create single button. Consist of HTML elements `li`, `button`, and (if\n             * exists) submenu container.\n             *\n             * @private\n             *\n             * @param {Highcharts.HTMLDOMElement} target\n             *        HTML reference, where button should be added\n             *\n             * @param {object} options\n             *        All options, by btnName refer to particular button\n             *\n             * @param {string} btnName\n             *        Button name of functionality mapped for specific class\n             *\n             * @param {Highcharts.Dictionary<string>} lang\n             *        All titles, by btnName refer to particular button\n             *\n             * @return {object}\n             *         References to all created HTML elements\n             */\n            Toolbar.prototype.addButton = function (target, options, btnName, lang) {\n                if (lang === void 0) { lang = {}; }\n                var btnOptions = options[btnName], items = btnOptions.items, classMapping = Toolbar.prototype.classMapping, userClassName = btnOptions.className || '';\n                // Main button wrapper\n                var buttonWrapper = createElement('li', {\n                    className: pick(classMapping[btnName], '') + ' ' + userClassName,\n                    title: lang[btnName] || btnName\n                }, void 0, target);\n                // Single button\n                var elementType = (btnOptions.elementType || 'button');\n                var mainButton = createElement(elementType, {\n                    className: 'highcharts-menu-item-btn'\n                }, void 0, buttonWrapper);\n                // Submenu\n                if (items && items.length) {\n                    // Arrow is a hook to show / hide submenu\n                    var submenuArrow = createElement('button', {\n                        className: 'highcharts-submenu-item-arrow ' +\n                            'highcharts-arrow-right'\n                    }, void 0, buttonWrapper);\n                    submenuArrow.style.backgroundImage = 'url(' +\n                        this.iconsURL + 'arrow-bottom.svg)';\n                    return {\n                        buttonWrapper: buttonWrapper,\n                        mainButton: mainButton,\n                        submenuArrow: submenuArrow\n                    };\n                }\n                mainButton.style.backgroundImage = 'url(' +\n                    this.iconsURL + btnOptions.symbol + ')';\n                return {\n                    buttonWrapper: buttonWrapper,\n                    mainButton: mainButton\n                };\n            };\n            /**\n             * Create navigation's HTML elements: container and arrows.\n             * @private\n             */\n            Toolbar.prototype.addNavigation = function () {\n                var wrapper = this.wrapper;\n                // Arrow wrapper\n                this.arrowWrapper = createElement('div', {\n                    className: 'highcharts-arrow-wrapper'\n                });\n                this.arrowUp = createElement('div', {\n                    className: 'highcharts-arrow-up'\n                }, void 0, this.arrowWrapper);\n                this.arrowUp.style.backgroundImage =\n                    'url(' + this.iconsURL + 'arrow-right.svg)';\n                this.arrowDown = createElement('div', {\n                    className: 'highcharts-arrow-down'\n                }, void 0, this.arrowWrapper);\n                this.arrowDown.style.backgroundImage =\n                    'url(' + this.iconsURL + 'arrow-right.svg)';\n                wrapper.insertBefore(this.arrowWrapper, wrapper.childNodes[0]);\n                // Attach scroll events\n                this.scrollButtons();\n            };\n            /**\n             * Add events to navigation (two arrows) which allows user to scroll\n             * top/down GUI buttons, if container's height is not enough.\n             * @private\n             */\n            Toolbar.prototype.scrollButtons = function () {\n                var wrapper = this.wrapper, toolbar = this.toolbar, step = 0.1 * wrapper.offsetHeight; // 0.1 = 10%\n                var targetY = 0;\n                this.eventsToUnbind.push(addEvent(this.arrowUp, 'click', function () {\n                    if (targetY > 0) {\n                        targetY -= step;\n                        toolbar.style.marginTop = -targetY + 'px';\n                    }\n                }));\n                this.eventsToUnbind.push(addEvent(this.arrowDown, 'click', function () {\n                    if (wrapper.offsetHeight + targetY <=\n                        toolbar.offsetHeight + step) {\n                        targetY += step;\n                        toolbar.style.marginTop = -targetY + 'px';\n                    }\n                }));\n            };\n            /*\n             * Create the stockTools container and sets up event bindings.\n             *\n             */\n            Toolbar.prototype.createContainer = function () {\n                var _this = this;\n                var chart = this.chart, guiOptions = this.options, container = chart.container, navigation = chart.options.navigation, bindingsClassName = navigation === null || navigation === void 0 ? void 0 : navigation.bindingsClassName, self = this;\n                var listWrapper, toolbar;\n                // Create main container\n                var wrapper = this.wrapper = createElement('div', {\n                    className: 'highcharts-stocktools-wrapper ' +\n                        guiOptions.className + ' ' + bindingsClassName\n                });\n                container.appendChild(wrapper);\n                this.showHideBtn = createElement('div', {\n                    className: 'highcharts-toggle-toolbar highcharts-arrow-left'\n                }, void 0, wrapper);\n                // Toggle menu\n                this.eventsToUnbind.push(addEvent(this.showHideBtn, 'click', function () {\n                    _this.update({\n                        gui: {\n                            visible: !self.visible\n                        }\n                    });\n                }));\n                // Mimic event behaviour of being outside chart.container\n                [\n                    'mousedown',\n                    'mousemove',\n                    'click',\n                    'touchstart'\n                ].forEach(function (eventType) {\n                    addEvent(wrapper, eventType, function (e) {\n                        return e.stopPropagation();\n                    });\n                });\n                addEvent(wrapper, 'mouseover', function (e) { var _a; return (_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.onContainerMouseLeave(e); });\n                // Toolbar\n                this.toolbar = toolbar = createElement('ul', {\n                    className: 'highcharts-stocktools-toolbar ' +\n                        guiOptions.toolbarClassName\n                });\n                // Add container for list of buttons\n                this.listWrapper = listWrapper = createElement('div', {\n                    className: 'highcharts-menu-wrapper'\n                });\n                wrapper.insertBefore(listWrapper, wrapper.childNodes[0]);\n                listWrapper.insertBefore(toolbar, listWrapper.childNodes[0]);\n                this.showHideToolbar();\n                // Add navigation which allows user to scroll down / top GUI buttons\n                this.addNavigation();\n            };\n            /**\n             * Function called in redraw verifies if the navigation should be visible.\n             * @private\n             */\n            Toolbar.prototype.showHideNavigation = function () {\n                // Arrows\n                // 50px space for arrows\n                if (this.visible &&\n                    this.toolbar.offsetHeight > (this.wrapper.offsetHeight - 50)) {\n                    this.arrowWrapper.style.display = 'block';\n                }\n                else {\n                    // Reset margin if whole toolbar is visible\n                    this.toolbar.style.marginTop = '0px';\n                    // Hide arrows\n                    this.arrowWrapper.style.display = 'none';\n                }\n            };\n            /**\n             * Create button which shows or hides GUI toolbar.\n             * @private\n             */\n            Toolbar.prototype.showHideToolbar = function () {\n                var wrapper = this.wrapper, toolbar = this.listWrapper, submenu = this.submenu, \n                // Show hide toolbar\n                showHideBtn = this.showHideBtn;\n                var visible = this.visible;\n                showHideBtn.style.backgroundImage =\n                    'url(' + this.iconsURL + 'arrow-right.svg)';\n                if (!visible) {\n                    // Hide\n                    if (submenu) {\n                        submenu.style.display = 'none';\n                    }\n                    showHideBtn.style.left = '0px';\n                    visible = this.visible = false;\n                    toolbar.classList.add('highcharts-hide');\n                    showHideBtn.classList.add('highcharts-arrow-right');\n                    wrapper.style.height = showHideBtn.offsetHeight + 'px';\n                }\n                else {\n                    wrapper.style.height = '100%';\n                    toolbar.classList.remove('highcharts-hide');\n                    showHideBtn.classList.remove('highcharts-arrow-right');\n                    showHideBtn.style.top = getStyle(toolbar, 'padding-top') + 'px';\n                    showHideBtn.style.left = (wrapper.offsetWidth +\n                        getStyle(toolbar, 'padding-left')) + 'px';\n                }\n            };\n            /*\n             * In main GUI button, replace icon and class with submenu button's\n             * class / symbol.\n             *\n             * @param {HTMLDOMElement} - submenu button\n             * @param {Boolean} - true or false\n             *\n             */\n            Toolbar.prototype.switchSymbol = function (button, redraw) {\n                var buttonWrapper = button.parentNode, buttonWrapperClass = buttonWrapper.className, \n                // Main button in first level og GUI\n                mainNavButton = buttonWrapper.parentNode.parentNode;\n                // If the button is disabled, don't do anything\n                if (buttonWrapperClass.indexOf('highcharts-disabled-btn') > -1) {\n                    return;\n                }\n                // Set class\n                mainNavButton.className = '';\n                if (buttonWrapperClass) {\n                    mainNavButton.classList.add(buttonWrapperClass.trim());\n                }\n                // Set icon\n                mainNavButton\n                    .querySelectorAll('.highcharts-menu-item-btn')[0]\n                    .style.backgroundImage =\n                    button.style.backgroundImage;\n                // Set active class\n                if (redraw) {\n                    this.toggleButtonActiveClass(mainNavButton);\n                }\n            };\n            /**\n             * Set select state (active class) on button.\n             * @private\n             */\n            Toolbar.prototype.toggleButtonActiveClass = function (button) {\n                var classList = button.classList;\n                if (classList.contains('highcharts-active')) {\n                    classList.remove('highcharts-active');\n                }\n                else {\n                    classList.add('highcharts-active');\n                }\n            };\n            /**\n             * Remove active class from all buttons except defined.\n             * @private\n             */\n            Toolbar.prototype.unselectAllButtons = function (button) {\n                var activeBtns = button.parentNode\n                    .querySelectorAll('.highcharts-active');\n                [].forEach.call(activeBtns, function (activeBtn) {\n                    if (activeBtn !== button) {\n                        activeBtn.classList.remove('highcharts-active');\n                    }\n                });\n            };\n            /**\n             * Update GUI with given options.\n             * @private\n             */\n            Toolbar.prototype.update = function (options, redraw) {\n                this.isDirty = !!options.gui.definitions;\n                merge(true, this.chart.options.stockTools, options);\n                merge(true, this.options, options.gui);\n                this.visible = pick(this.options.visible && this.options.enabled, true);\n                // If Stock Tools are updated, then bindings should be updated too:\n                if (this.chart.navigationBindings) {\n                    this.chart.navigationBindings.update();\n                }\n                this.chart.isDirtyBox = true;\n                if (pick(redraw, true)) {\n                    this.chart.redraw();\n                }\n            };\n            /**\n             * Destroy all HTML GUI elements.\n             * @private\n             */\n            Toolbar.prototype.destroy = function () {\n                var stockToolsDiv = this.wrapper, parent = stockToolsDiv && stockToolsDiv.parentNode;\n                this.eventsToUnbind.forEach(function (unbinder) { return unbinder(); });\n                // Remove the empty element\n                if (parent) {\n                    parent.removeChild(stockToolsDiv);\n                }\n            };\n            /**\n             * Redraws the toolbar based on the current state of the options.\n             * @private\n             */\n            Toolbar.prototype.redraw = function () {\n                if (this.options.enabled !== this.guiEnabled) {\n                    this.handleGuiEnabledChange();\n                }\n                else {\n                    if (!this.guiEnabled) {\n                        return;\n                    }\n                    this.updateClassNames();\n                    this.updateButtons();\n                    this.updateVisibility();\n                    this.showHideNavigation();\n                    this.showHideToolbar();\n                }\n            };\n            /**\n             * Hadles the change of the `enabled` option.\n             * @private\n             */\n            Toolbar.prototype.handleGuiEnabledChange = function () {\n                if (this.options.enabled === false) {\n                    this.destroy();\n                    this.visible = false;\n                }\n                if (this.options.enabled === true) {\n                    this.createContainer();\n                    this.createButtons();\n                }\n                this.guiEnabled = this.options.enabled;\n            };\n            /**\n             * Updates the class names of the GUI and toolbar elements.\n             * @private\n             */\n            Toolbar.prototype.updateClassNames = function () {\n                if (this.options.className !== this.guiClassName) {\n                    if (this.guiClassName) {\n                        this.wrapper.classList.remove(this.guiClassName);\n                    }\n                    if (this.options.className) {\n                        this.wrapper.classList.add(this.options.className);\n                    }\n                    this.guiClassName = this.options.className;\n                }\n                if (this.options.toolbarClassName !== this.toolbarClassName) {\n                    if (this.toolbarClassName) {\n                        this.toolbar.classList.remove(this.toolbarClassName);\n                    }\n                    if (this.options.toolbarClassName) {\n                        this.toolbar.classList.add(this.options.toolbarClassName);\n                    }\n                    this.toolbarClassName = this.options.toolbarClassName;\n                }\n            };\n            /**\n             * Updates the buttons in the toolbar if the button options have changed.\n             * @private\n             */\n            Toolbar.prototype.updateButtons = function () {\n                if (!shallowArraysEqual(this.options.buttons, this.buttonList) ||\n                    this.isDirty) {\n                    this.toolbar.innerHTML = AST.emptyHTML;\n                    this.createButtons();\n                }\n            };\n            /**\n             * Updates visibility based on current options.\n             * @private\n             */\n            Toolbar.prototype.updateVisibility = function () {\n                if (defined(this.options.visible)) {\n                    this.visible = this.options.visible;\n                }\n            };\n            /**\n             * @private\n             */\n            Toolbar.prototype.getIconsURL = function () {\n                return this.chart.options.navigation.iconsURL ||\n                    this.options.iconsURL ||\n                    'https://code.highcharts.com/11.4.8/gfx/stock-icons/';\n            };\n            return Toolbar;\n        }());\n        Toolbar.prototype.classMapping = {\n            circle: 'highcharts-circle-annotation',\n            ellipse: 'highcharts-ellipse-annotation',\n            rectangle: 'highcharts-rectangle-annotation',\n            label: 'highcharts-label-annotation',\n            segment: 'highcharts-segment',\n            arrowSegment: 'highcharts-arrow-segment',\n            ray: 'highcharts-ray',\n            arrowRay: 'highcharts-arrow-ray',\n            line: 'highcharts-infinity-line',\n            arrowInfinityLine: 'highcharts-arrow-infinity-line',\n            verticalLine: 'highcharts-vertical-line',\n            horizontalLine: 'highcharts-horizontal-line',\n            crooked3: 'highcharts-crooked3',\n            crooked5: 'highcharts-crooked5',\n            elliott3: 'highcharts-elliott3',\n            elliott5: 'highcharts-elliott5',\n            pitchfork: 'highcharts-pitchfork',\n            fibonacci: 'highcharts-fibonacci',\n            fibonacciTimeZones: 'highcharts-fibonacci-time-zones',\n            parallelChannel: 'highcharts-parallel-channel',\n            measureX: 'highcharts-measure-x',\n            measureY: 'highcharts-measure-y',\n            measureXY: 'highcharts-measure-xy',\n            timeCycles: 'highcharts-time-cycles',\n            verticalCounter: 'highcharts-vertical-counter',\n            verticalLabel: 'highcharts-vertical-label',\n            verticalArrow: 'highcharts-vertical-arrow',\n            currentPriceIndicator: 'highcharts-current-price-indicator',\n            indicators: 'highcharts-indicators',\n            flagCirclepin: 'highcharts-flag-circlepin',\n            flagDiamondpin: 'highcharts-flag-diamondpin',\n            flagSquarepin: 'highcharts-flag-squarepin',\n            flagSimplepin: 'highcharts-flag-simplepin',\n            zoomX: 'highcharts-zoom-x',\n            zoomY: 'highcharts-zoom-y',\n            zoomXY: 'highcharts-zoom-xy',\n            typeLine: 'highcharts-series-type-line',\n            typeOHLC: 'highcharts-series-type-ohlc',\n            typeHLC: 'highcharts-series-type-hlc',\n            typeCandlestick: 'highcharts-series-type-candlestick',\n            typeHollowCandlestick: 'highcharts-series-type-hollowcandlestick',\n            typeHeikinAshi: 'highcharts-series-type-heikinashi',\n            fullScreen: 'highcharts-full-screen',\n            toggleAnnotations: 'highcharts-toggle-annotations',\n            saveChart: 'highcharts-save-chart',\n            separator: 'highcharts-separator'\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Toolbar;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsGui.js', [_modules['Core/Defaults.js'], _modules['Stock/StockTools/StockToolsDefaults.js'], _modules['Stock/StockTools/StockToolbar.js'], _modules['Core/Utilities.js']], function (D, StockToolsDefaults, Toolbar, U) {\n        /* *\n         *\n         *  GUI generator for Stock tools\n         *\n         *  (c) 2009-2024 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var addEvent = U.addEvent, getStyle = U.getStyle, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Verify if Toolbar should be added.\n         * @private\n         */\n        function chartSetStockTools(options) {\n            var chartOptions = this.options, lang = chartOptions.lang, guiOptions = merge(chartOptions.stockTools && chartOptions.stockTools.gui, options && options.gui), langOptions = lang && lang.stockTools && lang.stockTools.gui;\n            this.stockTools = new Toolbar(guiOptions, langOptions, this);\n            if (this.stockTools.guiEnabled) {\n                this.isDirtyBox = true;\n            }\n        }\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigationBindingsClass) {\n            var chartProto = ChartClass.prototype;\n            if (!chartProto.setStockTools) {\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRedraw', onChartBeforeRedraw);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRedraw);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins, { order: 0 });\n                addEvent(ChartClass, 'render', onChartRender);\n                chartProto.setStockTools = chartSetStockTools;\n                addEvent(NavigationBindingsClass, 'deselectButton', onNavigationBindingsDeselectButton);\n                addEvent(NavigationBindingsClass, 'selectButton', onNavigationBindingsSelectButton);\n                setOptions(StockToolsDefaults);\n            }\n        }\n        /**\n         * Run HTML generator\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            this.setStockTools();\n        }\n        /**\n         * Handle beforeRedraw and beforeRender\n         * @private\n         */\n        function onChartBeforeRedraw() {\n            if (this.stockTools) {\n                this.stockTools.redraw();\n                setOffset(this);\n            }\n        }\n        /**\n         * Function to calculate and set the offset width for stock tools.\n         * @private\n         */\n        function setOffset(chart) {\n            var _a;\n            if ((_a = chart.stockTools) === null || _a === void 0 ? void 0 : _a.guiEnabled) {\n                var optionsChart = chart.options.chart;\n                var listWrapper = chart.stockTools.listWrapper;\n                var offsetWidth = listWrapper && ((listWrapper.startWidth +\n                    getStyle(listWrapper, 'padding-left') +\n                    getStyle(listWrapper, 'padding-right')) || listWrapper.offsetWidth);\n                chart.stockTools.width = offsetWidth;\n                var dirty = false;\n                if (offsetWidth < chart.plotWidth) {\n                    var nextX = pick(optionsChart.spacingLeft, optionsChart.spacing && optionsChart.spacing[3], 0) + offsetWidth;\n                    var diff = nextX - chart.spacingBox.x;\n                    chart.spacingBox.x = nextX;\n                    chart.spacingBox.width -= diff;\n                    dirty = true;\n                }\n                else if (offsetWidth === 0) {\n                    dirty = true;\n                }\n                if (offsetWidth !== chart.stockTools.prevOffsetWidth) {\n                    chart.stockTools.prevOffsetWidth = offsetWidth;\n                    if (dirty) {\n                        chart.isDirtyLegend = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartDestroy() {\n            if (this.stockTools) {\n                this.stockTools.destroy();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartGetMargins() {\n            var _a;\n            var offsetWidth = ((_a = this.stockTools) === null || _a === void 0 ? void 0 : _a.visible) && this.stockTools.guiEnabled ?\n                this.stockTools.width : 0;\n            if (offsetWidth && offsetWidth < this.plotWidth) {\n                this.plotLeft += offsetWidth;\n                this.spacing[3] += offsetWidth;\n            }\n        }\n        /**\n         * Check if the correct price indicator button is displayed, #15029.\n         * @private\n         */\n        function onChartRender() {\n            var _a, _b;\n            var stockTools = this.stockTools, button = stockTools &&\n                stockTools.toolbar &&\n                stockTools.toolbar.querySelector('.highcharts-current-price-indicator');\n            // Change the initial button background.\n            if (stockTools &&\n                this.navigationBindings &&\n                this.options.series &&\n                button) {\n                if ((_b = (_a = this.navigationBindings.utils) === null || _a === void 0 ? void 0 : _a.isPriceIndicatorEnabled) === null || _b === void 0 ? void 0 : _b.call(_a, this.series)) {\n                    button.firstChild.style['background-image'] =\n                        'url(\"' + stockTools.getIconsURL() + 'current-price-hide.svg\")';\n                }\n                else {\n                    button.firstChild.style['background-image'] =\n                        'url(\"' + stockTools.getIconsURL() + 'current-price-show.svg\")';\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsDeselectButton(event) {\n            var className = 'highcharts-submenu-wrapper', gui = this.chart.stockTools;\n            if (gui && gui.guiEnabled) {\n                var button = event.button;\n                // If deselecting a button from a submenu, select state for it's parent\n                if (button.parentNode.className.indexOf(className) >= 0) {\n                    button = button.parentNode.parentNode;\n                }\n                button.classList.remove('highcharts-active');\n            }\n        }\n        /**\n         * Communication with bindings\n         * @private\n         */\n        function onNavigationBindingsSelectButton(event) {\n            var className = 'highcharts-submenu-wrapper', gui = this.chart.stockTools;\n            if (gui && gui.guiEnabled) {\n                var button = event.button;\n                // Unselect other active buttons\n                gui.unselectAllButtons(event.button);\n                // If clicked on a submenu, select state for it's parent\n                if (button.parentNode.className.indexOf(className) >= 0) {\n                    button = button.parentNode.parentNode;\n                }\n                // Set active class on the current button\n                gui.toggleButtonActiveClass(button);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var StockToolsGui = {\n            compose: compose\n        };\n\n        return StockToolsGui;\n    });\n    _registerModule(_modules, 'masters/modules/stock-tools.src.js', [_modules['Core/Globals.js'], _modules['Extensions/Annotations/NavigationBindings.js'], _modules['Stock/StockTools/StockTools.js'], _modules['Stock/StockTools/StockToolsGui.js'], _modules['Stock/StockTools/StockToolbar.js']], function (Highcharts, NavigationBindings, StockTools, StockToolsGui, Toolbar) {\n\n        var G = Highcharts;\n        G.NavigationBindings = G.NavigationBindings || NavigationBindings;\n        G.Toolbar = Toolbar;\n        StockTools.compose(G.NavigationBindings);\n        StockToolsGui.compose(G.Chart, G.NavigationBindings);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","ChartNavigationComposition","Additions","compose","chart","navigation","updates","prototype","addUpdate","updateFn","push","update","options","redraw","_this","forEach","call","NBU","U","getAssignedAxis","isNumber","merge","lang","popup","simpleShapes","lines","circle","ellipse","rectangle","label","shapeOptions","typeOptions","fill","format","strokeWidth","stroke","title","name","labelOptions","labels","backgroundColor","backgroundColors","borderColor","borderRadius","borderWidth","style","padding","fontSize","color","height","shapes","bindingsClassName","bindings","circleAnnotation","className","start","e","_a","coords","pointer","getCoordinates","coordsX","xAxis","coordsY","yAxis","addAnnotation","langKey","type","point","x","value","y","axis","index","r","annotationsOptions","steps","annotation","distance","mockPointOpts","inverted","toPixels","Math","max","sqrt","pow","chartX","chartY","ellipseAnnotation","points","ry","annotationOptions","target","position","getAbsolutePosition","translatePoint","position2","newR","getDistanceFromLine","getYAxis","newRY","abs","toValue","setYRadius","rectangleAnnotation","command","labelAnnotation","overflow","crop","events","animation","defer","D","F","H","NavigationBindingDefaults","setOptions","composed","doc","getFieldType","addEvent","attr","defined","fireEvent","isArray","isFunction","isObject","objectEach","pick","pushUnique","onAnnotationRemove","navigationBindings","deselectAnnotation","onChartDestroy","destroy","onChartLoad","NavigationBindings","initEvents","initUpdate","onChartRender","disabledClassName","buttonsEnabled_1","series","isInternal","visible","container","container_1","boundClassNames","key","buttonNode","querySelectorAll","i","length","button","cls","noDataState","indexOf","classList","remove","onNavigationBindingsClosePopup","onNavigationBindingsDeselectButton","selectedButtonElement","selectableAnnotation","annotationType","touchStartX","touchStartY","originalClick","defaultOptions","click","selectAndShowPopup","eventArguments","prevAnnotation","activeAnnotation","setControlPointsVisibility","formType","annotationToFields","onSubmit","data","actionType","removeAnnotation","config","fieldsToOptions","fields","crosshairY","enabled","crosshairX","touchstart","touches","clientX","clientY","touchend","changedTouches","eventsToUnbind","getElementsByClassName","AnnotationClass","ChartClass","types","getCoords","bindingsContainer","subContainer","event","getButtonEvents","contains","bindingsButtonClick","callback","eventName","passive","cancelClick","isInsidePlot","plotLeft","plotTop","visiblePlotOnly","bindingsChartClick","isTouchDevice","bindingsContainerMouseMove","clickEvent","svgContainer","renderer","boxWrapper","shouldEventBeFired","nextEvent","currentUserDetails","coll","mouseMoveEvent","selectedButton","init","addClass","stockTools","removeClass","parentNode","closestPolyfill","el","s","ElementProto","Element","elementMatches","matches","msMatchesSelector","webkitMatchesSelector","ret","closest","parentElement","nodeType","setTimeout","stepIndex","end","_container","moveEvent","field","parsedValue","parseFloat","split","pathLength","match","parent_1","nextName","editables","annotationsEditable","nestedEditables","nestedOptions","nonEditables","annotationsNonEditable","visualOptions","traverse","option","parentEditables","parent","parentKey","nextParent","arrayOption","nestedOption","nestedKey","toString","typeOption","typeKey","getClickedClassNames","elemClassName","element","classNames","tagName","concat","map","removeEvents","unbinder","background","innerBackground","outerBackground","line","connector","verticalLine","measure","fibonacci","tunnel","pitchfork","rect","crookedLine","basicAnnotation","Series","getOptions","uniqueKey","indicatorsWithAxes","indicatorsWithVolume","attractToPoint","closestPoint","distX","Number","MAX_VALUE","searchPoint","below","addFlagFromForm","toolbar","pointConfig","seriesOptions","onSeries","id","shape","updated","guiEnabled","addSeries","isNotNavigatorYAxis","userOptions","isPriceIndicatorEnabled","some","lastVisiblePrice","lastPrice","manageIndicators","parentSeries","seriesConfig","linkedTo","get","seriesId","linkedSeries","removedYAxisProps","top","resizeYAxes","plotOptions","getDGApproximation","dataGrouping","approximation","addAxis","offset","opposite","text","tickPixelInterval","showLastLabel","align","params","volumeSeriesID","filter","shallowArraysEqual","a","b","updateHeight","horiz","updateNthPoint","startIndex","updateRectSize","width","STU","segment","arrowSegment","markerEnd","ray","arrowRay","infinityLine","arrowInfinityLine","horizontalLine","draggable","crooked3","crooked5","elliott3","elliott5","measureX","selectType","measureY","measureXY","parallelChannel","controlPoint","verticalCounter","timeCycles","verticalLabel","verticalArrow","fibonacciTimeZones","flagCirclepin","flagDiamondpin","flagSquarepin","flagSimplepin","zoomX","zooming","zoomY","zoomXY","seriesTypeLine","useOhlcData","seriesTypeOhlc","seriesTypeCandlestick","seriesTypeHeikinAshi","seriesTypeHLC","seriesTypeHollowCandlestick","fullScreen","fullscreen","toggle","currentPriceIndicator","gui","priceIndicatorEnabled","indicators","toggleAnnotations","iconsURL","getIconsURL","toggledAnnotations","annotations","setVisibility","firstChild","saveChart","flags","yAxes","is","localStorage","setItem","JSON","stringify","crookedLines","advanced","verticalLabels","zoomChange","typeChange","typeOHLC","typeLine","typeCandlestick","typeHLC","typeHollowCandlestick","typeHeikinAshi","addButton","saveButton","editButton","removeButton","volume","noFilterMatch","searchIndicators","clearFilter","period","periods","standardDeviation","periodTenkan","periodSenkouSpanB","periodATR","multiplierATR","shortPeriod","longPeriod","signalPeriod","decimals","algorithm","topBand","bottomBand","initialAccelerationFactor","maxAccelerationFactor","increment","multiplier","ranges","highIndex","lowIndex","deviation","xAxisUnit","factor","fastAvgPeriod","slowAvgPeriod","average","indicatorAliases","abands","bb","dema","ema","ikh","keltnerchannels","linearRegression","pivotpoints","pc","priceenvelopes","psar","sma","supertrend","tema","vbp","vwap","wma","zigzag","apo","ad","aroon","aroonoscillator","atr","ao","cci","chaikin","cmf","cmo","disparityindex","dmi","dpo","klinger","linearRegressionAngle","linearRegressionIntercept","linearRegressionSlope","macd","mfi","momentum","natr","obv","ppo","roc","rsi","slowstochastic","stochastic","trix","williamsr","toolbarClassName","buttons","definitions","separator","elementType","symbol","items","StockToolsBindings","StockToolsDefaults","correctFloat","navigationGetYAxisPositions","plotHeight","defaultHeight","previousAxisHeight","removedHeight","removedTop","allAxesHeight","isPercentage","prop","positions","every","navigationGetYAxisResizers","resizers","_yAxis","nextYAxis","controlledAxis","next","navigationRecalculateYAxisPositions","changedSpace","modifyHeight","adder","prevPosition","navigationResizeYAxes","getYAxisPositions","getYAxisResizers","resize","NavigationBindingsClass","navigationProto","utils","recalculateYAxisPositions","AST","StockToolsUtilities","createElement","css","getStyle","Toolbar","langOptions","isDirty","guiClassName","createContainer","createButtons","showHideNavigation","guiOptions","defs","allButtons","childNodes","buttonList","btnName","buttonWrapper","eraseActiveButtons","addSubmenu","parentBtn","submenuArrow","buttonWidth","wrapper","menuWrapper","listWrapper","submenuWrapper","submenu","addSubmenuItems","stopPropagation","startWidth","display","topMargin","offsetHeight","offsetTop","left","offsetWidth","submenuBtn","_self","mainButton","switchSymbol","firstSubmenuItem","currentButton","submenuItems","btn","btnOptions","classMapping","userClassName","backgroundImage","addNavigation","arrowWrapper","arrowUp","arrowDown","insertBefore","scrollButtons","step","targetY","marginTop","self","appendChild","showHideBtn","eventType","onContainerMouseLeave","showHideToolbar","add","buttonWrapperClass","mainNavButton","trim","toggleButtonActiveClass","unselectAllButtons","activeBtns","activeBtn","isDirtyBox","stockToolsDiv","removeChild","handleGuiEnabledChange","updateClassNames","updateButtons","updateVisibility","innerHTML","emptyHTML","chartSetStockTools","chartOptions","onChartAfterGetContainer","setStockTools","onChartBeforeRedraw","setOffset","optionsChart","dirty","plotWidth","nextX","spacingLeft","spacing","diff","spacingBox","prevOffsetWidth","isDirtyLegend","onChartGetMargins","_b","querySelector","onNavigationBindingsSelectButton","chartProto","order","StockTools","StockToolsGui","G","Chart"],"mappings":"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"}