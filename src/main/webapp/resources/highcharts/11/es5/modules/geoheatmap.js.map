{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * (c) 2009-2024\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/geoheatmap', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/GeoHeatmap/GeoHeatmapPoint.js', [_modules['Core/Utilities.js'], _modules['Core/Series/SeriesRegistry.js']], function (U, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Authors: Magdalena Gut, Piotr Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var MapPoint = SeriesRegistry.seriesTypes.map.prototype.pointClass;\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var GeoHeatmapPoint = /** @class */ (function (_super) {\n            __extends(GeoHeatmapPoint, _super);\n            function GeoHeatmapPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            GeoHeatmapPoint.prototype.applyOptions = function (options, x) {\n                var point = _super.prototype.applyOptions.call(this, options, x), _a = point.options, lat = _a.lat, lon = _a.lon;\n                if (isNumber(lon) && isNumber(lat)) {\n                    var _b = this.series.options, _c = _b.colsize, colsize = _c === void 0 ? 1 : _c, _d = _b.rowsize, rowsize = _d === void 0 ? 1 : _d, x1 = lon - colsize / 2, y1 = lat - rowsize / 2;\n                    point.geometry = point.options.geometry = {\n                        type: 'Polygon',\n                        // A rectangle centered in lon/lat\n                        coordinates: [\n                            [\n                                [x1, y1],\n                                [x1 + colsize, y1],\n                                [x1 + colsize, y1 + rowsize],\n                                [x1, y1 + rowsize],\n                                [x1, y1]\n                            ]\n                        ]\n                    };\n                }\n                return point;\n                /* eslint-enable valid-jsdoc */\n            };\n            return GeoHeatmapPoint;\n        }(MapPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GeoHeatmapPoint;\n    });\n    _registerModule(_modules, 'Series/InterpolationUtilities.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Hubert Kozik\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var defined = U.defined, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Find color of point based on color axis.\n         *\n         * @function Highcharts.colorFromPoint\n         *\n         * @param {number | null} value\n         *        Value to find corresponding color on the color axis.\n         *\n         * @param {Highcharts.Point} point\n         *        Point to find it's color from color axis.\n         *\n         * @return {number[]}\n         *        Color in RGBa array.\n         */\n        function colorFromPoint(value, point) {\n            var colorAxis = point.series.colorAxis;\n            if (colorAxis) {\n                var rgba = (colorAxis.toColor(value || 0, point)\n                    .split(')')[0]\n                    .split('(')[1]\n                    .split(',')\n                    .map(function (s) { return pick(parseFloat(s), parseInt(s, 10)); }));\n                rgba[3] = pick(rgba[3], 1.0) * 255;\n                if (!defined(value) || !point.visible) {\n                    rgba[3] = 0;\n                }\n                return rgba;\n            }\n            return [0, 0, 0, 0];\n        }\n        /**\n         * Method responsible for creating a canvas for interpolation image.\n         * @private\n         */\n        function getContext(series) {\n            var canvas = series.canvas, context = series.context;\n            if (canvas && context) {\n                context.clearRect(0, 0, canvas.width, canvas.height);\n            }\n            else {\n                series.canvas = doc.createElement('canvas');\n                series.context = series.canvas.getContext('2d', {\n                    willReadFrequently: true\n                }) || void 0;\n                return series.context;\n            }\n            return context;\n        }\n        var InterpolationUtilities = {\n            colorFromPoint: colorFromPoint,\n            getContext: getContext\n        };\n\n        return InterpolationUtilities;\n    });\n    _registerModule(_modules, 'Series/GeoHeatmap/GeoHeatmapSeries.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Series/GeoHeatmap/GeoHeatmapPoint.js'], _modules['Core/Globals.js'], _modules['Series/InterpolationUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (A, GeoHeatmapPoint, H, IU, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Authors: Magdalena Gut, Piotr Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject, stop = A.stop;\n        var noop = H.noop;\n        var colorFromPoint = IU.colorFromPoint, getContext = IU.getContext;\n        var MapSeries = SeriesRegistry.seriesTypes.map;\n        var addEvent = U.addEvent, extend = U.extend, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick;\n        /**\n         * Normalize longitute value to -180:180 range.\n         * @private\n         */\n        function normalizeLonValue(lon) {\n            return lon - Math.floor((lon + 180) / 360) * 360;\n        }\n        /**\n         * Get proper point's position for PixelData array.\n         * @private\n         */\n        function scaledPointPos(lon, lat, canvasWidth, canvasHeight, colsize, rowsize) {\n            return Math.ceil((canvasWidth * (canvasHeight - 1 - (lat + 90) / rowsize)) +\n                ((lon + 180) / colsize));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Geo Heatmap series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.geoheatmap\n         *\n         * @augments Highcharts.Series\n         */\n        var GeoHeatmapSeries = /** @class */ (function (_super) {\n            __extends(GeoHeatmapSeries, _super);\n            function GeoHeatmapSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.isDirtyCanvas = true;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * For updated colsize and rowsize options\n             * @private\n             */\n            GeoHeatmapSeries.prototype.update = function () {\n                var series = this;\n                series.options = merge(series.options, arguments[0]);\n                if (series.getInterpolation().enabled) {\n                    series.isDirtyCanvas = true;\n                    series.points.forEach(function (point) {\n                        if (point.graphic) {\n                            point.graphic.destroy();\n                            delete point.graphic;\n                        }\n                    });\n                }\n                _super.prototype.update.apply(series, arguments);\n            };\n            /**\n             * Override translate method to not fire if not needed.\n             * @private\n             */\n            GeoHeatmapSeries.prototype.translate = function () {\n                if (this.getInterpolation().enabled &&\n                    this.image &&\n                    !this.isDirty &&\n                    !this.isDirtyData) {\n                    return;\n                }\n                _super.prototype.translate.apply(this, arguments);\n            };\n            /**\n             * Create the extended object out of the boolean\n             * @private\n             */\n            GeoHeatmapSeries.prototype.getInterpolation = function () {\n                if (!isObject(this.options.interpolation)) {\n                    return {\n                        blur: 1,\n                        enabled: this.options.interpolation\n                    };\n                }\n                return this.options.interpolation;\n            };\n            /**\n             * Overriding drawPoints original method to apply new features.\n             * @private\n             */\n            GeoHeatmapSeries.prototype.drawPoints = function () {\n                var series = this, chart = series.chart, mapView = chart.mapView, seriesOptions = series.options;\n                if (series.getInterpolation().enabled && mapView && series.bounds) {\n                    var ctx = series.context || getContext(series), canvas = series.canvas, colorAxis = series.colorAxis, image_1 = series.image, chart_1 = series.chart, points = series.points, _a = [\n                        pick(seriesOptions.colsize, 1),\n                        pick(seriesOptions.rowsize, 1)\n                    ], colsize = _a[0], rowsize = _a[1], \n                    // Calculate dimensions based on series bounds\n                    topLeft = mapView.projectedUnitsToPixels({\n                        x: series.bounds.x1,\n                        y: series.bounds.y2\n                    }), bottomRight = mapView.projectedUnitsToPixels({\n                        x: series.bounds.x2,\n                        y: series.bounds.y1\n                    });\n                    if (canvas && ctx && colorAxis && topLeft && bottomRight) {\n                        var dimensions_1 = {\n                            x: topLeft.x,\n                            y: topLeft.y,\n                            width: bottomRight.x - topLeft.x,\n                            height: bottomRight.y - topLeft.y\n                        };\n                        if (\n                        // Do not calculate new canvas if not necessary\n                        series.isDirtyCanvas ||\n                            // Calculate new canvas if data is dirty\n                            series.isDirtyData ||\n                            // Always calculate new canvas for Orthographic projection\n                            mapView.projection.options.name === 'Orthographic') {\n                            series.isDirtyCanvas = true;\n                            var canvasWidth = canvas.width = ~~(360 / colsize) + 1, canvasHeight = canvas.height = ~~(180 / rowsize) + 1, canvasArea = canvasWidth * canvasHeight, pixelData = new Uint8ClampedArray(canvasArea * 4);\n                            series.directTouch = false; // Needed for tooltip\n                            // First pixelData represents the geo coordinates\n                            for (var i = 0; i < points.length; i++) {\n                                var p = points[i], sourceArr = new Uint8ClampedArray(colorFromPoint(p.value, p)), _b = p.options, lon = _b.lon, lat = _b.lat;\n                                if (isNumber(lon) && isNumber(lat)) {\n                                    pixelData.set(sourceArr, scaledPointPos(lon, lat, canvasWidth, canvasHeight, colsize, rowsize) * 4);\n                                }\n                            }\n                            var blur_1 = series.getInterpolation().blur, blurFactor = blur_1 === 0 ? 1 : blur_1 * 11, upscaledWidth = ~~(canvasWidth * blurFactor), upscaledHeight = ~~(canvasHeight * blurFactor), projectedWidth = ~~dimensions_1.width, projectedHeight = ~~dimensions_1.height, img = new ImageData(pixelData, canvasWidth, canvasHeight);\n                            canvas.width = upscaledWidth;\n                            canvas.height = upscaledHeight;\n                            // Next step is to upscale pixelData to big image to get\n                            // the blur on the interpolation\n                            ctx.putImageData(img, 0, 0);\n                            // Now we have an unscaled version of our ImageData\n                            // let's make the compositing mode to 'copy' so that\n                            // our next drawing op erases whatever was there\n                            // previously just like putImageData would have done\n                            ctx.globalCompositeOperation = 'copy';\n                            // Now we can draw ourself over ourself\n                            ctx.drawImage(canvas, 0, 0, img.width, img.height, // Grab the ImageData\n                            0, 0, canvas.width, canvas.height // Scale it\n                            );\n                            // Add projection to upscaled ImageData\n                            var cartesianImageData = ctx.getImageData(0, 0, canvas.width, canvas.height), projectedPixelData = this.getProjectedImageData(mapView, projectedWidth, projectedHeight, cartesianImageData, canvas, dimensions_1.x, dimensions_1.y), projectedImg = new ImageData(projectedPixelData, projectedWidth, projectedHeight);\n                            ctx.globalCompositeOperation = 'copy';\n                            canvas.width = projectedWidth;\n                            canvas.height = projectedHeight;\n                            ctx.putImageData(projectedImg, 0, 0);\n                        }\n                        if (image_1) {\n                            if (chart_1.renderer.globalAnimation && chart_1.hasRendered) {\n                                var startX_1 = Number(image_1.attr('x')), startY_1 = Number(image_1.attr('y')), startWidth_1 = Number(image_1.attr('width')), startHeight_1 = Number(image_1.attr('height'));\n                                var step_1 = function (now, fx) {\n                                    image_1.attr({\n                                        x: (startX_1 + (dimensions_1.x - startX_1) * fx.pos),\n                                        y: (startY_1 + (dimensions_1.y - startY_1) * fx.pos),\n                                        width: (startWidth_1 + (dimensions_1.width - startWidth_1) * fx.pos),\n                                        height: (startHeight_1 + (dimensions_1.height - startHeight_1) * fx.pos)\n                                    });\n                                };\n                                var animOptions = merge(animObject(chart_1.renderer.globalAnimation)), userStep_1 = animOptions.step;\n                                animOptions.step =\n                                    function () {\n                                        if (userStep_1) {\n                                            userStep_1.apply(this, arguments);\n                                        }\n                                        step_1.apply(this, arguments);\n                                    };\n                                image_1\n                                    .attr(merge({ animator: 0 }, series.isDirtyCanvas ? {\n                                    href: canvas.toDataURL('image/png', 1)\n                                } : void 0))\n                                    .animate({ animator: 1 }, animOptions);\n                                // When dragging or first rendering, animation is off\n                            }\n                            else {\n                                stop(image_1);\n                                image_1.attr(merge(dimensions_1, series.isDirtyCanvas ? {\n                                    href: canvas.toDataURL('image/png', 1)\n                                } : void 0));\n                            }\n                        }\n                        else {\n                            series.image = chart_1.renderer.image(canvas.toDataURL('image/png', 1))\n                                .attr(dimensions_1)\n                                .add(series.group);\n                        }\n                        series.isDirtyCanvas = false;\n                    }\n                }\n                else {\n                    _super.prototype.drawPoints.apply(series, arguments);\n                }\n            };\n            /**\n             * Project ImageData to actual mapView projection used on a chart.\n             * @private\n             */\n            GeoHeatmapSeries.prototype.getProjectedImageData = function (mapView, projectedWidth, projectedHeight, cartesianImageData, canvas, horizontalShift, verticalShift) {\n                var _a;\n                var projectedPixelData = new Uint8ClampedArray(projectedWidth * projectedHeight * 4), lambda = pick((_a = mapView.projection.options.rotation) === null || _a === void 0 ? void 0 : _a[0], 0), widthFactor = canvas.width / 360, heightFactor = -1 * canvas.height / 180;\n                var y = -1;\n                // For each pixel on the map plane, find the map\n                // coordinate and get the color value\n                for (var i = 0; i < projectedPixelData.length; i += 4) {\n                    var x = (i / 4) % projectedWidth;\n                    if (x === 0) {\n                        y++;\n                    }\n                    var projectedCoords = mapView.pixelsToLonLat({\n                        x: horizontalShift + x,\n                        y: verticalShift + y\n                    });\n                    if (projectedCoords) {\n                        // Normalize lon values\n                        if (projectedCoords.lon > -180 - lambda &&\n                            projectedCoords.lon < 180 - lambda) {\n                            projectedCoords.lon =\n                                normalizeLonValue(projectedCoords.lon);\n                        }\n                        var projected = [\n                            projectedCoords.lon,\n                            projectedCoords.lat\n                        ], cvs2PixelX = projected[0] * widthFactor + canvas.width / 2, cvs2PixelY = projected[1] * heightFactor +\n                            canvas.height / 2;\n                        if (cvs2PixelX >= 0 &&\n                            cvs2PixelX <= canvas.width &&\n                            cvs2PixelY >= 0 &&\n                            cvs2PixelY <= canvas.height) {\n                            var redPos = (\n                            // Rows\n                            Math.floor(cvs2PixelY) *\n                                canvas.width * 4 +\n                                // Columns\n                                Math.round(cvs2PixelX) * 4);\n                            projectedPixelData[i] =\n                                cartesianImageData.data[redPos];\n                            projectedPixelData[i + 1] =\n                                cartesianImageData.data[redPos + 1];\n                            projectedPixelData[i + 2] =\n                                cartesianImageData.data[redPos + 2];\n                            projectedPixelData[i + 3] =\n                                cartesianImageData.data[redPos + 3];\n                        }\n                    }\n                }\n                return projectedPixelData;\n            };\n            GeoHeatmapSeries.prototype.searchPoint = function (e, compareX) {\n                var series = this, chart = this.chart, mapView = chart.mapView;\n                if (mapView &&\n                    series.bounds &&\n                    series.image &&\n                    chart.tooltip &&\n                    chart.tooltip.options.enabled) {\n                    if (\n                    // If user drags map do not build k-d-tree\n                    !chart.pointer.hasDragged &&\n                        // If user zooms in/out map do not build k-d-tree\n                        (+series.image.attr('animator') <= 0.01 ||\n                            +series.image.attr('animator') >= 0.99)) {\n                        var topLeft = mapView.projectedUnitsToPixels({\n                            x: series.bounds.x1,\n                            y: series.bounds.y2\n                        }), bottomRight = mapView.projectedUnitsToPixels({\n                            x: series.bounds.x2,\n                            y: series.bounds.y1\n                        });\n                        chart.pointer.normalize(e);\n                        if (e.lon && e.lat &&\n                            topLeft && bottomRight &&\n                            e.chartX - chart.plotLeft > topLeft.x &&\n                            e.chartX - chart.plotLeft < bottomRight.x &&\n                            e.chartY - chart.plotTop > topLeft.y &&\n                            e.chartY - chart.plotTop < bottomRight.y) {\n                            return this.searchKDTree({\n                                clientX: e.chartX,\n                                lon: normalizeLonValue(e.lon),\n                                lat: e.lat\n                            }, compareX, e);\n                        }\n                    }\n                    else {\n                        chart.tooltip.destroy();\n                    }\n                }\n            };\n            /**\n             * A `geoheatmap` series is a variety of heatmap series, composed into\n             * the map projection, where the units are expressed in the latitude\n             * and longitude, and individual values contained in a matrix are\n             * represented as colors.\n             *\n             * @sample maps/demo/geoheatmap-europe/\n             *         GeoHeatmap Chart with interpolation on Europe map\n             * @sample maps/series-geoheatmap/geoheatmap-equalearth/\n             *         GeoHeatmap Chart on the Equal Earth Projection\n             *\n             * @extends      plotOptions.map\n             * @since        11.0.0\n             * @product      highmaps\n             * @excluding    allAreas, dragDrop, findNearestPointBy, geometry, joinBy,\n             * negativeColor, onPoint, stickyTracking\n             * @requires     modules/geoheatmap\n             * @optionparent plotOptions.geoheatmap\n             */\n            GeoHeatmapSeries.defaultOptions = merge(MapSeries.defaultOptions, {\n                nullColor: 'transparent',\n                tooltip: {\n                    pointFormat: 'Lat: {point.lat}, Lon: {point.lon}, Value: {point.value}<br/>'\n                },\n                /**\n                 * The border width of each geoheatmap tile.\n                 *\n                 * In styled mode, the border stroke width is given in the\n                 * `.highcharts-point` class.\n                 *\n                 * @sample maps/demo/geoheatmap-orthographic/\n                 *         borderWidth set to 1 to create a grid\n                 *\n                 * @type      {number|null}\n                 * @default   0\n                 * @product   highmaps\n                 * @apioption plotOptions.geoheatmap.borderWidth\n                 */\n                borderWidth: 0,\n                /**\n                 * The column size - how many longitude units each column in the\n                 * geoheatmap should span.\n                 *\n                 * @sample maps/demo/geoheatmap-europe/\n                 *         1 by default, set to 5\n                 *\n                 * @product   highmaps\n                 * @apioption plotOptions.geoheatmap.colsize\n                 */\n                colsize: 1,\n                /**\n                 * The main color of the series. In heat maps this color is rarely\n                 * used, as we mostly use the color to denote the value of each\n                 * point. Unless options are set in the [colorAxis](#colorAxis), the\n                 * default value is pulled from the [options.colors](#colors) array.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @product   highmaps\n                 * @apioption plotOptions.geoheatmap.color\n                 */\n                /**\n                 * The rowsize size - how many latitude units each row in the\n                 * geoheatmap should span.\n                 *\n                 * @sample maps/demo/geoheatmap-europe/\n                 *         1 by default, set to 5\n                 *\n                 * @product   highmaps\n                 * @apioption plotOptions.geoheatmap.rowsize\n                 */\n                rowsize: 1,\n                stickyTracking: true,\n                /**\n                 * Make the geoheatmap render its data points as an interpolated\n                 * image. It can be used to show a Temperature Map-like charts.\n                 *\n                 * @sample maps/demo/geoheatmap-earth-statistics\n                 *         Advanced demo of GeoHeatmap interpolation with multiple\n                 *         datasets\n                 *\n                 * @type      {boolean|Highcharts.InterpolationOptionsObject}\n                 * @since     11.2.0\n                 * @product   highmaps\n                 */\n                interpolation: {\n                    /**\n                     * Enable or disable the interpolation of the geoheatmap series.\n                     *\n                     * @since 11.2.0\n                     */\n                    enabled: false,\n                    /**\n                     * Represents how much blur should be added to the interpolated\n                     * image. Works best in the range of 0-1, all higher values\n                     * would need a lot more performance of the machine to calculate\n                     * more detailed interpolation.\n                     *\n                     *  * **Note:** Useful, if the data is spread into wide range of\n                     *  longitude and latitude values.\n                     *\n                     * @sample maps/series-geoheatmap/turkey-fire-areas\n                     *         Simple demo of GeoHeatmap interpolation\n                     *\n                     * @since  11.2.0\n                     */\n                    blur: 1\n                }\n            });\n            return GeoHeatmapSeries;\n        }(MapSeries));\n        addEvent(GeoHeatmapSeries, 'afterDataClassLegendClick', function () {\n            this.isDirtyCanvas = true;\n            this.drawPoints();\n        });\n        extend(GeoHeatmapSeries.prototype, {\n            type: 'geoheatmap',\n            applyJitter: noop,\n            pointClass: GeoHeatmapPoint,\n            pointArrayMap: ['lon', 'lat', 'value'],\n            kdAxisArray: ['lon', 'lat'] // Search k-d-tree by lon/lat values\n        });\n        SeriesRegistry.registerSeriesType('geoheatmap', GeoHeatmapSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `geoheatmap` series. If the [type](#series.map.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.geoheatmap\n         * @excluding allAreas, dataParser, dataURL, dragDrop, findNearestPointBy,\n         *            joinBy, marker, mapData, negativeColor, onPoint, shadow,\n         *            stickyTracking\n         * @product   highmaps\n         * @apioption series.geoheatmap\n         */\n        /**\n         * An array of data points for the series. For the `geoheatmap` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 or 2 values. In this case, the values\n         * correspond to `lon,lat,value`. The `value` refers to the color on the `colorAxis`.\n         *\n         *  ```js\n         *     data: [\n         *         [51.50, -0.12, 7],\n         *         [54.59, -5.93, 4],\n         *         [55.8, -4.25, 3]\n         *     ]\n         *  ```\n         *\n         * 2.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.heatmap.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         lat: 51.50,\n         *         lon: -0.12,\n         *         value: 7,\n         *         name: \"London\"\n         *     }, {\n         *         lat: 54.59,\n         *         lon: -5.93,\n         *         value: 4,\n         *         name: \"Belfast\"\n         *     }]\n         *  ```\n         *\n         * @sample maps/demo/geoheatmap-europe/\n         *         GeoHeatmap Chart with interpolation on Europe map\n         * @sample maps/series-geoheatmap/geoheatmap-equalearth/\n         *         GeoHeatmap Chart on the Equal Earth Projection\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.map.data\n         * @product   highmaps\n         * @apioption series.geoheatmap.data\n         */\n        /**\n         * Individual color for the point. By default the color is either used\n         * to denote the value, or pulled from the global `colors` array.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highmaps\n         * @apioption series.geoheatmap.data.color\n         */\n        /**\n         * The value of the point, resulting in a color controlled by options\n         * as set in the [colorAxis](#colorAxis) configuration.\n         *\n         * @type      {number|null}\n         * @product   highmaps\n         * @apioption series.geoheatmap.data.value\n         */\n        /**\n         * Detailed options for interpolation object.\n         *\n         * @interface Highcharts.InterpolationOptionsObject\n         */ /**\n        *  Enable or disable the interpolation.\n        *\n        * @name Highcharts.InterpolationOptionsObject#enabled\n        * @type {boolean}\n        */ /**\n        * Represents how much blur should be added to the interpolated\n        * image. Works best in the range of 0-1, all higher values\n        * would need a lot more performance of the machine to calculate\n        * more detailed interpolation.\n        *\n        * @name Highcharts.InterpolationOptionsObject#blur\n        * @type {number}\n        */\n        ''; // Adds doclets above to the transpiled file\n\n        return GeoHeatmapSeries;\n    });\n    _registerModule(_modules, 'masters/modules/geoheatmap.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","U","SeriesRegistry","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","MapPoint","seriesTypes","map","pointClass","isNumber","_super","GeoHeatmapPoint","arguments","applyOptions","options","x","point","_a","lat","lon","_b","series","_c","colsize","_d","rowsize","x1","y1","geometry","type","coordinates","H","doc","defined","pick","colorFromPoint","value","colorAxis","rgba","toColor","split","s","parseFloat","parseInt","visible","getContext","canvas","context","clearRect","width","height","createElement","willReadFrequently","A","IU","animObject","stop","noop","MapSeries","addEvent","extend","isObject","merge","normalizeLonValue","Math","floor","GeoHeatmapSeries","_this","isDirtyCanvas","update","getInterpolation","enabled","points","forEach","graphic","destroy","translate","image","isDirty","isDirtyData","interpolation","blur","drawPoints","mapView","chart","seriesOptions","bounds","ctx","image_1","chart_1","topLeft","projectedUnitsToPixels","y","y2","bottomRight","x2","dimensions_1","projection","name","canvasWidth","canvasHeight","pixelData","Uint8ClampedArray","canvasArea","directTouch","i","length","sourceArr","set","scaledPointPos","ceil","blur_1","blurFactor","projectedWidth","projectedHeight","img","ImageData","putImageData","globalCompositeOperation","drawImage","cartesianImageData","getImageData","projectedImg","getProjectedImageData","renderer","globalAnimation","hasRendered","startX_1","Number","attr","startY_1","startWidth_1","startHeight_1","step_1","now","fx","pos","animOptions","userStep_1","step","animator","href","toDataURL","animate","add","group","horizontalShift","verticalShift","projectedPixelData","lambda","rotation","widthFactor","heightFactor","projectedCoords","pixelsToLonLat","projected","cvs2PixelX","cvs2PixelY","redPos","round","data","searchPoint","e","compareX","tooltip","pointer","hasDragged","normalize","chartX","plotLeft","chartY","plotTop","searchKDTree","clientX","defaultOptions","nullColor","pointFormat","borderWidth","stickyTracking","applyJitter","pointArrayMap","kdAxisArray","registerSeriesType"],"mappings":"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"}