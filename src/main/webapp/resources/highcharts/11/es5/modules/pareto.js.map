{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Pareto series type for Highcharts\n *\n * (c) 2010-2024 Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/pareto', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/DerivedComposition.js', [_modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (H, Series, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var noop = H.noop;\n        var addEvent = U.addEvent, defined = U.defined;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Provides methods for auto setting/updating series data based on the based\n         * series data.\n         * @private\n         */\n        var DerivedComposition;\n        (function (DerivedComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            DerivedComposition.hasDerivedData = true;\n            /**\n             * Method to be implemented - inside the method the series has already\n             * access to the base series via m `this.baseSeries` and the bases data is\n             * initialised. It should return data in the format accepted by\n             * `Series.setData()` method\n             * @private\n             */\n            DerivedComposition.setDerivedData = noop;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                var seriesProto = SeriesClass.prototype;\n                seriesProto.addBaseSeriesEvents = addBaseSeriesEvents;\n                seriesProto.addEvents = addEvents;\n                seriesProto.destroy = destroy;\n                seriesProto.init = init;\n                seriesProto.setBaseSeries = setBaseSeries;\n                return SeriesClass;\n            }\n            DerivedComposition.compose = compose;\n            /**\n             * Initialise series\n             * @private\n             */\n            function init() {\n                Series.prototype.init.apply(this, arguments);\n                this.initialised = false;\n                this.baseSeries = null;\n                this.eventRemovers = [];\n                this.addEvents();\n            }\n            DerivedComposition.init = init;\n            /**\n             * Sets base series for the series\n             * @private\n             */\n            function setBaseSeries() {\n                var chart = this.chart, baseSeriesOptions = this.options.baseSeries, baseSeries = (defined(baseSeriesOptions) &&\n                    (chart.series[baseSeriesOptions] ||\n                        chart.get(baseSeriesOptions)));\n                this.baseSeries = baseSeries || null;\n            }\n            DerivedComposition.setBaseSeries = setBaseSeries;\n            /**\n             * Adds events for the series\n             * @private\n             */\n            function addEvents() {\n                var _this = this;\n                this.eventRemovers.push(addEvent(this.chart, 'afterLinkSeries', function () {\n                    _this.setBaseSeries();\n                    if (_this.baseSeries && !_this.initialised) {\n                        _this.setDerivedData();\n                        _this.addBaseSeriesEvents();\n                        _this.initialised = true;\n                    }\n                }));\n            }\n            DerivedComposition.addEvents = addEvents;\n            /**\n             * Adds events to the base series - it required for recalculating the data\n             * in the series if the base series is updated / removed / etc.\n             * @private\n             */\n            function addBaseSeriesEvents() {\n                var _this = this;\n                this.eventRemovers.push(addEvent(this.baseSeries, 'updatedData', function () {\n                    _this.setDerivedData();\n                }), addEvent(this.baseSeries, 'destroy', function () {\n                    _this.baseSeries = null;\n                    _this.initialised = false;\n                }));\n            }\n            DerivedComposition.addBaseSeriesEvents = addBaseSeriesEvents;\n            /**\n             * Destroys the series\n             * @private\n             */\n            function destroy() {\n                this.eventRemovers.forEach(function (remover) {\n                    remover();\n                });\n                Series.prototype.destroy.apply(this, arguments);\n            }\n            DerivedComposition.destroy = destroy;\n        })(DerivedComposition || (DerivedComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DerivedComposition;\n    });\n    _registerModule(_modules, 'Series/ParetoSeries/ParetoSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A pareto diagram is a type of chart that contains both bars and a line\n         * graph, where individual values are represented in descending order by\n         * bars, and the cumulative total is represented by the line.\n         *\n         * @sample {highcharts} highcharts/demo/pareto/\n         *         Pareto diagram\n         *\n         * @extends      plotOptions.line\n         * @since        6.0.0\n         * @product      highcharts\n         * @excluding    allAreas, boostThreshold, borderColor, borderRadius,\n         *               borderWidth, crisp, colorAxis, depth, data, dragDrop,\n         *               edgeColor, edgeWidth, findNearestPointBy, gapSize, gapUnit,\n         *               grouping, groupPadding, groupZPadding, maxPointWidth, keys,\n         *               negativeColor, pointInterval, pointIntervalUnit,\n         *               pointPadding, pointPlacement, pointRange, pointStart,\n         *               pointWidth, shadow, step, softThreshold, stacking,\n         *               threshold, zoneAxis, zones, boostBlending\n         * @requires     modules/pareto\n         * @optionparent plotOptions.pareto\n         */\n        var ParetoSeriesDefaults = {\n            /**\n             * Higher zIndex than column series to draw line above shapes.\n             */\n            zIndex: 3\n        };\n        /**\n         * A `pareto` series. If the [type](#series.pareto.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.pareto\n         * @since     6.0.0\n         * @product   highcharts\n         * @excluding data, dataParser, dataURL, boostThreshold, boostBlending\n         * @requires  modules/pareto\n         * @apioption series.pareto\n         */\n        /**\n         * An integer identifying the index to use for the base series, or a string\n         * representing the id of the series.\n         *\n         * @type      {number|string}\n         * @default   undefined\n         * @apioption series.pareto.baseSeries\n         */\n        /**\n         * An array of data points for the series. For the `pareto` series type,\n         * points are calculated dynamically.\n         *\n         * @type      {Array<Array<number|string>|*>}\n         * @extends   series.column.data\n         * @since     6.0.0\n         * @product   highcharts\n         * @apioption series.pareto.data\n         */\n        ''; // Keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ParetoSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/ParetoSeries/ParetoSeries.js', [_modules['Series/DerivedComposition.js'], _modules['Series/ParetoSeries/ParetoSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (DerivedComposition, ParetoSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var LineSeries = SeriesRegistry.seriesTypes.line;\n        var correctFloat = U.correctFloat, merge = U.merge, extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The pareto series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pareto\n         *\n         * @augments Highcharts.Series\n         */\n        var ParetoSeries = /** @class */ (function (_super) {\n            __extends(ParetoSeries, _super);\n            function ParetoSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Calculate y sum and each percent point.\n             *\n             * @private\n             * @function Highcharts.Series#sumPointsPercents\n             *\n             * @param {Array<number>} yValues\n             * Y values\n             *\n             * @param {Array<number>} xValues\n             * X values\n             *\n             * @param {number} sum\n             * Sum of all y values\n             *\n             * @param {boolean} [isSum]\n             * Declares if calculate sum of all points\n             *\n             * @return {number|Array<number,number>}\n             * Returns sum of points or array of points [x,sum]\n             *\n             * @requires modules/pareto\n             */\n            ParetoSeries.prototype.sumPointsPercents = function (yValues, xValues, sum, isSum) {\n                var percentPoints = [];\n                var i = 0, sumY = 0, sumPercent = 0, percentPoint;\n                for (var _i = 0, yValues_1 = yValues; _i < yValues_1.length; _i++) {\n                    var point = yValues_1[_i];\n                    if (point !== null) {\n                        if (isSum) {\n                            sumY += point;\n                        }\n                        else {\n                            percentPoint = (point / sum) * 100;\n                            percentPoints.push([\n                                xValues[i],\n                                correctFloat(sumPercent + percentPoint)\n                            ]);\n                            sumPercent += percentPoint;\n                        }\n                    }\n                    ++i;\n                }\n                return (isSum ? sumY : percentPoints);\n            };\n            /**\n             * Calculate sum and return percent points.\n             *\n             * @private\n             * @function Highcharts.Series#setDerivedData\n             * @requires modules/pareto\n             */\n            ParetoSeries.prototype.setDerivedData = function () {\n                var xValues = this.baseSeries.xData, yValues = this.baseSeries.yData, sum = this.sumPointsPercents(yValues, xValues, null, true);\n                this.setData(this.sumPointsPercents(yValues, xValues, sum, false), false);\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ParetoSeries.defaultOptions = merge(LineSeries.defaultOptions, ParetoSeriesDefaults);\n            return ParetoSeries;\n        }(LineSeries));\n        extend(ParetoSeries.prototype, {\n            hasDerivedData: DerivedComposition.hasDerivedData\n        });\n        DerivedComposition.compose(ParetoSeries);\n        SeriesRegistry.registerSeriesType('pareto', ParetoSeries);\n        /* *\n         *\n         *  Default export\n         *\n         * */\n\n        return ParetoSeries;\n    });\n    _registerModule(_modules, 'masters/modules/pareto.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","Series","U","DerivedComposition","noop","addEvent","defined","init","prototype","arguments","initialised","baseSeries","eventRemovers","addEvents","setBaseSeries","chart","baseSeriesOptions","options","series","get","_this","push","setDerivedData","addBaseSeriesEvents","destroy","forEach","remover","hasDerivedData","compose","SeriesClass","seriesProto","zIndex","ParetoSeriesDefaults","SeriesRegistry","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","call","TypeError","String","__","constructor","create","LineSeries","seriesTypes","line","correctFloat","merge","extend","ParetoSeries","_super","sumPointsPercents","yValues","xValues","sum","isSum","percentPoint","percentPoints","i","sumY","sumPercent","_i","yValues_1","length","point","xData","yData","setData","defaultOptions","registerSeriesType"],"mappings":"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"}