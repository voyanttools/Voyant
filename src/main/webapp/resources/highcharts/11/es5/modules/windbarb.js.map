{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Wind barb series module\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/windbarb', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationRegistry.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define the available approximation types. The data grouping\n         * approximations takes an array or numbers as the first parameter. In case\n         * of ohlc, four arrays are sent in as four parameters. Each array consists\n         * only of numbers. In case null values belong to the group, the property\n         * .hasNulls will be set to true on the array.\n         *\n         * @product highstock\n         *\n         * @private\n         */\n        var ApproximationRegistry = {\n        // Approximations added programmatically\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ApproximationRegistry;\n    });\n    _registerModule(_modules, 'Series/OnSeriesComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var columnProto = ColumnSeries.prototype;\n        var seriesProto = Series.prototype;\n        var defined = U.defined, pushUnique = U.pushUnique, stableSort = U.stableSort;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var OnSeriesComposition;\n        (function (OnSeriesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'OnSeries')) {\n                    var seriesProto_1 = SeriesClass.prototype;\n                    seriesProto_1.getPlotBox = getPlotBox;\n                    seriesProto_1.translate = translate;\n                }\n                return SeriesClass;\n            }\n            OnSeriesComposition.compose = compose;\n            /**\n             * Override getPlotBox. If the onSeries option is valid, return the plot box\n             * of the onSeries, otherwise proceed as usual.\n             *\n             * @private\n             */\n            function getPlotBox(name) {\n                return seriesProto.getPlotBox.call((this.options.onSeries &&\n                    this.chart.get(this.options.onSeries)) || this, name);\n            }\n            OnSeriesComposition.getPlotBox = getPlotBox;\n            /**\n             * Extend the translate method by placing the point on the related series\n             *\n             * @private\n             */\n            function translate() {\n                var _a, _b;\n                columnProto.translate.apply(this);\n                var series = this, options = series.options, chart = series.chart, points = series.points, optionsOnSeries = options.onSeries, onSeries = (optionsOnSeries &&\n                    chart.get(optionsOnSeries)), step = onSeries && onSeries.options.step, onData = (onSeries && onSeries.points), inverted = chart.inverted, xAxis = series.xAxis, yAxis = series.yAxis;\n                var cursor = points.length - 1, point, lastPoint, onKey = options.onKey || 'y', i = onData && onData.length, xOffset = 0, leftPoint, lastX, rightPoint, currentDataGrouping, distanceRatio;\n                // Relate to a master series\n                if (onSeries && onSeries.visible && i) {\n                    xOffset = (onSeries.pointXOffset || 0) + (onSeries.barW || 0) / 2;\n                    currentDataGrouping = onSeries.currentDataGrouping;\n                    lastX = (onData[i - 1].x +\n                        (currentDataGrouping ? currentDataGrouping.totalRange : 0)); // #2374\n                    // sort the data points\n                    stableSort(points, function (a, b) { return (a.x - b.x); });\n                    onKey = 'plot' + onKey[0].toUpperCase() + onKey.substr(1);\n                    var _loop_1 = function () {\n                        leftPoint = onData[i];\n                        point = points[cursor];\n                        point.y = leftPoint.y;\n                        if (leftPoint.x <= point.x &&\n                            typeof leftPoint[onKey] !== 'undefined') {\n                            if (point.x <= lastX) { // #803\n                                point.plotY = leftPoint[onKey];\n                                // Interpolate between points, #666\n                                if (leftPoint.x < point.x &&\n                                    !step) {\n                                    rightPoint = onData[i + 1];\n                                    if (rightPoint &&\n                                        typeof rightPoint[onKey] !== 'undefined') {\n                                        // If the series is spline, calculate Y of the\n                                        // point on the bezier line. #19264\n                                        if (defined(point.plotX) &&\n                                            onSeries.is('spline')) {\n                                            leftPoint = leftPoint;\n                                            rightPoint = rightPoint;\n                                            var p0_1 = [\n                                                leftPoint.plotX || 0,\n                                                leftPoint.plotY || 0\n                                            ], p3_1 = [\n                                                rightPoint.plotX || 0,\n                                                rightPoint.plotY || 0\n                                            ], p1_1 = (((_a = leftPoint.controlPoints) === null || _a === void 0 ? void 0 : _a.high) ||\n                                                p0_1), p2_1 = (((_b = rightPoint.controlPoints) === null || _b === void 0 ? void 0 : _b.low) ||\n                                                p3_1), pixelThreshold = 0.25, maxIterations = 100, calculateCoord = function (t, key) { return (\n                                            // The parametric formula for the\n                                            // cubic Bezier curve.\n                                            Math.pow(1 - t, 3) * p0_1[key] +\n                                                3 * (1 - t) * (1 - t) * t *\n                                                    p1_1[key] + 3 * (1 - t) * t * t *\n                                                p2_1[key] + t * t * t * p3_1[key]); };\n                                            var tMin = 0, tMax = 1, t = void 0;\n                                            // Find `t` of the parametric function of\n                                            // the bezier curve for the given `plotX`.\n                                            for (var i_1 = 0; i_1 < maxIterations; i_1++) {\n                                                var tMid = (tMin + tMax) / 2;\n                                                var xMid = calculateCoord(tMid, 0);\n                                                if (xMid === null) {\n                                                    break;\n                                                }\n                                                if (Math.abs(xMid - point.plotX) < pixelThreshold) {\n                                                    t = tMid;\n                                                    break;\n                                                }\n                                                if (xMid < point.plotX) {\n                                                    tMin = tMid;\n                                                }\n                                                else {\n                                                    tMax = tMid;\n                                                }\n                                            }\n                                            if (defined(t)) {\n                                                point.plotY =\n                                                    calculateCoord(t, 1);\n                                                point.y =\n                                                    yAxis.toValue(point.plotY, true);\n                                            }\n                                        }\n                                        else {\n                                            // The distance ratio, between 0 and 1\n                                            distanceRatio =\n                                                (point.x - leftPoint.x) /\n                                                    (rightPoint.x - leftPoint.x);\n                                            point.plotY +=\n                                                distanceRatio *\n                                                    // The plotY distance\n                                                    (rightPoint[onKey] - leftPoint[onKey]);\n                                            point.y +=\n                                                distanceRatio *\n                                                    (rightPoint.y - leftPoint.y);\n                                        }\n                                    }\n                                }\n                            }\n                            cursor--;\n                            i++; // Check again for points in the same x position\n                            if (cursor < 0) {\n                                return \"break\";\n                            }\n                        }\n                    };\n                    while (i-- && points[cursor]) {\n                        var state_1 = _loop_1();\n                        if (state_1 === \"break\")\n                            break;\n                    }\n                }\n                // Add plotY position and handle stacking\n                points.forEach(function (point, i) {\n                    var stackIndex;\n                    point.plotX += xOffset; // #2049\n                    // Undefined plotY means the point is either on axis, outside series\n                    // range or hidden series. If the series is outside the range of the\n                    // x axis it should fall through with an undefined plotY, but then\n                    // we must remove the shapeArgs (#847). For inverted charts, we need\n                    // to calculate position anyway, because series.invertGroups is not\n                    // defined\n                    if (typeof point.plotY === 'undefined' || inverted) {\n                        if (point.plotX >= 0 &&\n                            point.plotX <= xAxis.len) {\n                            // We're inside xAxis range\n                            if (inverted) {\n                                point.plotY = xAxis.translate(point.x, 0, 1, 0, 1);\n                                point.plotX = defined(point.y) ?\n                                    yAxis.translate(point.y, 0, 0, 0, 1) :\n                                    0;\n                            }\n                            else {\n                                point.plotY = (xAxis.opposite ? 0 : series.yAxis.len) +\n                                    xAxis.offset; // For the windbarb demo\n                            }\n                        }\n                        else {\n                            point.shapeArgs = {}; // 847\n                        }\n                    }\n                    // If multiple flags appear at the same x, order them into a stack\n                    lastPoint = points[i - 1];\n                    if (lastPoint && lastPoint.plotX === point.plotX) {\n                        if (typeof lastPoint.stackIndex === 'undefined') {\n                            lastPoint.stackIndex = 0;\n                        }\n                        stackIndex = lastPoint.stackIndex + 1;\n                    }\n                    point.stackIndex = stackIndex; // #3639\n                });\n                this.onSeries = onSeries;\n            }\n            OnSeriesComposition.translate = translate;\n        })(OnSeriesComposition || (OnSeriesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OnSeriesComposition;\n    });\n    _registerModule(_modules, 'Series/Windbarb/WindbarbPoint.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Utilities.js']], function (ColumnSeries, U) {\n        /* *\n         *\n         *  Wind barb series module\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var WindbarbPoint = /** @class */ (function (_super) {\n            __extends(WindbarbPoint, _super);\n            function WindbarbPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            WindbarbPoint.prototype.isValid = function () {\n                return isNumber(this.value) && this.value >= 0;\n            };\n            return WindbarbPoint;\n        }(ColumnSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return WindbarbPoint;\n    });\n    _registerModule(_modules, 'Series/Windbarb/WindbarbSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Wind barb series module\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Wind barbs are a convenient way to represent wind speed and direction in\n         * one graphical form. Wind direction is given by the stem direction, and\n         * wind speed by the number and shape of barbs.\n         *\n         * @sample {highcharts|highstock} highcharts/demo/windbarb-series/\n         *         Wind barb series\n         *\n         * @extends      plotOptions.column\n         * @excluding    boostThreshold, marker, connectEnds, connectNulls,\n         *               cropThreshold, dashStyle, dragDrop, gapSize, gapUnit,\n         *               linecap, shadow, stacking, step, boostBlending\n         * @since        6.0.0\n         * @product      highcharts highstock\n         * @requires     modules/windbarb\n         * @optionparent plotOptions.windbarb\n         */\n        var WindbarbSeriesDefaults = {\n            /**\n             * Data grouping options for the wind barbs. In Highcharts, this\n             * requires the `modules/datagrouping.js` module to be loaded. In\n             * Highcharts Stock, data grouping is included.\n             *\n             * @sample  highcharts/plotoptions/windbarb-datagrouping\n             *          Wind barb with data grouping\n             *\n             * @since   7.1.0\n             * @product highcharts highstock\n             */\n            dataGrouping: {\n                /**\n                 * Whether to enable data grouping.\n                 *\n                 * @product highcharts highstock\n                 */\n                enabled: true,\n                /**\n                 * Approximation function for the data grouping. The default\n                 * returns an average of wind speed and a vector average direction\n                 * weighted by wind speed.\n                 *\n                 * @product highcharts highstock\n                 *\n                 * @type {string|Function}\n                 */\n                approximation: 'windbarb',\n                /**\n                 * The approximate data group width.\n                 *\n                 * @product highcharts highstock\n                 */\n                groupPixelWidth: 30\n            },\n            /**\n             * The line width of the wind barb symbols.\n             */\n            lineWidth: 2,\n            /**\n             * The id of another series in the chart that the wind barbs are\n             * projected on. When `null`, the wind symbols are drawn on the X axis,\n             * but offset up or down by the `yOffset` setting.\n             *\n             * @sample {highcharts|highstock} highcharts/plotoptions/windbarb-onseries\n             *         Projected on area series\n             *\n             * @type {string|null}\n             */\n            onSeries: null,\n            states: {\n                hover: {\n                    lineWidthPlus: 0\n                }\n            },\n            tooltip: {\n                /**\n                 * The default point format for the wind barb tooltip. Note the\n                 * `point.beaufort` property that refers to the Beaufort wind scale.\n                 * The names can be internationalized by modifying\n                 * `Highcharts.seriesTypes.windbarb.prototype.beaufortNames`.\n                 */\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.value}</b> ({point.beaufort})<br/>'\n            },\n            /**\n             * Pixel length of the stems.\n             */\n            vectorLength: 20,\n            /**\n             * @default   value\n             */\n            colorKey: 'value',\n            /**\n             * Vertical offset from the cartesian position, in pixels. The default\n             * value makes sure the symbols don't overlap the X axis when `onSeries`\n             * is `null`, and that they don't overlap the linked series when\n             * `onSeries` is given.\n             */\n            yOffset: -20,\n            /**\n             * Horizontal offset from the cartesian position, in pixels. When the\n             * chart is inverted, this option allows translation like\n             * [yOffset](#plotOptions.windbarb.yOffset) in non inverted charts.\n             *\n             * @since 6.1.0\n             */\n            xOffset: 0\n        };\n        /**\n         * A `windbarb` series. If the [type](#series.windbarb.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.windbarb\n         * @excluding dataParser, dataURL, boostThreshold, boostBlending\n         * @product   highcharts highstock\n         * @requires  modules/windbarb\n         * @apioption series.windbarb\n         */\n        /**\n         * An array of data points for the series. For the `windbarb` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 3 values. In this case, the values correspond to\n         *    `x,value,direction`. If the first value is a string, it is applied as the\n         *    name of the point, and the `x` value is inferred.\n         *    ```js\n         *       data: [\n         *           [Date.UTC(2017, 0, 1, 0), 3.3, 90],\n         *           [Date.UTC(2017, 0, 1, 1), 12.1, 180],\n         *           [Date.UTC(2017, 0, 1, 2), 11.1, 270]\n         *       ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.area.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *       data: [{\n         *           x: Date.UTC(2017, 0, 1, 0),\n         *           value: 12.1,\n         *           direction: 90\n         *       }, {\n         *           x: Date.UTC(2017, 0, 1, 1),\n         *           value: 11.1,\n         *           direction: 270\n         *       }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<(number|string),number,number>|*>}\n         * @extends   series.line.data\n         * @product   highcharts highstock\n         * @apioption series.windbarb.data\n         */\n        /**\n         * The wind speed in meters per second.\n         *\n         * @type      {number|null}\n         * @product   highcharts highstock\n         * @apioption series.windbarb.data.value\n         */\n        /**\n         * The wind direction in degrees, where 0 is north (pointing towards south).\n         *\n         * @type      {number}\n         * @product   highcharts highstock\n         * @apioption series.windbarb.data.direction\n         */\n        ''; // Adds doclets above to transpiled file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return WindbarbSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Windbarb/WindbarbSeries.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Globals.js'], _modules['Series/OnSeriesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Series/Windbarb/WindbarbPoint.js'], _modules['Series/Windbarb/WindbarbSeriesDefaults.js']], function (A, ApproximationRegistry, H, OnSeriesComposition, SeriesRegistry, U, WindbarbPoint, WindbarbSeriesDefaults) {\n        /* *\n         *\n         *  Wind barb series module\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject;\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var extend = U.extend, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Once off, register the windbarb approximation for data grouping. This can\n         * be called anywhere (not necessarily in the translate function), but must\n         * happen after the data grouping module is loaded and before the\n         * wind barb series uses it.\n         * @private\n         */\n        function registerApproximation() {\n            if (!ApproximationRegistry.windbarb) {\n                ApproximationRegistry.windbarb = function (values, directions) {\n                    var vectorX = 0, vectorY = 0;\n                    for (var i = 0, iEnd = values.length; i < iEnd; i++) {\n                        vectorX += values[i] * Math.cos(directions[i] * H.deg2rad);\n                        vectorY += values[i] * Math.sin(directions[i] * H.deg2rad);\n                    }\n                    return [\n                        // Wind speed\n                        values.reduce(function (sum, value) { return (sum + value); }, 0) / values.length,\n                        // Wind direction\n                        Math.atan2(vectorY, vectorX) / H.deg2rad\n                    ];\n                };\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.windbarb\n         *\n         * @augments Highcharts.Series\n         */\n        var WindbarbSeries = /** @class */ (function (_super) {\n            __extends(WindbarbSeries, _super);\n            function WindbarbSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            WindbarbSeries.prototype.init = function (chart, options) {\n                _super.prototype.init.call(this, chart, options);\n            };\n            // Get presentational attributes.\n            WindbarbSeries.prototype.pointAttribs = function (point, state) {\n                var options = this.options;\n                var stroke = point.color || this.color, strokeWidth = this.options.lineWidth;\n                if (state) {\n                    stroke = options.states[state].color || stroke;\n                    strokeWidth =\n                        (options.states[state].lineWidth || strokeWidth) +\n                            (options.states[state].lineWidthPlus || 0);\n                }\n                return {\n                    'stroke': stroke,\n                    'stroke-width': strokeWidth\n                };\n            };\n            // Create a single wind arrow. It is later rotated around the zero\n            // centerpoint.\n            WindbarbSeries.prototype.windArrow = function (point) {\n                var level = point.beaufortLevel, u = this.options.vectorLength / 20;\n                var knots = point.value * 1.943844, barbs, pos = -10;\n                if (point.isNull) {\n                    return [];\n                }\n                if (level === 0) {\n                    return this.chart.renderer.symbols.circle(-10 * u, -10 * u, 20 * u, 20 * u);\n                }\n                // The stem and the arrow head\n                var path = [\n                    ['M', 0, 7 * u], // Base of arrow\n                    ['L', -1.5 * u, 7 * u],\n                    ['L', 0, 10 * u],\n                    ['L', 1.5 * u, 7 * u],\n                    ['L', 0, 7 * u],\n                    ['L', 0, -10 * u] // Top\n                ];\n                // For each full 50 knots, add a pennant\n                barbs = (knots - knots % 50) / 50; // Pennants\n                if (barbs > 0) {\n                    while (barbs--) {\n                        path.push(pos === -10 ? ['L', 0, pos * u] : ['M', 0, pos * u], ['L', 5 * u, pos * u + 2], ['L', 0, pos * u + 4]);\n                        // Substract from the rest and move position for next\n                        knots -= 50;\n                        pos += 7;\n                    }\n                }\n                // For each full 10 knots, add a full barb\n                barbs = (knots - knots % 10) / 10;\n                if (barbs > 0) {\n                    while (barbs--) {\n                        path.push(pos === -10 ? ['L', 0, pos * u] : ['M', 0, pos * u], ['L', 7 * u, pos * u]);\n                        knots -= 10;\n                        pos += 3;\n                    }\n                }\n                // For each full 5 knots, add a half barb\n                barbs = (knots - knots % 5) / 5; // Half barbs\n                if (barbs > 0) {\n                    while (barbs--) {\n                        path.push(pos === -10 ? ['L', 0, pos * u] : ['M', 0, pos * u], ['L', 4 * u, pos * u]);\n                        knots -= 5;\n                        pos += 3;\n                    }\n                }\n                return path;\n            };\n            WindbarbSeries.prototype.drawPoints = function () {\n                var chart = this.chart, yAxis = this.yAxis, inverted = chart.inverted, shapeOffset = this.options.vectorLength / 2;\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    var plotX = point.plotX, plotY = point.plotY;\n                    // Check if it's inside the plot area, but only for the X\n                    // dimension.\n                    if (this.options.clip === false ||\n                        chart.isInsidePlot(plotX, 0)) {\n                        // Create the graphic the first time\n                        if (!point.graphic) {\n                            point.graphic = this.chart.renderer\n                                .path()\n                                .add(this.markerGroup)\n                                .addClass('highcharts-point ' +\n                                'highcharts-color-' +\n                                pick(point.colorIndex, point.series.colorIndex));\n                        }\n                        // Position the graphic\n                        point.graphic\n                            .attr({\n                            d: this.windArrow(point),\n                            translateX: plotX + this.options.xOffset,\n                            translateY: plotY + this.options.yOffset,\n                            rotation: point.direction\n                        });\n                        if (!this.chart.styledMode) {\n                            point.graphic\n                                .attr(this.pointAttribs(point));\n                        }\n                    }\n                    else if (point.graphic) {\n                        point.graphic = point.graphic.destroy();\n                    }\n                    // Set the tooltip anchor position\n                    point.tooltipPos = [\n                        plotX + this.options.xOffset +\n                            (inverted && !this.onSeries ? shapeOffset : 0),\n                        plotY + this.options.yOffset -\n                            (inverted ?\n                                0 :\n                                shapeOffset + yAxis.pos - chart.plotTop)\n                    ]; // #6327\n                }\n            };\n            // Fade in the arrows on initializing series.\n            WindbarbSeries.prototype.animate = function (init) {\n                if (init) {\n                    this.markerGroup.attr({\n                        opacity: 0.01\n                    });\n                }\n                else {\n                    this.markerGroup.animate({\n                        opacity: 1\n                    }, animObject(this.options.animation));\n                }\n            };\n            WindbarbSeries.prototype.markerAttribs = function () {\n                return {};\n            };\n            WindbarbSeries.prototype.getExtremes = function () {\n                return {};\n            };\n            WindbarbSeries.prototype.shouldShowTooltip = function (plotX, plotY, options) {\n                if (options === void 0) { options = {}; }\n                options.ignoreX = this.chart.inverted;\n                options.ignoreY = !options.ignoreX;\n                return _super.prototype.shouldShowTooltip.call(this, plotX, plotY, options);\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            WindbarbSeries.defaultOptions = merge(ColumnSeries.defaultOptions, WindbarbSeriesDefaults);\n            return WindbarbSeries;\n        }(ColumnSeries));\n        OnSeriesComposition.compose(WindbarbSeries);\n        extend(WindbarbSeries.prototype, {\n            beaufortFloor: [\n                0, 0.3, 1.6, 3.4, 5.5, 8.0, 10.8, 13.9, 17.2, 20.8,\n                24.5, 28.5, 32.7\n            ], // @todo dictionary with names?\n            beaufortName: [\n                'Calm', 'Light air', 'Light breeze',\n                'Gentle breeze', 'Moderate breeze', 'Fresh breeze',\n                'Strong breeze', 'Near gale', 'Gale', 'Strong gale', 'Storm',\n                'Violent storm', 'Hurricane'\n            ],\n            invertible: false,\n            parallelArrays: ['x', 'value', 'direction'],\n            pointArrayMap: ['value', 'direction'],\n            pointClass: WindbarbPoint,\n            trackerGroups: ['markerGroup'],\n            translate: function () {\n                var beaufortFloor = this.beaufortFloor, beaufortName = this.beaufortName;\n                OnSeriesComposition.translate.call(this);\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    var level = 0;\n                    // Find the beaufort level (zero based)\n                    for (; level < beaufortFloor.length; level++) {\n                        if (beaufortFloor[level] > point.value) {\n                            break;\n                        }\n                    }\n                    point.beaufortLevel = level - 1;\n                    point.beaufort = beaufortName[level - 1];\n                }\n            }\n        });\n        SeriesRegistry.registerSeriesType('windbarb', WindbarbSeries);\n        registerApproximation();\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return WindbarbSeries;\n    });\n    _registerModule(_modules, 'masters/modules/windbarb.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","ColumnSeries","H","Series","U","OnSeriesComposition","composed","columnProto","prototype","seriesProto","defined","pushUnique","stableSort","getPlotBox","name","call","options","onSeries","chart","get","translate","_a","_b","point","lastPoint","leftPoint","lastX","rightPoint","currentDataGrouping","distanceRatio","series","points","optionsOnSeries","step","onData","inverted","xAxis","yAxis","cursor","length","onKey","i","xOffset","visible","pointXOffset","barW","x","totalRange","a","b","toUpperCase","substr","state_1","_loop_1","y","plotY","plotX","is","p0_1","p3_1","p1_1","controlPoints","high","p2_1","low","calculateCoord","t","key","Math","pow","tMin","tMax","i_1","tMid","xMid","abs","toValue","forEach","stackIndex","len","opposite","offset","shapeArgs","compose","SeriesClass","seriesProto_1","extendStatics","__extends","d","Object","setPrototypeOf","__proto__","Array","p","TypeError","String","__","constructor","create","isNumber","_super","WindbarbPoint","arguments","isValid","value","pointClass","dataGrouping","enabled","approximation","groupPixelWidth","lineWidth","states","hover","lineWidthPlus","tooltip","pointFormat","vectorLength","colorKey","yOffset","A","ApproximationRegistry","SeriesRegistry","WindbarbSeriesDefaults","animObject","seriesTypes","column","extend","merge","pick","WindbarbSeries","init","pointAttribs","state","stroke","color","strokeWidth","windArrow","barbs","level","beaufortLevel","u","knots","pos","isNull","renderer","symbols","circle","push","drawPoints","shapeOffset","_i","clip","isInsidePlot","graphic","add","markerGroup","addClass","colorIndex","attr","translateX","translateY","rotation","direction","styledMode","destroy","tooltipPos","plotTop","animate","opacity","animation","markerAttribs","getExtremes","shouldShowTooltip","ignoreX","ignoreY","defaultOptions","beaufortFloor","beaufortName","invertible","parallelArrays","pointArrayMap","trackerGroups","beaufort","registerSeriesType","windbarb","values","directions","vectorX","vectorY","iEnd","cos","deg2rad","sin","reduce","sum","atan2"],"mappings":"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"}