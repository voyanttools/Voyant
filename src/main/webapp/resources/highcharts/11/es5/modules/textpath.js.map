{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * (c) 2009-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/textpath-support', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/TextPath.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  Highcharts module with textPath functionality.\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var deg2rad = H.deg2rad;\n        var addEvent = U.addEvent, merge = U.merge, uniqueKey = U.uniqueKey, defined = U.defined, extend = U.extend;\n        /**\n         * Set a text path for a `text` or `label` element, allowing the text to\n         * flow along a path.\n         *\n         * In order to unset the path for an existing element, call `setTextPath`\n         * with `{ enabled: false }` as the second argument.\n         *\n         * Text path support is not bundled into `highcharts.js`, and requires the\n         * `modules/textpath.js` file. However, it is included in the script files of\n         * those series types that use it by default\n         *\n         * @sample highcharts/members/renderer-textpath/ Text path demonstrated\n         *\n         * @function Highcharts.SVGElement#setTextPath\n         *\n         * @param {Highcharts.SVGElement|undefined} path\n         *        Path to follow. If undefined, it allows changing options for the\n         *        existing path.\n         *\n         * @param {Highcharts.DataLabelsTextPathOptionsObject} textPathOptions\n         *        Options.\n         *\n         * @return {Highcharts.SVGElement} Returns the SVGElement for chaining.\n         */\n        function setTextPath(path, textPathOptions) {\n            var _this = this;\n            // Defaults\n            textPathOptions = merge(true, {\n                enabled: true,\n                attributes: {\n                    dy: -5,\n                    startOffset: '50%',\n                    textAnchor: 'middle'\n                }\n            }, textPathOptions);\n            var url = this.renderer.url, textWrapper = this.text || this, textPath = textWrapper.textPath, attributes = textPathOptions.attributes, enabled = textPathOptions.enabled;\n            path = path || (textPath && textPath.path);\n            // Remove previously added event\n            if (textPath) {\n                textPath.undo();\n            }\n            if (path && enabled) {\n                var undo = addEvent(textWrapper, 'afterModifyTree', function (e) {\n                    if (path && enabled) {\n                        // Set ID for the path\n                        var textPathId = path.attr('id');\n                        if (!textPathId) {\n                            path.attr('id', textPathId = uniqueKey());\n                        }\n                        // Set attributes for the <text>\n                        var textAttribs = {\n                            // `dx`/`dy` options must by set on <text> (parent), the\n                            // rest should be set on <textPath>\n                            x: 0,\n                            y: 0\n                        };\n                        if (defined(attributes.dx)) {\n                            textAttribs.dx = attributes.dx;\n                            delete attributes.dx;\n                        }\n                        if (defined(attributes.dy)) {\n                            textAttribs.dy = attributes.dy;\n                            delete attributes.dy;\n                        }\n                        textWrapper.attr(textAttribs);\n                        // Handle label properties\n                        _this.attr({ transform: '' });\n                        if (_this.box) {\n                            _this.box = _this.box.destroy();\n                        }\n                        // Wrap the nodes in a textPath\n                        var children = e.nodes.slice(0);\n                        e.nodes.length = 0;\n                        e.nodes[0] = {\n                            tagName: 'textPath',\n                            attributes: extend(attributes, {\n                                'text-anchor': attributes.textAnchor,\n                                href: \"\".concat(url, \"#\").concat(textPathId)\n                            }),\n                            children: children\n                        };\n                    }\n                });\n                // Set the reference\n                textWrapper.textPath = { path: path, undo: undo };\n            }\n            else {\n                textWrapper.attr({ dx: 0, dy: 0 });\n                delete textWrapper.textPath;\n            }\n            if (this.added) {\n                // Rebuild text after added\n                textWrapper.textCache = '';\n                this.renderer.buildText(textWrapper);\n            }\n            return this;\n        }\n        /**\n         * Attach a polygon to a bounding box if the element contains a textPath.\n         *\n         * @function Highcharts.SVGElement#setPolygon\n         *\n         * @param {any} event\n         *        An event containing a bounding box object\n         *\n         * @return {Highcharts.BBoxObject} Returns the bounding box object.\n         */\n        function setPolygon(event) {\n            var _a;\n            var bBox = event.bBox, tp = (_a = this.element) === null || _a === void 0 ? void 0 : _a.querySelector('textPath');\n            if (tp) {\n                var polygon = [], _b = this.renderer.fontMetrics(this.element), b_1 = _b.b, h = _b.h, descender_1 = h - b_1, lineCleanerRegex = new RegExp('(<tspan>|' +\n                    '<tspan(?!\\\\sclass=\"highcharts-br\")[^>]*>|' +\n                    '<\\\\/tspan>)', 'g'), lines = tp\n                    .innerHTML\n                    .replace(lineCleanerRegex, '')\n                    .split(/<tspan class=\"highcharts-br\"[^>]*>/), numOfLines = lines.length;\n                // Calculate top and bottom coordinates for\n                // either the start or the end of a single\n                // character, and append it to the polygon.\n                var appendTopAndBottom = function (charIndex, positionOfChar) {\n                    var x = positionOfChar.x, y = positionOfChar.y, rotation = (tp.getRotationOfChar(charIndex) - 90) * deg2rad, cosRot = Math.cos(rotation), sinRot = Math.sin(rotation);\n                    return [\n                        [\n                            x - descender_1 * cosRot,\n                            y - descender_1 * sinRot\n                        ],\n                        [\n                            x + b_1 * cosRot,\n                            y + b_1 * sinRot\n                        ]\n                    ];\n                };\n                for (var i = 0, lineIndex = 0; lineIndex < numOfLines; lineIndex++) {\n                    var line = lines[lineIndex], lineLen = line.length;\n                    for (var lineCharIndex = 0; lineCharIndex < lineLen; lineCharIndex += 5) {\n                        try {\n                            var srcCharIndex = (i +\n                                lineCharIndex +\n                                lineIndex), _c = appendTopAndBottom(srcCharIndex, tp.getStartPositionOfChar(srcCharIndex)), lower = _c[0], upper = _c[1];\n                            if (lineCharIndex === 0) {\n                                polygon.push(upper);\n                                polygon.push(lower);\n                            }\n                            else {\n                                if (lineIndex === 0) {\n                                    polygon.unshift(upper);\n                                }\n                                if (lineIndex === numOfLines - 1) {\n                                    polygon.push(lower);\n                                }\n                            }\n                        }\n                        catch (e) {\n                            // Safari fails on getStartPositionOfChar even if the\n                            // character is within the `textContent.length`\n                            break;\n                        }\n                    }\n                    i += lineLen - 1;\n                    try {\n                        var srcCharIndex = i + lineIndex, charPos = tp.getEndPositionOfChar(srcCharIndex), _d = appendTopAndBottom(srcCharIndex, charPos), lower = _d[0], upper = _d[1];\n                        polygon.unshift(upper);\n                        polygon.unshift(lower);\n                    }\n                    catch (e) {\n                        // Safari fails on getStartPositionOfChar even if the character\n                        // is within the `textContent.length`\n                        break;\n                    }\n                }\n                // Close it\n                if (polygon.length) {\n                    polygon.push(polygon[0].slice());\n                }\n                bBox.polygon = polygon;\n            }\n            return bBox;\n        }\n        /**\n         * Draw text along a textPath for a dataLabel.\n         *\n         * @function Highcharts.SVGElement#setTextPath\n         *\n         * @param {any} event\n         *        An event containing label options\n         *\n         * @return {void}\n         */\n        function drawTextPath(event) {\n            var _a;\n            var labelOptions = event.labelOptions, point = event.point, textPathOptions = (labelOptions[point.formatPrefix + 'TextPath'] ||\n                labelOptions.textPath);\n            if (textPathOptions && !labelOptions.useHTML) {\n                this.setTextPath(((_a = point.getDataLabelPath) === null || _a === void 0 ? void 0 : _a.call(point, this)) || point.graphic, textPathOptions);\n                if (point.dataLabelPath &&\n                    !textPathOptions.enabled) {\n                    // Clean the DOM\n                    point.dataLabelPath = (point.dataLabelPath.destroy());\n                }\n            }\n        }\n        function compose(SVGElementClass) {\n            addEvent(SVGElementClass, 'afterGetBBox', setPolygon);\n            addEvent(SVGElementClass, 'beforeAddingDataLabel', drawTextPath);\n            var svgElementProto = SVGElementClass.prototype;\n            if (!svgElementProto.setTextPath) {\n                svgElementProto.setTextPath = setTextPath;\n            }\n        }\n        var TextPath = {\n            compose: compose\n        };\n\n        return TextPath;\n    });\n    _registerModule(_modules, 'masters/modules/textpath.src.js', [_modules['Core/Globals.js'], _modules['Extensions/TextPath.js']], function (Highcharts, TextPath) {\n\n        var G = Highcharts;\n        G.TextPath = TextPath;\n        G.TextPath.compose(G.SVGElement);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","U","deg2rad","addEvent","merge","uniqueKey","defined","extend","setTextPath","textPathOptions","_this","enabled","attributes","dy","startOffset","textAnchor","url","renderer","textWrapper","text","textPath","undo","e","textPathId","attr","textAttribs","x","y","dx","transform","box","destroy","children","nodes","slice","length","tagName","href","concat","added","textCache","buildText","setPolygon","event","_a","bBox","tp","element","querySelector","polygon","_b","fontMetrics","b_1","b","descender_1","h","lineCleanerRegex","RegExp","lines","innerHTML","replace","split","numOfLines","appendTopAndBottom","charIndex","positionOfChar","rotation","getRotationOfChar","cosRot","Math","cos","sinRot","sin","i","lineIndex","lineLen","line","lineCharIndex","srcCharIndex","_c","getStartPositionOfChar","lower","upper","push","unshift","charPos","getEndPositionOfChar","_d","drawTextPath","labelOptions","point","formatPrefix","useHTML","getDataLabelPath","call","graphic","dataLabelPath","compose","SVGElementClass","svgElementProto","prototype","TextPath","G","SVGElement"],"mappings":"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"}