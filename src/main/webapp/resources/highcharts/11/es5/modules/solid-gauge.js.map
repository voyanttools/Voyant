{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Solid angular gauge module\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/solid-gauge', ['highcharts', 'highcharts/highcharts-more'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisLike.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var merge = U.merge;\n        /* *\n         *\n         *  Namespace\n         *\n         * */\n        var ColorAxisLike;\n        (function (ColorAxisLike) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize defined data classes.\n             * @private\n             */\n            function initDataClasses(userOptions) {\n                var axis = this, chart = axis.chart, legendItem = axis.legendItem = axis.legendItem || {}, options = axis.options, userDataClasses = userOptions.dataClasses || [];\n                var dataClass, dataClasses, colorCount = chart.options.chart.colorCount, colorCounter = 0, colors;\n                axis.dataClasses = dataClasses = [];\n                legendItem.labels = [];\n                for (var i = 0, iEnd = userDataClasses.length; i < iEnd; ++i) {\n                    dataClass = userDataClasses[i];\n                    dataClass = merge(dataClass);\n                    dataClasses.push(dataClass);\n                    if (!chart.styledMode && dataClass.color) {\n                        continue;\n                    }\n                    if (options.dataClassColor === 'category') {\n                        if (!chart.styledMode) {\n                            colors = chart.options.colors || [];\n                            colorCount = colors.length;\n                            dataClass.color = colors[colorCounter];\n                        }\n                        dataClass.colorIndex = colorCounter;\n                        // Loop back to zero\n                        colorCounter++;\n                        if (colorCounter === colorCount) {\n                            colorCounter = 0;\n                        }\n                    }\n                    else {\n                        dataClass.color = color(options.minColor).tweenTo(color(options.maxColor), iEnd < 2 ? 0.5 : i / (iEnd - 1) // #3219\n                        );\n                    }\n                }\n            }\n            ColorAxisLike.initDataClasses = initDataClasses;\n            /**\n             * Create initial color stops.\n             * @private\n             */\n            function initStops() {\n                var axis = this, options = axis.options, stops = axis.stops = options.stops || [\n                    [0, options.minColor || ''],\n                    [1, options.maxColor || '']\n                ];\n                for (var i = 0, iEnd = stops.length; i < iEnd; ++i) {\n                    stops[i].color = color(stops[i][1]);\n                }\n            }\n            ColorAxisLike.initStops = initStops;\n            /**\n             * Normalize logarithmic values.\n             * @private\n             */\n            function normalizedValue(value) {\n                var axis = this, max = axis.max || 0, min = axis.min || 0;\n                if (axis.logarithmic) {\n                    value = axis.logarithmic.log2lin(value);\n                }\n                return 1 - ((max - value) /\n                    ((max - min) || 1));\n            }\n            ColorAxisLike.normalizedValue = normalizedValue;\n            /**\n             * Translate from a value to a color.\n             * @private\n             */\n            function toColor(value, point) {\n                var axis = this;\n                var dataClasses = axis.dataClasses;\n                var stops = axis.stops;\n                var pos, from, to, color, dataClass, i;\n                if (dataClasses) {\n                    i = dataClasses.length;\n                    while (i--) {\n                        dataClass = dataClasses[i];\n                        from = dataClass.from;\n                        to = dataClass.to;\n                        if ((typeof from === 'undefined' || value >= from) &&\n                            (typeof to === 'undefined' || value <= to)) {\n                            color = dataClass.color;\n                            if (point) {\n                                point.dataClass = i;\n                                point.colorIndex = dataClass.colorIndex;\n                            }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    pos = axis.normalizedValue(value);\n                    i = stops.length;\n                    while (i--) {\n                        if (pos > stops[i][0]) {\n                            break;\n                        }\n                    }\n                    from = stops[i] || stops[i + 1];\n                    to = stops[i + 1] || from;\n                    // The position within the gradient\n                    pos = 1 - (to[0] - pos) / ((to[0] - from[0]) || 1);\n                    color = from.color.tweenTo(to.color, pos);\n                }\n                return color;\n            }\n            ColorAxisLike.toColor = toColor;\n        })(ColorAxisLike || (ColorAxisLike = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorAxisLike;\n    });\n    _registerModule(_modules, 'Core/Axis/SolidGaugeAxis.js', [_modules['Core/Axis/Color/ColorAxisLike.js'], _modules['Core/Utilities.js']], function (ColorAxisLike, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var extend = U.extend;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function init(axis) {\n            extend(axis, ColorAxisLike);\n        }\n        /* *\n         *\n         *  Default export\n         *\n         * */\n        var SolidGaugeAxis = {\n            init: init\n        };\n\n        return SolidGaugeAxis;\n    });\n    _registerModule(_modules, 'Series/SolidGauge/SolidGaugeSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Solid angular gauge module\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A solid gauge is a circular gauge where the value is indicated by a filled\n         * arc, and the color of the arc may variate with the value.\n         *\n         * @sample highcharts/demo/gauge-solid/\n         *         Solid gauges\n         *\n         * @extends      plotOptions.gauge\n         * @excluding    dial, pivot, wrap\n         * @product      highcharts\n         * @requires     modules/solid-gauge\n         * @optionparent plotOptions.solidgauge\n         */\n        var SolidGaugeSeriesDefaults = {\n            /**\n             * The inner radius for points in a solid gauge. Can be given only in\n             * percentage, either as a number or a string like `\"50%\"`.\n             *\n             * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n             *         Individual radius and innerRadius\n             *\n             * @type      {string}\n             * @default   \"60%\"\n             * @since     4.1.6\n             * @product   highcharts\n             * @apioption plotOptions.solidgauge.innerRadius\n             */\n            /**\n             * Whether the strokes of the solid gauge should be `round` or `square`.\n             *\n             * @sample {highcharts} highcharts/demo/gauge-multiple-kpi/\n             *         Rounded gauge\n             *\n             * @type       {string}\n             * @default    round\n             * @since      4.2.2\n             * @product    highcharts\n             * @validvalue [\"square\", \"round\"]\n             * @apioption  plotOptions.solidgauge.linecap\n             */\n            /**\n             * Allow the gauge to overshoot the end of the perimeter axis by this\n             * many degrees. Say if the gauge axis goes from 0 to 60, a value of\n             * 100, or 1000, will show 5 degrees beyond the end of the axis when this\n             * option is set to 5.\n             *\n             * @type      {number}\n             * @default   0\n             * @since     3.0.10\n             * @product   highcharts\n             * @apioption plotOptions.solidgauge.overshoot\n             */\n            /**\n             * The outer radius for points in a solid gauge. Can be given only in\n             * percentage, either as a number or a string like `\"100%\"`.\n             *\n             * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n             *         Individual radius and innerRadius\n             *\n             * @type      {string}\n             * @default   \"100%\"\n             * @since     4.1.6\n             * @product   highcharts\n             * @apioption plotOptions.solidgauge.radius\n             */\n            /**\n             * Whether to draw rounded edges on the gauge. This options adds the radius\n             * of the rounding to the ends of the arc, so it extends past the actual\n             * values. When `borderRadius` is set, it takes precedence over `rounded`. A\n             * `borderRadius` of 50% behaves like `rounded`, except the shape is not\n             * extended past its value.\n             *\n             * @sample {highcharts} highcharts/demo/gauge-multiple-kpi/\n             *         Gauge showing multiple KPIs\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @product   highcharts\n             * @apioption plotOptions.solidgauge.rounded\n             */\n            /**\n             * The threshold or base level for the gauge.\n             *\n             * @sample {highcharts} highcharts/plotoptions/solidgauge-threshold/\n             *         Zero threshold with negative and positive values\n             *\n             * @type      {number|null}\n             * @since     5.0.3\n             * @product   highcharts\n             * @apioption plotOptions.solidgauge.threshold\n             */\n            /**\n             * Whether to give each point an individual color.\n             */\n            colorByPoint: true,\n            dataLabels: {\n                y: 0\n            }\n        };\n        /**\n         * A `solidgauge` series. If the [type](#series.solidgauge.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         *\n         * @extends   series,plotOptions.solidgauge\n         * @excluding animationLimit, boostThreshold, connectEnds, connectNulls,\n         *            cropThreshold, dashStyle, dataParser, dataURL, dial,\n         *            findNearestPointBy, getExtremesFromAll, marker, negativeColor,\n         *            pointPlacement, pivot, shadow, softThreshold, stack, stacking,\n         *            states, step, threshold, turboThreshold, wrap, zoneAxis, zones,\n         *            dataSorting, boostBlending\n         * @product   highcharts\n         * @requires  modules/solid-gauge\n         * @apioption series.solidgauge\n         */\n        /**\n         * An array of data points for the series. For the `solidgauge` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of numerical values. In this case, the numerical values will be\n         *    interpreted as `y` options. Example:\n         *    ```js\n         *    data: [0, 5, 3, 5]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.solidgauge.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        y: 5,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        y: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * The typical gauge only contains a single data value.\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<number|null|*>}\n         * @extends   series.gauge.data\n         * @product   highcharts\n         * @apioption series.solidgauge.data\n         */\n        /**\n         * The inner radius of an individual point in a solid gauge. Can be given only\n         * in percentage, either as a number or a string like `\"50%\"`.\n         *\n         * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n         *         Individual radius and innerRadius\n         *\n         * @type      {string}\n         * @since     4.1.6\n         * @product   highcharts\n         * @apioption series.solidgauge.data.innerRadius\n         */\n        /**\n         * The outer radius of an individual point in a solid gauge. Can be\n         * given only in percentage, either as a number or a string like `\"100%\"`.\n         *\n         * @sample {highcharts} highcharts/plotoptions/solidgauge-radius/\n         *         Individual radius and innerRadius\n         *\n         * @type      {string}\n         * @since     4.1.6\n         * @product   highcharts\n         * @apioption series.solidgauge.data.radius\n         */\n        ''; // Keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SolidGaugeSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/SolidGauge/SolidGaugeSeries.js', [_modules['Extensions/BorderRadius.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Axis/SolidGaugeAxis.js'], _modules['Series/SolidGauge/SolidGaugeSeriesDefaults.js'], _modules['Core/Utilities.js']], function (BorderRadius, SeriesRegistry, SolidGaugeAxis, SolidGaugeSeriesDefaults, U) {\n        /* *\n         *\n         *  Solid angular gauge module\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var _a = SeriesRegistry.seriesTypes, GaugeSeries = _a.gauge, PieSeries = _a.pie;\n        var clamp = U.clamp, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pInt = U.pInt;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * SolidGauge series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.solidgauge\n         *\n         * @augments Highcarts.Series\n         */\n        var SolidGaugeSeries = /** @class */ (function (_super) {\n            __extends(SolidGaugeSeries, _super);\n            function SolidGaugeSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            // Extend the translate function to extend the Y axis with the necessary\n            // decoration (#5895).\n            SolidGaugeSeries.prototype.translate = function () {\n                var axis = this.yAxis;\n                SolidGaugeAxis.init(axis);\n                // Prepare data classes\n                if (!axis.dataClasses && axis.options.dataClasses) {\n                    axis.initDataClasses(axis.options);\n                }\n                axis.initStops();\n                // Generate points and inherit data label position\n                GaugeSeries.prototype.translate.call(this);\n            };\n            // Draw the points where each point is one needle.\n            SolidGaugeSeries.prototype.drawPoints = function () {\n                var series = this, yAxis = series.yAxis, center = yAxis.center, options = series.options, renderer = series.chart.renderer, overshoot = options.overshoot, rounded = options.rounded && options.borderRadius === void 0, overshootVal = isNumber(overshoot) ?\n                    overshoot / 180 * Math.PI :\n                    0;\n                var thresholdAngleRad;\n                // Handle the threshold option\n                if (isNumber(options.threshold)) {\n                    thresholdAngleRad = yAxis.startAngleRad + yAxis.translate(options.threshold, void 0, void 0, void 0, true);\n                }\n                this.thresholdAngleRad = pick(thresholdAngleRad, yAxis.startAngleRad);\n                for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    // #10630 null point should not be draw\n                    if (!point.isNull) { // Condition like in pie chart\n                        var radius = ((pInt(pick(point.options.radius, options.radius, 100 // %\n                        )) * center[2]) / 200), innerRadius = ((pInt(pick(point.options.innerRadius, options.innerRadius, 60 // %\n                        )) * center[2]) / 200), axisMinAngle = Math.min(yAxis.startAngleRad, yAxis.endAngleRad), axisMaxAngle = Math.max(yAxis.startAngleRad, yAxis.endAngleRad);\n                        var graphic = point.graphic, rotation = (yAxis.startAngleRad +\n                            yAxis.translate(point.y, void 0, void 0, void 0, true)), shapeArgs = void 0, d = void 0, toColor = yAxis.toColor(point.y, point);\n                        if (toColor === 'none') { // #3708\n                            toColor = point.color || series.color || 'none';\n                        }\n                        if (toColor !== 'none') {\n                            point.color = toColor;\n                        }\n                        // Handle overshoot and clipping to axis max/min\n                        rotation = clamp(rotation, axisMinAngle - overshootVal, axisMaxAngle + overshootVal);\n                        // Handle the wrap option\n                        if (options.wrap === false) {\n                            rotation = clamp(rotation, axisMinAngle, axisMaxAngle);\n                        }\n                        var angleOfRounding = rounded ?\n                            ((radius - innerRadius) / 2) / radius :\n                            0, start = Math.min(rotation, series.thresholdAngleRad) -\n                            angleOfRounding;\n                        var end = Math.max(rotation, series.thresholdAngleRad) +\n                            angleOfRounding;\n                        if (end - start > 2 * Math.PI) {\n                            end = start + 2 * Math.PI;\n                        }\n                        var borderRadius = rounded ? '50%' : 0;\n                        if (options.borderRadius) {\n                            borderRadius = BorderRadius.optionsToObject(options.borderRadius).radius;\n                        }\n                        point.shapeArgs = shapeArgs = {\n                            x: center[0],\n                            y: center[1],\n                            r: radius,\n                            innerR: innerRadius,\n                            start: start,\n                            end: end,\n                            borderRadius: borderRadius\n                        };\n                        point.startR = radius; // For PieSeries.animate\n                        if (graphic) {\n                            d = shapeArgs.d;\n                            graphic.animate(extend({ fill: toColor }, shapeArgs));\n                            if (d) {\n                                shapeArgs.d = d; // Animate alters it\n                            }\n                        }\n                        else {\n                            point.graphic = graphic = renderer.arc(shapeArgs)\n                                .attr({\n                                fill: toColor,\n                                'sweep-flag': 0\n                            })\n                                .add(series.group);\n                        }\n                        if (!series.chart.styledMode) {\n                            if (options.linecap !== 'square') {\n                                graphic.attr({\n                                    'stroke-linecap': 'round',\n                                    'stroke-linejoin': 'round'\n                                });\n                            }\n                            graphic.attr({\n                                stroke: options.borderColor || 'none',\n                                'stroke-width': options.borderWidth || 0\n                            });\n                        }\n                        if (graphic) {\n                            graphic.addClass(point.getClassName(), true);\n                        }\n                    }\n                }\n            };\n            // Extend the pie slice animation by animating from start angle and up.\n            SolidGaugeSeries.prototype.animate = function (init) {\n                if (!init) {\n                    this.startAngleRad = this.thresholdAngleRad;\n                    PieSeries.prototype.animate.call(this, init);\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            SolidGaugeSeries.defaultOptions = merge(GaugeSeries.defaultOptions, SolidGaugeSeriesDefaults);\n            return SolidGaugeSeries;\n        }(GaugeSeries));\n        SeriesRegistry.registerSeriesType('solidgauge', SolidGaugeSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SolidGaugeSeries;\n    });\n    _registerModule(_modules, 'masters/modules/solid-gauge.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","Color","U","ColorAxisLike","color","parse","merge","initDataClasses","userOptions","dataClass","dataClasses","colors","chart","axis","legendItem","options","userDataClasses","colorCount","colorCounter","labels","i","iEnd","length","push","styledMode","dataClassColor","colorIndex","minColor","tweenTo","maxColor","initStops","stops","normalizedValue","value","max","min","logarithmic","log2lin","toColor","point","pos","from","to","extend","init","colorByPoint","dataLabels","y","BorderRadius","SeriesRegistry","SolidGaugeAxis","SolidGaugeSeriesDefaults","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","_a","seriesTypes","GaugeSeries","gauge","PieSeries","pie","clamp","isNumber","pick","pInt","SolidGaugeSeries","_super","arguments","translate","yAxis","drawPoints","thresholdAngleRad","series","center","renderer","overshoot","rounded","borderRadius","overshootVal","Math","PI","threshold","startAngleRad","_i","points","isNull","radius","innerRadius","axisMinAngle","endAngleRad","axisMaxAngle","graphic","rotation","shapeArgs","wrap","angleOfRounding","start","end","optionsToObject","x","r","innerR","startR","animate","fill","arc","attr","add","group","linecap","stroke","borderColor","borderWidth","addClass","getClassName","defaultOptions","registerSeriesType"],"mappings":"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"}