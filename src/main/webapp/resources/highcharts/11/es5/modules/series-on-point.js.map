{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Series on point module\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Rafal Sebestjanski and Piotr Madej\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/series-on-point', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/SeriesOnPointComposition.js', [_modules['Core/Globals.js'], _modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (H, Point, Series, SeriesRegistry, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Rafal Sebestjanski, Piotr Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var bubble = SeriesRegistry.seriesTypes.bubble;\n        var addEvent = U.addEvent, defined = U.defined, find = U.find, isNumber = U.isNumber, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var SeriesOnPointComposition;\n        (function (SeriesOnPointComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the series with a small addition.\n             *\n             * @private\n             *\n             * @param SeriesClass\n             * Series class to use.\n             *\n             * @param ChartClass\n             * Chart class to use.\n             */\n            function compose(SeriesClass, ChartClass) {\n                if (pushUnique(composed, 'SeriesOnPoint')) {\n                    var _a = Additions.prototype, chartGetZData = _a.chartGetZData, seriesAfterInit = _a.seriesAfterInit, seriesAfterRender = _a.seriesAfterRender, seriesGetCenter = _a.seriesGetCenter, seriesShowOrHide = _a.seriesShowOrHide, seriesTranslate = _a.seriesTranslate;\n                    // We can mark support for pie series here because it's in the core.\n                    // But all other series outside the core should be marked in its\n                    // module. This is crucial when loading series-on-point before\n                    // loading a module, e.g. sunburst.\n                    // Supported series types:\n                    // - pie\n                    // - sunburst\n                    SeriesClass.types.pie.prototype.onPointSupported = true;\n                    addEvent(SeriesClass, 'afterInit', seriesAfterInit);\n                    addEvent(SeriesClass, 'afterRender', seriesAfterRender);\n                    addEvent(SeriesClass, 'afterGetCenter', seriesGetCenter);\n                    addEvent(SeriesClass, 'hide', seriesShowOrHide);\n                    addEvent(SeriesClass, 'show', seriesShowOrHide);\n                    addEvent(SeriesClass, 'translate', seriesTranslate);\n                    addEvent(ChartClass, 'beforeRender', chartGetZData);\n                    addEvent(ChartClass, 'beforeRedraw', chartGetZData);\n                }\n                return SeriesClass;\n            }\n            SeriesOnPointComposition.compose = compose;\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(series) {\n                    /**\n                     * @ignore\n                     */\n                    this.getRadii = bubble.prototype.getRadii;\n                    /**\n                     * @ignore\n                     */\n                    this.getRadius = bubble.prototype.getRadius;\n                    /**\n                     * @ignore\n                     */\n                    this.getPxExtremes = bubble.prototype.getPxExtremes;\n                    /**\n                     * @ignore\n                     */\n                    this.getZExtremes = bubble.prototype.getZExtremes;\n                    this.chart = series.chart;\n                    this.series = series;\n                    this.options = series.options.onPoint;\n                }\n                /**\n                 * Draw connector line that starts from the initial point's position\n                 * and ends in the center of the series.\n                 * @private\n                 */\n                Additions.prototype.drawConnector = function () {\n                    if (!this.connector) {\n                        this.connector = this.series.chart.renderer.path()\n                            .addClass('highcharts-connector-seriesonpoint')\n                            .attr({\n                            zIndex: -1\n                        })\n                            .add(this.series.markerGroup);\n                    }\n                    var attribs = this.getConnectorAttributes();\n                    attribs && this.connector.animate(attribs);\n                };\n                /**\n                 * Get connector line path and styles that connects series and point.\n                 *\n                 * @private\n                 *\n                 * @return {Highcharts.SVGAttributes} attribs - the path and styles.\n                 */\n                Additions.prototype.getConnectorAttributes = function () {\n                    var chart = this.series.chart, onPointOptions = this.options;\n                    if (!onPointOptions) {\n                        return;\n                    }\n                    var connectorOpts = onPointOptions.connectorOptions || {}, position = onPointOptions.position, connectedPoint = chart.get(onPointOptions.id);\n                    if (!(connectedPoint instanceof Point) ||\n                        !position ||\n                        !defined(connectedPoint.plotX) ||\n                        !defined(connectedPoint.plotY)) {\n                        return;\n                    }\n                    var xFrom = defined(position.x) ?\n                        position.x :\n                        connectedPoint.plotX, yFrom = defined(position.y) ?\n                        position.y :\n                        connectedPoint.plotY, xTo = xFrom + (position.offsetX || 0), yTo = yFrom + (position.offsetY || 0), width = connectorOpts.width || 1, color = connectorOpts.stroke || this.series.color, dashStyle = connectorOpts.dashstyle, attribs = {\n                        d: SVGRenderer.prototype.crispLine([\n                            ['M', xFrom, yFrom],\n                            ['L', xTo, yTo]\n                        ], width),\n                        'stroke-width': width\n                    };\n                    if (!chart.styledMode) {\n                        attribs.stroke = color;\n                        attribs.dashstyle = dashStyle;\n                    }\n                    return attribs;\n                };\n                /**\n                 * Initialize Series on point on series init.\n                 *\n                 * @ignore\n                 */\n                Additions.prototype.seriesAfterInit = function () {\n                    if (this.onPointSupported && this.options.onPoint) {\n                        this.bubblePadding = true;\n                        this.useMapGeometry = true;\n                        this.onPoint = new Additions(this);\n                    }\n                };\n                /**\n                 * @ignore\n                 */\n                Additions.prototype.seriesAfterRender = function () {\n                    // Clear bubbleZExtremes to reset z calculations on update.\n                    delete this.chart.bubbleZExtremes;\n                    this.onPoint && this.onPoint.drawConnector();\n                };\n                /**\n                 * Recalculate series.center (x, y and size).\n                 *\n                 * @ignore\n                 */\n                Additions.prototype.seriesGetCenter = function (e) {\n                    var onPointOptions = this.options.onPoint, center = e.positions;\n                    if (onPointOptions) {\n                        var connectedPoint = this.chart.get(onPointOptions.id);\n                        if (connectedPoint instanceof Point &&\n                            defined(connectedPoint.plotX) &&\n                            defined(connectedPoint.plotY)) {\n                            center[0] = connectedPoint.plotX;\n                            center[1] = connectedPoint.plotY;\n                        }\n                        var position = onPointOptions.position;\n                        if (position) {\n                            if (defined(position.x)) {\n                                center[0] = position.x;\n                            }\n                            if (defined(position.y)) {\n                                center[1] = position.y;\n                            }\n                            if (position.offsetX) {\n                                center[0] += position.offsetX;\n                            }\n                            if (position.offsetY) {\n                                center[1] += position.offsetY;\n                            }\n                        }\n                    }\n                    // Get and set the size\n                    var radius = this.radii && this.radii[this.index];\n                    if (isNumber(radius)) {\n                        center[2] = radius * 2;\n                    }\n                    e.positions = center;\n                };\n                /**\n                 * @ignore\n                 */\n                Additions.prototype.seriesShowOrHide = function () {\n                    var _a;\n                    var allSeries = this.chart.series;\n                    // When toggling a series visibility, loop through all points\n                    (_a = this.points) === null || _a === void 0 ? void 0 : _a.forEach(function (point) {\n                        // Find all series that are on toggled points\n                        var series = find(allSeries, function (series) {\n                            var id = ((series.onPoint || {}).options || {}).id;\n                            if (!id) {\n                                return false;\n                            }\n                            return id === point.id;\n                        });\n                        // And also toggle series that are on toggled points. Redraw is\n                        // not needed because it's fired later after showOrHide event\n                        series && series.setVisible(!series.visible, false);\n                    });\n                };\n                /**\n                 * Calculate required radius (z data) before original translate.\n                 *\n                 * @ignore\n                 * @function Highcharts.Series#translate\n                 */\n                Additions.prototype.seriesTranslate = function () {\n                    if (this.onPoint) {\n                        this.onPoint.getRadii();\n                        this.radii = this.onPoint.radii;\n                    }\n                };\n                /**\n                 * @ignore\n                 */\n                Additions.prototype.chartGetZData = function () {\n                    var zData = [];\n                    this.series.forEach(function (series) {\n                        var onPointOpts = series.options.onPoint;\n                        zData.push(onPointOpts && onPointOpts.z ? onPointOpts.z : null);\n                    });\n                    this.series.forEach(function (series) {\n                        // Save z values of all the series\n                        if (series.onPoint) {\n                            series.onPoint.zData = series.zData = zData;\n                        }\n                    });\n                };\n                return Additions;\n            }());\n            SeriesOnPointComposition.Additions = Additions;\n        })(SeriesOnPointComposition || (SeriesOnPointComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Options for the _Series on point_ feature. Only `pie` and `sunburst` series\n         * are supported at this moment.\n         *\n         * @sample      {highcharts} highcharts/series-on-point/series-on-point\n         *              Series on point\n         * @sample      {highmaps} maps/demo/map-pies\n         *              Pies on a map\n         * @requires    modules/series-on-point\n         * @since 10.2.0\n         * @type        {object}\n         * @apioption   plotOptions.series.onPoint\n         */\n        /**\n         * Options for the connector in the _Series on point_ feature.\n         *\n         * In styled mode, the connector can be styled with the\n         * `.highcharts-connector-seriesonpoint` class name.\n         *\n         * @requires    modules/series-on-point\n         * @since 10.2.0\n         * @type        {Highcharts.SVGAttributes}\n         * @apioption   plotOptions.series.onPoint.connectorOptions\n         */\n        /**\n         * Color of the connector line. By default it's the series' color.\n         *\n         * @requires    modules/series-on-point\n         * @since 10.2.0\n         * @type        {string}\n         * @apioption   plotOptions.series.onPoint.connectorOptions.stroke\n         */\n        /**\n         * A name for the dash style to use for the connector.\n         *\n         * @requires    modules/series-on-point\n         * @since 10.2.0\n         * @type        {string}\n         * @apioption   plotOptions.series.onPoint.connectorOptions.dashstyle\n         */\n        /**\n         * Pixel width of the connector line.\n         *\n         * @default     1\n         * @requires    modules/series-on-point\n         * @type        {number}\n         * @since 10.2.0\n         * @apioption   plotOptions.series.onPoint.connectorOptions.width\n         */\n        /**\n         * The `id` of the point that we connect the series to. Only points with a given\n         * `plotX` and `plotY` values and map points are valid.\n         *\n         * @requires   modules/series-on-point\n         * @since 10.2.0\n         * @type       {string}\n         * @apioption  plotOptions.series.onPoint.id\n         */\n        /**\n         * Options allowing to set a position and an offset of the series in the\n         * _Series on point_ feature.\n         *\n         * @requires    modules/series-on-point\n         * @since 10.2.0\n         * @type        {object}\n         * @apioption   plotOptions.series.onPoint.position\n         */\n        /**\n         * Series center offset from the original x position. If defined, the connector\n         * line is drawn connecting original position with new position.\n         *\n         * @requires   modules/series-on-point\n         * @since 10.2.0\n         * @type       {number}\n         * @apioption  plotOptions.series.onPoint.position.offsetX\n         */\n        /**\n         * Series center offset from the original y position. If defined, the connector\n         * line is drawn from original position to a new position.\n         *\n         * @requires   modules/series-on-point\n         * @since 10.2.0\n         * @type       {number}\n         * @apioption  plotOptions.series.onPoint.position.offsetY\n         */\n        /**\n         * X position of the series center. By default, the series is displayed on the\n         * point that it is connected to.\n         *\n         * @requires   modules/series-on-point\n         * @since 10.2.0\n         * @type       {number}\n         * @apioption  plotOptions.series.onPoint.position.x\n         */\n        /**\n         * Y position of the series center. By default, the series is displayed on the\n         * point that it is connected to.\n         *\n         * @requires   modules/series-on-point\n         * @since 10.2.0\n         * @type       {number}\n         * @apioption  plotOptions.series.onPoint.position.y\n         */\n        ''; // Keeps doclets above in transpiled file\n\n        return SeriesOnPointComposition;\n    });\n    _registerModule(_modules, 'masters/modules/series-on-point.src.js', [_modules['Core/Globals.js'], _modules['Series/SeriesOnPointComposition.js']], function (Highcharts, SeriesOnPointComposition) {\n\n        var G = Highcharts;\n        SeriesOnPointComposition.compose(G.Series, G.Chart);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","Point","Series","SeriesRegistry","SVGRenderer","U","SeriesOnPointComposition","Additions","composed","bubble","seriesTypes","addEvent","defined","find","isNumber","pushUnique","compose","SeriesClass","ChartClass","_a","prototype","chartGetZData","seriesAfterInit","seriesAfterRender","seriesGetCenter","seriesShowOrHide","seriesTranslate","types","pie","onPointSupported","series","getRadii","getRadius","getPxExtremes","getZExtremes","chart","options","onPoint","drawConnector","connector","renderer","addClass","attr","zIndex","add","markerGroup","attribs","getConnectorAttributes","animate","onPointOptions","connectorOpts","connectorOptions","position","connectedPoint","get","id","plotX","plotY","xFrom","x","yFrom","y","xTo","offsetX","yTo","offsetY","width","color","stroke","dashStyle","dashstyle","d","crispLine","styledMode","bubblePadding","useMapGeometry","bubbleZExtremes","e","center","positions","radius","radii","index","allSeries","points","forEach","point","setVisible","visible","zData","onPointOpts","push","z","G","Chart"],"mappings":"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"}