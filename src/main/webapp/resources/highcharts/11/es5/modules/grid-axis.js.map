{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v11.4.8 (2024-08-29)\n *\n * GridAxis\n *\n * (c) 2016-2024 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/grid-axis', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/GridAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Axis, H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var dateFormats = H.dateFormats;\n        var addEvent = U.addEvent, defined = U.defined, erase = U.erase, find = U.find, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, timeUnits = U.timeUnits, wrap = U.wrap;\n        /* *\n         *\n         *  Enums\n         *\n         * */\n        /**\n         * Enum for which side the axis is on. Maps to axis.side.\n         * @private\n         */\n        var GridAxisSide;\n        (function (GridAxisSide) {\n            GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n            GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n            GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n            GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n        })(GridAxisSide || (GridAxisSide = {}));\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function argsToArray(args) {\n            return Array.prototype.slice.call(args, 1);\n        }\n        /**\n         * @private\n         */\n        function isObject(x) {\n            // Always use strict mode\n            return U.isObject(x, true);\n        }\n        /**\n         * @private\n         */\n        function applyGridOptions(axis) {\n            var options = axis.options;\n            // Center-align by default\n            /*\n            if (!options.labels) {\n                options.labels = {};\n            }\n            */\n            options.labels.align = pick(options.labels.align, 'center');\n            // @todo: Check against tickLabelPlacement between/on etc\n            /* Prevents adding the last tick label if the axis is not a category\n               axis.\n               Since numeric labels are normally placed at starts and ends of a\n               range of value, and this module makes the label point at the value,\n               an \"extra\" label would appear. */\n            if (!axis.categories) {\n                options.showLastLabel = false;\n            }\n            // Prevents rotation of labels when squished, as rotating them would not\n            // help.\n            axis.labelRotation = 0;\n            options.labels.rotation = 0;\n            // Allow putting ticks closer than their data points.\n            options.minTickInterval = 1;\n        }\n        /**\n         * Extends axis class with grid support.\n         * @private\n         */\n        function compose(AxisClass, ChartClass, TickClass) {\n            if (!AxisClass.keepProps.includes('grid')) {\n                AxisClass.keepProps.push('grid');\n                AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n                wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n                wrap(AxisClass.prototype, 'getOffset', wrapGetOffset);\n                // Add event handlers\n                addEvent(AxisClass, 'init', onInit);\n                addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n                addEvent(AxisClass, 'afterInit', onAfterInit);\n                addEvent(AxisClass, 'afterRender', onAfterRender);\n                addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n                addEvent(AxisClass, 'trimTicks', onTrimTicks);\n                addEvent(AxisClass, 'destroy', onDestroy);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n            }\n            return AxisClass;\n        }\n        /**\n         * Get the largest label width and height.\n         *\n         * @private\n         * @function Highcharts.Axis#getMaxLabelDimensions\n         *\n         * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n         * All the ticks on one axis.\n         *\n         * @param {Array<number|string>} tickPositions\n         * All the tick positions on one axis.\n         *\n         * @return {Highcharts.SizeObject}\n         * Object containing the properties height and width.\n         *\n         * @todo Move this to the generic axis implementation, as it is used there.\n         */\n        function getMaxLabelDimensions(ticks, tickPositions) {\n            var dimensions = {\n                width: 0,\n                height: 0\n            };\n            tickPositions.forEach(function (pos) {\n                var tick = ticks[pos];\n                var labelHeight = 0, labelWidth = 0, label;\n                if (isObject(tick)) {\n                    label = isObject(tick.label) ? tick.label : {};\n                    // Find width and height of label\n                    labelHeight = label.getBBox ? label.getBBox().height : 0;\n                    if (label.textStr && !isNumber(label.textPxLength)) {\n                        label.textPxLength = label.getBBox().width;\n                    }\n                    labelWidth = isNumber(label.textPxLength) ?\n                        // Math.round ensures crisp lines\n                        Math.round(label.textPxLength) :\n                        0;\n                    if (label.textStr) {\n                        // Set the tickWidth same as the label width after ellipsis\n                        // applied #10281\n                        labelWidth = Math.round(label.getBBox().width);\n                    }\n                    // Update the result if width and/or height are larger\n                    dimensions.height = Math.max(labelHeight, dimensions.height);\n                    dimensions.width = Math.max(labelWidth, dimensions.width);\n                }\n            });\n            // For tree grid, add indentation\n            if (this.type === 'treegrid' &&\n                this.treeGrid &&\n                this.treeGrid.mapOfPosToGridNode) {\n                var treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n                dimensions.width += (this.options.labels.indentation *\n                    (treeDepth - 1));\n            }\n            return dimensions;\n        }\n        /**\n         * Handle columns and getOffset.\n         * @private\n         */\n        function wrapGetOffset(proceed) {\n            var grid = this.grid, \n            // On the left side we handle the columns first because the offset is\n            // calculated from the plot area and out\n            columnsFirst = this.side === 3;\n            if (!columnsFirst) {\n                proceed.apply(this);\n            }\n            if (!(grid === null || grid === void 0 ? void 0 : grid.isColumn)) {\n                var columns = (grid === null || grid === void 0 ? void 0 : grid.columns) || [];\n                if (columnsFirst) {\n                    columns = columns.slice().reverse();\n                }\n                columns\n                    .forEach(function (column) {\n                    column.getOffset();\n                });\n            }\n            if (columnsFirst) {\n                proceed.apply(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterGetTitlePosition(e) {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                // Compute anchor points for each of the title align options\n                var axisTitle = axis.axisTitle, axisHeight = axis.height, horiz = axis.horiz, axisLeft = axis.left, offset = axis.offset, opposite = axis.opposite, options_1 = axis.options, axisTop = axis.top, axisWidth = axis.width;\n                var tickSize = axis.tickSize();\n                var titleWidth = axisTitle && axisTitle.getBBox().width;\n                var xOption = options_1.title.x;\n                var yOption = options_1.title.y;\n                var titleMargin = pick(options_1.title.margin, horiz ? 5 : 10);\n                var titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n                var crispCorr = tickSize ? tickSize[0] / 2 : 0;\n                // TODO account for alignment\n                // the position in the perpendicular direction of the axis\n                var offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n                    (horiz ? 1 : -1) * // Horizontal axis reverses the margin\n                        (opposite ? -1 : 1) * // So does opposite axes\n                        crispCorr +\n                    (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n                e.titlePosition.x = horiz ?\n                    axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n                    offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n                e.titlePosition.y = horiz ?\n                    (offAxis -\n                        (opposite ? axisHeight : 0) +\n                        (opposite ? titleFontSize : -titleFontSize) / 2 +\n                        offset +\n                        yOption) :\n                    axisTop - titleMargin + yOption;\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterInit() {\n            var axis = this;\n            var chart = axis.chart, _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a, userOptions = axis.userOptions;\n            if (gridOptions.enabled) {\n                applyGridOptions(axis);\n            }\n            if (gridOptions.columns) {\n                var columns = axis.grid.columns = [];\n                var columnIndex = axis.grid.columnIndex = 0;\n                // Handle columns, each column is a grid axis\n                while (++columnIndex < gridOptions.columns.length) {\n                    var columnOptions = merge(userOptions, gridOptions.columns[columnIndex], {\n                        isInternal: true,\n                        linkedTo: 0,\n                        // Disable by default the scrollbar on the grid axis\n                        scrollbar: {\n                            enabled: false\n                        }\n                    }, \n                    // Avoid recursion\n                    {\n                        grid: {\n                            columns: void 0\n                        }\n                    });\n                    var column = new Axis(axis.chart, columnOptions, 'yAxis');\n                    column.grid.isColumn = true;\n                    column.grid.columnIndex = columnIndex;\n                    // Remove column axis from chart axes array, and place it\n                    // in the columns array.\n                    erase(chart.axes, column);\n                    erase(chart[axis.coll] || [], column);\n                    columns.push(column);\n                }\n            }\n        }\n        /**\n         * Draw an extra line on the far side of the outermost axis,\n         * creating floor/roof/wall of a grid. And some padding.\n         * ```\n         * Make this:\n         *             (axis.min) __________________________ (axis.max)\n         *                           |    |    |    |    |\n         * Into this:\n         *             (axis.min) __________________________ (axis.max)\n         *                        ___|____|____|____|____|__\n         * ```\n         * @private\n         */\n        function onAfterRender() {\n            var axis = this, axisTitle = axis.axisTitle, grid = axis.grid, options = axis.options, gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                var min = axis.min || 0, max = axis.max || 0, firstTick = axis.ticks[axis.tickPositions[0]];\n                // Adjust the title max width to the column width (#19657)\n                if (axisTitle &&\n                    !axis.chart.styledMode &&\n                    (firstTick === null || firstTick === void 0 ? void 0 : firstTick.slotWidth) &&\n                    !axis.options.title.style.width) {\n                    axisTitle.css({ width: \"\".concat(firstTick.slotWidth, \"px\") });\n                }\n                // @todo actual label padding (top, bottom, left, right)\n                axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n                // Remove right wall before rendering if updating\n                if (axis.rightWall) {\n                    axis.rightWall.destroy();\n                }\n                /*\n                Draw an extra axis line on outer axes\n                            >\n                Make this:    |______|______|______|___\n\n                            > _________________________\n                Into this:    |______|______|______|__|\n                                                        */\n                if (axis.grid && axis.grid.isOuterAxis() && axis.axisLine) {\n                    var lineWidth = options.lineWidth;\n                    if (lineWidth) {\n                        var linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                        // Negate distance if top or left axis\n                        // Subtract 1px to draw the line at the end of the tick\n                        tickLength = (axis.tickSize('tick') || [1])[0], distance = tickLength * ((axis.side === GridAxisSide.top ||\n                            axis.side === GridAxisSide.left) ? -1 : 1);\n                        // If axis is horizontal, reposition line path vertically\n                        if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                            if (axis.horiz) {\n                                startPoint[2] += distance;\n                                endPoint[2] += distance;\n                            }\n                            else {\n                                startPoint[1] += distance;\n                                endPoint[1] += distance;\n                            }\n                        }\n                        // If it doesn't exist, add an upper and lower border\n                        // for the vertical grid axis.\n                        if (!axis.horiz && axis.chart.marginRight) {\n                            var upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                                'L',\n                                axis.left,\n                                startPoint[2] || 0\n                            ], upperBorderPath = [\n                                upperBorderStartPoint,\n                                upperBorderEndPoint\n                            ], lowerBorderEndPoint = [\n                                'L',\n                                axis.chart.chartWidth - axis.chart.marginRight,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderStartPoint = [\n                                'M',\n                                endPoint[1] || 0,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderPath = [\n                                lowerBorderStartPoint,\n                                lowerBorderEndPoint\n                            ];\n                            if (!axis.grid.upperBorder && min % 1 !== 0) {\n                                axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                            }\n                            if (axis.grid.upperBorder) {\n                                axis.grid.upperBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.upperBorder.animate({\n                                    d: upperBorderPath\n                                });\n                            }\n                            if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                                axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                            }\n                            if (axis.grid.lowerBorder) {\n                                axis.grid.lowerBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.lowerBorder.animate({\n                                    d: lowerBorderPath\n                                });\n                            }\n                        }\n                        // Render an extra line parallel to the existing axes, to\n                        // close the grid.\n                        if (!axis.grid.axisLineExtra) {\n                            axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                        }\n                        else {\n                            axis.grid.axisLineExtra.attr({\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth\n                            });\n                            axis.grid.axisLineExtra.animate({\n                                d: linePath\n                            });\n                        }\n                        // Show or hide the line depending on options.showEmpty\n                        axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n                    }\n                }\n                (grid && grid.columns || []).forEach(function (column) { return column.render(); });\n                // Manipulate the tick mark visibility\n                // based on the axis.max- allows smooth scrolling.\n                if (!axis.horiz &&\n                    axis.chart.hasRendered &&\n                    (axis.scrollbar ||\n                        (axis.linkedParent && axis.linkedParent.scrollbar)) &&\n                    axis.tickPositions.length) {\n                    var tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick_1 = axis.tickPositions[0];\n                    var label = void 0, tickMark = void 0;\n                    while ((label = axis.hiddenLabels.pop()) && label.element) {\n                        label.show(); // #15453\n                    }\n                    while ((tickMark = axis.hiddenMarks.pop()) &&\n                        tickMark.element) {\n                        tickMark.show(); // #16439\n                    }\n                    // Hide/show first tick label.\n                    label = axis.ticks[firstTick_1].label;\n                    if (label) {\n                        if (min - firstTick_1 > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    // Hide/show last tick mark/label.\n                    label = axis.ticks[lastTick].label;\n                    if (label) {\n                        if (lastTick - max > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    var mark = axis.ticks[lastTick].mark;\n                    if (mark &&\n                        lastTick - max < tickmarkOffset &&\n                        lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                        axis.hiddenMarks.push(mark.hide());\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetAxisTranslation() {\n            var axis = this;\n            var tickInfo = axis.tickPositions && axis.tickPositions.info;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var userLabels = axis.userOptions.labels || {};\n            // Fire this only for the Gantt type chart, #14868.\n            if (gridOptions.enabled) {\n                if (axis.horiz) {\n                    axis.series.forEach(function (series) {\n                        series.options.pointRange = 0;\n                    });\n                    // Lower level time ticks, like hours or minutes, represent\n                    // points in time and not ranges. These should be aligned\n                    // left in the grid cell by default. The same applies to\n                    // years of higher order.\n                    if (tickInfo &&\n                        options.dateTimeLabelFormats &&\n                        options.labels &&\n                        !defined(userLabels.align) &&\n                        (options.dateTimeLabelFormats[tickInfo.unitName]\n                            .range === false ||\n                            tickInfo.count > 1 // Years\n                        )) {\n                        options.labels.align = 'left';\n                        if (!defined(userLabels.x)) {\n                            options.labels.x = 3;\n                        }\n                    }\n                }\n                else {\n                    // Don't trim ticks which not in min/max range but\n                    // they are still in the min/max plus tickInterval.\n                    if (this.type !== 'treegrid' &&\n                        axis.grid &&\n                        axis.grid.columns) {\n                        this.minPointOffset = this.tickInterval;\n                    }\n                }\n            }\n        }\n        /**\n         * Creates a left and right wall on horizontal axes:\n         * - Places leftmost tick at the start of the axis, to create a left\n         *   wall\n         * - Ensures that the rightmost tick is at the end of the axis, to\n         *   create a right wall.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n            var gridAxisOptions;\n            if (gridOptions.enabled === true) {\n                // Merge the user options into default grid axis options so\n                // that when a user option is set, it takes precedence.\n                gridAxisOptions = merge(true, {\n                    className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n                    dateTimeLabelFormats: {\n                        hour: {\n                            list: ['%H:%M', '%H']\n                        },\n                        day: {\n                            list: ['%A, %e. %B', '%a, %e. %b', '%E']\n                        },\n                        week: {\n                            list: ['Week %W', 'W%W']\n                        },\n                        month: {\n                            list: ['%B', '%b', '%o']\n                        }\n                    },\n                    grid: {\n                        borderWidth: 1\n                    },\n                    labels: {\n                        padding: 2,\n                        style: {\n                            fontSize: '0.9em'\n                        }\n                    },\n                    margin: 0,\n                    title: {\n                        text: null,\n                        reserveSpace: false,\n                        rotation: 0,\n                        style: {\n                            textOverflow: 'ellipsis'\n                        }\n                    },\n                    // In a grid axis, only allow one unit of certain types,\n                    // for example we shouldn't have one grid cell spanning\n                    // two days.\n                    units: [[\n                            'millisecond', // Unit name\n                            [1, 10, 100]\n                        ], [\n                            'second',\n                            [1, 10]\n                        ], [\n                            'minute',\n                            [1, 5, 15]\n                        ], [\n                            'hour',\n                            [1, 6]\n                        ], [\n                            'day',\n                            [1]\n                        ], [\n                            'week',\n                            [1]\n                        ], [\n                            'month',\n                            [1]\n                        ], [\n                            'year',\n                            null\n                        ]]\n                }, userOptions);\n                // X-axis specific options\n                if (this.coll === 'xAxis') {\n                    // For linked axes, tickPixelInterval is used only if\n                    // the tickPositioner below doesn't run or returns\n                    // undefined (like multiple years)\n                    if (defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPixelInterval)) {\n                        gridAxisOptions.tickPixelInterval = 350;\n                    }\n                    // For the secondary grid axis, use the primary axis'\n                    // tick intervals and return ticks one level higher.\n                    if (\n                    // Check for tick pixel interval in options\n                    !defined(userOptions.tickPixelInterval) &&\n                        // Only for linked axes\n                        defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPositioner) &&\n                        !defined(userOptions.tickInterval) &&\n                        !defined(userOptions.units)) {\n                        gridAxisOptions.tickPositioner = function (min, max) {\n                            var parentInfo = (this.linkedParent &&\n                                this.linkedParent.tickPositions &&\n                                this.linkedParent.tickPositions.info);\n                            if (parentInfo) {\n                                var units = (gridAxisOptions.units || []);\n                                var unitIdx = void 0, count = 1, unitName = 'year';\n                                for (var i = 0; i < units.length; i++) {\n                                    var unit_1 = units[i];\n                                    if (unit_1 && unit_1[0] === parentInfo.unitName) {\n                                        unitIdx = i;\n                                        break;\n                                    }\n                                }\n                                // Get the first allowed count on the next unit.\n                                var unit = (isNumber(unitIdx) && units[unitIdx + 1]);\n                                if (unit) {\n                                    unitName = unit[0] || 'year';\n                                    var counts = unit[1];\n                                    count = counts && counts[0] || 1;\n                                    // In case the base X axis shows years, make the\n                                    // secondary axis show ten times the years (#11427)\n                                }\n                                else if (parentInfo.unitName === 'year') {\n                                    // `unitName` is 'year'\n                                    count = parentInfo.count * 10;\n                                }\n                                var unitRange = timeUnits[unitName];\n                                this.tickInterval = unitRange * count;\n                                return this.chart.time.getTimeTicks({ unitRange: unitRange, count: count, unitName: unitName }, min, max, this.options.startOfWeek);\n                            }\n                        };\n                    }\n                }\n                // Now merge the combined options into the axis options\n                merge(true, this.options, gridAxisOptions);\n                if (this.horiz) {\n                    /*               _________________________\n                    Make this:    ___|_____|_____|_____|__|\n                                    ^                     ^\n                                    _________________________\n                    Into this:    |_____|_____|_____|_____|\n                                        ^                 ^    */\n                    options.minPadding = pick(userOptions.minPadding, 0);\n                    options.maxPadding = pick(userOptions.maxPadding, 0);\n                }\n                // If borderWidth is set, then use its value for tick and\n                // line width.\n                if (isNumber(options.grid.borderWidth)) {\n                    options.tickWidth = options.lineWidth =\n                        gridOptions.borderWidth;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetOptions2(e) {\n            var axis = this;\n            var userOptions = e.userOptions;\n            var gridOptions = userOptions && userOptions.grid || {};\n            var columns = gridOptions.columns;\n            // Add column options to the parent axis. Children has their column options\n            // set on init in onGridAxisAfterInit.\n            if (gridOptions.enabled && columns) {\n                merge(true, axis.options, columns[0]);\n            }\n        }\n        /**\n         * Handle columns and setScale.\n         * @private\n         */\n        function onAfterSetScale() {\n            var axis = this;\n            (axis.grid.columns || []).forEach(function (column) { return column.setScale(); });\n        }\n        /**\n         * Draw vertical axis ticks extra long to create cell floors and roofs.\n         * Overrides the tickLength for vertical axes.\n         * @private\n         */\n        function onAfterTickSize(e) {\n            var _a = this, horiz = _a.horiz, maxLabelDimensions = _a.maxLabelDimensions, _b = _a.options.grid, gridOptions = _b === void 0 ? {} : _b;\n            if (gridOptions.enabled && maxLabelDimensions) {\n                var labelPadding = this.options.labels.distance * 2;\n                var distance = horiz ?\n                    (gridOptions.cellHeight ||\n                        labelPadding + maxLabelDimensions.height) :\n                    labelPadding + maxLabelDimensions.width;\n                if (isArray(e.tickSize)) {\n                    e.tickSize[0] = distance;\n                }\n                else {\n                    e.tickSize = [distance, 0];\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            this.axes.forEach(function (axis) {\n                (axis.grid && axis.grid.columns || []).forEach(function (column) {\n                    column.setAxisSize();\n                    column.setAxisTranslation();\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function onDestroy(e) {\n            var grid = this.grid;\n            (grid.columns || []).forEach(function (column) { return column.destroy(e.keepEvents); });\n            grid.columns = void 0;\n        }\n        /**\n         * Wraps axis init to draw cell walls on vertical axes.\n         * @private\n         */\n        function onInit(e) {\n            var axis = this;\n            var userOptions = e.userOptions || {};\n            var gridOptions = userOptions.grid || {};\n            if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n                userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n            }\n            if (!axis.grid) {\n                axis.grid = new GridAxisAdditions(axis);\n            }\n            axis.hiddenLabels = [];\n            axis.hiddenMarks = [];\n        }\n        /**\n         * Center tick labels in cells.\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n            // `verticalAlign` is currently not supported for axis.labels.\n            verticalAlign = 'middle', // LabelOpts.verticalAlign,\n            side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (isNumber(tickPositions[e.index + 1]) ?\n                tickPositions[e.index + 1] - tickmarkOffset :\n                (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n            // Only center tick labels in grid axes\n            if (gridOptions.enabled === true) {\n                var bottom = void 0, top_1, left = void 0, right = void 0;\n                // Calculate top and bottom positions of the cell.\n                if (side === 'top') {\n                    bottom = axis.top + axis.offset;\n                    top_1 = bottom - tickWidth;\n                }\n                else if (side === 'bottom') {\n                    top_1 = chart.chartHeight - axis.bottom + axis.offset;\n                    bottom = top_1 + tickWidth;\n                }\n                else {\n                    bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n                    top_1 = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n                }\n                // Calculate left and right positions of the cell.\n                if (side === 'right') {\n                    left = chart.chartWidth - axis.right + axis.offset;\n                    right = left + tickWidth;\n                }\n                else if (side === 'left') {\n                    right = axis.left + axis.offset;\n                    left = right - tickWidth;\n                }\n                else {\n                    left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n                    right = Math.min(// #15742\n                    Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n                }\n                tick.slotWidth = right - left;\n                // Calculate the positioning of the label based on\n                // alignment.\n                e.pos.x = (align === 'left' ?\n                    left :\n                    align === 'right' ?\n                        right :\n                        left + ((right - left) / 2) // Default to center\n                );\n                e.pos.y = (verticalAlign === 'top' ?\n                    top_1 :\n                    verticalAlign === 'bottom' ?\n                        bottom :\n                        top_1 + ((bottom - top_1) / 2) // Default to middle\n                );\n                if (label) {\n                    var lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n                    // Adjustment to y position to align the label correctly.\n                    // Would be better to have a setter or similar for this.\n                    if (!labelOpts.useHTML) {\n                        var lines = Math.round(labelHeight / lblMetrics.h);\n                        e.pos.y += (\n                        // Center the label\n                        // TODO: why does this actually center the label?\n                        ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                            // Adjust for height of additional lines.\n                            -(((lines - 1) * lblMetrics.h) / 2));\n                    }\n                    else {\n                        e.pos.y += (\n                        // Readjust yCorr in htmlUpdateTransform\n                        lblMetrics.b +\n                            // Adjust for height of html label\n                            -(labelHeight / 2));\n                    }\n                }\n                e.pos.x += (axis.horiz && labelOpts.x) || 0;\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickLabelFormat(ctx) {\n            var axis = ctx.axis, value = ctx.value;\n            if (axis.options.grid &&\n                axis.options.grid.enabled) {\n                var tickPos = axis.tickPositions;\n                var series = (axis.linkedParent || axis).series[0];\n                var isFirst = value === tickPos[0];\n                var isLast = value === tickPos[tickPos.length - 1];\n                var point = series && find(series.options.data, function (p) {\n                    return p[axis.isXAxis ? 'x' : 'y'] === value;\n                });\n                var pointCopy = void 0;\n                if (point && series.is('gantt')) {\n                    // For the Gantt set point aliases to the pointCopy\n                    // to do not change the original point\n                    pointCopy = merge(point);\n                    H.seriesTypes.gantt.prototype.pointClass\n                        .setGanttPointAliases(pointCopy);\n                }\n                // Make additional properties available for the\n                // formatter\n                ctx.isFirst = isFirst;\n                ctx.isLast = isLast;\n                ctx.point = pointCopy;\n            }\n        }\n        /**\n         * Makes tick labels which are usually ignored in a linked axis\n         * displayed if they are within range of linkedParent.min.\n         * ```\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Make this:             |   |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Into this:             | 1 |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         * ```\n         * @private\n         * @todo Does this function do what the drawing says? Seems to affect\n         *       ticks and not the labels directly?\n         */\n        function onTrimTicks() {\n            var axis = this, options = axis.options, gridOptions = options.grid || {}, categoryAxis = axis.categories, tickPositions = axis.tickPositions, firstPos = tickPositions[0], secondPos = tickPositions[1], lastPos = tickPositions[tickPositions.length - 1], beforeLastPos = tickPositions[tickPositions.length - 2], linkedMin = axis.linkedParent && axis.linkedParent.min, linkedMax = axis.linkedParent && axis.linkedParent.max, min = linkedMin || axis.min, max = linkedMax || axis.max, tickInterval = axis.tickInterval, startLessThanMin = ( // #19845\n            isNumber(min) &&\n                min >= firstPos + tickInterval &&\n                min < secondPos), endMoreThanMin = (isNumber(min) &&\n                firstPos < min &&\n                firstPos + tickInterval > min), startLessThanMax = (isNumber(max) &&\n                lastPos > max &&\n                lastPos - tickInterval < max), endMoreThanMax = (isNumber(max) &&\n                max <= lastPos - tickInterval &&\n                max > beforeLastPos);\n            if (gridOptions.enabled === true &&\n                !categoryAxis &&\n                (axis.isXAxis || axis.isLinked)) {\n                if ((endMoreThanMin || startLessThanMin) && !options.startOnTick) {\n                    tickPositions[0] = min;\n                }\n                if ((startLessThanMax || endMoreThanMax) && !options.endOnTick) {\n                    tickPositions[tickPositions.length - 1] = max;\n                }\n            }\n        }\n        /**\n         * Avoid altering tickInterval when reserving space.\n         * @private\n         */\n        function wrapUnsquish(proceed) {\n            var axis = this;\n            var _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a;\n            if (gridOptions.enabled === true && axis.categories) {\n                return axis.tickInterval;\n            }\n            return proceed.apply(axis, argsToArray(arguments));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Additions for grid axes.\n         * @private\n         * @class\n         */\n        var GridAxisAdditions = /** @class */ (function () {\n            /* *\n            *\n            *  Constructors\n            *\n            * */\n            function GridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Checks if an axis is the outer axis in its dimension. Since\n             * axes are placed outwards in order, the axis with the highest\n             * index is the outermost axis.\n             *\n             * Example: If there are multiple x-axes at the top of the chart,\n             * this function returns true if the axis supplied is the last\n             * of the x-axes.\n             *\n             * @private\n             *\n             * @return {boolean}\n             * True if the axis is the outermost axis in its dimension; false if\n             * not.\n             */\n            GridAxisAdditions.prototype.isOuterAxis = function () {\n                var _a;\n                var axis = this.axis;\n                var chart = axis.chart;\n                var columnIndex = axis.grid.columnIndex;\n                var columns = (((_a = axis.linkedParent) === null || _a === void 0 ? void 0 : _a.grid.columns) ||\n                    axis.grid.columns ||\n                    []);\n                var parentAxis = columnIndex ? axis.linkedParent : axis;\n                var thisIndex = -1, lastIndex = 0;\n                // On the left side, when we have columns (not only multiple axes), the\n                // main axis is to the left\n                if (axis.side === 3 && !chart.inverted && columns.length) {\n                    return !axis.linkedParent;\n                }\n                (chart[axis.coll] || []).forEach(function (otherAxis, index) {\n                    if (otherAxis.side === axis.side &&\n                        !otherAxis.options.isInternal) {\n                        lastIndex = index;\n                        if (otherAxis === parentAxis) {\n                            // Get the index of the axis in question\n                            thisIndex = index;\n                        }\n                    }\n                });\n                return (lastIndex === thisIndex &&\n                    (isNumber(columnIndex) ?\n                        columns.length === columnIndex :\n                        true));\n            };\n            /**\n             * Add extra border based on the provided path.\n             * @private\n             * @param {SVGPath} path\n             * The path of the border.\n             * @return {Highcharts.SVGElement}\n             * Border\n             */\n            GridAxisAdditions.prototype.renderBorder = function (path) {\n                var axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n                    .addClass('highcharts-axis-line')\n                    .add(axis.axisGroup);\n                if (!renderer.styledMode) {\n                    extraBorderLine.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth,\n                        zIndex: 7\n                    });\n                }\n                return extraBorderLine;\n            };\n            return GridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // First letter of the day of the week, e.g. 'M' for 'Monday'.\n        dateFormats.E = function (timestamp) {\n            return this.dateFormat('%a', timestamp, true).charAt(0);\n        };\n        // Adds week date format\n        dateFormats.W = function (timestamp) {\n            var time = this, d = new this.Date(timestamp), unitsToOmit = ['Hours', 'Milliseconds', 'Minutes', 'Seconds'];\n            unitsToOmit.forEach(function (format) {\n                time.set(format, d, 0);\n            });\n            var firstDay = (this.get('Day', d) + 6) % 7;\n            var thursday = new this.Date(d.valueOf());\n            this.set('Date', thursday, this.get('Date', d) - firstDay + 3);\n            var firstThursday = new this.Date(this.get('FullYear', thursday), 0, 1);\n            if (this.get('Day', firstThursday) !== 4) {\n                this.set('Month', d, 0);\n                this.set('Date', d, 1 + (11 - this.get('Day', firstThursday)) % 7);\n            }\n            return (1 +\n                Math.floor((thursday.valueOf() - firstThursday.valueOf()) / 604800000)).toString();\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var GridAxis = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * @productdesc {gantt}\n         * For grid axes (like in Gantt charts),\n         * it is possible to declare as a list to provide different\n         * formats depending on available space.\n         *\n         * Defaults to:\n         * ```js\n         * {\n         *     hour: { list: ['%H:%M', '%H'] },\n         *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n         *     week: { list: ['Week %W', 'W%W'] },\n         *     month: { list: ['%B', '%b', '%o'] }\n         * }\n         * ```\n         *\n         * @sample {gantt} gantt/grid-axis/date-time-label-formats\n         *         Gantt chart with custom axis date format.\n         *\n         * @apioption xAxis.dateTimeLabelFormats\n         */\n        /**\n         * Set grid options for the axis labels. Requires Highcharts Gantt.\n         *\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid\n         */\n        /**\n         * Enable grid on the axis labels. Defaults to true for Gantt charts.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid.enabled\n         */\n        /**\n         * Set specific options for each column (or row for horizontal axes) in the\n         * grid. Each extra column/row is its own axis, and the axis options can be set\n         * here.\n         *\n         * @sample gantt/demo/left-axis-table\n         *         Left axis as a table\n         * @sample gantt/demo/treegrid-columns\n         *         Collapsible tree grid with columns\n         *\n         * @type      {Array<Highcharts.XAxisOptions>}\n         * @apioption xAxis.grid.columns\n         */\n        /**\n         * Set border color for the label grid lines.\n         *\n         * @type      {Highcharts.ColorString}\n         * @default   #e6e6e6\n         * @apioption xAxis.grid.borderColor\n         */\n        /**\n         * Set border width of the label grid lines.\n         *\n         * @type      {number}\n         * @default   1\n         * @apioption xAxis.grid.borderWidth\n         */\n        /**\n         * Set cell height for grid axis labels. By default this is calculated from font\n         * size. This option only applies to horizontal axes. For vertical axes, check\n         * the [#yAxis.staticScale](yAxis.staticScale) option.\n         *\n         * @sample gantt/grid-axis/cellheight\n         *         Gant chart with custom cell height\n         * @type      {number}\n         * @apioption xAxis.grid.cellHeight\n         */\n        ''; // Keeps doclets above in JS file\n\n        return GridAxis;\n    });\n    _registerModule(_modules, 'masters/modules/grid-axis.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/GridAxis.js']], function (Highcharts, GridAxis) {\n\n        var G = Highcharts;\n        // Compositions\n        GridAxis.compose(G.Axis, G.Chart, G.Tick);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","Axis","H","U","GridAxisSide","dateFormats","addEvent","defined","erase","find","isArray","isNumber","merge","pick","timeUnits","wrap","isObject","x","getMaxLabelDimensions","ticks","tickPositions","dimensions","width","height","forEach","pos","label","tick","labelHeight","labelWidth","getBBox","textStr","textPxLength","Math","round","max","type","treeGrid","mapOfPosToGridNode","treeDepth","options","labels","indentation","wrapGetOffset","proceed","grid","columnsFirst","side","isColumn","columns","slice","reverse","column","getOffset","onAfterGetTitlePosition","e","gridOptions","axis","enabled","axisTitle","axisHeight","horiz","axisLeft","left","offset","opposite","options_1","axisTop","top","axisWidth","tickSize","titleWidth","xOption","title","yOption","y","titleMargin","margin","titleFontSize","chart","renderer","fontMetrics","f","offAxis","bottom","titlePosition","onAfterInit","_a","userOptions","align","categories","showLastLabel","labelRotation","rotation","minTickInterval","columnIndex","length","columnOptions","isInternal","linkedTo","scrollbar","axes","coll","push","onAfterRender","min","firstTick","styledMode","slotWidth","style","css","concat","maxLabelDimensions","rightWall","destroy","isOuterAxis","axisLine","lineWidth","linePath","getLinePath","startPoint","endPoint","distance","tickLength","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","chartWidth","toPixels","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","attr","stroke","lineColor","animate","d","lowerBorder","axisLineExtra","showAxis","render","hasRendered","linkedParent","lastTick","firstTick_1","tickMark","hiddenLabels","pop","element","show","hiddenMarks","hide","mark","isLast","onAfterSetAxisTranslation","tickInfo","info","userLabels","series","pointRange","dateTimeLabelFormats","unitName","range","count","minPointOffset","tickInterval","onAfterSetOptions","gridAxisOptions","className","hour","list","day","week","month","borderWidth","padding","fontSize","text","reserveSpace","textOverflow","units","tickPixelInterval","tickPositioner","parentInfo","unitIdx","i","unit_1","unit","counts","unitRange","time","getTimeTicks","startOfWeek","minPadding","maxPadding","tickWidth","onAfterSetOptions2","onAfterSetScale","setScale","onAfterTickSize","_b","labelPadding","cellHeight","onChartAfterSetChartSize","setAxisSize","setAxisTranslation","onDestroy","keepEvents","onInit","borderColor","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","reversed","labelOpts","tickPos","nextTickPos","index","crispCorr","top_1","right","chartHeight","len","translate","lblMetrics","useHTML","b","lines","h","onTickLabelFormat","ctx","value","isFirst","point","data","p","isXAxis","pointCopy","is","seriesTypes","gantt","prototype","pointClass","setGanttPointAliases","onTrimTicks","categoryAxis","firstPos","secondPos","lastPos","beforeLastPos","linkedMin","linkedMax","startLessThanMin","endMoreThanMin","startLessThanMax","endMoreThanMax","isLinked","startOnTick","endOnTick","wrapUnsquish","arguments","Array","call","parentAxis","thisIndex","lastIndex","inverted","otherAxis","extraBorderLine","addClass","add","axisGroup","zIndex","E","timestamp","dateFormat","charAt","W","Date","unitsToOmit","format","set","firstDay","get","thursday","valueOf","firstThursday","floor","toString","compose","AxisClass","ChartClass","TickClass","keepProps","includes","GridAxis","G","Chart","Tick"],"mappings":"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"}