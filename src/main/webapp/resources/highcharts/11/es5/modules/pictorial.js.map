{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Pictorial graph series type for Highcharts\n *\n * (c) 2010-2024 Torstein Honsi, Magdalena Gut\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/pictorial', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/PatternFill.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (A, D, U) {\n        /* *\n         *\n         *  Module for using patterns or images as point fills.\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Torstein Hønsi, Øystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var animObject = A.animObject;\n        var getOptions = D.getOptions;\n        var addEvent = U.addEvent, defined = U.defined, erase = U.erase, extend = U.extend, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var patterns = createPatterns();\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /** @private */\n        function compose(ChartClass, SeriesClass, SVGRendererClass) {\n            var PointClass = SeriesClass.prototype.pointClass, pointProto = PointClass.prototype;\n            if (!pointProto.calculatePatternDimensions) {\n                addEvent(ChartClass, 'endResize', onChartEndResize);\n                addEvent(ChartClass, 'redraw', onChartRedraw);\n                extend(pointProto, {\n                    calculatePatternDimensions: pointCalculatePatternDimensions\n                });\n                addEvent(PointClass, 'afterInit', onPointAfterInit);\n                addEvent(SeriesClass, 'render', onSeriesRender);\n                wrap(SeriesClass.prototype, 'getColor', wrapSeriesGetColor);\n                // Pattern scale corrections\n                addEvent(SeriesClass, 'afterRender', onPatternScaleCorrection);\n                addEvent(SeriesClass, 'mapZoomComplete', onPatternScaleCorrection);\n                extend(SVGRendererClass.prototype, {\n                    addPattern: rendererAddPattern\n                });\n                addEvent(SVGRendererClass, 'complexColor', onRendererComplexColor);\n            }\n        }\n        /**\n         * Add the predefined patterns.\n         * @private\n         */\n        function createPatterns() {\n            var patterns = [], colors = getOptions().colors;\n            // Start with subtle patterns\n            var i = 0;\n            for (var _i = 0, _a = [\n                'M 0 0 L 5 5 M 4.5 -0.5 L 5.5 0.5 M -0.5 4.5 L 0.5 5.5',\n                'M 0 5 L 5 0 M -0.5 0.5 L 0.5 -0.5 M 4.5 5.5 L 5.5 4.5',\n                'M 2 0 L 2 5 M 4 0 L 4 5',\n                'M 0 2 L 5 2 M 0 4 L 5 4',\n                'M 0 1.5 L 2.5 1.5 L 2.5 0 M 2.5 5 L 2.5 3.5 L 5 3.5'\n            ]; _i < _a.length; _i++) {\n                var pattern = _a[_i];\n                patterns.push({\n                    path: pattern,\n                    color: colors[i++],\n                    width: 5,\n                    height: 5,\n                    patternTransform: 'scale(1.4 1.4)'\n                });\n            }\n            // Then add the more drastic ones\n            i = 5;\n            for (var _b = 0, _c = [\n                'M 0 0 L 5 10 L 10 0',\n                'M 3 3 L 8 3 L 8 8 L 3 8 Z',\n                'M 5 5 m -4 0 a 4 4 0 1 1 8 0 a 4 4 0 1 1 -8 0',\n                'M 0 0 L 10 10 M 9 -1 L 11 1 M -1 9 L 1 11',\n                'M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9'\n            ]; _b < _c.length; _b++) {\n                var pattern = _c[_b];\n                patterns.push({\n                    path: pattern,\n                    color: colors[i],\n                    width: 10,\n                    height: 10\n                });\n                i = i + 5;\n            }\n            return patterns;\n        }\n        /**\n         * Utility function to compute a hash value from an object. Modified Java\n         * String.hashCode implementation in JS. Use the preSeed parameter to add an\n         * additional seeding step.\n         *\n         * @private\n         * @function hashFromObject\n         *\n         * @param {Object} obj\n         *        The javascript object to compute the hash from.\n         *\n         * @param {boolean} [preSeed=false]\n         *        Add an optional preSeed stage.\n         *\n         * @return {string}\n         *         The computed hash.\n         */\n        function hashFromObject(obj, preSeed) {\n            var str = JSON.stringify(obj), strLen = str.length || 0;\n            var hash = 0, i = 0, char, seedStep;\n            if (preSeed) {\n                seedStep = Math.max(Math.floor(strLen / 500), 1);\n                for (var a = 0; a < strLen; a += seedStep) {\n                    hash += str.charCodeAt(a);\n                }\n                hash = hash & hash;\n            }\n            for (; i < strLen; ++i) {\n                char = str.charCodeAt(i);\n                hash = ((hash << 5) - hash) + char;\n                hash = hash & hash;\n            }\n            return hash.toString(16).replace('-', '1');\n        }\n        /**\n         * When animation is used, we have to recalculate pattern dimensions after\n         * resize, as the bounding boxes are not available until then.\n         * @private\n         */\n        function onChartEndResize() {\n            if (this.renderer &&\n                (this.renderer.defIds || []).filter(function (id) { return (id &&\n                    id.indexOf &&\n                    id.indexOf('highcharts-pattern-') === 0); }).length) {\n                // We have non-default patterns to fix. Find them by looping through\n                // all points.\n                for (var _i = 0, _a = this.series; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    if (series.visible) {\n                        for (var _b = 0, _c = series.points; _b < _c.length; _b++) {\n                            var point = _c[_b];\n                            var colorOptions = point.options && point.options.color;\n                            if (colorOptions &&\n                                colorOptions.pattern) {\n                                colorOptions.pattern\n                                    ._width = 'defer';\n                                colorOptions.pattern\n                                    ._height = 'defer';\n                            }\n                        }\n                    }\n                }\n                // Redraw without animation\n                this.redraw(false);\n            }\n        }\n        /**\n         * Add a garbage collector to delete old patterns with autogenerated hashes that\n         * are no longer being referenced.\n         * @private\n         */\n        function onChartRedraw() {\n            var usedIds = {}, renderer = this.renderer, \n            // Get the autocomputed patterns - these are the ones we might delete\n            patterns = (renderer.defIds || []).filter(function (pattern) { return (pattern.indexOf &&\n                pattern.indexOf('highcharts-pattern-') === 0); });\n            if (patterns.length) {\n                // Look through the DOM for usage of the patterns. This can be points,\n                // series, tooltips etc.\n                [].forEach.call(this.renderTo.querySelectorAll('[color^=\"url(\"], [fill^=\"url(\"], [stroke^=\"url(\"]'), function (node) {\n                    var id = node.getAttribute('fill') ||\n                        node.getAttribute('color') ||\n                        node.getAttribute('stroke');\n                    if (id) {\n                        var sanitizedId = id\n                            .replace(renderer.url, '')\n                            .replace('url(#', '')\n                            .replace(')', '');\n                        usedIds[sanitizedId] = true;\n                    }\n                });\n                // Loop through the patterns that exist and see if they are used\n                for (var _i = 0, patterns_1 = patterns; _i < patterns_1.length; _i++) {\n                    var id = patterns_1[_i];\n                    if (!usedIds[id]) {\n                        // Remove id from used id list\n                        erase(renderer.defIds, id);\n                        // Remove pattern element\n                        if (renderer.patternElements[id]) {\n                            renderer.patternElements[id].destroy();\n                            delete renderer.patternElements[id];\n                        }\n                    }\n                }\n            }\n        }\n        /**\n         * Merge series color options to points.\n         * @private\n         */\n        function onPointAfterInit() {\n            var point = this, colorOptions = point.options.color;\n            // Only do this if we have defined a specific color on this point. Otherwise\n            // we will end up trying to re-add the series color for each point.\n            if (colorOptions && colorOptions.pattern) {\n                // Move path definition to object, allows for merge with series path\n                // definition\n                if (typeof colorOptions.pattern.path === 'string') {\n                    colorOptions.pattern.path = {\n                        d: colorOptions.pattern.path\n                    };\n                }\n                // Merge with series options\n                point.color = point.options.color = merge(point.series.options.color, colorOptions);\n            }\n        }\n        /**\n         * Add functionality to SVG renderer to handle patterns as complex colors.\n         * @private\n         */\n        function onRendererComplexColor(args) {\n            var color = args.args[0], prop = args.args[1], element = args.args[2], chartIndex = (this.chartIndex || 0);\n            var pattern = color.pattern, value = \"#333333\" /* Palette.neutralColor80 */;\n            // Handle patternIndex\n            if (typeof color.patternIndex !== 'undefined' && patterns) {\n                pattern = patterns[color.patternIndex];\n            }\n            // Skip and call default if there is no pattern\n            if (!pattern) {\n                return true;\n            }\n            // We have a pattern.\n            if (pattern.image ||\n                typeof pattern.path === 'string' ||\n                pattern.path && pattern.path.d) {\n                // Real pattern. Add it and set the color value to be a reference.\n                // Force Hash-based IDs for legend items, as they are drawn before\n                // point render, meaning they are drawn before autocalculated image\n                // width/heights. We don't want them to highjack the width/height for\n                // this ID if it is defined by users.\n                var forceHashId = element.parentNode &&\n                    element.parentNode.getAttribute('class');\n                forceHashId = forceHashId &&\n                    forceHashId.indexOf('highcharts-legend') > -1;\n                // If we don't have a width/height yet, handle it. Try faking a point\n                // and running the algorithm again.\n                if (pattern._width === 'defer' || pattern._height === 'defer') {\n                    pointCalculatePatternDimensions.call({ graphic: { element: element } }, pattern);\n                }\n                // If we don't have an explicit ID, compute a hash from the\n                // definition and use that as the ID. This ensures that points with\n                // the same pattern definition reuse existing pattern elements by\n                // default. We combine two hashes, the second with an additional\n                // preSeed algorithm, to minimize collision probability.\n                if (forceHashId || !pattern.id) {\n                    // Make a copy so we don't accidentally edit options when setting ID\n                    pattern = merge({}, pattern);\n                    pattern.id = 'highcharts-pattern-' + chartIndex + '-' +\n                        hashFromObject(pattern) + hashFromObject(pattern, true);\n                }\n                // Add it. This function does nothing if an element with this ID\n                // already exists.\n                this.addPattern(pattern, !this.forExport && pick(pattern.animation, this.globalAnimation, { duration: 100 }));\n                value = \"url(\".concat(this.url, \"#\").concat(pattern.id + (this.forExport ? '-export' : ''), \")\");\n            }\n            else {\n                // Not a full pattern definition, just add color\n                value = pattern.color || value;\n            }\n            // Set the fill/stroke prop on the element\n            element.setAttribute(prop, value);\n            // Allow the color to be concatenated into tooltips formatters etc.\n            color.toString = function () {\n                return value;\n            };\n            // Skip default handler\n            return false;\n        }\n        /**\n         * Calculate pattern dimensions on points that have their own pattern.\n         * @private\n         */\n        function onSeriesRender() {\n            var isResizing = this.chart.isResizing;\n            if (this.isDirtyData || isResizing || !this.chart.hasRendered) {\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    var colorOptions = point.options && point.options.color;\n                    if (colorOptions &&\n                        colorOptions.pattern) {\n                        // For most points we want to recalculate the dimensions on\n                        // render, where we have the shape args and bbox. But if we\n                        // are resizing and don't have the shape args, defer it, since\n                        // the bounding box is still not resized.\n                        if (isResizing &&\n                            !(point.shapeArgs &&\n                                point.shapeArgs.width &&\n                                point.shapeArgs.height)) {\n                            colorOptions\n                                .pattern._width = 'defer';\n                            colorOptions\n                                .pattern._height = 'defer';\n                        }\n                        else {\n                            point.calculatePatternDimensions(colorOptions.pattern);\n                        }\n                    }\n                }\n            }\n        }\n        /**\n         * Set dimensions on pattern from point. This function will set internal\n         * pattern._width/_height properties if width and height are not both already\n         * set. We only do this on image patterns. The _width/_height properties are set\n         * to the size of the bounding box of the point, optionally taking aspect ratio\n         * into account. If only one of width or height are supplied as options, the\n         * undefined option is calculated as above.\n         *\n         * @private\n         * @function Highcharts.Point#calculatePatternDimensions\n         *\n         * @param {Highcharts.PatternOptionsObject} pattern\n         *        The pattern to set dimensions on.\n         *\n         * @return {void}\n         *\n         * @requires modules/pattern-fill\n         */\n        function pointCalculatePatternDimensions(pattern) {\n            if (pattern.width && pattern.height) {\n                return;\n            }\n            var bBox = this.graphic && (this.graphic.getBBox &&\n                this.graphic.getBBox(true) ||\n                this.graphic.element &&\n                    this.graphic.element.getBBox()) || {}, shapeArgs = this.shapeArgs;\n            // Prefer using shapeArgs, as it is animation agnostic\n            if (shapeArgs) {\n                bBox.width = shapeArgs.width || bBox.width;\n                bBox.height = shapeArgs.height || bBox.height;\n                bBox.x = shapeArgs.x || bBox.x;\n                bBox.y = shapeArgs.y || bBox.y;\n            }\n            // For images we stretch to bounding box\n            if (pattern.image) {\n                // If we do not have a bounding box at this point, simply add a defer\n                // key and pick this up in the fillSetter handler, where the bounding\n                // box should exist.\n                if (!bBox.width || !bBox.height) {\n                    pattern._width = 'defer';\n                    pattern._height = 'defer';\n                    // Mark the pattern to be flipped later if upside down (#16810)\n                    var scaleY = this.series.chart.mapView &&\n                        this.series.chart.mapView.getSVGTransform().scaleY;\n                    if (defined(scaleY) && scaleY < 0) {\n                        pattern._inverted = true;\n                    }\n                    return;\n                }\n                // Handle aspect ratio filling\n                if (pattern.aspectRatio) {\n                    bBox.aspectRatio = bBox.width / bBox.height;\n                    if (pattern.aspectRatio > bBox.aspectRatio) {\n                        // Height of bBox will determine width\n                        bBox.aspectWidth = bBox.height * pattern.aspectRatio;\n                    }\n                    else {\n                        // Width of bBox will determine height\n                        bBox.aspectHeight = bBox.width / pattern.aspectRatio;\n                    }\n                }\n                // We set the width/height on internal properties to differentiate\n                // between the options set by a user and by this function.\n                pattern._width = pattern.width ||\n                    Math.ceil(bBox.aspectWidth || bBox.width);\n                pattern._height = pattern.height ||\n                    Math.ceil(bBox.aspectHeight || bBox.height);\n            }\n            // Set x/y accordingly, centering if using aspect ratio, otherwise adjusting\n            // so bounding box corner is 0,0 of pattern.\n            if (!pattern.width) {\n                pattern._x = pattern.x || 0;\n                pattern._x += bBox.x - Math.round(bBox.aspectWidth ?\n                    Math.abs(bBox.aspectWidth - bBox.width) / 2 :\n                    0);\n            }\n            if (!pattern.height) {\n                pattern._y = pattern.y || 0;\n                pattern._y += bBox.y - Math.round(bBox.aspectHeight ?\n                    Math.abs(bBox.aspectHeight - bBox.height) / 2 :\n                    0);\n            }\n        }\n        /**\n         * Add a pattern to the renderer.\n         *\n         * @private\n         * @function Highcharts.SVGRenderer#addPattern\n         *\n         * @param {Highcharts.PatternObject} options\n         * The pattern options.\n         *\n         * @param {boolean|Partial<Highcharts.AnimationOptionsObject>} [animation]\n         * The animation options.\n         *\n         * @return {Highcharts.SVGElement|undefined}\n         * The added pattern. Undefined if the pattern already exists.\n         *\n         * @requires modules/pattern-fill\n         */\n        function rendererAddPattern(options, animation) {\n            var _this = this;\n            var animate = pick(animation, true), animationOptions = animObject(animate), color = options.color || \"#333333\" /* Palette.neutralColor80 */, defaultSize = 32, height = options.height ||\n                (typeof options._height === 'number' ? options._height : 0) ||\n                defaultSize, rect = function (fill) { return _this\n                .rect(0, 0, width, height)\n                .attr({ fill: fill })\n                .add(pattern); }, width = options.width ||\n                (typeof options._width === 'number' ? options._width : 0) ||\n                defaultSize;\n            var attribs, id = options.id, path;\n            if (!id) {\n                this.idCounter = this.idCounter || 0;\n                id = ('highcharts-pattern-' +\n                    this.idCounter +\n                    '-' +\n                    (this.chartIndex || 0));\n                ++this.idCounter;\n            }\n            if (this.forExport) {\n                id += '-export';\n            }\n            // Do nothing if ID already exists\n            this.defIds = this.defIds || [];\n            if (this.defIds.indexOf(id) > -1) {\n                return;\n            }\n            // Store ID in list to avoid duplicates\n            this.defIds.push(id);\n            // Calculate pattern element attributes\n            var attrs = {\n                id: id,\n                patternUnits: 'userSpaceOnUse',\n                patternContentUnits: options.patternContentUnits || 'userSpaceOnUse',\n                width: width,\n                height: height,\n                x: options._x || options.x || 0,\n                y: options._y || options.y || 0\n            };\n            if (options._inverted) {\n                attrs.patternTransform = 'scale(1, -1)'; // (#16810)\n                if (options.patternTransform) {\n                    options.patternTransform += ' scale(1, -1)';\n                }\n            }\n            if (options.patternTransform) {\n                attrs.patternTransform = options.patternTransform;\n            }\n            var pattern = this.createElement('pattern').attr(attrs).add(this.defs);\n            // Set id on the SVGRenderer object\n            pattern.id = id;\n            // Use an SVG path for the pattern\n            if (options.path) {\n                path = U.isObject(options.path) ?\n                    options.path :\n                    { d: options.path };\n                // The background\n                if (options.backgroundColor) {\n                    rect(options.backgroundColor);\n                }\n                // The pattern\n                attribs = {\n                    'd': path.d\n                };\n                if (!this.styledMode) {\n                    attribs.stroke = path.stroke || color;\n                    attribs['stroke-width'] = pick(path.strokeWidth, 2);\n                    attribs.fill = path.fill || 'none';\n                }\n                if (path.transform) {\n                    attribs.transform = path.transform;\n                }\n                this.createElement('path').attr(attribs).add(pattern);\n                pattern.color = color;\n                // Image pattern\n            }\n            else if (options.image) {\n                if (animate) {\n                    this.image(options.image, 0, 0, width, height, function () {\n                        // Onload\n                        this.animate({\n                            opacity: pick(options.opacity, 1)\n                        }, animationOptions);\n                        removeEvent(this.element, 'load');\n                    }).attr({ opacity: 0 }).add(pattern);\n                }\n                else {\n                    this.image(options.image, 0, 0, width, height).add(pattern);\n                }\n            }\n            // For non-animated patterns, set opacity now\n            if (!(options.image && animate) && typeof options.opacity !== 'undefined') {\n                [].forEach.call(pattern.element.childNodes, function (child) {\n                    child.setAttribute('opacity', options.opacity);\n                });\n            }\n            // Store for future reference\n            this.patternElements = this.patternElements || {};\n            this.patternElements[id] = pattern;\n            return pattern;\n        }\n        /**\n         * Make sure we have a series color.\n         * @private\n         */\n        function wrapSeriesGetColor(proceed) {\n            var oldColor = this.options.color;\n            // Temporarily remove color options to get defaults\n            if (oldColor &&\n                oldColor.pattern &&\n                !oldColor.pattern.color) {\n                delete this.options.color;\n                // Get default\n                proceed.apply(this, [].slice.call(arguments, 1));\n                // Replace with old, but add default color\n                oldColor.pattern.color =\n                    this.color;\n                this.color = this.options.color = oldColor;\n            }\n            else {\n                // We have a color, no need to do anything special\n                proceed.apply(this, [].slice.call(arguments, 1));\n            }\n        }\n        /**\n         * Scale patterns inversely to the series it's used in.\n         * Maintains a visual (1,1) scale regardless of size.\n         * @private\n         */\n        function onPatternScaleCorrection() {\n            var _a, _b;\n            var series = this;\n            // If not a series used in a map chart, skip it.\n            if (!((_a = series.chart) === null || _a === void 0 ? void 0 : _a.mapView)) {\n                return;\n            }\n            var chart = series.chart, renderer = chart.renderer, patterns = renderer.patternElements;\n            // Only scale if we have patterns to scale.\n            if (((_b = renderer.defIds) === null || _b === void 0 ? void 0 : _b.length) && patterns) {\n                // Filter for points which have patterns that don't use images assigned\n                // and has a group scale available.\n                series.points.filter(function (p) {\n                    var _a, _b, _c, _d;\n                    var point = p;\n                    // No graphic we can fetch id from, filter out this point.\n                    if (!point.graphic) {\n                        return false;\n                    }\n                    return (point.graphic.element.hasAttribute('fill') ||\n                        point.graphic.element.hasAttribute('color') ||\n                        point.graphic.element.hasAttribute('stroke')) &&\n                        !((_b = (_a = point.options.color) === null || _a === void 0 ? void 0 : _a.pattern) === null || _b === void 0 ? void 0 : _b.image) &&\n                        !!((_c = point.group) === null || _c === void 0 ? void 0 : _c.scaleX) &&\n                        !!((_d = point.group) === null || _d === void 0 ? void 0 : _d.scaleY);\n                })\n                    // Map up pattern id's and their scales.\n                    .map(function (p) {\n                    var _a, _b, _c, _d, _e;\n                    var point = p;\n                    // Parse the id from the graphic element of the point.\n                    var id = (((_a = point.graphic) === null || _a === void 0 ? void 0 : _a.element.getAttribute('fill')) ||\n                        ((_b = point.graphic) === null || _b === void 0 ? void 0 : _b.element.getAttribute('color')) ||\n                        ((_c = point.graphic) === null || _c === void 0 ? void 0 : _c.element.getAttribute('stroke')) || '')\n                        .replace(renderer.url, '')\n                        .replace('url(#', '')\n                        .replace(')', '');\n                    return {\n                        id: id,\n                        x: ((_d = point.group) === null || _d === void 0 ? void 0 : _d.scaleX) || 1,\n                        y: ((_e = point.group) === null || _e === void 0 ? void 0 : _e.scaleY) || 1\n                    };\n                })\n                    // Filter out colors and other non-patterns, as well as duplicates.\n                    .filter(function (pointInfo, index, arr) {\n                    return pointInfo.id !== '' &&\n                        pointInfo.id.indexOf('highcharts-pattern-') !== -1 &&\n                        !arr.some(function (otherInfo, otherIndex) {\n                            return otherInfo.id === pointInfo.id && otherIndex < index;\n                        });\n                })\n                    .forEach(function (pointInfo) {\n                    var id = pointInfo.id;\n                    patterns[id].scaleX = 1 / pointInfo.x;\n                    patterns[id].scaleY = 1 / pointInfo.y;\n                    patterns[id].updateTransform('patternTransform');\n                });\n            }\n        }\n        /* *\n         *\n         *  Export\n         *\n         * */\n        var PatternFill = {\n            compose: compose,\n            patterns: patterns\n        };\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Pattern options\n         *\n         * @interface Highcharts.PatternOptionsObject\n         */ /**\n        * Background color for the pattern if a `path` is set (not images).\n        * @name Highcharts.PatternOptionsObject#backgroundColor\n        * @type {Highcharts.ColorString|undefined}\n        */ /**\n        * URL to an image to use as the pattern.\n        * @name Highcharts.PatternOptionsObject#image\n        * @type {string|undefined}\n        */ /**\n        * Width of the pattern. For images this is automatically set to the width of\n        * the element bounding box if not supplied. For non-image patterns the default\n        * is 32px. Note that automatic resizing of image patterns to fill a bounding\n        * box dynamically is only supported for patterns with an automatically\n        * calculated ID.\n        * @name Highcharts.PatternOptionsObject#width\n        * @type {number|undefined}\n        */ /**\n        * Analogous to pattern.width.\n        * @name Highcharts.PatternOptionsObject#height\n        * @type {number|undefined}\n        */ /**\n        * For automatically calculated width and height on images, it is possible to\n        * set an aspect ratio. The image will be zoomed to fill the bounding box,\n        * maintaining the aspect ratio defined.\n        * @name Highcharts.PatternOptionsObject#aspectRatio\n        * @type {number|undefined}\n        */ /**\n        * Horizontal offset of the pattern. Defaults to 0.\n        * @name Highcharts.PatternOptionsObject#x\n        * @type {number|undefined}\n        */ /**\n        * Vertical offset of the pattern. Defaults to 0.\n        * @name Highcharts.PatternOptionsObject#y\n        * @type {number|undefined}\n        */ /**\n        * Either an SVG path as string, or an object. As an object, supply the path\n        * string in the `path.d` property. Other supported properties are standard SVG\n        * attributes like `path.stroke` and `path.fill`. If a path is supplied for the\n        * pattern, the `image` property is ignored.\n        * @name Highcharts.PatternOptionsObject#path\n        * @type {string|Highcharts.SVGAttributes|undefined}\n        */ /**\n        * SVG `patternTransform` to apply to the entire pattern.\n        * @name Highcharts.PatternOptionsObject#patternTransform\n        * @type {string|undefined}\n        * @see [patternTransform demo](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/series/pattern-fill-transform)\n        */ /**\n        * Pattern color, used as default path stroke.\n        * @name Highcharts.PatternOptionsObject#color\n        * @type {Highcharts.ColorString|undefined}\n        */ /**\n        * Opacity of the pattern as a float value from 0 to 1.\n        * @name Highcharts.PatternOptionsObject#opacity\n        * @type {number|undefined}\n        */ /**\n        * ID to assign to the pattern. This is automatically computed if not added, and\n        * identical patterns are reused. To refer to an existing pattern for a\n        * Highcharts color, use `color: \"url(#pattern-id)\"`.\n        * @name Highcharts.PatternOptionsObject#id\n        * @type {string|undefined}\n        */\n        /**\n         * Holds a pattern definition.\n         *\n         * @sample highcharts/series/pattern-fill-area/\n         *         Define a custom path pattern\n         * @sample highcharts/series/pattern-fill-pie/\n         *         Default patterns and a custom image pattern\n         * @sample maps/demo/pattern-fill-map/\n         *         Custom images on map\n         *\n         * @example\n         * // Pattern used as a color option\n         * color: {\n         *     pattern: {\n         *            path: {\n         *                 d: 'M 3 3 L 8 3 L 8 8 Z',\n         *                fill: '#102045'\n         *            },\n         *            width: 12,\n         *            height: 12,\n         *            color: '#907000',\n         *            opacity: 0.5\n         *     }\n         * }\n         *\n         * @interface Highcharts.PatternObject\n         */ /**\n        * Pattern options\n        * @name Highcharts.PatternObject#pattern\n        * @type {Highcharts.PatternOptionsObject}\n        */ /**\n        * Animation options for the image pattern loading.\n        * @name Highcharts.PatternObject#animation\n        * @type {boolean|Partial<Highcharts.AnimationOptionsObject>|undefined}\n        */ /**\n        * Optionally an index referencing which pattern to use. Highcharts adds\n        * 10 default patterns to the `Highcharts.patterns` array. Additional\n        * pattern definitions can be pushed to this array if desired. This option\n        * is an index into this array.\n        * @name Highcharts.PatternObject#patternIndex\n        * @type {number|undefined}\n        */\n        ''; // Keeps doclets above in transpiled file\n\n        return PatternFill;\n    });\n    _registerModule(_modules, 'Series/Pictorial/PictorialUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi, Magdalena Gut\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined;\n        /**\n         *\n         */\n        function rescalePatternFill(element, stackHeight, width, height, borderWidth) {\n            if (borderWidth === void 0) { borderWidth = 1; }\n            var fill = element && element.attr('fill'), match = fill && fill.match(/url\\(([^)]+)\\)/);\n            if (match) {\n                var patternPath = document.querySelector(\"\".concat(match[1], \" path\"));\n                if (patternPath) {\n                    var bBox = patternPath.getBBox();\n                    // Firefox (v108/Mac) is unable to detect the bounding box within\n                    // defs. Without this block, the pictorial is not rendered.\n                    if (bBox.width === 0) {\n                        var parent_1 = patternPath.parentElement;\n                        // Temporarily append it to the root\n                        element.renderer.box.appendChild(patternPath);\n                        bBox = patternPath.getBBox();\n                        parent_1.appendChild(patternPath);\n                    }\n                    var scaleX = 1 / (bBox.width + borderWidth);\n                    var scaleY = stackHeight / height / bBox.height, aspectRatio = bBox.width / bBox.height, pointAspectRatio = width / stackHeight, x = -bBox.width / 2;\n                    if (aspectRatio < pointAspectRatio) {\n                        scaleX = scaleX * aspectRatio / pointAspectRatio;\n                    }\n                    patternPath.setAttribute('stroke-width', borderWidth / (width * scaleX));\n                    patternPath.setAttribute('transform', 'translate(0.5, 0)' +\n                        \"scale(\".concat(scaleX, \" \").concat(scaleY, \") \") +\n                        \"translate(\".concat(x + borderWidth * scaleX / 2, \", \").concat(-bBox.y, \")\"));\n                }\n            }\n        }\n        /**\n         *\n         */\n        function getStackMetrics(yAxis, shape) {\n            var height = yAxis.len, y = 0;\n            if (shape && defined(shape.max)) {\n                y = yAxis.toPixels(shape.max, true);\n                height = yAxis.len - y;\n            }\n            return {\n                height: height,\n                y: y\n            };\n        }\n        /**\n         *\n         */\n        function invertShadowGroup(shadowGroup, yAxis) {\n            var inverted = yAxis.chart.inverted;\n            if (inverted) {\n                shadowGroup.attr({\n                    rotation: inverted ? 90 : 0,\n                    scaleX: inverted ? -1 : 1\n                });\n            }\n        }\n\n        return { rescalePatternFill: rescalePatternFill, invertShadowGroup: invertShadowGroup, getStackMetrics: getStackMetrics };\n    });\n    _registerModule(_modules, 'Series/Pictorial/PictorialPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Series/Pictorial/PictorialUtilities.js']], function (SeriesRegistry, PictorialUtilities) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi, Magdalena Gut\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var rescalePatternFill = PictorialUtilities.rescalePatternFill, getStackMetrics = PictorialUtilities.getStackMetrics;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var PictorialPoint = /** @class */ (function (_super) {\n            __extends(PictorialPoint, _super);\n            function PictorialPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            PictorialPoint.prototype.setState = function () {\n                var point = this;\n                _super.prototype.setState.apply(point, arguments);\n                var series = point.series, paths = series.options.paths;\n                if (point.graphic && point.shapeArgs && paths) {\n                    var shape = paths[point.index %\n                        paths.length];\n                    rescalePatternFill(point.graphic, getStackMetrics(series.yAxis, shape).height, point.shapeArgs.width || 0, point.shapeArgs.height || Infinity, point.series.options.borderWidth || 0);\n                }\n            };\n            return PictorialPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return PictorialPoint;\n    });\n    _registerModule(_modules, 'Series/Pictorial/PictorialSeries.js', [_modules['Extensions/PatternFill.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Chart/Chart.js'], _modules['Series/Pictorial/PictorialPoint.js'], _modules['Series/Pictorial/PictorialUtilities.js'], _modules['Core/Series/Series.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (PatternFill, A, Chart, PictorialPoint, PictorialUtilities, Series, SeriesRegistry, StackItem, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi, Magdalena Gut\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        PatternFill.compose(Chart, Series, SVGRenderer);\n        var animObject = A.animObject;\n        var getStackMetrics = PictorialUtilities.getStackMetrics, invertShadowGroup = PictorialUtilities.invertShadowGroup, rescalePatternFill = PictorialUtilities.rescalePatternFill;\n        var addEvent = U.addEvent, defined = U.defined, merge = U.merge, objectEach = U.objectEach, pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The pictorial series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pictorial\n         *\n         * @augments Highcharts.Series\n         */\n        var PictorialSeries = /** @class */ (function (_super) {\n            __extends(PictorialSeries, _super);\n            function PictorialSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             * Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Animate in the series. Called internally twice. First with the `init`\n             * parameter set to true, which sets up the initial state of the\n             * animation. Then when ready, it is called with the `init` parameter\n             * undefined, in order to perform the actual animation.\n             *\n             * @function Highcharts.Series#animate\n             *\n             * @param {boolean} [init]\n             * Initialize the animation.\n             */\n            PictorialSeries.prototype.animate = function (init) {\n                var _a = this, chart = _a.chart, group = _a.group, animation = animObject(this.options.animation), \n                // The key for temporary animation clips\n                animationClipKey = [\n                    this.getSharedClipKey(),\n                    animation.duration,\n                    animation.easing,\n                    animation.defer\n                ].join(',');\n                var animationClipRect = chart.sharedClips[animationClipKey];\n                // Initialize the animation. Set up the clipping rectangle.\n                if (init && group) {\n                    var clipBox = this.getClipBox();\n                    // Create temporary animation clips\n                    if (!animationClipRect) {\n                        clipBox.y = clipBox.height;\n                        clipBox.height = 0;\n                        animationClipRect = chart.renderer.clipRect(clipBox);\n                        chart.sharedClips[animationClipKey] = animationClipRect;\n                    }\n                    group.clip(animationClipRect);\n                    // Run the animation\n                }\n                else if (animationClipRect &&\n                    // Only first series in this pane\n                    !animationClipRect.hasClass('highcharts-animating')) {\n                    var finalBox = this.getClipBox();\n                    animationClipRect\n                        .addClass('highcharts-animating')\n                        .animate(finalBox, animation);\n                }\n            };\n            PictorialSeries.prototype.animateDrilldown = function () { };\n            PictorialSeries.prototype.animateDrillupFrom = function () { };\n            PictorialSeries.prototype.pointAttribs = function (point) {\n                var pointAttribs = _super.prototype.pointAttribs.apply(this, arguments), seriesOptions = this.options, series = this, paths = seriesOptions.paths;\n                if (point && point.shapeArgs && paths) {\n                    var shape = paths[point.index % paths.length], _a = getStackMetrics(series.yAxis, shape), y = _a.y, height = _a.height, pathDef = shape.definition;\n                    // New pattern, replace\n                    if (pathDef !== point.pathDef) {\n                        point.pathDef = pathDef;\n                        pointAttribs.fill = {\n                            pattern: {\n                                path: {\n                                    d: pathDef,\n                                    fill: pointAttribs.fill,\n                                    strokeWidth: pointAttribs['stroke-width'],\n                                    stroke: pointAttribs.stroke\n                                },\n                                x: point.shapeArgs.x,\n                                y: y,\n                                width: point.shapeArgs.width || 0,\n                                height: height,\n                                patternContentUnits: 'objectBoundingBox',\n                                backgroundColor: 'none',\n                                color: '#ff0000'\n                            }\n                        };\n                    }\n                    else if (point.pathDef && point.graphic) {\n                        delete pointAttribs.fill;\n                    }\n                }\n                delete pointAttribs.stroke;\n                delete pointAttribs.strokeWidth;\n                return pointAttribs;\n            };\n            /**\n             * Make sure that path.max is also considered when calculating dataMax.\n             */\n            PictorialSeries.prototype.getExtremes = function () {\n                var extremes = _super.prototype.getExtremes.apply(this, arguments), series = this, paths = series.options.paths;\n                if (paths) {\n                    paths.forEach(function (path) {\n                        if (defined(path.max) &&\n                            defined(extremes.dataMax) &&\n                            path.max > extremes.dataMax) {\n                            extremes.dataMax = path.max;\n                        }\n                    });\n                }\n                return extremes;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            PictorialSeries.defaultOptions = merge(ColumnSeries.defaultOptions, \n            /**\n             * A pictorial chart uses vector images to represents the data.\n             * The shape of the data point is taken from the path parameter.\n             *\n             * @sample       {highcharts} highcharts/demo/pictorial/\n             *               Pictorial chart\n             *\n             * @extends      plotOptions.column\n             * @since 11.0.0\n             * @product      highcharts\n             * @excluding    allAreas, borderRadius,\n             *               centerInCategory, colorAxis, colorKey, connectEnds,\n             *               connectNulls, crisp, compare, compareBase, dataSorting,\n             *               dashStyle, dataAsColumns, linecap, lineWidth, shadow,\n             *               onPoint\n             * @requires     modules/pictorial\n             * @optionparent plotOptions.pictorial\n             */\n            {\n                borderWidth: 0\n            });\n            return PictorialSeries;\n        }(ColumnSeries));\n        /* *\n         *\n         *  Events\n         *\n         * */\n        addEvent(PictorialSeries, 'afterRender', function () {\n            var series = this, paths = series.options.paths, fillUrlMatcher = /url\\(([^)]+)\\)/;\n            series.points.forEach(function (point) {\n                if (point.graphic && point.shapeArgs && paths) {\n                    var shape = paths[point.index % paths.length], fill = point.graphic.attr('fill'), match = fill && fill.match(fillUrlMatcher), _a = getStackMetrics(series.yAxis, shape), y = _a.y, height = _a.height;\n                    if (match && series.chart.renderer.patternElements) {\n                        var currentPattern = series.chart.renderer.patternElements[match[1].slice(1)];\n                        if (currentPattern) {\n                            currentPattern.animate({\n                                x: point.shapeArgs.x,\n                                y: y,\n                                width: point.shapeArgs.width || 0,\n                                height: height\n                            });\n                        }\n                    }\n                    rescalePatternFill(point.graphic, getStackMetrics(series.yAxis, shape).height, point.shapeArgs.width || 0, point.shapeArgs.height || Infinity, series.options.borderWidth || 0);\n                }\n            });\n        });\n        /**\n         *\n         */\n        function renderStackShadow(stack) {\n            // Get first pictorial series\n            var stackKeys = Object\n                .keys(stack.points)\n                .filter(function (p) { return p.split(',').length > 1; }), allSeries = stack.axis.chart.series, seriesIndexes = stackKeys.map(function (key) {\n                return parseFloat(key.split(',')[0]);\n            });\n            var seriesIndex = -1;\n            seriesIndexes.forEach(function (index) {\n                if (allSeries[index] && allSeries[index].visible) {\n                    seriesIndex = index;\n                }\n            });\n            var series = stack.axis.chart.series[seriesIndex];\n            if (series &&\n                series.is('pictorial') &&\n                stack.axis.hasData() &&\n                series.xAxis.hasData()) {\n                var xAxis = series.xAxis, options = stack.axis.options, chart = stack.axis.chart, stackShadow = stack.shadow, xCenter = xAxis.toPixels(stack.x, true), x = chart.inverted ? xAxis.len - xCenter : xCenter, paths = series.options.paths || [], index = stack.x % paths.length, shape = paths[index], width = series.getColumnMetrics &&\n                    series.getColumnMetrics().width, _a = getStackMetrics(series.yAxis, shape), height = _a.height, y = _a.y, shadowOptions = options.stackShadow, strokeWidth = pick(shadowOptions && shadowOptions.borderWidth, series.options.borderWidth, 1);\n                if (!stackShadow &&\n                    shadowOptions &&\n                    shadowOptions.enabled &&\n                    shape) {\n                    if (!stack.shadowGroup) {\n                        stack.shadowGroup = chart.renderer.g('shadow-group')\n                            .add();\n                    }\n                    stack.shadowGroup.attr({\n                        translateX: chart.inverted ?\n                            stack.axis.pos : xAxis.pos,\n                        translateY: chart.inverted ?\n                            xAxis.pos : stack.axis.pos\n                    });\n                    stack.shadow = chart.renderer.rect(x, y, width, height)\n                        .attr({\n                        fill: {\n                            pattern: {\n                                path: {\n                                    d: shape.definition,\n                                    fill: shadowOptions.color ||\n                                        '#dedede',\n                                    strokeWidth: strokeWidth,\n                                    stroke: shadowOptions.borderColor ||\n                                        'transparent'\n                                },\n                                x: x,\n                                y: y,\n                                width: width,\n                                height: height,\n                                patternContentUnits: 'objectBoundingBox',\n                                backgroundColor: 'none',\n                                color: '#dedede'\n                            }\n                        }\n                    })\n                        .add(stack.shadowGroup);\n                    invertShadowGroup(stack.shadowGroup, stack.axis);\n                    rescalePatternFill(stack.shadow, height, width, height, strokeWidth);\n                    stack.setOffset(series.pointXOffset || 0, series.barW || 0);\n                }\n                else if (stackShadow && stack.shadowGroup) {\n                    stackShadow.animate({\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    });\n                    var fillUrlMatcher = /url\\(([^)]+)\\)/, fill = stackShadow.attr('fill'), match = fill && fill.match(fillUrlMatcher);\n                    if (match && chart.renderer.patternElements) {\n                        chart.renderer.patternElements[match[1].slice(1)]\n                            .animate({\n                            x: x,\n                            y: y,\n                            width: width,\n                            height: height\n                        });\n                    }\n                    stack.shadowGroup.animate({\n                        translateX: chart.inverted ?\n                            stack.axis.pos : xAxis.pos,\n                        translateY: chart.inverted ?\n                            xAxis.pos : stack.axis.pos\n                    });\n                    invertShadowGroup(stack.shadowGroup, stack.axis);\n                    rescalePatternFill(stackShadow, height, width, height, strokeWidth);\n                    stack.setOffset(series.pointXOffset || 0, series.barW || 0);\n                }\n            }\n            else if (stack.shadow && stack.shadowGroup) {\n                stack.shadow.destroy();\n                stack.shadow = void 0;\n                stack.shadowGroup.destroy();\n                stack.shadowGroup = void 0;\n            }\n        }\n        /**\n         *\n         */\n        function forEachStack(chart, callback) {\n            if (chart.axes) {\n                chart.axes.forEach(function (axis) {\n                    if (!axis.stacking) {\n                        return;\n                    }\n                    var stacks = axis.stacking.stacks;\n                    // Render each stack total\n                    objectEach(stacks, function (type) {\n                        objectEach(type, function (stack) {\n                            callback(stack);\n                        });\n                    });\n                });\n            }\n        }\n        addEvent(Chart, 'render', function () {\n            forEachStack(this, renderStackShadow);\n        });\n        addEvent(StackItem, 'afterSetOffset', function (e) {\n            if (this.shadow) {\n                var _a = this.axis, chart = _a.chart, len = _a.len, xOffset = e.xOffset, width = e.width, translateX = chart.inverted ? xOffset - chart.xAxis[0].len : xOffset, translateY = chart.inverted ? -len : 0;\n                this.shadow.attr({\n                    translateX: translateX,\n                    translateY: translateY\n                });\n                this.shadow.animate({ width: width });\n            }\n        });\n        /**\n         *\n         */\n        function destroyAllStackShadows(chart) {\n            forEachStack(chart, function (stack) {\n                if (stack.shadow && stack.shadowGroup) {\n                    stack.shadow.destroy();\n                    stack.shadowGroup.destroy();\n                    delete stack.shadow;\n                    delete stack.shadowGroup;\n                }\n            });\n        }\n        // This is a workaround due to no implementation of the animation drilldown.\n        addEvent(Chart, 'afterDrilldown', function () {\n            destroyAllStackShadows(this);\n        });\n        addEvent(Chart, 'afterDrillUp', function () {\n            destroyAllStackShadows(this);\n        });\n        PictorialSeries.prototype.pointClass = PictorialPoint;\n        SeriesRegistry.registerSeriesType('pictorial', PictorialSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         * API Options\n         *\n         * */\n        /**\n         * A `pictorial` series. If the [type](#series.pictorial.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.pictorial\n         * @since 11.0.0\n         * @product   highcharts\n         * @excluding dataParser, borderRadius, boostBlending, boostThreshold,\n         *            borderColor, borderWidth, centerInCategory, connectEnds,\n         *            connectNulls, crisp, colorKey, dataURL, dataAsColumns, depth,\n         *            dragDrop, edgeColor, edgeWidth, linecap, lineWidth,  marker,\n         *            dataSorting, dashStyle, onPoint, relativeXValue, shadow, zoneAxis,\n         *            zones\n         * @requires  modules/pictorial\n         * @apioption series.pictorial\n         */\n        /**\n         * An array of data points for the series. For the `pictorial` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 2 values. In this case, the values correspond\n         *    to `x,y`. If the first value is a string, it is applied as the name\n         *    of the point, and the `x` value is inferred. The `x` value can also be\n         *    omitted, in which case the inner arrays should be of length 2. Then the\n         *    `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 40],\n         *        [1, 50],\n         *        [2, 60]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.pictorial.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 0,\n         *        y: 40,\n         *        name: \"Point1\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        y: 60,\n         *        name: \"Point2\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n         * @extends   series.column.data\n         *\n         * @sample {highcharts} highcharts/demo/pictorial/\n         *         Pictorial chart\n         * @sample {highcharts} highcharts/demo/pictorial-stackshadow/\n         *         Pictorial stackShadow option\n         * @sample {highcharts} highcharts/series-pictorial/paths-max/\n         *         Pictorial max option\n         *\n         * @excluding borderColor, borderWidth, dashStyle, dragDrop\n         * @since 11.0.0\n         * @product   highcharts\n         * @apioption series.pictorial.data\n         */\n        /**\n         * The paths include options describing the series image. For further details on\n         * preparing the SVG image, please refer to the [pictorial\n         * documentation](https://www.highcharts.com/docs/chart-and-series-types/pictorial).\n         *\n         * @declare   Highcharts.SeriesPictorialPathsOptionsObject\n         * @type      {Array<*>}\n         *\n         * @sample    {highcharts} highcharts/demo/pictorial/\n         *            Pictorial chart\n         *\n         * @since     11.0.0\n         * @product   highcharts\n         * @apioption series.pictorial.paths\n         */\n        /**\n         * The definition defines a path to be drawn. It corresponds `d` SVG attribute.\n         *\n         * @type      {string}\n         *\n         * @sample    {highcharts} highcharts/demo/pictorial/\n         *            Pictorial chart\n         *\n         * @product   highcharts\n         * @apioption series.pictorial.paths.definition\n         */\n        /**\n         * The max option determines height of the image. It is the ratio of\n         * `yAxis.max` to the `paths.max`.\n         *\n         * @sample {highcharts} highcharts/series-pictorial/paths-max\n         *         Pictorial max option\n         *\n         * @type      {number}\n         * @default   yAxis.max\n         * @product   highcharts\n         * @apioption series.pictorial.paths.max\n         */\n        /**\n         * Relevant only for pictorial series. The `stackShadow` forms the background of\n         * stacked points. Requires `series.stacking` to be defined.\n         *\n         * @sample {highcharts} highcharts/demo/pictorial-stackshadow/ Pictorial\n         *         stackShadow option\n         *\n         * @declare   Highcharts.YAxisOptions\n         * @type      {*}\n         * @since 11.0.0\n         * @product   highcharts\n         * @requires  modules/pictorial\n         * @apioption yAxis.stackShadow\n         */\n        /**\n         * The color of the `stackShadow` border.\n         *\n         * @declare   Highcharts.YAxisOptions\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   transparent\n         * @product   highcharts\n         * @requires  modules/pictorial\n         * @apioption yAxis.stackShadow.borderColor\n         */\n        /**\n         * The width of the `stackShadow` border.\n         *\n         * @declare   Highcharts.YAxisOptions\n         * @type      {number}\n         * @default   0\n         * @product   highcharts\n         * @requires  modules/pictorial\n         * @apioption yAxis.stackShadow.borderWidth\n         */\n        /**\n         * The color of the `stackShadow`.\n         *\n         * @declare   Highcharts.YAxisOptions\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   #dedede\n         * @product   highcharts\n         * @requires  modules/pictorial\n         * @apioption yAxis.stackShadow.color\n         */\n        /**\n         * Enable or disable `stackShadow`.\n         *\n         * @declare   Highcharts.YAxisOptions\n         * @type      {boolean}\n         * @default   undefined\n         * @product   highcharts\n         * @requires  modules/pictorial\n         * @apioption yAxis.stackShadow.enabled\n         */\n        ''; // Adds doclets above to transpiled file\n\n        return PictorialSeries;\n    });\n    _registerModule(_modules, 'masters/modules/pictorial.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","A","D","U","animObject","getOptions","addEvent","defined","erase","extend","merge","pick","removeEvent","wrap","patterns","createPatterns","colors","i","_i","_a","length","pattern","push","color","width","height","patternTransform","_b","_c","hashFromObject","preSeed","seedStep","str","JSON","stringify","strLen","hash","Math","max","floor","a","charCodeAt","toString","replace","onChartEndResize","renderer","defIds","filter","id","indexOf","series","visible","points","point","colorOptions","options","_width","_height","redraw","onChartRedraw","usedIds","forEach","call","renderTo","querySelectorAll","node","getAttribute","url","patterns_1","patternElements","destroy","onPointAfterInit","d","onRendererComplexColor","prop","element","chartIndex","value","patternIndex","image","forceHashId","parentNode","pointCalculatePatternDimensions","graphic","addPattern","forExport","animation","globalAnimation","duration","concat","setAttribute","onSeriesRender","isResizing","chart","isDirtyData","hasRendered","shapeArgs","calculatePatternDimensions","bBox","getBBox","x","y","scaleY","mapView","getSVGTransform","_inverted","aspectRatio","aspectWidth","aspectHeight","ceil","_x","round","abs","_y","rendererAddPattern","fill","attribs","animate","animationOptions","idCounter","attrs","patternUnits","patternContentUnits","createElement","attr","add","defs","isObject","backgroundColor","_this","rect","styledMode","stroke","strokeWidth","transform","opacity","childNodes","child","wrapSeriesGetColor","proceed","oldColor","slice","arguments","onPatternScaleCorrection","p","_d","hasAttribute","group","scaleX","map","_e","pointInfo","index","arr","some","otherInfo","otherIndex","updateTransform","compose","ChartClass","SeriesClass","SVGRendererClass","PointClass","prototype","pointClass","pointProto","rescalePatternFill","stackHeight","borderWidth","match","patternPath","document","querySelector","parent_1","parentElement","box","appendChild","pointAspectRatio","invertShadowGroup","shadowGroup","yAxis","inverted","rotation","getStackMetrics","shape","len","toPixels","SeriesRegistry","PictorialUtilities","extendStatics","__extends","b","Object","setPrototypeOf","__proto__","Array","TypeError","String","__","constructor","create","ColumnPoint","seriesTypes","column","_super","PictorialPoint","setState","paths","Infinity","PatternFill","Chart","Series","StackItem","SVGRenderer","ColumnSeries","objectEach","PictorialSeries","init","animationClipKey","getSharedClipKey","easing","defer","join","animationClipRect","sharedClips","clipBox","getClipBox","clipRect","clip","hasClass","finalBox","addClass","animateDrilldown","animateDrillupFrom","pointAttribs","seriesOptions","pathDef","definition","getExtremes","extremes","dataMax","defaultOptions","renderStackShadow","stack","stackKeys","keys","split","allSeries","axis","seriesIndexes","key","parseFloat","seriesIndex","is","hasData","xAxis","stackShadow","shadow","xCenter","getColumnMetrics","shadowOptions","enabled","g","translateX","pos","translateY","borderColor","setOffset","pointXOffset","barW","forEachStack","callback","axes","stacking","stacks","type","destroyAllStackShadows","fillUrlMatcher","currentPattern","e","xOffset","registerSeriesType"],"mappings":"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"}