{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Item series type for Highcharts\n *\n * (c) 2019 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/item-series', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/Item/ItemPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2019-2024 Torstein Honsi\n         *\n         *  Item series type for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Point = SeriesRegistry.series.prototype.pointClass, PiePoint = SeriesRegistry.seriesTypes.pie.prototype.pointClass;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var ItemPoint = /** @class */ (function (_super) {\n            __extends(ItemPoint, _super);\n            function ItemPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return ItemPoint;\n        }(PiePoint));\n        extend(ItemPoint.prototype, {\n            haloPath: Point.prototype.haloPath\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ItemPoint;\n    });\n    _registerModule(_modules, 'Series/Item/ItemSeriesDefaults.js', [_modules['Core/Series/SeriesDefaults.js'], _modules['Core/Utilities.js']], function (SeriesDefaults, U) {\n        /* *\n         *\n         *  (c) 2019-2024 Torstein Honsi\n         *\n         *  Item series type for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var merge = U.merge;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An item chart is an infographic chart where a number of items are laid\n         * out in either a rectangular or circular pattern. It can be used to\n         * visualize counts within a group, or for the circular pattern, typically\n         * a parliament.\n         *\n         * The circular layout has much in common with a pie chart. Many of the item\n         * series options, like `center`, `size` and data label positioning, are\n         * inherited from the pie series and don't apply for rectangular layouts.\n         *\n         * @sample       highcharts/demo/parliament-chart\n         *               Parliament chart (circular item chart)\n         * @sample       highcharts/series-item/rectangular\n         *               Rectangular item chart\n         * @sample       highcharts/series-item/symbols\n         *               Infographic with symbols\n         *\n         * @extends      plotOptions.pie\n         * @since        7.1.0\n         * @product      highcharts\n         * @excluding    borderColor, borderWidth, depth, linecap, shadow,\n         *               slicedOffset\n         * @requires     modules/item-series\n         * @optionparent plotOptions.item\n         */\n        var ItemSeriesDefaults = {\n            /**\n             * In circular view, the end angle of the item layout, in degrees where\n             * 0 is up.\n             *\n             * @sample highcharts/demo/parliament-chart\n             *         Parliament chart\n             * @type {undefined|number}\n             */\n            endAngle: void 0,\n            /**\n             * In circular view, the size of the inner diameter of the circle. Can\n             * be a percentage or pixel value. Percentages are relative to the outer\n             * perimeter. Pixel values are given as integers.\n             *\n             * If the `rows` option is set, it overrides the `innerSize` setting.\n             *\n             * @sample highcharts/demo/parliament-chart\n             *         Parliament chart\n             * @type {string|number}\n             */\n            innerSize: '40%',\n            /**\n             * The padding between the items, given in relative size where the size\n             * of the item is 1.\n             * @type {number}\n             */\n            itemPadding: 0.1,\n            /**\n             * The layout of the items in rectangular view. Can be either\n             * `horizontal` or `vertical`.\n             * @sample highcharts/series-item/symbols\n             *         Horizontal layout\n             * @type {string}\n             */\n            layout: 'vertical',\n            /**\n             * @extends plotOptions.series.marker\n             */\n            marker: merge(SeriesDefaults.marker, {\n                radius: null\n            }),\n            /**\n             * The number of rows to display in the rectangular or circular view. If\n             * the `innerSize` is set, it will be overridden by the `rows` setting.\n             *\n             * @sample highcharts/series-item/rows-columns\n             *         Fixed row count\n             * @type {number}\n             */\n            rows: void 0,\n            crisp: false,\n            showInLegend: true,\n            /**\n             * In circular view, the start angle of the item layout, in degrees\n             * where 0 is up.\n             *\n             * @sample highcharts/demo/parliament-chart\n             *         Parliament chart\n             * @type {undefined|number}\n             */\n            startAngle: void 0\n        };\n        /**\n         * An `item` series. If the [type](#series.item.type) option is not specified,\n         * it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.item\n         * @excluding dataParser, dataURL, stack, xAxis, yAxis, dataSorting,\n         *            boostThreshold, boostBlending\n         * @product   highcharts\n         * @requires  modules/item-series\n         * @apioption series.item\n         */\n        /**\n         * An array of data points for the series. For the `item` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of numerical values. In this case, the numerical values will be\n         *    interpreted as `y` options. Example:\n         *    ```js\n         *    data: [0, 5, 3, 5]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.item.turboThreshold),\n         *    this option is not available.\n         *    ```js\n         *    data: [{\n         *        y: 1,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        y: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<number|Array<string,(number|null)>|null|*>}\n         * @extends   series.pie.data\n         * @exclude   sliced\n         * @product   highcharts\n         * @apioption series.item.data\n         */\n        /**\n         * The sequential index of the data point in the legend.\n         *\n         * @type      {number}\n         * @product   highcharts\n         * @apioption series.pie.data.legendIndex\n         */\n        /**\n         * @excluding legendItemClick\n         * @apioption series.item.events\n         */\n        ''; // Keeps the doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ItemSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Item/ItemSeries.js', [_modules['Series/Item/ItemPoint.js'], _modules['Series/Item/ItemSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ItemPoint, ItemSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2019-2024 Torstein Honsi\n         *\n         *  Item series type for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var PieSeries = SeriesRegistry.seriesTypes.pie;\n        var defined = U.defined, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        // Inherits pie as the most tested non-cartesian series with individual point\n        // legend, tooltips etc. Only downside is we need to re-enable marker options.\n        /**\n         * The item series type.\n         *\n         * @requires modules/item-series\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.item\n         *\n         * @augments Highcharts.seriesTypes.pie\n         */\n        var ItemSeries = /** @class */ (function (_super) {\n            __extends(ItemSeries, _super);\n            function ItemSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Fade in the whole chart.\n             * @private\n             */\n            ItemSeries.prototype.animate = function (init) {\n                var group = this.group;\n                if (group) {\n                    if (init) {\n                        group.attr({\n                            opacity: 0\n                        });\n                    }\n                    else {\n                        group.animate({\n                            opacity: 1\n                        }, this.options.animation);\n                    }\n                }\n            };\n            ItemSeries.prototype.drawDataLabels = function () {\n                if (this.center && this.slots) {\n                    _super.prototype.drawDataLabels.call(this);\n                    // Or it's just a dot chart with no natural place to put the data labels\n                }\n                else {\n                    for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                        var point = _a[_i];\n                        point.destroyElements({ dataLabel: 1 });\n                    }\n                }\n            };\n            ItemSeries.prototype.drawPoints = function () {\n                var series = this, options = this.options, renderer = series.chart.renderer, seriesMarkerOptions = options.marker, borderWidth = this.borderWidth, crisp = borderWidth % 2 ? 0.5 : 1, rows = this.getRows(), cols = Math.ceil(this.total / rows), cellWidth = this.chart.plotWidth / cols, cellHeight = this.chart.plotHeight / rows, itemSize = this.itemSize || Math.min(cellWidth, cellHeight);\n                var i = 0;\n                /* @todo: remove if not needed\n                this.slots.forEach(slot => {\n                    this.chart.renderer.circle(slot.x, slot.y, 6)\n                        .attr({\n                            fill: 'silver'\n                        })\n                        .add(this.group);\n                });\n                //*/\n                for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    var pointMarkerOptions = point.marker || {}, symbol = (pointMarkerOptions.symbol ||\n                        seriesMarkerOptions.symbol), r = pick(pointMarkerOptions.radius, seriesMarkerOptions.radius), size = defined(r) ? 2 * r : itemSize, padding = size * options.itemPadding;\n                    var attr = void 0, graphics = void 0, pointAttr = void 0, x = void 0, y = void 0, width = void 0, height = void 0;\n                    point.graphics = graphics = point.graphics || [];\n                    if (!series.chart.styledMode) {\n                        pointAttr = series.pointAttribs(point, point.selected && 'select');\n                    }\n                    if (!point.isNull && point.visible) {\n                        if (!point.graphic) {\n                            point.graphic = renderer.g('point')\n                                .add(series.group);\n                        }\n                        for (var val = 0; val < (point.y || 0); ++val) {\n                            // Semi-circle\n                            if (series.center && series.slots) {\n                                // Fill up the slots from left to right\n                                var slot = series.slots.shift();\n                                x = slot.x - itemSize / 2;\n                                y = slot.y - itemSize / 2;\n                            }\n                            else if (options.layout === 'horizontal') {\n                                x = cellWidth * (i % cols);\n                                y = cellHeight * Math.floor(i / cols);\n                            }\n                            else {\n                                x = cellWidth * Math.floor(i / rows);\n                                y = cellHeight * (i % rows);\n                            }\n                            x += padding;\n                            y += padding;\n                            width = Math.round(size - 2 * padding);\n                            height = width;\n                            if (series.options.crisp) {\n                                x = Math.round(x) - crisp;\n                                y = Math.round(y) + crisp;\n                            }\n                            attr = {\n                                x: x,\n                                y: y,\n                                width: width,\n                                height: height\n                            };\n                            if (typeof r !== 'undefined') {\n                                attr.r = r;\n                            }\n                            // Circles attributes update (#17257)\n                            if (pointAttr) {\n                                extend(attr, pointAttr);\n                            }\n                            var graphic = graphics[val];\n                            if (graphic) {\n                                graphic.animate(attr);\n                            }\n                            else {\n                                graphic = renderer\n                                    .symbol(symbol, void 0, void 0, void 0, void 0, {\n                                    backgroundSize: 'within'\n                                })\n                                    .attr(attr)\n                                    .add(point.graphic);\n                            }\n                            graphic.isActive = true;\n                            graphics[val] = graphic;\n                            ++i;\n                        }\n                    }\n                    for (var j = 0; j < graphics.length; j++) {\n                        var graphic = graphics[j];\n                        if (!graphic) {\n                            return;\n                        }\n                        if (!graphic.isActive) {\n                            graphic.destroy();\n                            graphics.splice(j, 1);\n                            j--; // Need to subtract 1 after splice, #19053\n                        }\n                        else {\n                            graphic.isActive = false;\n                        }\n                    }\n                }\n            };\n            ItemSeries.prototype.getRows = function () {\n                var chart = this.chart, total = this.total || 0;\n                var rows = this.options.rows, cols, ratio;\n                // Get the row count that gives the most square cells\n                if (!rows) {\n                    ratio = chart.plotWidth / chart.plotHeight;\n                    rows = Math.sqrt(total);\n                    if (ratio > 1) {\n                        rows = Math.ceil(rows);\n                        while (rows > 0) {\n                            cols = total / rows;\n                            if (cols / rows > ratio) {\n                                break;\n                            }\n                            rows--;\n                        }\n                    }\n                    else {\n                        rows = Math.floor(rows);\n                        while (rows < total) {\n                            cols = total / rows;\n                            if (cols / rows < ratio) {\n                                break;\n                            }\n                            rows++;\n                        }\n                    }\n                }\n                return rows;\n            };\n            /**\n             * Get the semi-circular slots.\n             * @private\n             */\n            ItemSeries.prototype.getSlots = function () {\n                var series = this, center = series.center, diameter = center[2], slots = series.slots = series.slots || [], fullAngle = (series.endAngleRad - series.startAngleRad), rowsOption = series.options.rows, isCircle = fullAngle % (2 * Math.PI) === 0, total = series.total || 0;\n                var innerSize = center[3], x, y, rowRadius, rowLength, colCount, increment, angle, col, itemSize = 0, rowCount, itemCount = Number.MAX_VALUE, finalItemCount, rows, testRows, \n                // How many rows (arcs) should be used\n                rowFraction = (diameter - innerSize) / diameter;\n                // Increase the itemSize until we find the best fit\n                while (itemCount > total + (rows && isCircle ? rows.length : 0)) {\n                    finalItemCount = itemCount;\n                    // Reset\n                    slots.length = 0;\n                    itemCount = 0;\n                    // Now rows is the last successful run\n                    rows = testRows;\n                    testRows = [];\n                    itemSize++;\n                    // Total number of rows (arcs) from the center to the\n                    // perimeter\n                    rowCount = diameter / itemSize / 2;\n                    if (rowsOption) {\n                        innerSize = ((rowCount - rowsOption) / rowCount) * diameter;\n                        if (innerSize >= 0) {\n                            rowCount = rowsOption;\n                            // If innerSize is negative, we are trying to set too\n                            // many rows in the rows option, so fall back to\n                            // treating it as innerSize 0\n                        }\n                        else {\n                            innerSize = 0;\n                            rowFraction = 1;\n                        }\n                    }\n                    else {\n                        rowCount = Math.floor(rowCount * rowFraction);\n                    }\n                    for (var row = rowCount; row > 0; row--) {\n                        rowRadius = (innerSize + (row / rowCount) *\n                            (diameter - innerSize - itemSize)) / 2;\n                        rowLength = fullAngle * rowRadius;\n                        colCount = Math.ceil(rowLength / itemSize);\n                        testRows.push({\n                            rowRadius: rowRadius,\n                            rowLength: rowLength,\n                            colCount: colCount\n                        });\n                        itemCount += colCount + 1;\n                    }\n                }\n                if (!rows) {\n                    return;\n                }\n                // We now have more slots than we have total items. Loop over\n                // the rows and remove the last slot until the count is correct.\n                // For each iteration we sort the last slot by the angle, and\n                // remove those with the highest angles.\n                var overshoot = finalItemCount - series.total -\n                    (isCircle ? rows.length : 0);\n                /**\n                 * @private\n                 * @param {Highcharts.ItemRowContainerObject} item\n                 * Wrapped object with angle and row\n                 */\n                var cutOffRow = function (item) {\n                    if (overshoot > 0) {\n                        item.row.colCount--;\n                        overshoot--;\n                    }\n                };\n                while (overshoot > 0) {\n                    rows\n                        // Return a simplified representation of the angle of\n                        // the last slot within each row.\n                        .map(function (row) { return ({\n                        angle: row.colCount / row.rowLength,\n                        row: row\n                    }); })\n                        // Sort by the angles...\n                        .sort(function (a, b) { return (b.angle - a.angle); })\n                        // ...so that we can ignore the items with the lowest\n                        // angles...\n                        .slice(0, Math.min(overshoot, Math.ceil(rows.length / 2)))\n                        // ...and remove the ones with the highest angles\n                        .forEach(cutOffRow);\n                }\n                for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                    var row = rows_1[_i];\n                    var rowRadius_1 = row.rowRadius, colCount_1 = row.colCount;\n                    increment = colCount_1 ? fullAngle / colCount_1 : 0;\n                    for (col = 0; col <= colCount_1; col += 1) {\n                        angle = series.startAngleRad + col * increment;\n                        x = center[0] + Math.cos(angle) * rowRadius_1;\n                        y = center[1] + Math.sin(angle) * rowRadius_1;\n                        slots.push({ x: x, y: y, angle: angle });\n                    }\n                }\n                // Sort by angle\n                slots.sort(function (a, b) { return (a.angle - b.angle); });\n                series.itemSize = itemSize;\n                return slots;\n            };\n            ItemSeries.prototype.translate = function (positions) {\n                // Initialize chart without setting data, #13379.\n                if (this.total === 0 && // Check if that is a (semi-)circle\n                    isNumber(this.options.startAngle) &&\n                    isNumber(this.options.endAngle)) {\n                    this.center = this.getCenter();\n                }\n                if (!this.slots) {\n                    this.slots = [];\n                }\n                if (isNumber(this.options.startAngle) &&\n                    isNumber(this.options.endAngle)) {\n                    _super.prototype.translate.call(this, positions);\n                    this.slots = this.getSlots();\n                }\n                else {\n                    this.generatePoints();\n                    fireEvent(this, 'afterTranslate');\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ItemSeries.defaultOptions = merge(PieSeries.defaultOptions, ItemSeriesDefaults);\n            return ItemSeries;\n        }(PieSeries));\n        extend(ItemSeries.prototype, {\n            markerAttribs: void 0,\n            pointClass: ItemPoint\n        });\n        SeriesRegistry.registerSeriesType('item', ItemSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ItemSeries;\n    });\n    _registerModule(_modules, 'masters/modules/item-series.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","Point","series","pointClass","PiePoint","seriesTypes","pie","extend","ItemPoint","_super","arguments","haloPath","SeriesDefaults","endAngle","innerSize","itemPadding","layout","marker","merge","radius","rows","crisp","showInLegend","startAngle","ItemSeriesDefaults","PieSeries","defined","fireEvent","isNumber","pick","ItemSeries","animate","init","group","attr","opacity","options","animation","drawDataLabels","center","slots","_i","_a","points","length","point","destroyElements","dataLabel","drawPoints","renderer","chart","seriesMarkerOptions","borderWidth","getRows","cols","Math","ceil","total","cellWidth","plotWidth","cellHeight","plotHeight","itemSize","min","i","pointMarkerOptions","symbol","r","size","padding","graphics","pointAttr","x","y","width","height","styledMode","pointAttribs","selected","isNull","visible","graphic","g","add","val","slot","shift","floor","round","backgroundSize","isActive","j","destroy","splice","ratio","sqrt","getSlots","rowRadius","rowLength","colCount","increment","angle","col","rowCount","finalItemCount","testRows","diameter","fullAngle","endAngleRad","startAngleRad","rowsOption","isCircle","PI","itemCount","Number","MAX_VALUE","rowFraction","row","push","overshoot","cutOffRow","item","map","sort","a","slice","forEach","rows_1","rowRadius_1","colCount_1","cos","sin","translate","positions","getCenter","generatePoints","defaultOptions","markerAttribs","registerSeriesType"],"mappings":"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"}