{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highmaps JS v11.4.8 (2024-08-29)\n *\n * Tilemap module\n *\n * (c) 2010-2024 Highsoft AS\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/tilemap', ['highcharts', 'highcharts/modules/map'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/Tilemap/TilemapPoint.js', [_modules['Core/Axis/Color/ColorAxisComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ColorAxisComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  Tilemaps module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Øystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Point = SeriesRegistry.series.prototype.pointClass, HeatmapPoint = SeriesRegistry.seriesTypes.heatmap.prototype.pointClass;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var TilemapPoint = /** @class */ (function (_super) {\n            __extends(TilemapPoint, _super);\n            function TilemapPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             * @function Highcharts.Point#haloPath\n             */\n            TilemapPoint.prototype.haloPath = function () {\n                return this.series.tileShape.haloPath.apply(this, arguments);\n            };\n            return TilemapPoint;\n        }(HeatmapPoint));\n        extend(TilemapPoint.prototype, {\n            setState: Point.prototype.setState,\n            setVisible: ColorAxisComposition.pointSetVisible\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TilemapPoint;\n    });\n    _registerModule(_modules, 'Series/Tilemap/TilemapSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Tilemaps module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Øystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A tilemap series is a type of heatmap where the tile shapes are\n         * configurable.\n         *\n         * @sample highcharts/demo/honeycomb-usa/\n         *         Honeycomb tilemap, USA\n         * @sample maps/plotoptions/honeycomb-brazil/\n         *         Honeycomb tilemap, Brazil\n         * @sample maps/plotoptions/honeycomb-china/\n         *         Honeycomb tilemap, China\n         * @sample maps/plotoptions/honeycomb-europe/\n         *         Honeycomb tilemap, Europe\n         * @sample maps/demo/circlemap-africa/\n         *         Circlemap tilemap, Africa\n         * @sample maps/demo/diamondmap\n         *         Diamondmap tilemap\n         *\n         * @extends      plotOptions.heatmap\n         * @since        6.0.0\n         * @excluding    jitter, joinBy, shadow, allAreas, mapData, marker, data,\n         *               dataSorting, boostThreshold, boostBlending\n         * @product      highcharts highmaps\n         * @requires     modules/tilemap\n         * @optionparent plotOptions.tilemap\n         */\n        var TilemapSeriesDefaults = {\n            // Remove marker from tilemap default options, as it was before\n            // heatmap refactoring.\n            marker: null,\n            states: {\n                hover: {\n                    halo: {\n                        enabled: true,\n                        size: 2,\n                        opacity: 0.5,\n                        attributes: {\n                            zIndex: 3\n                        }\n                    }\n                }\n            },\n            /**\n             * The padding between points in the tilemap.\n             *\n             * @sample maps/plotoptions/tilemap-pointpadding\n             *         Point padding on tiles\n             */\n            pointPadding: 2,\n            /**\n             * The column size - how many X axis units each column in the tilemap\n             * should span. Works as in [Heatmaps](#plotOptions.heatmap.colsize).\n             *\n             * @sample {highcharts} maps/demo/heatmap/\n             *         One day\n             * @sample {highmaps} maps/demo/heatmap/\n             *         One day\n             *\n             * @type      {number}\n             * @default   1\n             * @product   highcharts highmaps\n             * @apioption plotOptions.tilemap.colsize\n             */\n            /**\n             * The row size - how many Y axis units each tilemap row should span.\n             * Analogous to [colsize](#plotOptions.tilemap.colsize).\n             *\n             * @sample {highcharts} maps/demo/heatmap/\n             *         1 by default\n             * @sample {highmaps} maps/demo/heatmap/\n             *         1 by default\n             *\n             * @type      {number}\n             * @default   1\n             * @product   highcharts highmaps\n             * @apioption plotOptions.tilemap.rowsize\n             */\n            /**\n             * The shape of the tiles in the tilemap. Possible values are `hexagon`,\n             * `circle`, `diamond`, and `square`.\n             *\n             * @sample maps/demo/circlemap-africa\n             *         Circular tile shapes\n             * @sample maps/demo/diamondmap\n             *         Diamond tile shapes\n             *\n             * @type {Highcharts.TilemapShapeValue}\n             */\n            tileShape: 'hexagon'\n        };\n        /**\n         * A `tilemap` series. If the [type](#series.tilemap.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.tilemap\n         * @excluding allAreas, dataParser, dataURL, joinBy, mapData, marker,\n         *            pointRange, shadow, stack, dataSorting, boostThreshold,\n         *            boostBlending\n         * @product   highcharts highmaps\n         * @requires  modules/tilemap\n         * @apioption series.tilemap\n         */\n        /**\n         * An array of data points for the series. For the `tilemap` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n         *    to `x,y,value`. If the first value is a string, it is applied as the name\n         *    of the point, and the `x` value is inferred. The `x` value can also be\n         *    omitted, in which case the inner arrays should be of length 2\\. Then the\n         *    `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 9, 7],\n         *        [1, 10, 4],\n         *        [2, 6, 3]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The objects are point configuration\n         *    objects as seen below. If the total number of data points exceeds the\n         *    series' [turboThreshold](#series.tilemap.turboThreshold), this option is\n         *    not available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        y: 3,\n         *        value: 10,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        y: 7,\n         *        value: 10,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * Note that for some [tileShapes](#plotOptions.tilemap.tileShape) the grid\n         * coordinates are offset.\n         *\n         * @sample maps/series/tilemap-gridoffset\n         *         Offset grid coordinates\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n         * @extends   series.heatmap.data\n         * @excluding marker\n         * @product   highcharts highmaps\n         * @apioption series.tilemap.data\n         */\n        /**\n         * The color of the point. In tilemaps the point color is rarely set\n         * explicitly, as we use the color to denote the `value`. Options for\n         * this are set in the [colorAxis](#colorAxis) configuration.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts highmaps\n         * @apioption series.tilemap.data.color\n         */\n        /**\n         * The x coordinate of the point.\n         *\n         * Note that for some [tileShapes](#plotOptions.tilemap.tileShape) the grid\n         * coordinates are offset.\n         *\n         * @sample maps/series/tilemap-gridoffset\n         *         Offset grid coordinates\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.tilemap.data.x\n         */\n        /**\n         * The y coordinate of the point.\n         *\n         * Note that for some [tileShapes](#plotOptions.tilemap.tileShape) the grid\n         * coordinates are offset.\n         *\n         * @sample maps/series/tilemap-gridoffset\n         *         Offset grid coordinates\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.tilemap.data.y\n         */\n        ''; // Keeps doclets above detached\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TilemapSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Tilemap/TilemapShapes.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, U) {\n        /* *\n         *\n         *  Tilemaps module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Øystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var noop = H.noop;\n        var _a = SeriesRegistry.seriesTypes, HeatmapSeries = _a.heatmap, ScatterSeries = _a.scatter;\n        var clamp = U.clamp, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Utility func to get padding definition from tile size division\n         * @private\n         */\n        function tilePaddingFromTileSize(series, xDiv, yDiv) {\n            var options = series.options;\n            return {\n                xPad: (options.colsize || 1) / -xDiv,\n                yPad: (options.rowsize || 1) / -yDiv\n            };\n        }\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        /**\n         * Map of shape types.\n         * @private\n         */\n        var TilemapShapes = {\n            // Hexagon shape type.\n            hexagon: {\n                alignDataLabel: ScatterSeries.prototype.alignDataLabel,\n                getSeriesPadding: function (series) {\n                    return tilePaddingFromTileSize(series, 3, 2);\n                },\n                haloPath: function (size) {\n                    if (!size) {\n                        return [];\n                    }\n                    var hexagon = this.tileEdges;\n                    return [\n                        ['M', hexagon.x2 - size, hexagon.y1 + size],\n                        ['L', hexagon.x3 + size, hexagon.y1 + size],\n                        ['L', hexagon.x4 + size * 1.5, hexagon.y2],\n                        ['L', hexagon.x3 + size, hexagon.y3 - size],\n                        ['L', hexagon.x2 - size, hexagon.y3 - size],\n                        ['L', hexagon.x1 - size * 1.5, hexagon.y2],\n                        ['Z']\n                    ];\n                },\n                translate: function () {\n                    var _a;\n                    var series = this, options = series.options, xAxis = series.xAxis, yAxis = series.yAxis, seriesPointPadding = options.pointPadding || 0, xPad = (options.colsize || 1) / 3, yPad = (options.rowsize || 1) / 2;\n                    var yShift;\n                    series.generatePoints();\n                    for (var _i = 0, _b = series.points; _i < _b.length; _i++) {\n                        var point = _b[_i];\n                        var x1 = clamp(Math.floor(xAxis.len -\n                            xAxis.translate(point.x - xPad * 2, 0, 1, 0, 1)), -xAxis.len, 2 * xAxis.len), x2 = clamp(Math.floor(xAxis.len -\n                            xAxis.translate(point.x - xPad, 0, 1, 0, 1)), -xAxis.len, 2 * xAxis.len), x3 = clamp(Math.floor(xAxis.len -\n                            xAxis.translate(point.x + xPad, 0, 1, 0, 1)), -xAxis.len, 2 * xAxis.len), x4 = clamp(Math.floor(xAxis.len -\n                            xAxis.translate(point.x + xPad * 2, 0, 1, 0, 1)), -xAxis.len, 2 * xAxis.len), y1 = clamp(Math.floor(yAxis.translate(point.y - yPad, 0, 1, 0, 1)), -yAxis.len, 2 * yAxis.len), y2 = clamp(Math.floor(yAxis.translate(point.y, 0, 1, 0, 1)), -yAxis.len, 2 * yAxis.len), y3 = clamp(Math.floor(yAxis.translate(point.y + yPad, 0, 1, 0, 1)), -yAxis.len, 2 * yAxis.len);\n                        var pointPadding = (_a = point.pointPadding) !== null && _a !== void 0 ? _a : seriesPointPadding, \n                        // We calculate the point padding of the midpoints to\n                        // preserve the angles of the shape.\n                        midPointPadding = pointPadding *\n                            Math.abs(x2 - x1) / Math.abs(y3 - y2), xMidPadding = xAxis.reversed ?\n                            -midPointPadding : midPointPadding, xPointPadding = xAxis.reversed ?\n                            -pointPadding : pointPadding, yPointPadding = yAxis.reversed ?\n                            -pointPadding : pointPadding;\n                        // Shift y-values for every second grid column\n                        if (point.x % 2) {\n                            yShift = yShift || Math.round(Math.abs(y3 - y1) / 2) *\n                                // We have to reverse the shift for reversed y-axes\n                                (yAxis.reversed ? -1 : 1);\n                            y1 += yShift;\n                            y2 += yShift;\n                            y3 += yShift;\n                        }\n                        // Set plotX and plotY for use in K-D-Tree and more\n                        point.plotX = point.clientX = (x2 + x3) / 2;\n                        point.plotY = y2;\n                        // Apply point padding to translated coordinates\n                        x1 += xMidPadding + xPointPadding;\n                        x2 += xPointPadding;\n                        x3 -= xPointPadding;\n                        x4 -= xMidPadding + xPointPadding;\n                        y1 -= yPointPadding;\n                        y3 += yPointPadding;\n                        // Store points for halo creation\n                        point.tileEdges = {\n                            x1: x1, x2: x2, x3: x3, x4: x4, y1: y1, y2: y2, y3: y3\n                        };\n                        // Finally set the shape for this point\n                        point.shapeType = 'path';\n                        point.shapeArgs = {\n                            d: [\n                                ['M', x2, y1],\n                                ['L', x3, y1],\n                                ['L', x4, y2],\n                                ['L', x3, y3],\n                                ['L', x2, y3],\n                                ['L', x1, y2],\n                                ['Z']\n                            ]\n                        };\n                    }\n                    series.translateColors();\n                }\n            },\n            // Diamond shape type.\n            diamond: {\n                alignDataLabel: ScatterSeries.prototype.alignDataLabel,\n                getSeriesPadding: function (series) {\n                    return tilePaddingFromTileSize(series, 2, 2);\n                },\n                haloPath: function (size) {\n                    if (!size) {\n                        return [];\n                    }\n                    var diamond = this.tileEdges;\n                    return [\n                        ['M', diamond.x2, diamond.y1 + size],\n                        ['L', diamond.x3 + size, diamond.y2],\n                        ['L', diamond.x2, diamond.y3 - size],\n                        ['L', diamond.x1 - size, diamond.y2],\n                        ['Z']\n                    ];\n                },\n                translate: function () {\n                    var series = this, options = series.options, xAxis = series.xAxis, yAxis = series.yAxis, seriesPointPadding = options.pointPadding || 0, xPad = (options.colsize || 1), yPad = (options.rowsize || 1) / 2;\n                    var yShift;\n                    series.generatePoints();\n                    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                        var point = _a[_i];\n                        var x1 = clamp(Math.round(xAxis.len -\n                            xAxis.translate(point.x - xPad, 0, 1, 0, 0)), -xAxis.len, 2 * xAxis.len), x3 = clamp(Math.round(xAxis.len -\n                            xAxis.translate(point.x + xPad, 0, 1, 0, 0)), -xAxis.len, 2 * xAxis.len), y1 = clamp(Math.round(yAxis.translate(point.y - yPad, 0, 1, 0, 0)), -yAxis.len, 2 * yAxis.len), y2 = clamp(Math.round(yAxis.translate(point.y, 0, 1, 0, 0)), -yAxis.len, 2 * yAxis.len), y3 = clamp(Math.round(yAxis.translate(point.y + yPad, 0, 1, 0, 0)), -yAxis.len, 2 * yAxis.len);\n                        var x2 = clamp(Math.round(xAxis.len -\n                            xAxis.translate(point.x, 0, 1, 0, 0)), -xAxis.len, 2 * xAxis.len), pointPadding = pick(point.pointPadding, seriesPointPadding), \n                        // We calculate the point padding of the midpoints to\n                        // preserve the angles of the shape.\n                        midPointPadding = pointPadding *\n                            Math.abs(x2 - x1) / Math.abs(y3 - y2), xPointPadding = xAxis.reversed ?\n                            -midPointPadding : midPointPadding, yPointPadding = yAxis.reversed ?\n                            -pointPadding : pointPadding;\n                        // Shift y-values for every second grid column\n                        // We have to reverse the shift for reversed y-axes\n                        if (point.x % 2) {\n                            yShift = Math.abs(y3 - y1) / 2 * (yAxis.reversed ? -1 : 1);\n                            y1 += yShift;\n                            y2 += yShift;\n                            y3 += yShift;\n                        }\n                        // Set plotX and plotY for use in K-D-Tree and more\n                        point.plotX = point.clientX = x2;\n                        point.plotY = y2;\n                        // Apply point padding to translated coordinates\n                        x1 += xPointPadding;\n                        x3 -= xPointPadding;\n                        y1 -= yPointPadding;\n                        y3 += yPointPadding;\n                        // Store points for halo creation\n                        point.tileEdges = {\n                            x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3\n                        };\n                        // Set this point's shape parameters\n                        point.shapeType = 'path';\n                        point.shapeArgs = {\n                            d: [\n                                ['M', x2, y1],\n                                ['L', x3, y2],\n                                ['L', x2, y3],\n                                ['L', x1, y2],\n                                ['Z']\n                            ]\n                        };\n                    }\n                    series.translateColors();\n                }\n            },\n            // Circle shape type.\n            circle: {\n                alignDataLabel: ScatterSeries.prototype.alignDataLabel,\n                getSeriesPadding: function (series) {\n                    return tilePaddingFromTileSize(series, 2, 2);\n                },\n                haloPath: function (size) {\n                    return ScatterSeries.prototype.pointClass.prototype.haloPath\n                        .call(this, size + (size && this.radius));\n                },\n                translate: function () {\n                    var series = this, options = series.options, xAxis = series.xAxis, yAxis = series.yAxis, seriesPointPadding = options.pointPadding || 0, yRadius = (options.rowsize || 1) / 2, colsize = (options.colsize || 1);\n                    var colsizePx, yRadiusPx, xRadiusPx, radius, forceNextRadiusCompute = false;\n                    series.generatePoints();\n                    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                        var point = _a[_i];\n                        var x = clamp(Math.round(xAxis.len -\n                            xAxis.translate(point.x, 0, 1, 0, 0)), -xAxis.len, 2 * xAxis.len);\n                        var pointPadding = seriesPointPadding, hasPerPointPadding = false, y = clamp(Math.round(yAxis.translate(point.y, 0, 1, 0, 0)), -yAxis.len, 2 * yAxis.len);\n                        // If there is point padding defined on a single point, add it\n                        if (typeof point.pointPadding !== 'undefined') {\n                            pointPadding = point.pointPadding;\n                            hasPerPointPadding = true;\n                            forceNextRadiusCompute = true;\n                        }\n                        // Find radius if not found already.\n                        // Use the smallest one (x vs y) to avoid overlap.\n                        // Note that the radius will be recomputed for each series.\n                        // Ideal (max) x radius is dependent on y radius:\n                        /*\n                                        * (circle 2)\n\n                                                * (circle 3)\n                                                |    yRadiusPx\n                            (circle 1)    *-------|\n                                         colsizePx\n\n                            The distance between circle 1 and 3 (and circle 2 and 3) is\n                            2r, which is the hypotenuse of the triangle created by\n                            colsizePx and yRadiusPx. If the distance between circle 2\n                            and circle 1 is less than 2r, we use half of that distance\n                            instead (yRadiusPx).\n                        */\n                        if (!radius || forceNextRadiusCompute) {\n                            colsizePx = Math.abs(clamp(Math.floor(xAxis.len -\n                                xAxis.translate(point.x + colsize, 0, 1, 0, 0)), -xAxis.len, 2 * xAxis.len) - x);\n                            yRadiusPx = Math.abs(clamp(Math.floor(yAxis.translate(point.y + yRadius, 0, 1, 0, 0)), -yAxis.len, 2 * yAxis.len) - y);\n                            xRadiusPx = Math.floor(Math.sqrt((colsizePx * colsizePx + yRadiusPx * yRadiusPx)) / 2);\n                            radius = Math.min(colsizePx, xRadiusPx, yRadiusPx) - pointPadding;\n                            // If we have per point padding we need to always compute\n                            // the radius for this point and the next. If we used to\n                            // have per point padding but don't anymore, don't force\n                            // compute next radius.\n                            if (forceNextRadiusCompute && !hasPerPointPadding) {\n                                forceNextRadiusCompute = false;\n                            }\n                        }\n                        // Shift y-values for every second grid column.\n                        // Note that we always use the optimal y axis radius for this.\n                        // Also note: We have to reverse the shift for reversed y-axes.\n                        if (point.x % 2) {\n                            y += yRadiusPx * (yAxis.reversed ? -1 : 1);\n                        }\n                        // Set plotX and plotY for use in K-D-Tree and more\n                        point.plotX = point.clientX = x;\n                        point.plotY = y;\n                        // Save radius for halo\n                        point.radius = radius;\n                        // Set this point's shape parameters\n                        point.shapeType = 'circle';\n                        point.shapeArgs = {\n                            x: x,\n                            y: y,\n                            r: radius\n                        };\n                    }\n                    series.translateColors();\n                }\n            },\n            // Square shape type.\n            square: {\n                alignDataLabel: HeatmapSeries.prototype.alignDataLabel,\n                translate: HeatmapSeries.prototype.translate,\n                getSeriesPadding: noop,\n                haloPath: HeatmapSeries.prototype.pointClass.prototype.haloPath\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TilemapShapes;\n    });\n    _registerModule(_modules, 'Series/Tilemap/TilemapSeries.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Series/Tilemap/TilemapPoint.js'], _modules['Series/Tilemap/TilemapSeriesDefaults.js'], _modules['Series/Tilemap/TilemapShapes.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, TilemapPoint, TilemapSeriesDefaults, TilemapShapes, U) {\n        /* *\n         *\n         *  Tilemaps module\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Øystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed, noop = H.noop;\n        var _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, HeatmapSeries = _a.heatmap, ScatterSeries = _a.scatter;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Extension to add pixel padding for series. Uses getSeriesPixelPadding on each\n         * series and adds the largest padding required. If no series has this function\n         * defined, we add nothing.\n         * @private\n         */\n        function onAxisAfterSetAxisTranslation() {\n            if (this.recomputingForTilemap || this.coll === 'colorAxis') {\n                return;\n            }\n            var axis = this, \n            // Find which series' padding to use\n            seriesPadding = axis.series\n                .map(function (series) {\n                return series.getSeriesPixelPadding &&\n                    series.getSeriesPixelPadding(axis);\n            })\n                .reduce(function (a, b) {\n                return (a && a.padding) > (b && b.padding) ?\n                    a :\n                    b;\n            }, void 0) ||\n                {\n                    padding: 0,\n                    axisLengthFactor: 1\n                }, lengthPadding = Math.round(seriesPadding.padding * seriesPadding.axisLengthFactor);\n            // Don't waste time on this if we're not adding extra padding\n            if (seriesPadding.padding) {\n                // Recompute translation with new axis length now (minus padding)\n                axis.len -= lengthPadding;\n                axis.recomputingForTilemap = true;\n                axis.setAxisTranslation();\n                delete axis.recomputingForTilemap;\n                axis.minPixelPadding += seriesPadding.padding;\n                axis.len += lengthPadding;\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.tilemap\n         *\n         * @augments Highcharts.Series\n         */\n        var TilemapSeries = /** @class */ (function (_super) {\n            __extends(TilemapSeries, _super);\n            function TilemapSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            TilemapSeries.compose = function (AxisClass) {\n                if (pushUnique(composed, 'TilemapSeries')) {\n                    addEvent(AxisClass, 'afterSetAxisTranslation', onAxisAfterSetAxisTranslation);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Use the shape's defined data label alignment function.\n             * @private\n             */\n            TilemapSeries.prototype.alignDataLabel = function () {\n                return this.tileShape.alignDataLabel.apply(this, arguments);\n            };\n            TilemapSeries.prototype.drawPoints = function () {\n                // In styled mode, use CSS, otherwise the fill used in the style\n                // sheet will take precedence over the fill attribute.\n                ColumnSeries.prototype.drawPoints.call(this);\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    if (point.graphic) {\n                        point.graphic[this.chart.styledMode ? 'css' : 'animate'](this.colorAttribs(point));\n                    }\n                }\n            };\n            /**\n             * Get metrics for padding of axis for this series.\n             * @private\n             */\n            TilemapSeries.prototype.getSeriesPixelPadding = function (axis) {\n                var isX = axis.isXAxis, padding = this.tileShape.getSeriesPadding(this);\n                // If the shape type does not require padding, return no-op padding\n                if (!padding) {\n                    return {\n                        padding: 0,\n                        axisLengthFactor: 1\n                    };\n                }\n                // Use translate to compute how far outside the points we\n                // draw, and use this difference as padding.\n                var coord1 = Math.round(axis.translate(isX ?\n                    padding.xPad * 2 :\n                    padding.yPad, 0, 1, 0, 1));\n                var coord2 = Math.round(axis.translate(isX ? padding.xPad : 0, 0, 1, 0, 1));\n                return {\n                    padding: (axis.single ? // If there is only one tick adjust padding #18647\n                        Math.abs(coord1 - coord2) / 2 :\n                        Math.abs(coord1 - coord2)) || 0,\n                    // Offset the yAxis length to compensate for shift. Setting the\n                    // length factor to 2 would add the same margin to max as min.\n                    // Now we only add a slight bit of the min margin to max, as we\n                    // don't actually draw outside the max bounds. For the xAxis we\n                    // draw outside on both sides so we add the same margin to min\n                    // and max.\n                    axisLengthFactor: isX ? 2 : 1.1\n                };\n            };\n            /**\n             * Set tile shape object on series.\n             * @private\n             */\n            TilemapSeries.prototype.setOptions = function () {\n                // Call original function\n                var ret = _super.prototype.setOptions.apply(this, arguments);\n                this.tileShape = TilemapShapes[ret.tileShape];\n                return ret;\n            };\n            /**\n             * Use translate from tileShape.\n             * @private\n             */\n            TilemapSeries.prototype.translate = function () {\n                return this.tileShape.translate.apply(this, arguments);\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            TilemapSeries.defaultOptions = merge(HeatmapSeries.defaultOptions, TilemapSeriesDefaults);\n            return TilemapSeries;\n        }(HeatmapSeries));\n        extend(TilemapSeries.prototype, {\n            // Revert the noop on getSymbol.\n            getSymbol: noop,\n            // Use drawPoints, markerAttribs, pointAttribs methods from the old\n            // heatmap implementation.\n            // TODO: Consider standardizing heatmap and tilemap into more\n            // consistent form.\n            markerAttribs: ScatterSeries.prototype.markerAttribs,\n            pointAttribs: ColumnSeries.prototype.pointAttribs,\n            pointClass: TilemapPoint\n        });\n        SeriesRegistry.registerSeriesType('tilemap', TilemapSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"circle\"|\"diamond\"|\"hexagon\"|\"square\"} Highcharts.TilemapShapeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return TilemapSeries;\n    });\n    _registerModule(_modules, 'masters/modules/tilemap.src.js', [_modules['Core/Globals.js'], _modules['Series/Tilemap/TilemapSeries.js']], function (Highcharts, TilemapSeries) {\n\n        var G = Highcharts;\n        TilemapSeries.compose(G.Axis);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","ColorAxisComposition","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","Point","series","pointClass","HeatmapPoint","seriesTypes","heatmap","extend","TilemapPoint","_super","arguments","haloPath","tileShape","setState","setVisible","pointSetVisible","marker","states","hover","halo","enabled","size","opacity","attributes","zIndex","pointPadding","H","noop","_a","HeatmapSeries","ScatterSeries","scatter","clamp","pick","tilePaddingFromTileSize","xDiv","yDiv","options","xPad","colsize","yPad","rowsize","hexagon","alignDataLabel","getSeriesPadding","tileEdges","x2","y1","x3","x4","y2","y3","x1","translate","yShift","xAxis","yAxis","seriesPointPadding","generatePoints","_i","_b","points","length","point","Math","floor","len","x","y","midPointPadding","abs","xMidPadding","reversed","xPointPadding","yPointPadding","round","plotX","clientX","plotY","shapeType","shapeArgs","translateColors","diamond","circle","radius","colsizePx","yRadiusPx","xRadiusPx","yRadius","forceNextRadiusCompute","hasPerPointPadding","sqrt","min","r","square","TilemapSeriesDefaults","TilemapShapes","composed","ColumnSeries","column","addEvent","merge","pushUnique","onAxisAfterSetAxisTranslation","recomputingForTilemap","coll","axis","seriesPadding","map","getSeriesPixelPadding","reduce","a","padding","axisLengthFactor","lengthPadding","setAxisTranslation","minPixelPadding","TilemapSeries","compose","AxisClass","drawPoints","graphic","chart","styledMode","colorAttribs","isX","isXAxis","coord1","coord2","single","setOptions","ret","defaultOptions","getSymbol","markerAttribs","pointAttribs","registerSeriesType","G","Axis"],"mappings":"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"}