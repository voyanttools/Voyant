{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v11.4.8 (2024-08-29)\n *\n * Gantt series\n *\n * (c) 2016-2024 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/gantt', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/ArrowSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2017 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an arrow symbol. Like a triangle, except not filled.\n         * ```\n         *                   o\n         *             o\n         *       o\n         * o\n         *       o\n         *             o\n         *                   o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrow(x, y, w, h) {\n            return [\n                ['M', x, y + h / 2],\n                ['L', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h]\n            ];\n        }\n        /**\n         * Creates a half-width arrow symbol. Like a triangle, except not filled.\n         * ```\n         *       o\n         *    o\n         * o\n         *    o\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrowHalf(x, y, w, h) {\n            return arrow(x, y, w / 2, h);\n        }\n        /**\n         * @private\n         */\n        function compose(SVGRendererClass) {\n            var symbols = SVGRendererClass.prototype.symbols;\n            symbols.arrow = arrow;\n            symbols['arrow-filled'] = triangleLeft;\n            symbols['arrow-filled-half'] = triangleLeftHalf;\n            symbols['arrow-half'] = arrowHalf;\n            symbols['triangle-left'] = triangleLeft;\n            symbols['triangle-left-half'] = triangleLeftHalf;\n        }\n        /**\n         * Creates a left-oriented triangle.\n         * ```\n         *             o\n         *       ooooooo\n         * ooooooooooooo\n         *       ooooooo\n         *             o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeft(x, y, w, h) {\n            return [\n                ['M', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h],\n                ['Z']\n            ];\n        }\n        /**\n         * Creates a half-width, left-oriented triangle.\n         * ```\n         *       o\n         *    oooo\n         * ooooooo\n         *    oooo\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeftHalf(x, y, w, h) {\n            return triangleLeft(x, y, w / 2, h);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ArrowSymbols = {\n            compose: compose\n        };\n\n        return ArrowSymbols;\n    });\n    _registerModule(_modules, 'Gantt/Connection.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, error = U.error, merge = U.merge, objectEach = U.objectEach;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var deg2rad = H.deg2rad, max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Connection class. Used internally to represent a connection between two\n         * points.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Connection\n         *\n         * @param {Highcharts.Point} from\n         *        Connection runs from this Point.\n         *\n         * @param {Highcharts.Point} to\n         *        Connection runs to this Point.\n         *\n         * @param {Highcharts.ConnectorsOptions} [options]\n         *        Connection options.\n         */\n        var Connection = /** @class */ (function () {\n            function Connection(from, to, options) {\n                this.init(from, to, options);\n            }\n            /**\n             * Initialize the Connection object. Used as constructor only.\n             *\n             * @function Highcharts.Connection#init\n             *\n             * @param {Highcharts.Point} from\n             *        Connection runs from this Point.\n             *\n             * @param {Highcharts.Point} to\n             *        Connection runs to this Point.\n             *\n             * @param {Highcharts.ConnectorsOptions} [options]\n             *        Connection options.\n             */\n            Connection.prototype.init = function (from, to, options) {\n                this.fromPoint = from;\n                this.toPoint = to;\n                this.options = options;\n                this.chart = from.series.chart;\n                this.pathfinder = this.chart.pathfinder;\n            };\n            /**\n             * Add (or update) this connection's path on chart. Stores reference to the\n             * created element on this.graphics.path.\n             *\n             * @function Highcharts.Connection#renderPath\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Path to render, in array format. E.g. ['M', 0, 0, 'L', 10, 10]\n             *\n             * @param {Highcharts.SVGAttributes} [attribs]\n             *        SVG attributes for the path.\n             *\n             * @param {Partial<Highcharts.AnimationOptionsObject>} [animation]\n             *        Animation options for the rendering.\n             */\n            Connection.prototype.renderPath = function (path, attribs) {\n                var connection = this, chart = this.chart, styledMode = chart.styledMode, pathfinder = this.pathfinder, anim = {};\n                var pathGraphic = connection.graphics && connection.graphics.path;\n                // Add the SVG element of the pathfinder group if it doesn't exist\n                if (!pathfinder.group) {\n                    pathfinder.group = chart.renderer.g()\n                        .addClass('highcharts-pathfinder-group')\n                        .attr({ zIndex: -1 })\n                        .add(chart.seriesGroup);\n                }\n                // Shift the group to compensate for plot area.\n                // Note: Do this always (even when redrawing a path) to avoid issues\n                // when updating chart in a way that changes plot metrics.\n                pathfinder.group.translate(chart.plotLeft, chart.plotTop);\n                // Create path if does not exist\n                if (!(pathGraphic && pathGraphic.renderer)) {\n                    pathGraphic = chart.renderer.path()\n                        .add(pathfinder.group);\n                    if (!styledMode) {\n                        pathGraphic.attr({\n                            opacity: 0\n                        });\n                    }\n                }\n                // Set path attribs and animate to the new path\n                pathGraphic.attr(attribs);\n                anim.d = path;\n                if (!styledMode) {\n                    anim.opacity = 1;\n                }\n                pathGraphic.animate(anim);\n                // Store reference on connection\n                this.graphics = this.graphics || {};\n                this.graphics.path = pathGraphic;\n            };\n            /**\n             * Calculate and add marker graphics for connection to the chart. The\n             * created/updated elements are stored on this.graphics.start and\n             * this.graphics.end.\n             *\n             * @function Highcharts.Connection#addMarker\n             *\n             * @param {string} type\n             *        Marker type, either 'start' or 'end'.\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} options\n             *        All options for this marker. Not calculated or merged with other\n             *        options.\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Connection path in array format. This is used to calculate the\n             *        rotation angle of the markers.\n             */\n            Connection.prototype.addMarker = function (type, options, path) {\n                var connection = this, chart = connection.fromPoint.series.chart, pathfinder = chart.pathfinder, renderer = chart.renderer, point = (type === 'start' ?\n                    connection.fromPoint :\n                    connection.toPoint), anchor = point.getPathfinderAnchorPoint(options);\n                var markerVector, radians, rotation, box, width, height, pathVector, segment;\n                if (!options.enabled) {\n                    return;\n                }\n                // Last vector before start/end of path, used to get angle\n                if (type === 'start') {\n                    segment = path[1];\n                }\n                else { // 'end'\n                    segment = path[path.length - 2];\n                }\n                if (segment && segment[0] === 'M' || segment[0] === 'L') {\n                    pathVector = {\n                        x: segment[1],\n                        y: segment[2]\n                    };\n                    // Get angle between pathVector and anchor point and use it to\n                    // create marker position.\n                    radians = point.getRadiansToVector(pathVector, anchor);\n                    markerVector = point.getMarkerVector(radians, options.radius, anchor);\n                    // Rotation of marker is calculated from angle between pathVector\n                    // and markerVector.\n                    // (Note:\n                    //  Used to recalculate radians between markerVector and pathVector,\n                    //  but this should be the same as between pathVector and anchor.)\n                    rotation = -radians / deg2rad;\n                    if (options.width && options.height) {\n                        width = options.width;\n                        height = options.height;\n                    }\n                    else {\n                        width = height = options.radius * 2;\n                    }\n                    // Add graphics object if it does not exist\n                    connection.graphics = connection.graphics || {};\n                    box = {\n                        x: markerVector.x - (width / 2),\n                        y: markerVector.y - (height / 2),\n                        width: width,\n                        height: height,\n                        rotation: rotation,\n                        rotationOriginX: markerVector.x,\n                        rotationOriginY: markerVector.y\n                    };\n                    if (!connection.graphics[type]) {\n                        // Create new marker element\n                        connection.graphics[type] = renderer\n                            .symbol(options.symbol)\n                            .addClass('highcharts-point-connecting-path-' + type + '-marker' +\n                            ' highcharts-color-' + this.fromPoint.colorIndex)\n                            .attr(box)\n                            .add(pathfinder.group);\n                        if (!renderer.styledMode) {\n                            connection.graphics[type].attr({\n                                fill: options.color || connection.fromPoint.color,\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth,\n                                opacity: 0\n                            })\n                                .animate({\n                                opacity: 1\n                            }, point.series.options.animation);\n                        }\n                    }\n                    else {\n                        connection.graphics[type].animate(box);\n                    }\n                }\n            };\n            /**\n             * Calculate and return connection path.\n             * Note: Recalculates chart obstacles on demand if they aren't calculated.\n             *\n             * @function Highcharts.Connection#getPath\n             *\n             * @param {Highcharts.ConnectorsOptions} options\n             *        Connector options. Not calculated or merged with other options.\n             *\n             * @return {object|undefined}\n             *         Calculated SVG path data in array format.\n             */\n            Connection.prototype.getPath = function (options) {\n                var pathfinder = this.pathfinder, chart = this.chart, algorithm = pathfinder.algorithms[options.type];\n                var chartObstacles = pathfinder.chartObstacles;\n                if (typeof algorithm !== 'function') {\n                    error('\"' + options.type + '\" is not a Pathfinder algorithm.');\n                    return {\n                        path: [],\n                        obstacles: []\n                    };\n                }\n                // This function calculates obstacles on demand if they don't exist\n                if (algorithm.requiresObstacles && !chartObstacles) {\n                    chartObstacles =\n                        pathfinder.chartObstacles =\n                            pathfinder.getChartObstacles(options);\n                    // If the algorithmMargin was computed, store the result in default\n                    // options.\n                    chart.options.connectors.algorithmMargin =\n                        options.algorithmMargin;\n                    // Cache some metrics too\n                    pathfinder.chartObstacleMetrics =\n                        pathfinder.getObstacleMetrics(chartObstacles);\n                }\n                // Get the SVG path\n                return algorithm(\n                // From\n                this.fromPoint.getPathfinderAnchorPoint(options.startMarker), \n                // To\n                this.toPoint.getPathfinderAnchorPoint(options.endMarker), merge({\n                    chartObstacles: chartObstacles,\n                    lineObstacles: pathfinder.lineObstacles || [],\n                    obstacleMetrics: pathfinder.chartObstacleMetrics,\n                    hardBounds: {\n                        xMin: 0,\n                        xMax: chart.plotWidth,\n                        yMin: 0,\n                        yMax: chart.plotHeight\n                    },\n                    obstacleOptions: {\n                        margin: options.algorithmMargin\n                    },\n                    startDirectionX: pathfinder.getAlgorithmStartDirection(options.startMarker)\n                }, options));\n            };\n            /**\n             * (re)Calculate and (re)draw the connection.\n             *\n             * @function Highcharts.Connection#render\n             */\n            Connection.prototype.render = function () {\n                var connection = this, fromPoint = connection.fromPoint, series = fromPoint.series, chart = series.chart, pathfinder = chart.pathfinder, attribs = {};\n                var options = merge(chart.options.connectors, series.options.connectors, fromPoint.options.connectors, connection.options);\n                // Set path attribs\n                if (!chart.styledMode) {\n                    attribs.stroke = options.lineColor || fromPoint.color;\n                    attribs['stroke-width'] = options.lineWidth;\n                    if (options.dashStyle) {\n                        attribs.dashstyle = options.dashStyle;\n                    }\n                }\n                attribs['class'] = // eslint-disable-line dot-notation\n                    'highcharts-point-connecting-path ' +\n                        'highcharts-color-' + fromPoint.colorIndex;\n                options = merge(attribs, options);\n                // Set common marker options\n                if (!defined(options.marker.radius)) {\n                    options.marker.radius = min(max(Math.ceil((options.algorithmMargin || 8) / 2) - 1, 1), 5);\n                }\n                // Get the path\n                var pathResult = connection.getPath(options), path = pathResult.path;\n                // Always update obstacle storage with obstacles from this path.\n                // We don't know if future calls will need this for their algorithm.\n                if (pathResult.obstacles) {\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles || [];\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles.concat(pathResult.obstacles);\n                }\n                // Add the calculated path to the pathfinder group\n                connection.renderPath(path, attribs);\n                // Render the markers\n                connection.addMarker('start', merge(options.marker, options.startMarker), path);\n                connection.addMarker('end', merge(options.marker, options.endMarker), path);\n            };\n            /**\n             * Destroy connection by destroying the added graphics elements.\n             *\n             * @function Highcharts.Connection#destroy\n             */\n            Connection.prototype.destroy = function () {\n                if (this.graphics) {\n                    objectEach(this.graphics, function (val) {\n                        val.destroy();\n                    });\n                    delete this.graphics;\n                }\n            };\n            return Connection;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Connection;\n    });\n    _registerModule(_modules, 'Extensions/CurrentDateIndication.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, merge = U.merge, pushUnique = U.pushUnique, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Show an indicator on the axis for the current date and time. Can be a\n         * boolean or a configuration object similar to\n         * [xAxis.plotLines](#xAxis.plotLines).\n         *\n         * @sample gantt/current-date-indicator/demo\n         *         Current date indicator enabled\n         * @sample gantt/current-date-indicator/object-config\n         *         Current date indicator with custom options\n         *\n         * @declare   Highcharts.CurrentDateIndicatorOptions\n         * @type      {boolean|CurrentDateIndicatorOptions}\n         * @default   true\n         * @extends   xAxis.plotLines\n         * @excluding value\n         * @product   gantt\n         * @apioption xAxis.currentDateIndicator\n         */\n        var defaultOptions = {\n            color: \"#ccd3ff\" /* Palette.highlightColor20 */,\n            width: 2,\n            /**\n             * @declare Highcharts.AxisCurrentDateIndicatorLabelOptions\n             */\n            label: {\n                /**\n                 * Format of the label. This options is passed as the fist argument to\n                 * [dateFormat](/class-reference/Highcharts.Time#dateFormat) function.\n                 *\n                 * @type      {string}\n                 * @default   %a, %b %d %Y, %H:%M\n                 * @product   gantt\n                 * @apioption xAxis.currentDateIndicator.label.format\n                 */\n                format: '%a, %b %d %Y, %H:%M',\n                formatter: function (value, format) {\n                    return this.axis.chart.time.dateFormat(format || '', value);\n                },\n                rotation: 0,\n                /**\n                 * @type {Highcharts.CSSObject}\n                 */\n                style: {\n                    /** @internal */\n                    fontSize: '0.7em'\n                }\n            }\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, PlotLineOrBandClass) {\n            if (pushUnique(composed, 'CurrentDateIndication')) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                addEvent(PlotLineOrBandClass, 'render', onPlotLineOrBandRender);\n                wrap(PlotLineOrBandClass.prototype, 'getLabelText', wrapPlotLineOrBandGetLabelText);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            var options = this.options, cdiOptions = options.currentDateIndicator;\n            if (cdiOptions) {\n                var plotLineOptions = typeof cdiOptions === 'object' ?\n                    merge(defaultOptions, cdiOptions) :\n                    merge(defaultOptions);\n                plotLineOptions.value = Date.now();\n                plotLineOptions.className = 'highcharts-current-date-indicator';\n                if (!options.plotLines) {\n                    options.plotLines = [];\n                }\n                options.plotLines.push(plotLineOptions);\n            }\n        }\n        /**\n         * @private\n         */\n        function onPlotLineOrBandRender() {\n            // If the label already exists, update its text\n            if (this.label) {\n                this.label.attr({\n                    text: this.getLabelText(this.options.label)\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapPlotLineOrBandGetLabelText(defaultMethod, defaultLabelOptions) {\n            var options = this.options;\n            if (options &&\n                options.className &&\n                options.className.indexOf('highcharts-current-date-indicator') !== -1 &&\n                options.label &&\n                typeof options.label.formatter === 'function') {\n                options.value = Date.now();\n                return options.label.formatter\n                    .call(this, options.value, options.label.format);\n            }\n            return defaultMethod.call(this, defaultLabelOptions);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var CurrentDateIndication = {\n            compose: compose\n        };\n\n        return CurrentDateIndication;\n    });\n    _registerModule(_modules, 'Core/Chart/GanttChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (Chart, D, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultOptions = D.defaultOptions;\n        var isArray = U.isArray, merge = U.merge, splat = U.splat;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Gantt-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/gantt\n         *\n         * @class\n         * @name Highcharts.GanttChart\n         * @extends Highcharts.Chart\n         */\n        var GanttChart = /** @class */ (function (_super) {\n            __extends(GanttChart, _super);\n            function GanttChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.GanttChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.GanttChart#event:init\n             * @emits Highcharts.GanttChart#event:afterInit\n             */\n            GanttChart.prototype.init = function (userOptions, callback) {\n                var xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis;\n                var defaultLinkedTo;\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge(true, {\n                    chart: {\n                        type: 'gantt'\n                    },\n                    title: {\n                        text: ''\n                    },\n                    legend: {\n                        enabled: false\n                    },\n                    navigator: {\n                        series: { type: 'gantt' },\n                        // Bars were clipped, #14060.\n                        yAxis: {\n                            type: 'category'\n                        }\n                    }\n                }, userOptions, // User's options\n                // forced options\n                {\n                    isGantt: true\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // Apply X axis options to both single and multi x axes If user hasn't\n                // defined axes as array, make it into an array and add a second axis by\n                // default.\n                options.xAxis = (!isArray(userOptions.xAxis) ?\n                    [userOptions.xAxis || {}, {}] :\n                    userOptions.xAxis).map(function (xAxisOptions, i) {\n                    var _a, _b, _c;\n                    if (i === 1) { // Second xAxis\n                        defaultLinkedTo = 0;\n                    }\n                    return merge(\n                    // Defaults\n                    {\n                        grid: {\n                            borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n                            enabled: true\n                        },\n                        opposite: (_c = (_b = (_a = defaultOptions.xAxis) === null || _a === void 0 ? void 0 : _a.opposite) !== null && _b !== void 0 ? _b : xAxisOptions.opposite) !== null && _c !== void 0 ? _c : true,\n                        linkedTo: defaultLinkedTo\n                    }, \n                    // User options\n                    xAxisOptions, \n                    // Forced options\n                    {\n                        type: 'datetime'\n                    });\n                });\n                // Apply Y axis options to both single and multi y axes\n                options.yAxis = (splat(userOptions.yAxis || {})).map(function (yAxisOptions) { return merge(\n                // Defaults\n                {\n                    grid: {\n                        borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n                        enabled: true\n                    },\n                    staticScale: 50,\n                    reversed: true,\n                    // Set default type treegrid, but only if 'categories' is\n                    // undefined\n                    type: yAxisOptions.categories ? yAxisOptions.type : 'treegrid'\n                }, \n                // User options\n                yAxisOptions); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            return GanttChart;\n        }(Chart));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (GanttChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * The factory function for creating new gantt charts. Creates a new {@link\n             * Highcharts.GanttChart|GanttChart} object with different default options\n             * than the basic Chart.\n             *\n             * @example\n             * // Render a chart in to div#container\n             * let chart = Highcharts.ganttChart('container', {\n             *     title: {\n             *         text: 'My chart'\n             *     },\n             *     series: [{\n             *         data: ...\n             *     }]\n             * });\n             *\n             * @function Highcharts.ganttChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} renderTo\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure.\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        Function to run when the chart has loaded and all external\n             *        images are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highcharts/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.GanttChart}\n             *         Returns the Chart object.\n             */\n            function ganttChart(a, b, c) {\n                return new GanttChart(a, b, c);\n            }\n            GanttChart.ganttChart = ganttChart;\n            /* eslint-enable jsdoc/check-param-names */\n        })(GanttChart || (GanttChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttChart;\n    });\n    _registerModule(_modules, 'Stock/Navigator/ChartNavigatorComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigatorClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                NavigatorConstructor = NavigatorClass;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // False if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ChartNavigatorComposition = {\n            compose: compose\n        };\n\n        return ChartNavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisSetExtremes(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            var zoomed;\n            if (axis.isXAxis &&\n                ((navigator === null || navigator === void 0 ? void 0 : navigator.enabled) || (rangeSelector === null || rangeSelector === void 0 ? void 0 : rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y' && e.trigger === 'zoom') {\n                    zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom selection,\n                    // then when the reset button is pressed, revert to this state. This\n                    // should apply only if the chart is initialized with a range (#6612),\n                    // otherwise zoom all the way out.\n                }\n                else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    // Minimum defined, zooming in\n                    if (defined(e.min)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                        // Minimum undefined, resetting zoom\n                    }\n                    else if (previousZoom) {\n                        e.min = previousZoom[0];\n                        e.max = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (!AxisClass.keepProps.includes('navigatorAxis')) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Border radius of the handles.\n                 *\n                 * @sample {highstock} stock/navigator/handles-border-radius/\n                 *      Border radius on the navigator handles.\n                 *\n                 * @since 11.4.2\n                 */\n                borderRadius: 0,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null, // #4602\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * `xAxis.maxPadding`, but the value is set in terms of axis values,\n                 * percentage or pixels.\n                 *\n                 * If it's a number, it is interpreted as axis values, which in a\n                 * datetime axis equals milliseconds.\n                 *\n                 * If it's a percentage string, is interpreted as percentages of the\n                 * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n                 *\n                 * If it's a pixel string, it is interpreted as a fixed pixel value, but\n                 * limited to 90% of the axis length.\n                 *\n                 * If it's undefined, the value is inherited from `xAxis.overscroll`.\n                 *\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @type    {number | string | undefined}\n                 * @since   6.0.0\n                 * @apioption navigator.xAxis.overscroll\n                 */\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                id: 'navigator-x-axis',\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                id: 'navigator-y-axis',\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // Keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [_modules['Core/Renderer/SVG/Symbols.js'], _modules['Core/Utilities.js']], function (rect, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n            if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n                if (ar || !(i in from)) {\n                    if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                    ar[i] = from[i];\n                }\n            }\n            return to.concat(ar || Array.prototype.slice.call(from));\n        };\n        var relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n            height = options.height || height;\n            return __spreadArray([\n                ['M', -markerPosition, height / 2 - 3.5],\n                ['L', -markerPosition, height / 2 + 4.5],\n                ['M', markerPosition - 1, height / 2 - 3.5],\n                ['L', markerPosition - 1, height / 2 + 4.5]\n            ], rect.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r: r }), true);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Utilities/StockUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Sets the chart.fixedRange to the specified value. If the value is larger\n         * than actual range, sets it to the maximum possible range. (#20327)\n         *\n         * @private\n         * @function Highcharts.StockChart#setFixedRange\n         * @param {number|undefined} range\n         *        Range to set in axis units.\n         */\n        function setFixedRange(range) {\n            var xAxis = this.xAxis[0];\n            if (defined(xAxis.dataMax) &&\n                defined(xAxis.dataMin) &&\n                range) {\n                this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n            }\n            else {\n                this.fixedRange = range;\n            }\n        }\n        var StockUtilities = {\n            setFixedRange: setFixedRange\n        };\n\n        return StockUtilities;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var composed = H.composed;\n        var getRendererType = RendererRegistry.getRendererType;\n        var setFixedRange = StockUtilities.setFixedRange;\n        var addEvent = U.addEvent, extend = U.extend, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, AxisClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            if (pushUnique(composed, 'Navigator')) {\n                ChartClass.prototype.setFixedRange = setFixedRange;\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                setOptions({ navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, 'Axis.Scrollbar')) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scrollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.dataMin === axis.dataMax // #10733\n                    ) {\n                        // Default action: when data extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else if (axis.min === axis.max) { // #20359\n                        // When the extremes are the same, set the scrollbar to a point\n                        // within the extremes range. Utilize pointRange to perform the\n                        // calculations. (#20359)\n                        var interval = axis.pointRange / (axis.dataMax +\n                            1);\n                        from = interval * axis.min;\n                        to = interval * (axis.max + 1);\n                        scrollbar.setRange(from, to);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)', // #18922\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, crisp = U.crisp, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                var _events = [\n                    // Mouse events\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler],\n                    // Touch events\n                    [bar, 'touchstart', mouseDownHandler],\n                    [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n                    [bar.ownerDocument, 'touchend', mouseUpHandler]\n                ];\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // `minWidth` distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        width: size,\n                        height: size,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // Backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scrollbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // Width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // Initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -crisp(0, trackBorderWidth),\n                    y: -crisp(0, trackBorderWidth)\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var _a;\n                var scroller = this;\n                var normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/ChartNavigatorComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (Axis, ChartNavigatorComposition, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __assign = (this && this.__assign) || function () {\n            __assign = Object.assign || function(t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n                }\n                return t;\n            };\n            return __assign.apply(this, arguments);\n        };\n        var defaultOptions = D.defaultOptions;\n        var isTouchDevice = H.isTouchDevice;\n        var symbols = SVGRenderer.prototype.symbols;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                this.isDirty = false;\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Navigator.compose = function (ChartClass, AxisClass, SeriesClass) {\n                ChartNavigatorComposition.compose(ChartClass, Navigator);\n                NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // Top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin], // Top left of z.r.\n                        ['M', left, zoomedMax], // Bottom left of z.r.\n                        ['L', left + height, zoomedMax], // Bottom right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // Upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // Left\n                        ['M', left, lineTop],\n                        // Upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // Lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // Lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // Upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // Right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            lineTop\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // Upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate and update DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var _a, _b;\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = (_a = navigator.navigatorGroup) !== null && _a !== void 0 ? _a : (navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add());\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var _a;\n                    var shade = (_a = navigator.shades[index]) !== null && _a !== void 0 ? _a : (navigator.shades[index] = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup));\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ? navigatorOptions.maskFill : 'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                });\n                // Create the outline:\n                if (!navigator.outline) {\n                    navigator.outline = renderer.path()\n                        .addClass('highcharts-navigator-outline')\n                        .add(navigatorGroup);\n                }\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if ((_b = navigatorOptions.handles) === null || _b === void 0 ? void 0 : _b.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        var _a;\n                        var symbolName = handlesOptions_1.symbols[index];\n                        if (!navigator.handles[index] ||\n                            navigator.handles[index].symbolUrl !== symbolName) {\n                            // Generate symbol from scratch if we're dealing with an URL\n                            (_a = navigator.handles[index]) === null || _a === void 0 ? void 0 : _a.destroy();\n                            navigator.handles[index] = renderer.symbol(symbolName, -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                            // Z index is 6 for right handle, 7 for left. Can't be 10,\n                            // because of the tooltip in inverted chart (#2908).\n                            navigator.handles[index].attr({ zIndex: 7 - index })\n                                .addClass('highcharts-navigator-handle ' +\n                                'highcharts-navigator-handle-' +\n                                ['left', 'right'][index]).add(navigatorGroup);\n                            navigator.addMouseEvents();\n                            // If the navigator symbol changed, update its path and name\n                        }\n                        else if (!navigator.handles[index].isImg &&\n                            navigator.handles[index].symbolName !== symbolName) {\n                            var symbolFn = symbols[symbolName], path = symbolFn.call(symbols, -width_1 / 2 - 1, 0, width_1, height_1);\n                            navigator.handles[index].attr({\n                                d: path\n                            });\n                            navigator.handles[index].symbolName = symbolName;\n                        }\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth,\n                                width: handlesOptions_1.width,\n                                height: handlesOptions_1.height,\n                                x: -width_1 / 2 - 1,\n                                y: 0\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options, redraw) {\n                var _a, _b;\n                var _this = this;\n                var _c, _d;\n                if (redraw === void 0) { redraw = false; }\n                var chart = this.chart, invertedUpdate = chart.options.chart.inverted !==\n                    ((_c = chart.scrollbar) === null || _c === void 0 ? void 0 : _c.options.vertical);\n                merge(true, chart.options.navigator, options);\n                this.navigatorOptions = chart.options.navigator || {};\n                this.setOpposite();\n                // Revert to destroy/init for navigator/scrollbar enabled toggle\n                if (defined(options.enabled) || invertedUpdate) {\n                    this.destroy();\n                    this.navigatorEnabled = options.enabled || this.navigatorEnabled;\n                    return this.init(chart);\n                }\n                if (this.navigatorEnabled) {\n                    this.isDirty = true;\n                    if (options.adaptToUpdatedData === false) {\n                        this.baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', _this.updatedDataHandler);\n                        }, this);\n                    }\n                    if (options.adaptToUpdatedData) {\n                        this.baseSeries.forEach(function (series) {\n                            series.eventsToUnbind.push(addEvent(series, 'updatedData', _this.updatedDataHandler));\n                        }, this);\n                    }\n                    // Update navigator series\n                    if (options.series || options.baseSeries) {\n                        this.setBaseSeries(void 0, false);\n                    }\n                    // Update navigator axis\n                    if (options.height || options.xAxis || options.yAxis) {\n                        this.height = (_d = options.height) !== null && _d !== void 0 ? _d : this.height;\n                        var offsets = this.getXAxisOffsets();\n                        this.xAxis.update(__assign(__assign({}, options.xAxis), (_a = { offsets: offsets }, _a[chart.inverted ? 'width' : 'height'] = this.height, _a[chart.inverted ? 'height' : 'width'] = void 0, _a)), false);\n                        this.yAxis.update(__assign(__assign({}, options.yAxis), (_b = {}, _b[chart.inverted ? 'width' : 'height'] = this.height, _b)), false);\n                    }\n                }\n                if (redraw) {\n                    chart.redraw();\n                }\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                if (this.isDirty) {\n                    // Update DOM navigator elements\n                    this.renderElements();\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // In case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                this.isDirty = false;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                eventsToUnbind.push(\n                // Add mouse move and mouseup events. These are bind to doc/div,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n                // Touch events\n                addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // It has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            fireEvent(this, 'setRange', {\n                                min: Math.min(ext.min, ext.max),\n                                max: Math.max(ext.min, ext.max),\n                                redraw: true,\n                                eventArguments: {\n                                    trigger: 'navigator'\n                                }\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.setFixedRange(void 0);\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var _a;\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = ((_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // Outside left\n                            chartX = dragOffset;\n                            // Outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        fireEvent(this, 'setRange', {\n                            min: Math.min(ext.min, ext.max),\n                            max: Math.max(ext.min, ext.max),\n                            redraw: true,\n                            animation: navigator.hasDragged ? false : null,\n                            eventArguments: {\n                                trigger: 'navigator',\n                                triggerOp: 'navigator-drag',\n                                DOMEvent: DOMEvent // #1838\n                            }\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Calculate the navigator xAxis offsets\n             *\n             * @private\n             */\n            Navigator.prototype.getXAxisOffsets = function () {\n                return (this.chart.inverted ?\n                    [this.scrollButtonSize, 0, -this.scrollButtonSize, 0] :\n                    [0, -this.scrollButtonSize, 0, this.scrollButtonSize]);\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var _a;\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.setOpposite();\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    var offsets = this.getXAxisOffsets();\n                    // An x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // Inherit base xAxis' break, ordinal options and overscroll\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal,\n                        overscroll: baseXaxis.options.overscroll\n                    }, navigatorOptions.xAxis, {\n                        type: 'datetime',\n                        yAxis: (_a = navigatorOptions.yAxis) === null || _a === void 0 ? void 0 : _a.id,\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true, // #2436\n                        startOnTick: false,\n                        endOnTick: false,\n                        // Inherit base xAxis' padding when ordinal is false (#16915).\n                        minPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.minPadding,\n                        maxPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.maxPadding,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: offsets,\n                        width: height\n                    } : {\n                        offsets: offsets,\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false), // #14060\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // Reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // In case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // From pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // From value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Set the opposite property on navigator\n             *\n             * @private\n             */\n            Navigator.prototype.setOpposite = function () {\n                var navigatorOptions = this.navigatorOptions, navigatorEnabled = this.navigatorEnabled, chart = this.chart;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var _a, _b;\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null, // #6162\n                    linkedTo: null, // #6734\n                    group: 'nav', // For columns\n                    padXAxis: false,\n                    xAxis: (_a = this.navigatorOptions.xAxis) === null || _a === void 0 ? void 0 : _a.id,\n                    yAxis: (_b = this.navigatorOptions.yAxis) === null || _b === void 0 ? void 0 : _b.id,\n                    showInLegend: false,\n                    stacking: void 0, // #4823\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            // Set data on initial run with dataSorting enabled (#20318)\n                            chart.setSortedData();\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitly\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (baseSeries) {\n                            erase(baseSeries, base); // #21043\n                        }\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var _a;\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick((_a = baseXAxis.ordinal) === null || _a === void 0 ? void 0 : _a.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator;\n                    var marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }), addEvent(Navigator, 'setRange', function (e) {\n                    this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n                this.navigatorEnabled = false;\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'FÃ©vrier', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'AoÃ»t',\n         *             'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: 'â†’'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0, // Reserved space for buttons and input\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected. If the selected range\n             * exceeds the total data range and the 'all' option is available,\n             * the 'all' option, showing the full range, is automatically selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, H, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.setFixedRange(max - min);\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (pushUnique(composed, 'RangeSelector')) {\n                var chartProto = ChartClass.prototype;\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n                addEvent(ChartClass, 'afterGetContainer', createRangeSelector);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'redraw', redrawRangeSelector);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                chartProto.callbacks.push(redrawRangeSelector);\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function createRangeSelector() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        function redrawRangeSelector() {\n            var chart = this;\n            var rangeSelector = this.rangeSelector;\n            if (!rangeSelector) {\n                return;\n            }\n            var alignTo;\n            var extremes = chart.xAxis[0].getExtremes();\n            var legend = chart.legend;\n            var verticalAlign = (rangeSelector &&\n                rangeSelector.options.verticalAlign);\n            if (isNumber(extremes.min)) {\n                rangeSelector.render(extremes.min, extremes.max);\n            }\n            // Re-align the legend so that it's below the rangeselector\n            if (legend.display &&\n                verticalAlign === 'top' &&\n                verticalAlign === legend.options.verticalAlign) {\n                // Create a new alignment box for the legend.\n                alignTo = merge(chart.spacingBox);\n                if (legend.options.layout === 'vertical') {\n                    alignTo.y = chart.plotTop;\n                }\n                else {\n                    alignTo.y += rangeSelector.getHeight();\n                }\n                legend.group.placed = false; // Don't animate the alignment.\n                legend.align(alignTo);\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        /**\n         *\n         */\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/OrdinalAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, css = U.css, defined = U.defined, error = U.error, isNumber = U.isNumber, pick = U.pick, timeUnits = U.timeUnits, isString = U.isString;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Extends the axis with ordinal support.\n         * @private\n         */\n        var OrdinalAxis;\n        (function (OrdinalAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the axis with ordinal support.\n             *\n             * @private\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param ChartClass\n             * Chart class to use.\n             *\n             * @param SeriesClass\n             * Series class to use.\n             */\n            function compose(AxisClass, SeriesClass, ChartClass) {\n                var axisProto = AxisClass.prototype;\n                if (!axisProto.ordinal2lin) {\n                    axisProto.getTimeTicks = getTimeTicks;\n                    axisProto.index2val = index2val;\n                    axisProto.lin2val = lin2val;\n                    axisProto.val2lin = val2lin;\n                    // Record this to prevent overwriting by broken-axis module (#5979)\n                    axisProto.ordinal2lin = axisProto.val2lin;\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n                    addEvent(AxisClass, 'afterSetScale', onAxisAfterSetScale);\n                    addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n                    addEvent(ChartClass, 'pan', onChartPan);\n                    addEvent(ChartClass, 'touchpan', onChartPan);\n                    addEvent(SeriesClass, 'updatedData', onSeriesUpdatedData);\n                }\n                return AxisClass;\n            }\n            OrdinalAxis.compose = compose;\n            /**\n             * In an ordinal axis, there might be areas with dense concentrations of\n             * points, then large gaps between some. Creating equally distributed\n             * ticks over this entire range may lead to a huge number of ticks that\n             * will later be removed. So instead, break the positions up in\n             * segments, find the tick positions for each segment then concatenize\n             * them. This method is used from both data grouping logic and X axis\n             * tick position logic.\n             * @private\n             */\n            function getTimeTicks(normalizedInterval, min, max, startOfWeek, positions, closestDistance, findHigherRanks) {\n                if (positions === void 0) { positions = []; }\n                if (closestDistance === void 0) { closestDistance = 0; }\n                var higherRanks = {}, tickPixelIntervalOption = this.options.tickPixelInterval, time = this.chart.time, \n                // Record all the start positions of a segment, to use when\n                // deciding what's a gap in the data.\n                segmentStarts = [];\n                var end, segmentPositions, hasCrossedHigherRank, info, outsideMax, start = 0, groupPositions = [], lastGroupPosition = -Number.MAX_VALUE;\n                // The positions are not always defined, for example for ordinal\n                // positions when data has regular interval (#1557, #2090)\n                if ((!this.options.ordinal && !this.options.breaks) ||\n                    !positions ||\n                    positions.length < 3 ||\n                    typeof min === 'undefined') {\n                    return time.getTimeTicks.apply(time, arguments);\n                }\n                // Analyze the positions array to split it into segments on gaps\n                // larger than 5 times the closest distance. The closest distance is\n                // already found at this point, so we reuse that instead of\n                // computing it again.\n                var posLength = positions.length;\n                for (end = 0; end < posLength; end++) {\n                    outsideMax = end && positions[end - 1] > max;\n                    if (positions[end] < min) { // Set the last position before min\n                        start = end;\n                    }\n                    if (end === posLength - 1 ||\n                        positions[end + 1] - positions[end] > closestDistance * 5 ||\n                        outsideMax) {\n                        // For each segment, calculate the tick positions from the\n                        // getTimeTicks utility function. The interval will be the\n                        // same regardless of how long the segment is.\n                        if (positions[end] > lastGroupPosition) { // #1475\n                            segmentPositions = time.getTimeTicks(normalizedInterval, positions[start], positions[end], startOfWeek);\n                            // Prevent duplicate groups, for example for multiple\n                            // segments within one larger time frame (#1475)\n                            while (segmentPositions.length &&\n                                segmentPositions[0] <= lastGroupPosition) {\n                                segmentPositions.shift();\n                            }\n                            if (segmentPositions.length) {\n                                lastGroupPosition =\n                                    segmentPositions[segmentPositions.length - 1];\n                            }\n                            segmentStarts.push(groupPositions.length);\n                            groupPositions = groupPositions.concat(segmentPositions);\n                        }\n                        // Set start of next segment\n                        start = end + 1;\n                    }\n                    if (outsideMax) {\n                        break;\n                    }\n                }\n                // Get the grouping info from the last of the segments. The info is\n                // the same for all segments.\n                if (segmentPositions) {\n                    info = segmentPositions.info;\n                    // Optionally identify ticks with higher rank, for example\n                    // when the ticks have crossed midnight.\n                    if (findHigherRanks && info.unitRange <= timeUnits.hour) {\n                        end = groupPositions.length - 1;\n                        // Compare points two by two\n                        for (start = 1; start < end; start++) {\n                            if (time.dateFormat('%d', groupPositions[start]) !==\n                                time.dateFormat('%d', groupPositions[start - 1])) {\n                                higherRanks[groupPositions[start]] = 'day';\n                                hasCrossedHigherRank = true;\n                            }\n                        }\n                        // If the complete array has crossed midnight, we want\n                        // to mark the first positions also as higher rank\n                        if (hasCrossedHigherRank) {\n                            higherRanks[groupPositions[0]] = 'day';\n                        }\n                        info.higherRanks = higherRanks;\n                    }\n                    // Save the info\n                    info.segmentStarts = segmentStarts;\n                    groupPositions.info = info;\n                }\n                else {\n                    error(12, false, this.chart);\n                }\n                // Don't show ticks within a gap in the ordinal axis, where the\n                // space between two points is greater than a portion of the tick\n                // pixel interval\n                if (findHigherRanks && defined(tickPixelIntervalOption)) {\n                    var length_1 = groupPositions.length, translatedArr = [], distances = [];\n                    var itemToRemove = void 0, translated = void 0, lastTranslated = void 0, medianDistance = void 0, distance = void 0, i = length_1;\n                    // Find median pixel distance in order to keep a reasonably even\n                    // distance between ticks (#748)\n                    while (i--) {\n                        translated = this.translate(groupPositions[i]);\n                        if (lastTranslated) {\n                            distances[i] = lastTranslated - translated;\n                        }\n                        translatedArr[i] = lastTranslated = translated;\n                    }\n                    distances.sort(function (a, b) { return a - b; });\n                    medianDistance = distances[Math.floor(distances.length / 2)];\n                    if (medianDistance < tickPixelIntervalOption * 0.6) {\n                        medianDistance = null;\n                    }\n                    // Now loop over again and remove ticks where needed\n                    i = groupPositions[length_1 - 1] > max ? length_1 - 1 : length_1; // #817\n                    lastTranslated = void 0;\n                    while (i--) {\n                        translated = translatedArr[i];\n                        distance = Math.abs(lastTranslated - translated);\n                        // #4175 - when axis is reversed, the distance, is negative but\n                        // tickPixelIntervalOption positive, so we need to compare the\n                        // same values\n                        // Remove ticks that are closer than 0.6 times the pixel\n                        // interval from the one to the right, but not if it is close to\n                        // the median distance (#748).\n                        if (lastTranslated &&\n                            distance < tickPixelIntervalOption * 0.8 &&\n                            (medianDistance === null || distance < medianDistance * 0.8)) {\n                            // Is this a higher ranked position with a normal\n                            // position to the right?\n                            if (higherRanks[groupPositions[i]] &&\n                                !higherRanks[groupPositions[i + 1]]) {\n                                // Yes: remove the lower ranked neighbour to the\n                                // right\n                                itemToRemove = i + 1;\n                                lastTranslated = translated; // #709\n                            }\n                            else {\n                                // No: remove this one\n                                itemToRemove = i;\n                            }\n                            groupPositions.splice(itemToRemove, 1);\n                        }\n                        else {\n                            lastTranslated = translated;\n                        }\n                    }\n                }\n                return groupPositions;\n            }\n            /**\n             * Get axis position of given index of the extended ordinal positions.\n             * Used only when panning an ordinal axis.\n             *\n             * @private\n             * @function Highcharts.Axis#index2val\n             * @param {number} index\n             * The index value of searched point\n             */\n            function index2val(index) {\n                var axis = this, ordinal = axis.ordinal, \n                // Context could be changed to extendedOrdinalPositions.\n                ordinalPositions = ordinal.positions;\n                // The visible range contains only equally spaced values.\n                if (!ordinalPositions) {\n                    return index;\n                }\n                var i = ordinalPositions.length - 1, distance;\n                if (index < 0) { // Out of range, in effect panning to the left\n                    index = ordinalPositions[0];\n                }\n                else if (index > i) { // Out of range, panning to the right\n                    index = ordinalPositions[i];\n                }\n                else { // Split it up\n                    i = Math.floor(index);\n                    distance = index - i; // The decimal\n                }\n                if (typeof distance !== 'undefined' &&\n                    typeof ordinalPositions[i] !== 'undefined') {\n                    return ordinalPositions[i] + (distance ?\n                        distance *\n                            (ordinalPositions[i + 1] - ordinalPositions[i]) :\n                        0);\n                }\n                return index;\n            }\n            /**\n             * Translate from linear (internal) to axis value.\n             *\n             * @private\n             * @function Highcharts.Axis#lin2val\n             * @param {number} val\n             * The linear abstracted value.\n             */\n            function lin2val(val) {\n                var axis = this, ordinal = axis.ordinal, localMin = axis.old ? axis.old.min : axis.min, localA = axis.old ? axis.old.transA : axis.transA;\n                // Always use extendedPositions (#19816)\n                var positions = ordinal.getExtendedPositions();\n                // In some cases (especially in early stages of the chart creation) the\n                // getExtendedPositions might return undefined.\n                if (positions && positions.length) {\n                    // Convert back from modivied value to pixels. // #15970\n                    var pixelVal = correctFloat((val - localMin) * localA +\n                        axis.minPixelPadding), index = correctFloat(ordinal.getIndexOfPoint(pixelVal, positions)), mantissa = correctFloat(index % 1);\n                    // Check if the index is inside position array. If true,\n                    // read/approximate value for that exact index.\n                    if (index >= 0 && index <= positions.length - 1) {\n                        var leftNeighbour = positions[Math.floor(index)], rightNeighbour = positions[Math.ceil(index)], distance = rightNeighbour - leftNeighbour;\n                        return positions[Math.floor(index)] + mantissa * distance;\n                    }\n                }\n                // If the value is outside positions array, return initial value\n                return val; // #16784\n            }\n            /**\n             * Internal function to calculate the precise index in ordinalPositions\n             * array.\n             * @private\n             */\n            function getIndexInArray(ordinalPositions, val) {\n                var index = OrdinalAxis.Additions.findIndexOf(ordinalPositions, val, true);\n                if (ordinalPositions[index] === val) {\n                    return index;\n                }\n                var percent = (val - ordinalPositions[index]) /\n                    (ordinalPositions[index + 1] - ordinalPositions[index]);\n                return index + percent;\n            }\n            /**\n            * @private\n            */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (!axis.ordinal) {\n                    axis.ordinal = new OrdinalAxis.Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisFoundExtremes() {\n                var axis = this, eventArgs = axis.eventArgs, options = axis.options;\n                if (axis.isXAxis &&\n                    defined(options.overscroll) &&\n                    options.overscroll !== 0 &&\n                    isNumber(axis.max) &&\n                    isNumber(axis.min)) {\n                    if (axis.options.ordinal && !axis.ordinal.originalOrdinalRange) {\n                        // Calculate the original ordinal range\n                        axis.ordinal.getExtendedPositions(false);\n                    }\n                    if (axis.max === axis.dataMax &&\n                        (\n                        // Panning is an exception. We don't want to apply\n                        // overscroll when panning over the dataMax\n                        (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'pan' ||\n                            axis.isInternal) &&\n                        // Scrollbar buttons are the other execption\n                        (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'navigator') {\n                        var overscroll = axis.ordinal.convertOverscroll(options.overscroll);\n                        axis.max += overscroll;\n                        // Live data and buttons require translation for the min:\n                        if (!axis.isInternal &&\n                            defined(axis.userMin) &&\n                            (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'mousewheel') {\n                            axis.min += overscroll;\n                        }\n                    }\n                }\n            }\n            /**\n             * For ordinal axis, that loads data async, redraw axis after data is\n             * loaded. If we don't do that, axis will have the same extremes as\n             * previously, but ordinal positions won't be calculated. See #10290\n             * @private\n             */\n            function onAxisAfterSetScale() {\n                var axis = this;\n                if (axis.horiz && !axis.isDirty) {\n                    axis.isDirty = axis.isOrdinal &&\n                        axis.chart.navigator &&\n                        !axis.chart.navigator.adaptToUpdatedData;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInitialAxisTranslation() {\n                var axis = this;\n                if (axis.ordinal) {\n                    axis.ordinal.beforeSetTickPositions();\n                    axis.tickInterval = axis.ordinal.postProcessTickInterval(axis.tickInterval);\n                }\n            }\n            /**\n             * Extending the Chart.pan method for ordinal axes\n             * @private\n             */\n            function onChartPan(e) {\n                var chart = this, xAxis = chart.xAxis[0], overscroll = xAxis.ordinal.convertOverscroll(xAxis.options.overscroll), chartX = e.originalEvent.chartX, panning = chart.options.chart.panning;\n                var runBase = false;\n                if (panning &&\n                    panning.type !== 'y' &&\n                    xAxis.options.ordinal &&\n                    xAxis.series.length &&\n                    // On touch devices, let default function handle the pinching\n                    (!e.touches || e.touches.length <= 1)) {\n                    var mouseDownX = chart.mouseDownX, extremes = xAxis.getExtremes(), dataMin = extremes.dataMin, dataMax = extremes.dataMax, min = extremes.min, max = extremes.max, hoverPoints = chart.hoverPoints, closestPointRange = (xAxis.closestPointRange ||\n                        (xAxis.ordinal && xAxis.ordinal.overscrollPointsRange)), pointPixelWidth = (xAxis.translationSlope *\n                        (xAxis.ordinal.slope || closestPointRange)), \n                    // How many ordinal units did we move?\n                    movedUnits = Math.round((mouseDownX - chartX) / pointPixelWidth), \n                    // Get index of all the chart's points\n                    extendedOrdinalPositions = xAxis.ordinal.getExtendedPositions(), extendedAxis = {\n                        ordinal: {\n                            positions: extendedOrdinalPositions,\n                            extendedOrdinalPositions: extendedOrdinalPositions\n                        }\n                    }, index2val_1 = xAxis.index2val, val2lin_1 = xAxis.val2lin;\n                    var trimmedRange = void 0, ordinalPositions = void 0;\n                    // Make sure panning to the edges does not decrease the zoomed range\n                    if ((min <= dataMin && movedUnits < 0) ||\n                        (max + overscroll >= dataMax && movedUnits > 0)) {\n                        return;\n                    }\n                    // We have an ordinal axis, but the data is equally spaced\n                    if (!extendedAxis.ordinal.positions) {\n                        runBase = true;\n                    }\n                    else if (Math.abs(movedUnits) > 1) {\n                        // Remove active points for shared tooltip\n                        if (hoverPoints) {\n                            hoverPoints.forEach(function (point) {\n                                point.setState();\n                            });\n                        }\n                        // In grouped data series, the last ordinal position represents\n                        // the grouped data, which is to the left of the real data max.\n                        // If we don't compensate for this, we will be allowed to pan\n                        // grouped data series passed the right of the plot area.\n                        ordinalPositions = extendedAxis.ordinal.positions;\n                        if (dataMax >\n                            ordinalPositions[ordinalPositions.length - 1]) {\n                            ordinalPositions.push(dataMax);\n                        }\n                        // Get the new min and max values by getting the ordinal index\n                        // for the current extreme, then add the moved units and\n                        // translate back to values. This happens on the extended\n                        // ordinal positions if the new position is out of range, else\n                        // it happens on the current x axis which is smaller and faster.\n                        chart.setFixedRange(max - min);\n                        trimmedRange = xAxis.navigatorAxis\n                            .toFixedRange(void 0, void 0, index2val_1.apply(extendedAxis, [\n                            val2lin_1.apply(extendedAxis, [min, true]) +\n                                movedUnits\n                        ]), index2val_1.apply(extendedAxis, [\n                            val2lin_1.apply(extendedAxis, [max, true]) +\n                                movedUnits\n                        ]));\n                        // Apply it if it is within the available data range\n                        if (trimmedRange.min >= Math.min(extremes.dataMin, min) &&\n                            trimmedRange.max <= Math.max(dataMax, max) + overscroll) {\n                            xAxis.setExtremes(trimmedRange.min, trimmedRange.max, true, false, { trigger: 'pan' });\n                        }\n                        chart.mouseDownX = chartX; // Set new reference for next run\n                        css(chart.container, { cursor: 'move' });\n                    }\n                }\n                else {\n                    runBase = true;\n                }\n                // Revert to the linear chart.pan version\n                if (runBase || (panning && /y/.test(panning.type))) {\n                    if (overscroll) {\n                        xAxis.max = xAxis.dataMax + overscroll;\n                    }\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesUpdatedData() {\n                var xAxis = this.xAxis;\n                // Destroy the extended ordinal index on updated data\n                // and destroy extendedOrdinalPositions, #16055.\n                if (xAxis && xAxis.options.ordinal) {\n                    delete xAxis.ordinal.index;\n                    delete xAxis.ordinal.originalOrdinalRange;\n                }\n            }\n            /**\n             * Translate from a linear axis value to the corresponding ordinal axis\n             * position. If there are no gaps in the ordinal axis this will be the\n             * same. The translated value is the value that the point would have if\n             * the axis was linear, using the same min and max.\n             *\n             * @private\n             * @function Highcharts.Axis#val2lin\n             * @param {number} val\n             * The axis value.\n             * @param {boolean} [toIndex]\n             * Whether to return the index in the ordinalPositions or the new value.\n             */\n            function val2lin(val, toIndex) {\n                var axis = this, ordinal = axis.ordinal, ordinalPositions = ordinal.positions;\n                var slope = ordinal.slope, extendedOrdinalPositions;\n                if (!ordinalPositions) {\n                    return val;\n                }\n                var ordinalLength = ordinalPositions.length;\n                var ordinalIndex;\n                // If the searched value is inside visible plotArea, ivastigate the\n                // value basing on ordinalPositions.\n                if (ordinalPositions[0] <= val &&\n                    ordinalPositions[ordinalLength - 1] >= val) {\n                    ordinalIndex = getIndexInArray(ordinalPositions, val);\n                    // Final return value is based on ordinalIndex\n                }\n                else {\n                    extendedOrdinalPositions =\n                        ordinal.getExtendedPositions &&\n                            ordinal.getExtendedPositions();\n                    if (!(extendedOrdinalPositions && extendedOrdinalPositions.length)) {\n                        return val;\n                    }\n                    var length_2 = extendedOrdinalPositions.length;\n                    if (!slope) {\n                        slope =\n                            (extendedOrdinalPositions[length_2 - 1] -\n                                extendedOrdinalPositions[0]) /\n                                length_2;\n                    }\n                    // `originalPointReference` is equal to the index of first point of\n                    // ordinalPositions in extendedOrdinalPositions.\n                    var originalPositionsReference = getIndexInArray(extendedOrdinalPositions, ordinalPositions[0]);\n                    // If the searched value is outside the visiblePlotArea,\n                    // check if it is inside extendedOrdinalPositions.\n                    if (val >= extendedOrdinalPositions[0] &&\n                        val <=\n                            extendedOrdinalPositions[length_2 - 1]) {\n                        // Return Value\n                        ordinalIndex = getIndexInArray(extendedOrdinalPositions, val) -\n                            originalPositionsReference;\n                    }\n                    else {\n                        if (!toIndex) {\n                            // If the value is outside positions array,\n                            // return initial value, #16784\n                            return val;\n                        }\n                        // Since ordinal.slope is the average distance between 2\n                        // points on visible plotArea, this can be used to calculate\n                        // the approximate position of the point, which is outside\n                        // the extendedOrdinalPositions.\n                        if (val < extendedOrdinalPositions[0]) {\n                            var diff = extendedOrdinalPositions[0] - val, approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                -originalPositionsReference -\n                                    approximateIndexOffset;\n                        }\n                        else {\n                            var diff = val -\n                                extendedOrdinalPositions[length_2 - 1], approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                approximateIndexOffset +\n                                    length_2 -\n                                    originalPositionsReference;\n                        }\n                    }\n                }\n                return toIndex ? ordinalIndex : slope * (ordinalIndex || 0) +\n                    ordinal.offset;\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(axis) {\n                    this.index = {};\n                    this.axis = axis;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * Calculate the ordinal positions before tick positions are calculated.\n                 * @private\n                 */\n                Additions.prototype.beforeSetTickPositions = function () {\n                    var _a;\n                    var axis = this.axis, ordinal = axis.ordinal, extremes = axis.getExtremes(), min = extremes.min, max = extremes.max, hasBreaks = (_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks, isOrdinal = axis.options.ordinal;\n                    var len, uniqueOrdinalPositions, dist, minIndex, maxIndex, slope, i, ordinalPositions = [], overscrollPointsRange = Number.MAX_VALUE, useOrdinal = false, adjustOrdinalExtremesPoints = false, isBoosted = false;\n                    // Apply the ordinal logic\n                    if (isOrdinal || hasBreaks) { // #4167 YAxis is never ordinal ?\n                        var distanceBetweenPoint_1 = 0;\n                        axis.series.forEach(function (series, i) {\n                            uniqueOrdinalPositions = [];\n                            // For an axis with multiple series, check if the distance\n                            // between points is identical throughout all series.\n                            if (i > 0 &&\n                                series.options.id !== 'highcharts-navigator-series' &&\n                                series.processedXData.length > 1) {\n                                adjustOrdinalExtremesPoints =\n                                    distanceBetweenPoint_1 !== series.processedXData[1] -\n                                        series.processedXData[0];\n                            }\n                            distanceBetweenPoint_1 =\n                                series.processedXData[1] - series.processedXData[0];\n                            if (series.boosted) {\n                                isBoosted = series.boosted;\n                            }\n                            if (series.reserveSpace() &&\n                                (series\n                                    .takeOrdinalPosition !== false || hasBreaks)) {\n                                // Concatenate the processed X data into the existing\n                                // positions, or the empty array\n                                ordinalPositions = ordinalPositions.concat(series.processedXData);\n                                len = ordinalPositions.length;\n                                // Remove duplicates (#1588)\n                                ordinalPositions.sort(function (a, b) {\n                                    // Without a custom function it is sorted as strings\n                                    return a - b;\n                                });\n                                overscrollPointsRange = Math.min(overscrollPointsRange, pick(\n                                // Check for a single-point series:\n                                series.closestPointRange, overscrollPointsRange));\n                                if (len) {\n                                    i = 0;\n                                    while (i < len - 1) {\n                                        if (ordinalPositions[i] !==\n                                            ordinalPositions[i + 1]) {\n                                            uniqueOrdinalPositions.push(ordinalPositions[i + 1]);\n                                        }\n                                        i++;\n                                    }\n                                    // Check first item:\n                                    if (uniqueOrdinalPositions[0] !==\n                                        ordinalPositions[0]) {\n                                        uniqueOrdinalPositions.unshift(ordinalPositions[0]);\n                                    }\n                                    ordinalPositions = uniqueOrdinalPositions;\n                                }\n                            }\n                        });\n                        if (!axis.ordinal.originalOrdinalRange) {\n                            // Calculate current originalOrdinalRange\n                            axis.ordinal.originalOrdinalRange =\n                                (ordinalPositions.length - 1) * overscrollPointsRange;\n                        }\n                        // If the distance between points is not identical throughout\n                        // all series, remove the first and last ordinal position to\n                        // avoid enabling ordinal logic when it is not needed, #17405.\n                        // Only for boosted series because changes are negligible.\n                        if (adjustOrdinalExtremesPoints && isBoosted) {\n                            ordinalPositions.pop();\n                            ordinalPositions.shift();\n                        }\n                        // Cache the length\n                        len = ordinalPositions.length;\n                        // Check if we really need the overhead of mapping axis data\n                        // against the ordinal positions. If the series consist of\n                        // evenly spaced data any way, we don't need any ordinal logic.\n                        if (len > 2) { // Two points have equal distance by default\n                            dist = ordinalPositions[1] - ordinalPositions[0];\n                            i = len - 1;\n                            while (i-- && !useOrdinal) {\n                                if (ordinalPositions[i + 1] - ordinalPositions[i] !==\n                                    dist) {\n                                    useOrdinal = true;\n                                }\n                            }\n                            // When zooming in on a week, prevent axis padding for\n                            // weekends even though the data within the week is evenly\n                            // spaced.\n                            if (!axis.options.keepOrdinalPadding &&\n                                (ordinalPositions[0] - min > dist ||\n                                    (max -\n                                        ordinalPositions[ordinalPositions.length - 1]) > dist)) {\n                                useOrdinal = true;\n                            }\n                        }\n                        else if (axis.options.overscroll) {\n                            if (len === 2) {\n                                // Exactly two points, distance for overscroll is fixed:\n                                overscrollPointsRange =\n                                    ordinalPositions[1] - ordinalPositions[0];\n                            }\n                            else if (len === 1) {\n                                // We have just one point, closest distance is unknown.\n                                // Assume then it is last point and overscrolled range:\n                                overscrollPointsRange = axis.ordinal.convertOverscroll(axis.options.overscroll);\n                                ordinalPositions = [\n                                    ordinalPositions[0],\n                                    ordinalPositions[0] + overscrollPointsRange\n                                ];\n                            }\n                            else {\n                                // In case of zooming in on overscrolled range, stick to\n                                // the old range:\n                                overscrollPointsRange = ordinal.overscrollPointsRange;\n                            }\n                        }\n                        // Record the slope and offset to compute the linear values from\n                        // the array index. Since the ordinal positions may exceed the\n                        // current range, get the start and end positions within it\n                        // (#719, #665b)\n                        if (useOrdinal || axis.forceOrdinal) {\n                            if (axis.options.overscroll) {\n                                ordinal.overscrollPointsRange = overscrollPointsRange;\n                                ordinalPositions = ordinalPositions.concat(ordinal.getOverscrollPositions());\n                            }\n                            // Register\n                            ordinal.positions = ordinalPositions;\n                            // This relies on the ordinalPositions being set. Use\n                            // Math.max and Math.min to prevent padding on either sides\n                            // of the data.\n                            minIndex = axis.ordinal2lin(// #5979\n                            Math.max(min, ordinalPositions[0]), true);\n                            maxIndex = Math.max(axis.ordinal2lin(Math.min(max, ordinalPositions[ordinalPositions.length - 1]), true), 1); // #3339\n                            // Set the slope and offset of the values compared to the\n                            // indices in the ordinal positions.\n                            ordinal.slope = slope =\n                                (max - min) / (maxIndex - minIndex);\n                            ordinal.offset = min - (minIndex * slope);\n                        }\n                        else {\n                            ordinal.overscrollPointsRange = pick(axis.closestPointRange, ordinal.overscrollPointsRange);\n                            ordinal.positions = axis.ordinal.slope = ordinal.offset =\n                                void 0;\n                        }\n                    }\n                    axis.isOrdinal = isOrdinal && useOrdinal; // #3818, #4196, #4926\n                    ordinal.groupIntervalFactor = null; // Reset for next run\n                };\n                /**\n                 * Faster way of using the Array.indexOf method.\n                 * Works for sorted arrays only with unique values.\n                 *\n                 * @param {Array} sortedArray\n                 *        The sorted array inside which we are looking for.\n                 * @param {number} key\n                 *        The key to being found.\n                 * @param {boolean} indirectSearch\n                 *        In case of lack of the point in the array, should return\n                 *        value be equal to -1 or the closest smaller index.\n                 *  @private\n                 */\n                Additions.findIndexOf = function (sortedArray, key, indirectSearch) {\n                    var start = 0, end = sortedArray.length - 1, middle;\n                    while (start < end) {\n                        middle = Math.ceil((start + end) / 2);\n                        // Key found as the middle element.\n                        if (sortedArray[middle] <= key) {\n                            // Continue searching to the right.\n                            start = middle;\n                        }\n                        else {\n                            // Continue searching to the left.\n                            end = middle - 1;\n                        }\n                    }\n                    if (sortedArray[start] === key) {\n                        return start;\n                    }\n                    // Key could not be found.\n                    return !indirectSearch ? -1 : start;\n                };\n                /**\n                 * Get the ordinal positions for the entire data set. This is necessary\n                 * in chart panning because we need to find out what points or data\n                 * groups are available outside the visible range. When a panning\n                 * operation starts, if an index for the given grouping does not exists,\n                 * it is created and cached. This index is deleted on updated data, so\n                 * it will be regenerated the next time a panning operation starts.\n                 * @private\n                 */\n                Additions.prototype.getExtendedPositions = function (withOverscroll) {\n                    var _a;\n                    if (withOverscroll === void 0) { withOverscroll = true; }\n                    var ordinal = this, axis = ordinal.axis, axisProto = axis.constructor.prototype, chart = axis.chart, grouping = (_a = axis.series[0]) === null || _a === void 0 ? void 0 : _a.currentDataGrouping, key = grouping ?\n                        grouping.count + grouping.unitName :\n                        'raw', overscroll = withOverscroll ?\n                        axis.ordinal.convertOverscroll(axis.options.overscroll) : 0, extremes = axis.getExtremes();\n                    var fakeAxis, fakeSeries = void 0, ordinalIndex = ordinal.index;\n                    // If this is the first time, or the ordinal index is deleted by\n                    // updatedData,\n                    // create it.\n                    if (!ordinalIndex) {\n                        ordinalIndex = ordinal.index = {};\n                    }\n                    if (!ordinalIndex[key]) {\n                        // Create a fake axis object where the extended ordinal\n                        // positions are emulated\n                        fakeAxis = {\n                            series: [],\n                            chart: chart,\n                            forceOrdinal: false,\n                            getExtremes: function () {\n                                return {\n                                    min: extremes.dataMin,\n                                    max: extremes.dataMax + overscroll\n                                };\n                            },\n                            applyGrouping: axisProto.applyGrouping,\n                            getGroupPixelWidth: axisProto.getGroupPixelWidth,\n                            getTimeTicks: axisProto.getTimeTicks,\n                            options: {\n                                ordinal: true\n                            },\n                            ordinal: {\n                                getGroupIntervalFactor: this.getGroupIntervalFactor\n                            },\n                            ordinal2lin: axisProto.ordinal2lin, // #6276\n                            getIndexOfPoint: axisProto.getIndexOfPoint,\n                            val2lin: axisProto.val2lin // #2590\n                        };\n                        fakeAxis.ordinal.axis = fakeAxis;\n                        // Add the fake series to hold the full data, then apply\n                        // processData to it\n                        axis.series.forEach(function (series) {\n                            var _a, _b, _c;\n                            fakeSeries = {\n                                xAxis: fakeAxis,\n                                xData: series.xData.slice(),\n                                chart: chart,\n                                groupPixelWidth: series.groupPixelWidth,\n                                destroyGroupedData: H.noop,\n                                getProcessedData: Series.prototype.getProcessedData,\n                                applyGrouping: Series.prototype.applyGrouping,\n                                reserveSpace: Series.prototype.reserveSpace,\n                                visible: series.visible\n                            };\n                            if (withOverscroll) {\n                                fakeSeries.xData = fakeSeries.xData.concat(ordinal.getOverscrollPositions());\n                            }\n                            fakeSeries.options = {\n                                dataGrouping: grouping ? {\n                                    firstAnchor: (_a = series.options.dataGrouping) === null || _a === void 0 ? void 0 : _a.firstAnchor,\n                                    anchor: (_b = series.options.dataGrouping) === null || _b === void 0 ? void 0 : _b.anchor,\n                                    lastAnchor: (_c = series.options.dataGrouping) === null || _c === void 0 ? void 0 : _c.firstAnchor,\n                                    enabled: true,\n                                    forced: true,\n                                    // Doesn't matter which, use the fastest\n                                    approximation: 'open',\n                                    units: [[\n                                            grouping.unitName,\n                                            [grouping.count]\n                                        ]]\n                                } : {\n                                    enabled: false\n                                }\n                            };\n                            fakeAxis.series.push(fakeSeries);\n                            series.processData.apply(fakeSeries);\n                        });\n                        fakeAxis.applyGrouping({ hasExtremesChanged: true });\n                        // Force to use the ordinal when points are evenly spaced (e.g.\n                        // weeks), #3825.\n                        if (((fakeSeries === null || fakeSeries === void 0 ? void 0 : fakeSeries.closestPointRange) !==\n                            (fakeSeries === null || fakeSeries === void 0 ? void 0 : fakeSeries.basePointRange)) &&\n                            fakeSeries.currentDataGrouping) {\n                            fakeAxis.forceOrdinal = true;\n                        }\n                        // Run beforeSetTickPositions to compute the ordinalPositions\n                        axis.ordinal.beforeSetTickPositions.apply({ axis: fakeAxis });\n                        if (!axis.ordinal.originalOrdinalRange &&\n                            fakeAxis.ordinal.originalOrdinalRange) {\n                            axis.ordinal.originalOrdinalRange =\n                                fakeAxis.ordinal.originalOrdinalRange;\n                        }\n                        // Cache it\n                        ordinalIndex[key] = fakeAxis.ordinal.positions;\n                    }\n                    return ordinalIndex[key];\n                };\n                /**\n                 * Find the factor to estimate how wide the plot area would have been if\n                 * ordinal gaps were included. This value is used to compute an imagined\n                 * plot width in order to establish the data grouping interval.\n                 *\n                 * A real world case is the intraday-candlestick example. Without this\n                 * logic, it would show the correct data grouping when viewing a range\n                 * within each day, but once moving the range to include the gap between\n                 * two days, the interval would include the cut-away night hours and the\n                 * data grouping would be wrong. So the below method tries to compensate\n                 * by identifying the most common point interval, in this case days.\n                 *\n                 * An opposite case is presented in issue #718. We have a long array of\n                 * daily data, then one point is appended one hour after the last point.\n                 * We expect the data grouping not to change.\n                 *\n                 * In the future, if we find cases where this estimation doesn't work\n                 * optimally, we might need to add a second pass to the data grouping\n                 * logic, where we do another run with a greater interval if the number\n                 * of data groups is more than a certain fraction of the desired group\n                 * count.\n                 * @private\n                 */\n                Additions.prototype.getGroupIntervalFactor = function (xMin, xMax, series) {\n                    var ordinal = this, processedXData = series.processedXData, len = processedXData.length, distances = [];\n                    var median, i, groupIntervalFactor = ordinal.groupIntervalFactor;\n                    // Only do this computation for the first series, let the other\n                    // inherit it (#2416)\n                    if (!groupIntervalFactor) {\n                        // Register all the distances in an array\n                        for (i = 0; i < len - 1; i++) {\n                            distances[i] = (processedXData[i + 1] -\n                                processedXData[i]);\n                        }\n                        // Sort them and find the median\n                        distances.sort(function (a, b) {\n                            return a - b;\n                        });\n                        median = distances[Math.floor(len / 2)];\n                        // Compensate for series that don't extend through the entire\n                        // axis extent. #1675.\n                        xMin = Math.max(xMin, processedXData[0]);\n                        xMax = Math.min(xMax, processedXData[len - 1]);\n                        ordinal.groupIntervalFactor = groupIntervalFactor =\n                            (len * median) / (xMax - xMin);\n                    }\n                    // Return the factor needed for data grouping\n                    return groupIntervalFactor;\n                };\n                /**\n                 * Get index of point inside the ordinal positions array.\n                 *\n                 * @private\n                 * @param {number} val\n                 * The pixel value of a point.\n                 *\n                 * @param {Array<number>} [ordinalArray]\n                 * An array of all points available on the axis for the given data set.\n                 * Either ordinalPositions if the value is inside the plotArea or\n                 * extendedOrdinalPositions if not.\n                 */\n                Additions.prototype.getIndexOfPoint = function (val, ordinalArray) {\n                    var ordinal = this, axis = ordinal.axis;\n                    var firstPointVal = 0;\n                    // Check whether the series has at least one point inside the chart\n                    var hasPointsInside = function (series) {\n                        var min = axis.min, max = axis.max;\n                        if (defined(min) && defined(max)) {\n                            return series.points.some(function (point) {\n                                return point.x >= min && point.x <= max;\n                            });\n                        }\n                        return false;\n                    };\n                    var firstPointX;\n                    // When more series assign to axis, find the smallest one, #15987.\n                    axis.series.forEach(function (series) {\n                        var _a;\n                        var firstPoint = (_a = series.points) === null || _a === void 0 ? void 0 : _a[0];\n                        if (defined(firstPoint === null || firstPoint === void 0 ? void 0 : firstPoint.plotX) &&\n                            (firstPoint.plotX < firstPointX ||\n                                !defined(firstPointX)) &&\n                            hasPointsInside(series)) {\n                            firstPointX = firstPoint.plotX;\n                            firstPointVal = firstPoint.x;\n                        }\n                    });\n                    // If undefined, give a default value\n                    firstPointX !== null && firstPointX !== void 0 ? firstPointX : (firstPointX = axis.minPixelPadding);\n                    // Distance in pixels between two points on the ordinal axis in the\n                    // current zoom.\n                    var ordinalPointPixelInterval = axis.translationSlope * (ordinal.slope ||\n                        axis.closestPointRange ||\n                        ordinal.overscrollPointsRange), \n                    // `toValue` for the first point.\n                    shiftIndex = correctFloat((val - firstPointX) / ordinalPointPixelInterval);\n                    return Additions.findIndexOf(ordinalArray, firstPointVal, true) + shiftIndex;\n                };\n                /**\n                 * Get ticks for an ordinal axis within a range where points don't\n                 * exist. It is required when overscroll is enabled. We can't base on\n                 * points, because we may not have any, so we use approximated\n                 * pointRange and generate these ticks between Axis.dataMax,\n                 * Axis.dataMax + Axis.overscroll evenly spaced. Used in panning and\n                 * navigator scrolling.\n                 * @private\n                 */\n                Additions.prototype.getOverscrollPositions = function () {\n                    var ordinal = this, axis = ordinal.axis, extraRange = ordinal.convertOverscroll(axis.options.overscroll), distance = ordinal.overscrollPointsRange, positions = [];\n                    var max = axis.dataMax;\n                    if (defined(distance)) {\n                        // Max + pointRange because we need to scroll to the last\n                        while (max <= axis.dataMax + extraRange) {\n                            max += distance;\n                            positions.push(max);\n                        }\n                    }\n                    return positions;\n                };\n                /**\n                 * Make the tick intervals closer because the ordinal gaps make the\n                 * ticks spread out or cluster.\n                 * @private\n                 */\n                Additions.prototype.postProcessTickInterval = function (tickInterval) {\n                    // Problem: https://jsfiddle.net/highcharts/FQm4E/1/. This is a case\n                    // where this algorithm doesn't work optimally. In this case, the\n                    // tick labels are spread out per week, but all the gaps reside\n                    // within weeks. So we have a situation where the labels are courser\n                    // than the ordinal gaps, and thus the tick interval should not be\n                    // altered.\n                    var ordinal = this, axis = ordinal.axis, ordinalSlope = ordinal.slope;\n                    var ret;\n                    if (ordinalSlope) {\n                        if (!axis.options.breaks) {\n                            ret = (tickInterval /\n                                (ordinalSlope / axis.closestPointRange));\n                        }\n                        else {\n                            ret = axis.closestPointRange || tickInterval; // #7275\n                        }\n                    }\n                    else {\n                        ret = tickInterval;\n                    }\n                    return ret;\n                };\n                /**\n                 * If overscroll is pixel or pecentage value, convert it to axis range.\n                 *\n                 * @private\n                 * @param {number | string} overscroll\n                 * Overscroll value in axis range, pixels or percentage value.\n                 * @return {number}\n                 * Overscroll value in axis range.\n                 */\n                Additions.prototype.convertOverscroll = function (overscroll) {\n                    if (overscroll === void 0) { overscroll = 0; }\n                    var ordinal = this, axis = ordinal.axis, calculateOverscroll = function (overscrollPercentage) {\n                        return pick(ordinal.originalOrdinalRange, defined(axis.dataMax) && defined(axis.dataMin) ?\n                            axis.dataMax - axis.dataMin : 0) * overscrollPercentage;\n                    };\n                    if (isString(overscroll)) {\n                        var overscrollValue = parseInt(overscroll, 10);\n                        if (/%$/.test(overscroll)) {\n                            // If overscroll is percentage\n                            return calculateOverscroll(overscrollValue / 100);\n                        }\n                        if (/px/.test(overscroll)) {\n                            // If overscroll is pixels, it is limited to 90% of the axis\n                            // length to prevent division by zero\n                            var limitedOverscrollValue = Math.min(overscrollValue, axis.len * 0.9), pixelToPercent = limitedOverscrollValue / axis.len;\n                            return calculateOverscroll(pixelToPercent / (1 - pixelToPercent));\n                        }\n                        // If overscroll is a string but not pixels or percentage,\n                        // return 0 as no overscroll\n                        return 0;\n                    }\n                    return overscroll;\n                };\n                return Additions;\n            }());\n            OrdinalAxis.Additions = Additions;\n        })(OrdinalAxis || (OrdinalAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OrdinalAxis;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js'], _modules['Core/Axis/OrdinalAxis.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U, OrdinalAxis) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, ctx, ytdExtremes, addOffsetMin = true;\n                // Chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // Reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instantiated. Temporarily set min and range\n                    // options and axes once defined and remove them on\n                    // chart load (#4317 & #20529).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    var axisRangeUpdateEvent_1 = addEvent(chart, 'afterGetAxes', function () {\n                        var xAxis = chart.xAxis[0];\n                        xAxis.range = xAxis.options.range = range;\n                        xAxis.min = xAxis.options.min = rangeMin;\n                    });\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        var xAxis = chart.xAxis[0];\n                        chart.setFixedRange(rangeOptions._range);\n                        xAxis.options.range = baseXAxisOptions.range;\n                        xAxis.options.min = baseXAxisOptions.min;\n                        axisRangeUpdateEvent_1(); // Remove event\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // Auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                    chart.setFixedRange(rangeOptions._range);\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // Zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (isNumber(this.max) &&\n                                isNumber(this.min) &&\n                                this.max - this.min !== chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n                this.createElements();\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, dropdownLabel = this.dropdownLabel, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttonStates = new Array(rangeSelector.buttonOptions.length)\n                    .fill(0), selectedExists = isNumber(selected), buttons = rangeSelector.buttons;\n                var isSelectedTooGreat = false, selectedIndex = null;\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var _a;\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed i;\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    // Do not select the YTD button if not explicitly told so\n                    var isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isSameRange = range === actualRange;\n                    if (isSelected && isTooGreatRange) {\n                        isSelectedTooGreat = true;\n                    }\n                    if (baseAxis.isOrdinal &&\n                        ((_a = baseAxis.ordinal) === null || _a === void 0 ? void 0 : _a.positions) &&\n                        range &&\n                        actualRange < range) {\n                        // Handle ordinal ranges\n                        var positions = baseAxis.ordinal.positions, prevOrdinalPosition = OrdinalAxis.Additions.findIndexOf(positions, baseAxis.min, true), nextOrdinalPosition = Math.min(OrdinalAxis.Additions.findIndexOf(positions, baseAxis.max, true) + 1, positions.length - 1);\n                        if (positions[nextOrdinalPosition] -\n                            positions[prevOrdinalPosition] > range) {\n                            isSameRange = true;\n                        }\n                    }\n                    else if (\n                    // Months and years have variable range so we check the extremes\n                    (type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        !(isSelectedTooGreat && type === 'all') &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            hasNoData));\n                    var select = ((isSelectedTooGreat && type === 'all') ||\n                        (isYTDButNotSelected ? false : isSameRange) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        buttonStates[i] = 3;\n                    }\n                    else if (select) {\n                        if (!selectedExists || i === selected) {\n                            selectedIndex = i;\n                        }\n                    }\n                });\n                if (selectedIndex !== null) {\n                    buttonStates[selectedIndex] = 2;\n                    rangeSelector.setSelected(selectedIndex);\n                }\n                else {\n                    rangeSelector.setSelected();\n                    if (dropdownLabel) {\n                        dropdownLabel.setState(0);\n                        dropdownLabel.attr({\n                            text: (defaultOptions.lang.rangeSelectorZoom || '') + ' â–¾'\n                        });\n                    }\n                }\n                for (var i = 0; i < buttonStates.length; i++) {\n                    var state = buttonStates[i];\n                    var button = buttons[i];\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = (state === 3);\n                            if (state === 2) {\n                                if (dropdownLabel) {\n                                    dropdownLabel.setState(2);\n                                    dropdownLabel.attr({\n                                        text: rangeSelector.buttonOptions[i].text + ' â–¾'\n                                    });\n                                }\n                                dropdown.selectedIndex = i + 1;\n                            }\n                            var bbox = dropdownLabel.getBBox();\n                            css(dropdown, {\n                                width: \"\".concat(bbox.width, \"px\"),\n                                height: \"\".concat(bbox.height, \"px\")\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // These time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes(name) {\n                    var _a;\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = ((_a = chart.scroller) === null || _a === void 0 ? void 0 : _a.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, currentExtreme = chart.xAxis[0].getExtremes()[name];\n                    var value = rangeSelector.getInputValue(name);\n                    if (isNumber(value) && value !== currentExtreme) {\n                        // Validate the extremes. If it goes beyond the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typeof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and records click\n                // events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px', // Chrome needs a pixel to see it\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // Update extremes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes(name);\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // Handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes(name);\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes(name);\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.key === 'ArrowUp' ||\n                        event.key === 'ArrowDown' ||\n                        event.key === 'Tab') {\n                        updateExtremes(name);\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // Set offset only for verticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            RangeSelector.prototype.createElements = function () {\n                var _a;\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, inputEnabled = options.inputEnabled, inputsZIndex = pick((_a = chartOptions.chart.style) === null || _a === void 0 ? void 0 : _a.zIndex, 0) + 1;\n                if (options.enabled === false) {\n                    return;\n                }\n                this.group = renderer.g('range-selector-group')\n                    .attr({\n                    zIndex: 7\n                })\n                    .add();\n                this.div = createElement('div', void 0, {\n                    position: 'relative',\n                    height: 0,\n                    zIndex: inputsZIndex\n                });\n                if (this.buttonOptions.length) {\n                    this.renderButtons();\n                }\n                // First create a wrapper outside the container in order to make\n                // the inputs work and make export correct\n                if (container.parentNode) {\n                    container.parentNode.insertBefore(this.div, container);\n                }\n                if (inputEnabled) {\n                    // Create the group to keep the inputs\n                    this.inputGroup = renderer.g('input-group').add(this.group);\n                    var minElems = this.drawInput('min');\n                    this.minDateBox = minElems.dateBox;\n                    this.minLabel = minElems.label;\n                    this.minInput = minElems.input;\n                    var maxElems = this.drawInput('max');\n                    this.maxDateBox = maxElems.dateBox;\n                    this.maxLabel = maxElems.label;\n                    this.maxInput = maxElems.input;\n                }\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputEnabled = options.inputEnabled;\n                if (options.enabled === false) {\n                    return;\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.updateButtonStates();\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a;\n                var _b = this, buttons = _b.buttons, chart = _b.chart, options = _b.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    padding: 0,\n                    border: 0,\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Create a label for dropdown select element\n                var userButtonTheme = (_a = chart.userOptions.rangeSelector) === null || _a === void 0 ? void 0 : _a.buttonTheme;\n                this.dropdownLabel = renderer.button('', 0, 0, function () { }, merge(buttonTheme, {\n                    'stroke-width': pick(buttonTheme['stroke-width'], 0),\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme === null || userButtonTheme === void 0 ? void 0 : userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme === null || userButtonTheme === void 0 ? void 0 : userButtonTheme.padding, 8)\n                }), states && states.hover, states && states.select, states && states.disabled)\n                    .hide()\n                    .add(this.group);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                var mouseOver = H.isMS ? 'mouseover' : 'mouseenter', mouseOut = H.isMS ? 'mouseout' : 'mouseleave';\n                addEvent(dropdown, mouseOver, function () {\n                    fireEvent(_this.dropdownLabel.element, mouseOver);\n                });\n                addEvent(dropdown, mouseOut, function () {\n                    fireEvent(_this.dropdownLabel.element, mouseOut);\n                });\n                addEvent(dropdown, 'change', function () {\n                    var button = _this.buttons[dropdown.selectedIndex - 1];\n                    fireEvent(button.element, 'click');\n                });\n                this.zoomText = renderer\n                    .label(lang.rangeSelectorZoom || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // Extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a;\n                var _b = this, buttonGroup = _b.buttonGroup, buttons = _b.buttons, chart = _b.chart, group = _b.group, inputGroup = _b.inputGroup, options = _b.options, zoomText = _b.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        if ((_a = this.buttonGroup) === null || _a === void 0 ? void 0 : _a.translateY) {\n                            this.dropdownLabel\n                                .attr({ y: this.buttonGroup.translateY });\n                        }\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // Fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _c = this, minInput = _c.minInput, maxInput = _c.maxInput, dropdown = _c.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if ((inputGroup === null || inputGroup === void 0 ? void 0 : inputGroup.alignOptions) && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // `getBBox` for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width || 0;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons();\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons();\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons();\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and show the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function () {\n                var _a = this, buttons = _a.buttons, zoomText = _a.zoomText;\n                if (this.isCollapsed === true) {\n                    return;\n                }\n                this.isCollapsed = true;\n                zoomText.hide();\n                buttons.forEach(function (button) { return void button.hide(); });\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, zoomText = _a.zoomText;\n                if (this.isCollapsed === false) {\n                    return;\n                }\n                this.isCollapsed = false;\n                this.hideDropdown();\n                zoomText.show();\n                buttons.forEach(function (button) { return void button.show(); });\n                this.positionButtons();\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, chart = _a.chart, dropdownLabel = _a.dropdownLabel, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, left = chart.plotLeft + translateX, top_1 = translateY;\n                    dropdownLabel\n                        .attr({ x: left, y: top_1 })\n                        .show();\n                    css(dropdown, {\n                        left: left + 'px',\n                        top: top_1 + 'px',\n                        visibility: 'inherit'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    this.dropdownLabel.hide();\n                    css(dropdown, {\n                        visibility: 'hidden',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options, redraw) {\n                if (redraw === void 0) { redraw = true; }\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                if (redraw) {\n                    this.render();\n                }\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // Keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Series/PathUtilities.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getLinkPath = {\n            'default': getDefaultPath,\n            straight: getStraightPath,\n            curved: getCurvedPath\n        };\n        /**\n         *\n         */\n        function getDefaultPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, radius = pathParams.radius, parentVisible = pathParams.parentVisible;\n            var path = [\n                ['M', x1, y1],\n                ['L', x1, y1],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2]\n            ];\n            return parentVisible ?\n                applyRadius([\n                    ['M', x1, y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y2],\n                    ['L', x2, y2]\n                ], radius) :\n                path;\n        }\n        /**\n         *\n         */\n        function getStraightPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, parentVisible = pathParams.parentVisible;\n            return parentVisible ? [\n                ['M', x1, y1],\n                ['L', x1 + width * (inverted ? -1 : 1), y2],\n                ['L', x2, y2]\n            ] : [\n                ['M', x1, y1],\n                ['L', x1, y2],\n                ['L', x1, y2]\n            ];\n        }\n        /**\n         *\n         */\n        function getCurvedPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.offset, offset = _a === void 0 ? 0 : _a, _b = pathParams.width, width = _b === void 0 ? 0 : _b, _c = pathParams.inverted, inverted = _c === void 0 ? false : _c, parentVisible = pathParams.parentVisible;\n            return parentVisible ?\n                [\n                    ['M', x1, y1],\n                    [\n                        'C',\n                        x1 + offset,\n                        y1,\n                        x1 - offset + width * (inverted ? -1 : 1),\n                        y2,\n                        x1 + width * (inverted ? -1 : 1),\n                        y2\n                    ],\n                    ['L', x2, y2]\n                ] :\n                [\n                    ['M', x1, y1],\n                    ['C', x1, y1, x1, y2, x1, y2],\n                    ['L', x2, y2]\n                ];\n        }\n        /**\n         * General function to apply corner radius to a path\n         * @private\n         */\n        function applyRadius(path, r) {\n            var d = [];\n            for (var i = 0; i < path.length; i++) {\n                var x = path[i][1];\n                var y = path[i][2];\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // MoveTo\n                    if (i === 0) {\n                        d.push(['M', x, y]);\n                    }\n                    else if (i === path.length - 1) {\n                        d.push(['L', x, y]);\n                        // CurveTo\n                    }\n                    else if (r) {\n                        var prevSeg = path[i - 1];\n                        var nextSeg = path[i + 1];\n                        if (prevSeg && nextSeg) {\n                            var x1 = prevSeg[1], y1 = prevSeg[2], x2 = nextSeg[1], y2 = nextSeg[2];\n                            // Only apply to breaks\n                            if (typeof x1 === 'number' &&\n                                typeof x2 === 'number' &&\n                                typeof y1 === 'number' &&\n                                typeof y2 === 'number' &&\n                                x1 !== x2 &&\n                                y1 !== y2) {\n                                var directionX = x1 < x2 ? 1 : -1, directionY = y1 < y2 ? 1 : -1;\n                                d.push([\n                                    'L',\n                                    x - directionX * Math.min(Math.abs(x - x1), r),\n                                    y - directionY * Math.min(Math.abs(y - y1), r)\n                                ], [\n                                    'C',\n                                    x,\n                                    y,\n                                    x,\n                                    y,\n                                    x + directionX * Math.min(Math.abs(x - x2), r),\n                                    y + directionY * Math.min(Math.abs(y - y2), r)\n                                ]);\n                            }\n                        }\n                        // LineTo\n                    }\n                    else {\n                        d.push(['L', x, y]);\n                    }\n                }\n            }\n            return d;\n        }\n        var PathUtilities = {\n            applyRadius: applyRadius,\n            getLinkPath: getLinkPath\n        };\n\n        return PathUtilities;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderAlgorithms.js', [_modules['Series/PathUtilities.js'], _modules['Core/Utilities.js']], function (PathUtilities, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Author: Ã˜ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var min = Math.min, max = Math.max, abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get index of last obstacle before xMin. Employs a type of binary search, and\n         * thus requires that obstacles are sorted by xMin value.\n         *\n         * @private\n         * @function findLastObstacleBefore\n         *\n         * @param {Array<object>} obstacles\n         *        Array of obstacles to search in.\n         *\n         * @param {number} xMin\n         *        The xMin threshold.\n         *\n         * @param {number} [startIx]\n         *        Starting index to search from. Must be within array range.\n         *\n         * @return {number}\n         *         The index of the last obstacle element before xMin.\n         */\n        function findLastObstacleBefore(obstacles, xMin, startIx) {\n            var min = xMin - 0.0000001; // Make sure we include all obstacles at xMin\n            var left = startIx || 0, // Left limit\n            right = obstacles.length - 1, // Right limit\n            cursor, cmp;\n            while (left <= right) {\n                cursor = (right + left) >> 1;\n                cmp = min - obstacles[cursor].xMin;\n                if (cmp > 0) {\n                    left = cursor + 1;\n                }\n                else if (cmp < 0) {\n                    right = cursor - 1;\n                }\n                else {\n                    return cursor;\n                }\n            }\n            return left > 0 ? left - 1 : 0;\n        }\n        /**\n         * Test if a point lays within an obstacle.\n         *\n         * @private\n         * @function pointWithinObstacle\n         *\n         * @param {Object} obstacle\n         *        Obstacle to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {boolean}\n         *         Whether point is within the obstacle or not.\n         */\n        function pointWithinObstacle(obstacle, point) {\n            return (point.x <= obstacle.xMax &&\n                point.x >= obstacle.xMin &&\n                point.y <= obstacle.yMax &&\n                point.y >= obstacle.yMin);\n        }\n        /**\n         * Find the index of an obstacle that wraps around a point.\n         * Returns -1 if not found.\n         *\n         * @private\n         * @function findObstacleFromPoint\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {number}\n         *         Ix of the obstacle in the array, or -1 if not found.\n         */\n        function findObstacleFromPoint(obstacles, point) {\n            var i = findLastObstacleBefore(obstacles, point.x + 1) + 1;\n            while (i--) {\n                if (obstacles[i].xMax >= point.x &&\n                    // Optimization using lazy evaluation\n                    pointWithinObstacle(obstacles[i], point)) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        /**\n         * Get SVG path array from array of line segments.\n         *\n         * @private\n         * @function pathFromSegments\n         *\n         * @param {Array<object>} segments\n         *        The segments to build the path from.\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         SVG path array as accepted by the SVG Renderer.\n         */\n        function pathFromSegments(segments) {\n            var path = [];\n            if (segments.length) {\n                path.push(['M', segments[0].start.x, segments[0].start.y]);\n                for (var i = 0; i < segments.length; ++i) {\n                    path.push(['L', segments[i].end.x, segments[i].end.y]);\n                }\n            }\n            return path;\n        }\n        /**\n         * Limits obstacle max/mins in all directions to bounds. Modifies input\n         * obstacle.\n         *\n         * @private\n         * @function limitObstacleToBounds\n         *\n         * @param {Object} obstacle\n         *        Obstacle to limit.\n         *\n         * @param {Object} bounds\n         *        Bounds to use as limit.\n         *\n         * @return {void}\n         */\n        function limitObstacleToBounds(obstacle, bounds) {\n            obstacle.yMin = max(obstacle.yMin, bounds.yMin);\n            obstacle.yMax = min(obstacle.yMax, bounds.yMax);\n            obstacle.xMin = max(obstacle.xMin, bounds.xMin);\n            obstacle.xMax = min(obstacle.xMax, bounds.xMax);\n        }\n        /**\n         * Get an SVG path from a starting coordinate to an ending coordinate.\n         * Draws a straight line.\n         *\n         * @function Highcharts.Pathfinder.algorithms.straight\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function straight(start, end) {\n            return {\n                path: [\n                    ['M', start.x, start.y],\n                    ['L', end.x, end.y]\n                ],\n                obstacles: [{ start: start, end: end }]\n            };\n        }\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, using\n         * right angles only, and taking only starting/ending obstacle into\n         * consideration.\n         *\n         * @function Highcharts.Pathfinder.algorithms.simpleConnect\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm:\n         *        - chartObstacles: Array of chart obstacles to avoid\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *          If not provided, the algorithm starts in the direction that is\n         *          the furthest between start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        var simpleConnect = function (start, end, options) {\n            var segments = [], chartObstacles = options.chartObstacles, startObstacleIx = findObstacleFromPoint(chartObstacles, start), endObstacleIx = findObstacleFromPoint(chartObstacles, end);\n            var endSegment, dir = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)) ? 'x' : 'y', startObstacle, endObstacle, waypoint, useMax, endPoint;\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return a clone of a point with a property set from a target object,\n             * optionally with an offset\n             * @private\n             */\n            function copyFromPoint(from, fromKey, to, toKey, offset) {\n                var point = {\n                    x: from.x,\n                    y: from.y\n                };\n                point[fromKey] = to[toKey || fromKey] + (offset || 0);\n                return point;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return waypoint outside obstacle.\n             * @private\n             */\n            function getMeOut(obstacle, point, direction) {\n                var useMax = abs(point[direction] - obstacle[direction + 'Min']) >\n                    abs(point[direction] - obstacle[direction + 'Max']);\n                return copyFromPoint(point, direction, obstacle, direction + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1);\n            }\n            // Pull out end point\n            if (endObstacleIx > -1) {\n                endObstacle = chartObstacles[endObstacleIx];\n                waypoint = getMeOut(endObstacle, end, dir);\n                endSegment = {\n                    start: waypoint,\n                    end: end\n                };\n                endPoint = waypoint;\n            }\n            else {\n                endPoint = end;\n            }\n            // If an obstacle envelops the start point, add a segment to get out,\n            // and around it.\n            if (startObstacleIx > -1) {\n                startObstacle = chartObstacles[startObstacleIx];\n                waypoint = getMeOut(startObstacle, start, dir);\n                segments.push({\n                    start: start,\n                    end: waypoint\n                });\n                // If we are going back again, switch direction to get around start\n                // obstacle.\n                if (\n                // Going towards max from start:\n                waypoint[dir] >= start[dir] ===\n                    // Going towards min to end:\n                    waypoint[dir] >= endPoint[dir]) {\n                    dir = dir === 'y' ? 'x' : 'y';\n                    useMax = start[dir] < end[dir];\n                    segments.push({\n                        start: waypoint,\n                        end: copyFromPoint(waypoint, dir, startObstacle, dir + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1)\n                    });\n                    // Switch direction again\n                    dir = dir === 'y' ? 'x' : 'y';\n                }\n            }\n            // We are around the start obstacle. Go towards the end in one\n            // direction.\n            var prevWaypoint = segments.length ?\n                segments[segments.length - 1].end :\n                start;\n            waypoint = copyFromPoint(prevWaypoint, dir, endPoint);\n            segments.push({\n                start: prevWaypoint,\n                end: waypoint\n            });\n            // Final run to end point in the other direction\n            dir = dir === 'y' ? 'x' : 'y';\n            var waypoint2 = copyFromPoint(waypoint, dir, endPoint);\n            segments.push({\n                start: waypoint,\n                end: waypoint2\n            });\n            // Finally add the endSegment\n            segments.push(endSegment);\n            var path = PathUtilities.applyRadius(pathFromSegments(segments), options.radius);\n            return {\n                path: path,\n                obstacles: segments\n            };\n        };\n        simpleConnect.requiresObstacles = true;\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, taking\n         * obstacles into consideration. Might not always find the optimal path,\n         * but is fast, and usually good enough.\n         *\n         * @function Highcharts.Pathfinder.algorithms.fastAvoid\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm.\n         *        - chartObstacles:  Array of chart obstacles to avoid\n         *        - lineObstacles:   Array of line obstacles to jump over\n         *        - obstacleMetrics: Object with metrics of chartObstacles cached\n         *        - hardBounds:      Hard boundaries to not cross\n         *        - obstacleOptions: Options for the obstacles, including margin\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *                           If not provided, the algorithm starts in the\n         *                           direction that is the furthest between\n         *                           start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function fastAvoid(start, end, options) {\n            /*\n                Algorithm rules/description\n                - Find initial direction\n                - Determine soft/hard max for each direction.\n                - Move along initial direction until obstacle.\n                - Change direction.\n                - If hitting obstacle, first try to change length of previous line\n                    before changing direction again.\n\n                Soft min/max x = start/destination x +/- widest obstacle + margin\n                Soft min/max y = start/destination y +/- tallest obstacle + margin\n\n                @todo:\n                    - Make retrospective, try changing prev segment to reduce\n                        corners\n                    - Fix logic for breaking out of end-points - not always picking\n                        the best direction currently\n                    - When going around the end obstacle we should not always go the\n                        shortest route, rather pick the one closer to the end point\n            */\n            var dirIsX = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)), dir = dirIsX ? 'x' : 'y', endSegments = [], \n            // Boundaries to stay within. If beyond soft boundary, prefer to\n            // change direction ASAP. If at hard max, always change immediately.\n            metrics = options.obstacleMetrics, softMinX = min(start.x, end.x) - metrics.maxWidth - 10, softMaxX = max(start.x, end.x) + metrics.maxWidth + 10, softMinY = min(start.y, end.y) - metrics.maxHeight - 10, softMaxY = max(start.y, end.y) + metrics.maxHeight + 10;\n            var segments, useMax, extractedEndPoint, forceObstacleBreak = false, // Used in clearPathTo to keep track of\n            // when to force break through an obstacle.\n            // Obstacles\n            chartObstacles = options.chartObstacles, endObstacleIx = findLastObstacleBefore(chartObstacles, softMaxX);\n            var startObstacleIx = findLastObstacleBefore(chartObstacles, softMinX);\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * How far can you go between two points before hitting an obstacle?\n             * Does not work for diagonal lines (because it doesn't have to).\n             * @private\n             */\n            function pivotPoint(fromPoint, toPoint, directionIsX) {\n                var searchDirection = fromPoint.x < toPoint.x ? 1 : -1;\n                var firstPoint, lastPoint, highestPoint, lowestPoint;\n                if (fromPoint.x < toPoint.x) {\n                    firstPoint = fromPoint;\n                    lastPoint = toPoint;\n                }\n                else {\n                    firstPoint = toPoint;\n                    lastPoint = fromPoint;\n                }\n                if (fromPoint.y < toPoint.y) {\n                    lowestPoint = fromPoint;\n                    highestPoint = toPoint;\n                }\n                else {\n                    lowestPoint = toPoint;\n                    highestPoint = fromPoint;\n                }\n                // Go through obstacle range in reverse if toPoint is before\n                // fromPoint in the X-dimension.\n                var i = searchDirection < 0 ?\n                    // Searching backwards, start at last obstacle before last point\n                    min(findLastObstacleBefore(chartObstacles, lastPoint.x), chartObstacles.length - 1) :\n                    // Forwards. Since we're not sorted by xMax, we have to look\n                    // at all obstacles.\n                    0;\n                // Go through obstacles in this X range\n                while (chartObstacles[i] && (searchDirection > 0 && chartObstacles[i].xMin <= lastPoint.x ||\n                    searchDirection < 0 && chartObstacles[i].xMax >= firstPoint.x)) {\n                    // If this obstacle is between from and to points in a straight\n                    // line, pivot at the intersection.\n                    if (chartObstacles[i].xMin <= lastPoint.x &&\n                        chartObstacles[i].xMax >= firstPoint.x &&\n                        chartObstacles[i].yMin <= highestPoint.y &&\n                        chartObstacles[i].yMax >= lowestPoint.y) {\n                        if (directionIsX) {\n                            return {\n                                y: fromPoint.y,\n                                x: fromPoint.x < toPoint.x ?\n                                    chartObstacles[i].xMin - 1 :\n                                    chartObstacles[i].xMax + 1,\n                                obstacle: chartObstacles[i]\n                            };\n                        }\n                        // Else ...\n                        return {\n                            x: fromPoint.x,\n                            y: fromPoint.y < toPoint.y ?\n                                chartObstacles[i].yMin - 1 :\n                                chartObstacles[i].yMax + 1,\n                            obstacle: chartObstacles[i]\n                        };\n                    }\n                    i += searchDirection;\n                }\n                return toPoint;\n            }\n            /**\n             * Decide in which direction to dodge or get out of an obstacle.\n             * Considers desired direction, which way is shortest, soft and hard\n             * bounds.\n             *\n             * (? Returns a string, either xMin, xMax, yMin or yMax.)\n             *\n             * @private\n             * @function\n             *\n             * @param {Object} obstacle\n             *        Obstacle to dodge/escape.\n             *\n             * @param {Object} fromPoint\n             *        Point with x/y props that's dodging/escaping.\n             *\n             * @param {Object} toPoint\n             *        Goal point.\n             *\n             * @param {boolean} dirIsX\n             *        Dodge in X dimension.\n             *\n             * @param {Object} bounds\n             *        Hard and soft boundaries.\n             *\n             * @return {boolean}\n             *         Use max or not.\n             */\n            function getDodgeDirection(obstacle, fromPoint, toPoint, dirIsX, bounds) {\n                var softBounds = bounds.soft, hardBounds = bounds.hard, dir = dirIsX ? 'x' : 'y', toPointMax = { x: fromPoint.x, y: fromPoint.y }, toPointMin = { x: fromPoint.x, y: fromPoint.y }, maxOutOfSoftBounds = obstacle[dir + 'Max'] >=\n                    softBounds[dir + 'Max'], minOutOfSoftBounds = obstacle[dir + 'Min'] <=\n                    softBounds[dir + 'Min'], maxOutOfHardBounds = obstacle[dir + 'Max'] >=\n                    hardBounds[dir + 'Max'], minOutOfHardBounds = obstacle[dir + 'Min'] <=\n                    hardBounds[dir + 'Min'], \n                // Find out if we should prefer one direction over the other if\n                // we can choose freely\n                minDistance = abs(obstacle[dir + 'Min'] - fromPoint[dir]), maxDistance = abs(obstacle[dir + 'Max'] - fromPoint[dir]);\n                var // If it's a small difference, pick the one leading towards dest\n                // point. Otherwise pick the shortest distance\n                useMax = abs(minDistance - maxDistance) < 10 ?\n                    fromPoint[dir] < toPoint[dir] :\n                    maxDistance < minDistance;\n                // Check if we hit any obstacles trying to go around in either\n                // direction.\n                toPointMin[dir] = obstacle[dir + 'Min'];\n                toPointMax[dir] = obstacle[dir + 'Max'];\n                var minPivot = pivotPoint(fromPoint, toPointMin, dirIsX)[dir] !==\n                    toPointMin[dir], maxPivot = pivotPoint(fromPoint, toPointMax, dirIsX)[dir] !==\n                    toPointMax[dir];\n                useMax = minPivot ?\n                    (maxPivot ? useMax : true) :\n                    (maxPivot ? false : useMax);\n                // `useMax` now contains our preferred choice, bounds not taken into\n                // account. If both or neither direction is out of bounds we want to\n                // use this.\n                // Deal with soft bounds\n                useMax = minOutOfSoftBounds ?\n                    (maxOutOfSoftBounds ? useMax : true) : // Out on min\n                    (maxOutOfSoftBounds ? false : useMax); // Not out on min\n                // Deal with hard bounds\n                useMax = minOutOfHardBounds ?\n                    (maxOutOfHardBounds ? useMax : true) : // Out on min\n                    (maxOutOfHardBounds ? false : useMax); // Not out on min\n                return useMax;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Find a clear path between point.\n             * @private\n             */\n            function clearPathTo(fromPoint, toPoint, dirIsX) {\n                // Don't waste time if we've hit goal\n                if (fromPoint.x === toPoint.x && fromPoint.y === toPoint.y) {\n                    return [];\n                }\n                var dir = dirIsX ? 'x' : 'y', obstacleMargin = options.obstacleOptions.margin, bounds = {\n                    soft: {\n                        xMin: softMinX,\n                        xMax: softMaxX,\n                        yMin: softMinY,\n                        yMax: softMaxY\n                    },\n                    hard: options.hardBounds\n                };\n                var pivot, segments, waypoint, waypointUseMax, envelopingObstacle, secondEnvelopingObstacle, envelopWaypoint;\n                // If fromPoint is inside an obstacle we have a problem. Break out\n                // by just going to the outside of this obstacle. We prefer to go to\n                // the nearest edge in the chosen direction.\n                envelopingObstacle =\n                    findObstacleFromPoint(chartObstacles, fromPoint);\n                if (envelopingObstacle > -1) {\n                    envelopingObstacle = chartObstacles[envelopingObstacle];\n                    waypointUseMax = getDodgeDirection(envelopingObstacle, fromPoint, toPoint, dirIsX, bounds);\n                    // Cut obstacle to hard bounds to make sure we stay within\n                    limitObstacleToBounds(envelopingObstacle, options.hardBounds);\n                    envelopWaypoint = dirIsX ? {\n                        y: fromPoint.y,\n                        x: envelopingObstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    } : {\n                        x: fromPoint.x,\n                        y: envelopingObstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    };\n                    // If we crashed into another obstacle doing this, we put the\n                    // waypoint between them instead\n                    secondEnvelopingObstacle = findObstacleFromPoint(chartObstacles, envelopWaypoint);\n                    if (secondEnvelopingObstacle > -1) {\n                        secondEnvelopingObstacle = chartObstacles[secondEnvelopingObstacle];\n                        // Cut obstacle to hard bounds\n                        limitObstacleToBounds(secondEnvelopingObstacle, options.hardBounds);\n                        // Modify waypoint to lay between obstacles\n                        envelopWaypoint[dir] = waypointUseMax ? max(envelopingObstacle[dir + 'Max'] - obstacleMargin + 1, (secondEnvelopingObstacle[dir + 'Min'] +\n                            envelopingObstacle[dir + 'Max']) / 2) :\n                            min((envelopingObstacle[dir + 'Min'] + obstacleMargin - 1), ((secondEnvelopingObstacle[dir + 'Max'] +\n                                envelopingObstacle[dir + 'Min']) / 2));\n                        // We are not going anywhere. If this happens for the first\n                        // time, do nothing. Otherwise, try to go to the extreme of\n                        // the obstacle pair in the current direction.\n                        if (fromPoint.x === envelopWaypoint.x &&\n                            fromPoint.y === envelopWaypoint.y) {\n                            if (forceObstacleBreak) {\n                                envelopWaypoint[dir] = waypointUseMax ?\n                                    max(envelopingObstacle[dir + 'Max'], secondEnvelopingObstacle[dir + 'Max']) + 1 :\n                                    min(envelopingObstacle[dir + 'Min'], secondEnvelopingObstacle[dir + 'Min']) - 1;\n                            }\n                            // Toggle on if off, and the opposite\n                            forceObstacleBreak = !forceObstacleBreak;\n                        }\n                        else {\n                            // This point is not identical to previous.\n                            // Clear break trigger.\n                            forceObstacleBreak = false;\n                        }\n                    }\n                    segments = [{\n                            start: fromPoint,\n                            end: envelopWaypoint\n                        }];\n                }\n                else { // If not enveloping, use standard pivot calculation\n                    pivot = pivotPoint(fromPoint, {\n                        x: dirIsX ? toPoint.x : fromPoint.x,\n                        y: dirIsX ? fromPoint.y : toPoint.y\n                    }, dirIsX);\n                    segments = [{\n                            start: fromPoint,\n                            end: {\n                                x: pivot.x,\n                                y: pivot.y\n                            }\n                        }];\n                    // Pivot before goal, use a waypoint to dodge obstacle\n                    if (pivot[dirIsX ? 'x' : 'y'] !== toPoint[dirIsX ? 'x' : 'y']) {\n                        // Find direction of waypoint\n                        waypointUseMax = getDodgeDirection(pivot.obstacle, pivot, toPoint, !dirIsX, bounds);\n                        // Cut waypoint to hard bounds\n                        limitObstacleToBounds(pivot.obstacle, options.hardBounds);\n                        waypoint = {\n                            x: dirIsX ?\n                                pivot.x :\n                                pivot.obstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                                    (waypointUseMax ? 1 : -1),\n                            y: dirIsX ?\n                                pivot.obstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                                    (waypointUseMax ? 1 : -1) :\n                                pivot.y\n                        };\n                        // We're changing direction here, store that to make sure we\n                        // also change direction when adding the last segment array\n                        // after handling waypoint.\n                        dirIsX = !dirIsX;\n                        segments = segments.concat(clearPathTo({\n                            x: pivot.x,\n                            y: pivot.y\n                        }, waypoint, dirIsX));\n                    }\n                }\n                // Get segments for the other direction too\n                // Recursion is our friend\n                segments = segments.concat(clearPathTo(segments[segments.length - 1].end, toPoint, !dirIsX));\n                return segments;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Extract point to outside of obstacle in whichever direction is\n             * closest. Returns new point outside obstacle.\n             * @private\n             */\n            function extractFromObstacle(obstacle, point, goalPoint) {\n                var dirIsX = min(obstacle.xMax - point.x, point.x - obstacle.xMin) <\n                    min(obstacle.yMax - point.y, point.y - obstacle.yMin), bounds = {\n                    soft: options.hardBounds,\n                    hard: options.hardBounds\n                }, useMax = getDodgeDirection(obstacle, point, goalPoint, dirIsX, bounds);\n                return dirIsX ? {\n                    y: point.y,\n                    x: obstacle[useMax ? 'xMax' : 'xMin'] + (useMax ? 1 : -1)\n                } : {\n                    x: point.x,\n                    y: obstacle[useMax ? 'yMax' : 'yMin'] + (useMax ? 1 : -1)\n                };\n            }\n            // Cut the obstacle array to soft bounds for optimization in large\n            // datasets.\n            chartObstacles =\n                chartObstacles.slice(startObstacleIx, endObstacleIx + 1);\n            // If an obstacle envelops the end point, move it out of there and add\n            // a little segment to where it was.\n            if ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                extractedEndPoint = extractFromObstacle(chartObstacles[endObstacleIx], end, start);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // If it's still inside one or more obstacles, get out of there by\n            // force-moving towards the start point.\n            while ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                useMax = end[dir] - start[dir] < 0;\n                extractedEndPoint = {\n                    x: end.x,\n                    y: end.y\n                };\n                extractedEndPoint[dir] = chartObstacles[endObstacleIx][useMax ? dir + 'Max' : dir + 'Min'] + (useMax ? 1 : -1);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // Find the path\n            segments = clearPathTo(start, end, dirIsX);\n            // Add the end-point segments\n            segments = segments.concat(endSegments.reverse());\n            return {\n                path: pathFromSegments(segments),\n                obstacles: segments\n            };\n        }\n        fastAvoid.requiresObstacles = true;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        // Define the available pathfinding algorithms.\n        // Algorithms take up to 3 arguments: starting point, ending point, and an\n        // options object.\n        var algorithms = {\n            fastAvoid: fastAvoid,\n            straight: straight,\n            simpleConnect: simpleConnect\n        };\n\n        return algorithms;\n    });\n    _registerModule(_modules, 'Gantt/ConnectorsDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Defaults\n         *\n         * */\n        /*\n         @todo:\n             - Document how to write your own algorithms\n             - Consider adding a Point.pathTo method that wraps creating a connection\n               and rendering it\n        */\n        var connectorsDefaults = {\n            /**\n             * The Pathfinder module allows you to define connections between any two\n             * points, represented as lines - optionally with markers for the start\n             * and/or end points. Multiple algorithms are available for calculating how\n             * the connecting lines are drawn.\n             *\n             * Connector functionality requires Highcharts Gantt to be loaded. In Gantt\n             * charts, the connectors are used to draw dependencies between tasks.\n             *\n             * @see [dependency](series.gantt.data.dependency)\n             *\n             * @sample gantt/pathfinder/demo\n             *         Pathfinder connections\n             *\n             * @declare      Highcharts.ConnectorsOptions\n             * @product      gantt\n             * @optionparent connectors\n             */\n            connectors: {\n                /**\n                 * Enable connectors for this chart. Requires Highcharts Gantt.\n                 *\n                 * @type      {boolean}\n                 * @default   true\n                 * @since     6.2.0\n                 * @apioption connectors.enabled\n                 */\n                /**\n                 * Set the default dash style for this chart's connecting lines.\n                 *\n                 * @type      {string}\n                 * @default   solid\n                 * @since     6.2.0\n                 * @apioption connectors.dashStyle\n                 */\n                /**\n                 * Set the default color for this chart's Pathfinder connecting lines.\n                 * Defaults to the color of the point being connected.\n                 *\n                 * @type      {Highcharts.ColorString}\n                 * @since     6.2.0\n                 * @apioption connectors.lineColor\n                 */\n                /**\n                 * Set the default pathfinder margin to use, in pixels. Some Pathfinder\n                 * algorithms attempt to avoid obstacles, such as other points in the\n                 * chart. These algorithms use this margin to determine how close lines\n                 * can be to an obstacle. The default is to compute this automatically\n                 * from the size of the obstacles in the chart.\n                 *\n                 * To draw connecting lines close to existing points, set this to a low\n                 * number. For more space around existing points, set this number\n                 * higher.\n                 *\n                 * @sample gantt/pathfinder/algorithm-margin\n                 *         Small algorithmMargin\n                 *\n                 * @type      {number}\n                 * @since     6.2.0\n                 * @apioption connectors.algorithmMargin\n                 */\n                /**\n                 * Set the default pathfinder algorithm to use for this chart. It is\n                 * possible to define your own algorithms by adding them to the\n                 * Highcharts.Pathfinder.prototype.algorithms object before the chart\n                 * has been created.\n                 *\n                 * The default algorithms are as follows:\n                 *\n                 * `straight`:      Draws a straight line between the connecting\n                 *                  points. Does not avoid other points when drawing.\n                 *\n                 * `simpleConnect`: Finds a path between the points using right angles\n                 *                  only. Takes only starting/ending points into\n                 *                  account, and will not avoid other points.\n                 *\n                 * `fastAvoid`:     Finds a path between the points using right angles\n                 *                  only. Will attempt to avoid other points, but its\n                 *                  focus is performance over accuracy. Works well with\n                 *                  less dense datasets.\n                 *\n                 * Default value: `straight` is used as default for most series types,\n                 * while `simpleConnect` is used as default for Gantt series, to show\n                 * dependencies between points.\n                 *\n                 * @sample gantt/pathfinder/demo\n                 *         Different types used\n                 *\n                 * @type    {Highcharts.PathfinderTypeValue}\n                 * @default undefined\n                 * @since   6.2.0\n                 */\n                type: 'straight',\n                /**\n                 * The corner radius for the connector line.\n                 *\n                 * @since 11.2.0\n                 */\n                radius: 0,\n                /**\n                 * Set the default pixel width for this chart's Pathfinder connecting\n                 * lines.\n                 *\n                 * @since 6.2.0\n                 */\n                lineWidth: 1,\n                /**\n                 * Marker options for this chart's Pathfinder connectors. Note that\n                 * this option is overridden by the `startMarker` and `endMarker`\n                 * options.\n                 *\n                 * @declare Highcharts.ConnectorsMarkerOptions\n                 * @since   6.2.0\n                 */\n                marker: {\n                    /**\n                     * Set the radius of the connector markers. The default is\n                     * automatically computed based on the algorithmMargin setting.\n                     *\n                     * Setting marker.width and marker.height will override this\n                     * setting.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.radius\n                     */\n                    /**\n                     * Set the width of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.width\n                     */\n                    /**\n                     * Set the height of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.height\n                     */\n                    /**\n                     * Set the color of the connector markers. By default this is the\n                     * same as the connector color.\n                     *\n                     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.color\n                     */\n                    /**\n                     * Set the line/border color of the connector markers. By default\n                     * this is the same as the marker color.\n                     *\n                     * @type      {Highcharts.ColorString}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.lineColor\n                     */\n                    /**\n                     * Enable markers for the connectors.\n                     */\n                    enabled: false,\n                    /**\n                     * Horizontal alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.AlignValue}\n                     */\n                    align: 'center',\n                    /**\n                     * Vertical alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.VerticalAlignValue}\n                     */\n                    verticalAlign: 'middle',\n                    /**\n                     * Whether or not to draw the markers inside the points.\n                     */\n                    inside: false,\n                    /**\n                     * Set the line/border width of the pathfinder markers.\n                     */\n                    lineWidth: 1\n                },\n                /**\n                 * Marker options specific to the start markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsStartMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                startMarker: {\n                    /**\n                     * Set the symbol of the connector start markers.\n                     */\n                    symbol: 'diamond'\n                },\n                /**\n                 * Marker options specific to the end markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsEndMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                endMarker: {\n                    /**\n                     * Set the symbol of the connector end markers.\n                     */\n                    symbol: 'arrow-filled'\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Override Pathfinder connector options for a series. Requires Highcharts Gantt\n         * to be loaded.\n         *\n         * @declare   Highcharts.SeriesConnectorsOptionsObject\n         * @extends   connectors\n         * @since     6.2.0\n         * @excluding enabled, algorithmMargin\n         * @product   gantt\n         * @apioption plotOptions.series.connectors\n         */\n        /**\n         * Connect to a point. This option can be either a string, referring to the ID\n         * of another point, or an object, or an array of either. If the option is an\n         * array, each element defines a connection.\n         *\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @declare   Highcharts.XrangePointConnectorsOptionsObject\n         * @type      {string|Array<string|*>|*}\n         * @extends   plotOptions.series.connectors\n         * @since     6.2.0\n         * @excluding enabled\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.xrange.data.connect\n         */\n        /**\n         * The ID of the point to connect to.\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.xrange.data.connect.to\n         */\n        ''; // Keeps doclets above in JS file\n\n        return connectorsDefaults;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderComposition.js', [_modules['Gantt/ConnectorsDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (ConnectorsDefaults, D, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var defined = U.defined, error = U.error, merge = U.merge;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Warn if using legacy options. Copy the options over. Note that this will\n         * still break if using the legacy options in chart.update, addSeries etc.\n         * @private\n         */\n        function warnLegacy(chart) {\n            if (chart.options.pathfinder ||\n                chart.series.reduce(function (acc, series) {\n                    if (series.options) {\n                        merge(true, (series.options.connectors = series.options.connectors ||\n                            {}), series.options.pathfinder);\n                    }\n                    return acc || series.options && series.options.pathfinder;\n                }, false)) {\n                merge(true, (chart.options.connectors = chart.options.connectors || {}), chart.options.pathfinder);\n                error('WARNING: Pathfinder options have been renamed. ' +\n                    'Use \"chart.connectors\" or \"series.connectors\" instead.');\n            }\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ConnectionComposition;\n        (function (ConnectionComposition) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(ChartClass, PathfinderClass, PointClass) {\n                var pointProto = PointClass.prototype;\n                if (!pointProto.getPathfinderAnchorPoint) {\n                    // Initialize Pathfinder for charts\n                    ChartClass.prototype.callbacks.push(function (chart) {\n                        var options = chart.options;\n                        if (options.connectors.enabled !== false) {\n                            warnLegacy(chart);\n                            this.pathfinder = new PathfinderClass(this);\n                            this.pathfinder.update(true); // First draw, defer render\n                        }\n                    });\n                    pointProto.getMarkerVector = pointGetMarkerVector;\n                    pointProto.getPathfinderAnchorPoint = pointGetPathfinderAnchorPoint;\n                    pointProto.getRadiansToVector = pointGetRadiansToVector;\n                    // Set default Pathfinder options\n                    setOptions(ConnectorsDefaults);\n                }\n            }\n            ConnectionComposition.compose = compose;\n            /**\n             * Get coordinates of anchor point for pathfinder connection.\n             *\n             * @private\n             * @function Highcharts.Point#getPathfinderAnchorPoint\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Connection options for position on point.\n             *\n             * @return {Highcharts.PositionObject}\n             *         An object with x/y properties for the position. Coordinates are\n             *         in plot values, not relative to point.\n             */\n            function pointGetPathfinderAnchorPoint(markerOptions) {\n                var bb = getPointBB(this);\n                var x, y;\n                switch (markerOptions.align) { // eslint-disable-line default-case\n                    case 'right':\n                        x = 'xMax';\n                        break;\n                    case 'left':\n                        x = 'xMin';\n                }\n                switch (markerOptions.verticalAlign) { // eslint-disable-line default-case\n                    case 'top':\n                        y = 'yMin';\n                        break;\n                    case 'bottom':\n                        y = 'yMax';\n                }\n                return {\n                    x: x ? bb[x] : (bb.xMin + bb.xMax) / 2,\n                    y: y ? bb[y] : (bb.yMin + bb.yMax) / 2\n                };\n            }\n            /**\n             * Utility to get the angle from one point to another.\n             *\n             * @private\n             * @function Highcharts.Point#getRadiansToVector\n             *\n             * @param {Highcharts.PositionObject} v1\n             *        The first vector, as an object with x/y properties.\n             *\n             * @param {Highcharts.PositionObject} v2\n             *        The second vector, as an object with x/y properties.\n             *\n             * @return {number}\n             *         The angle in degrees\n             */\n            function pointGetRadiansToVector(v1, v2) {\n                var box;\n                if (!defined(v2)) {\n                    box = getPointBB(this);\n                    if (box) {\n                        v2 = {\n                            x: (box.xMin + box.xMax) / 2,\n                            y: (box.yMin + box.yMax) / 2\n                        };\n                    }\n                }\n                return Math.atan2(v2.y - v1.y, v1.x - v2.x);\n            }\n            /**\n             * Utility to get the position of the marker, based on the path angle and\n             * the marker's radius.\n             *\n             * @private\n             * @function Highcharts.Point#getMarkerVector\n             *\n             * @param {number} radians\n             *        The angle in radians from the point center to another vector.\n             *\n             * @param {number} markerRadius\n             *        The radius of the marker, to calculate the additional distance to\n             *        the center of the marker.\n             *\n             * @param {Object} anchor\n             *        The anchor point of the path and marker as an object with x/y\n             *        properties.\n             *\n             * @return {Object}\n             *         The marker vector as an object with x/y properties.\n             */\n            function pointGetMarkerVector(radians, markerRadius, anchor) {\n                var twoPI = Math.PI * 2.0, bb = getPointBB(this), rectWidth = bb.xMax - bb.xMin, rectHeight = bb.yMax - bb.yMin, rAtan = Math.atan2(rectHeight, rectWidth), rectHalfWidth = rectWidth / 2.0, rectHalfHeight = rectHeight / 2.0, rectHorizontalCenter = bb.xMin + rectHalfWidth, rectVerticalCenter = bb.yMin + rectHalfHeight, edgePoint = {\n                    x: rectHorizontalCenter,\n                    y: rectVerticalCenter\n                };\n                var theta = radians, tanTheta = 1, leftOrRightRegion = false, xFactor = 1, yFactor = 1;\n                while (theta < -Math.PI) {\n                    theta += twoPI;\n                }\n                while (theta > Math.PI) {\n                    theta -= twoPI;\n                }\n                tanTheta = Math.tan(theta);\n                if ((theta > -rAtan) && (theta <= rAtan)) {\n                    // Right side\n                    yFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else if (theta > rAtan && theta <= (Math.PI - rAtan)) {\n                    // Top side\n                    yFactor = -1;\n                }\n                else if (theta > (Math.PI - rAtan) || theta <= -(Math.PI - rAtan)) {\n                    // Left side\n                    xFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else {\n                    // Bottom side\n                    xFactor = -1;\n                }\n                // Correct the edgePoint according to the placement of the marker\n                if (leftOrRightRegion) {\n                    edgePoint.x += xFactor * (rectHalfWidth);\n                    edgePoint.y += yFactor * (rectHalfWidth) * tanTheta;\n                }\n                else {\n                    edgePoint.x += xFactor * (rectHeight / (2.0 * tanTheta));\n                    edgePoint.y += yFactor * (rectHalfHeight);\n                }\n                if (anchor.x !== rectHorizontalCenter) {\n                    edgePoint.x = anchor.x;\n                }\n                if (anchor.y !== rectVerticalCenter) {\n                    edgePoint.y = anchor.y;\n                }\n                return {\n                    x: edgePoint.x + (markerRadius * Math.cos(theta)),\n                    y: edgePoint.y - (markerRadius * Math.sin(theta))\n                };\n            }\n        })(ConnectionComposition || (ConnectionComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ConnectionComposition;\n    });\n    _registerModule(_modules, 'Gantt/Pathfinder.js', [_modules['Gantt/Connection.js'], _modules['Gantt/PathfinderAlgorithms.js'], _modules['Gantt/PathfinderComposition.js'], _modules['Core/Series/Point.js'], _modules['Core/Utilities.js']], function (Connection, PathfinderAlgorithms, PathfinderComposition, Point, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Compute smallest distance between two rectangles.\n         * @private\n         */\n        function calculateObstacleDistance(a, b, bbMargin) {\n            // Count the distance even if we are slightly off\n            var margin = pick(bbMargin, 10), yOverlap = a.yMax + margin > b.yMin - margin &&\n                a.yMin - margin < b.yMax + margin, xOverlap = a.xMax + margin > b.xMin - margin &&\n                a.xMin - margin < b.xMax + margin, xDistance = yOverlap ? (a.xMin > b.xMax ? a.xMin - b.xMax : b.xMin - a.xMax) : Infinity, yDistance = xOverlap ? (a.yMin > b.yMax ? a.yMin - b.yMax : b.yMin - a.yMax) : Infinity;\n            // If the rectangles collide, try recomputing with smaller margin.\n            // If they collide anyway, discard the obstacle.\n            if (xOverlap && yOverlap) {\n                return (margin ?\n                    calculateObstacleDistance(a, b, Math.floor(margin / 2)) :\n                    Infinity);\n            }\n            return min(xDistance, yDistance);\n        }\n        /**\n         * Calculate margin to place around obstacles for the pathfinder in pixels.\n         * Returns a minimum of 1 pixel margin.\n         *\n         * @private\n         * @function\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to calculate margin from.\n         *\n         * @return {number}\n         *         The calculated margin in pixels. At least 1.\n         */\n        function calculateObstacleMargin(obstacles) {\n            var len = obstacles.length, distances = [];\n            var onstacleDistance;\n            // Go over all obstacles and compare them to the others.\n            for (var i = 0; i < len; ++i) {\n                // Compare to all obstacles ahead. We will already have compared this\n                // obstacle to the ones before.\n                for (var j = i + 1; j < len; ++j) {\n                    onstacleDistance =\n                        calculateObstacleDistance(obstacles[i], obstacles[j]);\n                    // TODO: Magic number 80\n                    if (onstacleDistance < 80) { // Ignore large distances\n                        distances.push(onstacleDistance);\n                    }\n                }\n            }\n            // Ensure we always have at least one value, even in very spacious charts\n            distances.push(80);\n            return max(Math.floor(distances.sort(function (a, b) {\n                return (a - b);\n            })[\n            // Discard first 10% of the relevant distances, and then grab\n            // the smallest one.\n            Math.floor(distances.length / 10)] / 2 - 1 // Divide the distance by 2 and subtract 1.\n            ), 1 // 1 is the minimum margin\n            );\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Pathfinder class.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Pathfinder\n         *\n         * @param {Highcharts.Chart} chart\n         *        The chart to operate on.\n         */\n        var Pathfinder = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Pathfinder(chart) {\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Pathfinder.compose = function (ChartClass, PointClass) {\n                PathfinderComposition.compose(ChartClass, Pathfinder, PointClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the Pathfinder object.\n             *\n             * @function Highcharts.Pathfinder#init\n             *\n             * @param {Highcharts.Chart} chart\n             *        The chart context.\n             */\n            Pathfinder.prototype.init = function (chart) {\n                // Initialize pathfinder with chart context\n                this.chart = chart;\n                // Init connection reference list\n                this.connections = [];\n                // Recalculate paths/obstacles on chart redraw\n                addEvent(chart, 'redraw', function () {\n                    this.pathfinder.update();\n                });\n            };\n            /**\n             * Update Pathfinder connections from scratch.\n             *\n             * @function Highcharts.Pathfinder#update\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer rendering of connections until\n             *        series.afterAnimate event has fired. Used on first render.\n             */\n            Pathfinder.prototype.update = function (deferRender) {\n                var chart = this.chart, pathfinder = this, oldConnections = pathfinder.connections;\n                // Rebuild pathfinder connections from options\n                pathfinder.connections = [];\n                chart.series.forEach(function (series) {\n                    if (series.visible && !series.options.isInternal) {\n                        series.points.forEach(function (point) {\n                            var _a;\n                            var ganttPointOptions = point.options;\n                            // For Gantt series the connect could be\n                            // defined as a dependency\n                            if (ganttPointOptions && ganttPointOptions.dependency) {\n                                ganttPointOptions.connect = ganttPointOptions\n                                    .dependency;\n                            }\n                            var connects = (((_a = point.options) === null || _a === void 0 ? void 0 : _a.connect) &&\n                                splat(point.options.connect));\n                            var to;\n                            if (point.visible && point.isInside !== false && connects) {\n                                connects.forEach(function (connect) {\n                                    to = chart.get(typeof connect === 'string' ?\n                                        connect : connect.to);\n                                    if (to instanceof Point &&\n                                        to.series.visible &&\n                                        to.visible &&\n                                        to.isInside !== false) {\n                                        // Add new connection\n                                        pathfinder.connections.push(new Connection(point, // From\n                                        to, typeof connect === 'string' ?\n                                            {} :\n                                            connect));\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n                // Clear connections that should not be updated, and move old info over\n                // to new connections.\n                for (var j = 0, k = void 0, found = void 0, lenOld = oldConnections.length, lenNew = pathfinder.connections.length; j < lenOld; ++j) {\n                    found = false;\n                    var oldCon = oldConnections[j];\n                    for (k = 0; k < lenNew; ++k) {\n                        var newCon = pathfinder.connections[k];\n                        if ((oldCon.options && oldCon.options.type) ===\n                            (newCon.options && newCon.options.type) &&\n                            oldCon.fromPoint === newCon.fromPoint &&\n                            oldCon.toPoint === newCon.toPoint) {\n                            newCon.graphics = oldCon.graphics;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        oldCon.destroy();\n                    }\n                }\n                // Clear obstacles to force recalculation. This must be done on every\n                // redraw in case positions have changed. Recalculation is handled in\n                // Connection.getPath on demand.\n                delete this.chartObstacles;\n                delete this.lineObstacles;\n                // Draw the pending connections\n                pathfinder.renderConnections(deferRender);\n            };\n            /**\n             * Draw the chart's connecting paths.\n             *\n             * @function Highcharts.Pathfinder#renderConnections\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer render until series animation is finished.\n             *        Used on first render.\n             */\n            Pathfinder.prototype.renderConnections = function (deferRender) {\n                if (deferRender) {\n                    // Render after series are done animating\n                    this.chart.series.forEach(function (series) {\n                        var render = function () {\n                            // Find pathfinder connections belonging to this series\n                            // that haven't rendered, and render them now.\n                            var pathfinder = series.chart.pathfinder, conns = pathfinder && pathfinder.connections || [];\n                            conns.forEach(function (connection) {\n                                if (connection.fromPoint &&\n                                    connection.fromPoint.series === series) {\n                                    connection.render();\n                                }\n                            });\n                            if (series.pathfinderRemoveRenderEvent) {\n                                series.pathfinderRemoveRenderEvent();\n                                delete series.pathfinderRemoveRenderEvent;\n                            }\n                        };\n                        if (series.options.animation === false) {\n                            render();\n                        }\n                        else {\n                            series.pathfinderRemoveRenderEvent = addEvent(series, 'afterAnimate', render);\n                        }\n                    });\n                }\n                else {\n                    // Go through connections and render them\n                    this.connections.forEach(function (connection) {\n                        connection.render();\n                    });\n                }\n            };\n            /**\n             * Get obstacles for the points in the chart. Does not include connecting\n             * lines from Pathfinder. Applies algorithmMargin to the obstacles.\n             *\n             * @function Highcharts.Pathfinder#getChartObstacles\n             *\n             * @param {Object} options\n             *        Options for the calculation. Currently only\n             *        `options.algorithmMargin`.\n             *\n             * @param {number} options.algorithmMargin\n             *        The algorithm margin to use for the obstacles.\n\n            * @return {Array<object>}\n             *         An array of calculated obstacles. Each obstacle is defined as an\n             *         object with xMin, xMax, yMin and yMax properties.\n             */\n            Pathfinder.prototype.getChartObstacles = function (options) {\n                var series = this.chart.series, margin = pick(options.algorithmMargin, 0);\n                var obstacles = [], calculatedMargin;\n                for (var i = 0, sLen = series.length; i < sLen; ++i) {\n                    if (series[i].visible && !series[i].options.isInternal) {\n                        for (var j = 0, pLen = series[i].points.length, bb = void 0, point = void 0; j < pLen; ++j) {\n                            point = series[i].points[j];\n                            if (point.visible) {\n                                bb = getPointBB(point);\n                                if (bb) {\n                                    obstacles.push({\n                                        xMin: bb.xMin - margin,\n                                        xMax: bb.xMax + margin,\n                                        yMin: bb.yMin - margin,\n                                        yMax: bb.yMax + margin\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n                // Sort obstacles by xMin for optimization\n                obstacles = obstacles.sort(function (a, b) {\n                    return a.xMin - b.xMin;\n                });\n                // Add auto-calculated margin if the option is not defined\n                if (!defined(options.algorithmMargin)) {\n                    calculatedMargin =\n                        options.algorithmMargin =\n                            calculateObstacleMargin(obstacles);\n                    obstacles.forEach(function (obstacle) {\n                        obstacle.xMin -= calculatedMargin;\n                        obstacle.xMax += calculatedMargin;\n                        obstacle.yMin -= calculatedMargin;\n                        obstacle.yMax += calculatedMargin;\n                    });\n                }\n                return obstacles;\n            };\n            /**\n             * Utility function to get metrics for obstacles:\n             * - Widest obstacle width\n             * - Tallest obstacle height\n             *\n             * @function Highcharts.Pathfinder#getObstacleMetrics\n             *\n             * @param {Array<object>} obstacles\n             *        An array of obstacles to inspect.\n             *\n             * @return {Object}\n             *         The calculated metrics, as an object with maxHeight and maxWidth\n             *         properties.\n             */\n            Pathfinder.prototype.getObstacleMetrics = function (obstacles) {\n                var maxWidth = 0, maxHeight = 0, width, height, i = obstacles.length;\n                while (i--) {\n                    width = obstacles[i].xMax - obstacles[i].xMin;\n                    height = obstacles[i].yMax - obstacles[i].yMin;\n                    if (maxWidth < width) {\n                        maxWidth = width;\n                    }\n                    if (maxHeight < height) {\n                        maxHeight = height;\n                    }\n                }\n                return {\n                    maxHeight: maxHeight,\n                    maxWidth: maxWidth\n                };\n            };\n            /**\n             * Utility to get which direction to start the pathfinding algorithm\n             * (X vs Y), calculated from a set of marker options.\n             *\n             * @function Highcharts.Pathfinder#getAlgorithmStartDirection\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Marker options to calculate from.\n             *\n             * @return {boolean}\n             *         Returns true for X, false for Y, and undefined for autocalculate.\n             */\n            Pathfinder.prototype.getAlgorithmStartDirection = function (markerOptions) {\n                var xCenter = markerOptions.align !== 'left' &&\n                    markerOptions.align !== 'right', yCenter = markerOptions.verticalAlign !== 'top' &&\n                    markerOptions.verticalAlign !== 'bottom';\n                return xCenter ?\n                    (yCenter ? void 0 : false) : // When x is centered\n                    (yCenter ? true : void 0); // When x is off-center\n            };\n            return Pathfinder;\n        }());\n        /**\n         * @name Highcharts.Pathfinder#algorithms\n         * @type {Highcharts.Dictionary<Function>}\n         */\n        Pathfinder.prototype.algorithms = PathfinderAlgorithms;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Pathfinder;\n    });\n    _registerModule(_modules, 'masters/modules/pathfinder.src.js', [_modules['Core/Globals.js'], _modules['Gantt/Pathfinder.js'], _modules['Extensions/ArrowSymbols.js']], function (Highcharts, Pathfinder, ArrowSymbols) {\n\n        var G = Highcharts;\n        G.Pathfinder = G.Pathfinder || Pathfinder;\n        ArrowSymbols.compose(G.SVGRenderer);\n        G.Pathfinder.compose(G.Chart, G.Point);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Extensions/StaticScale.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Torstein Honsi, Lars Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /** @private */\n        function compose(AxisClass, ChartClass) {\n            var chartProto = ChartClass.prototype;\n            if (!chartProto.adjustHeight) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                chartProto.adjustHeight = chartAdjustHeight;\n                addEvent(ChartClass, 'render', chartProto.adjustHeight);\n            }\n        }\n        /** @private */\n        function onAxisAfterSetOptions() {\n            var chartOptions = this.chart.options.chart;\n            if (!this.horiz &&\n                isNumber(this.options.staticScale) &&\n                (!chartOptions.height ||\n                    (chartOptions.scrollablePlotArea &&\n                        chartOptions.scrollablePlotArea.minHeight))) {\n                this.staticScale = this.options.staticScale;\n            }\n        }\n        /** @private */\n        function chartAdjustHeight() {\n            var chart = this;\n            if (chart.redrawTrigger !== 'adjustHeight') {\n                var _loop_1 = function (axis) {\n                    var chart_1 = axis.chart, animate = !!chart_1.initiatedScale &&\n                        chart_1.options.animation, staticScale = axis.options.staticScale;\n                    if (axis.staticScale && defined(axis.min)) {\n                        var height = pick(axis.brokenAxis && axis.brokenAxis.unitLength, axis.max + axis.tickInterval - axis.min) * staticScale;\n                        // Minimum height is 1 x staticScale.\n                        height = Math.max(height, staticScale);\n                        var diff = height - chart_1.plotHeight;\n                        if (!chart_1.scrollablePixelsY && Math.abs(diff) >= 1) {\n                            chart_1.plotHeight = height;\n                            chart_1.redrawTrigger = 'adjustHeight';\n                            chart_1.setSize(void 0, chart_1.chartHeight + diff, animate);\n                        }\n                        // Make sure clip rects have the right height before initial\n                        // animation.\n                        axis.series.forEach(function (series) {\n                            var clipRect = series.sharedClipKey &&\n                                chart_1.sharedClips[series.sharedClipKey];\n                            if (clipRect) {\n                                clipRect.attr(chart_1.inverted ? {\n                                    width: chart_1.plotHeight\n                                } : {\n                                    height: chart_1.plotHeight\n                                });\n                            }\n                        });\n                    }\n                };\n                for (var _i = 0, _a = (chart.axes || []); _i < _a.length; _i++) {\n                    var axis = _a[_i];\n                    _loop_1(axis);\n                }\n                this.initiatedScale = true;\n            }\n            this.redrawTrigger = null;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var StaticScale = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * For vertical axes only. Setting the static scale ensures that each tick unit\n         * is translated into a fixed pixel height. For example, setting the static\n         * scale to 24 results in each Y axis category taking up 24 pixels, and the\n         * height of the chart adjusts. Adding or removing items will make the chart\n         * resize.\n         *\n         * @sample gantt/xrange-series/demo/\n         *         X-range series with static scale\n         *\n         * @type      {number}\n         * @default   50\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption yAxis.staticScale\n         */\n        ''; // Keeps doclets above in JS file\n\n        return StaticScale;\n    });\n    _registerModule(_modules, 'masters/modules/static-scale.src.js', [_modules['Core/Globals.js'], _modules['Extensions/StaticScale.js']], function (Highcharts, StaticScale) {\n\n        var G = Highcharts;\n        StaticScale.compose(G.Axis, G.Chart);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var correctFloat = U.correctFloat, isNumber = U.isNumber, isObject = U.isObject;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The X-range series displays ranges on the X axis, typically time\n         * intervals with a start and end date.\n         *\n         * @sample {highcharts} highcharts/demo/x-range/\n         *         X-range\n         * @sample {highcharts} highcharts/css/x-range/\n         *         Styled mode X-range\n         * @sample {highcharts} highcharts/chart/inverted-xrange/\n         *         Inverted X-range\n         *\n         * @extends      plotOptions.column\n         * @since        6.0.0\n         * @product      highcharts highstock gantt\n         * @excluding    boostThreshold, crisp, cropThreshold, depth, edgeColor,\n         *               edgeWidth, findNearestPointBy, getExtremesFromAll,\n         *               negativeColor, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, softThreshold,\n         *               stacking, threshold, data, dataSorting, boostBlending\n         * @requires     modules/xrange\n         * @optionparent plotOptions.xrange\n         */\n        var XRangeSeriesDefaults = {\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. The partial fill object can be set either on\n             * series or point level.\n             *\n             * @sample {highcharts} highcharts/demo/x-range\n             *         X-range with partial fill\n             *\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill\n             */\n            /**\n             * The fill color to be used for partial fills. Defaults to a darker\n             * shade of the point color.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill.fill\n             */\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. See [completed](series.gantt.data.completed).\n             *\n             * @sample gantt/demo/progress-indicator\n             *         Gantt with progress indicator\n             *\n             * @product   gantt\n             * @apioption plotOptions.gantt.partialFill\n             */\n            /**\n             * In an X-range series, this option makes all points of the same Y-axis\n             * category the same color.\n             */\n            colorByPoint: true,\n            dataLabels: {\n                formatter: function () {\n                    var amount = this.point.partialFill;\n                    if (isObject(amount)) {\n                        amount = amount.amount;\n                    }\n                    if (isNumber(amount) && amount > 0) {\n                        return correctFloat(amount * 100) + '%';\n                    }\n                },\n                inside: true,\n                verticalAlign: 'middle',\n                style: {\n                    whiteSpace: 'nowrap'\n                }\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size: 0.8em\">{point.x} - {point.x2}</span><br/>',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.yCategory}</b><br/>'\n            },\n            borderRadius: 3,\n            pointRange: 0\n        };\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n        /* *\n         *\n         * API Options\n         *\n         * */\n        /**\n         * An `xrange` series. If the [type](#series.xrange.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.xrange\n         * @excluding boostThreshold, crisp, cropThreshold, depth, edgeColor, edgeWidth,\n         *            findNearestPointBy, getExtremesFromAll, negativeColor,\n         *            pointInterval, pointIntervalUnit, pointPlacement, pointRange,\n         *            pointStart, softThreshold, stacking, threshold, dataSorting,\n         *            boostBlending\n         * @product   highcharts highstock gantt\n         * @requires  modules/xrange\n         * @apioption series.xrange\n         */\n        /**\n         * An array of data points for the series. For the `xrange` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The objects are point configuration\n         *    objects as seen below.\n         *    ```js\n         *    data: [{\n         *        x: Date.UTC(2017, 0, 1),\n         *        x2: Date.UTC(2017, 0, 3),\n         *        name: \"Test\",\n         *        y: 0,\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: Date.UTC(2017, 0, 4),\n         *        x2: Date.UTC(2017, 0, 5),\n         *        name: \"Deploy\",\n         *        y: 1,\n         *        color: \"#FF0000\"\n         *    }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @declare   Highcharts.XrangePointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data\n         */\n        /**\n         * The starting X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x\n         */\n        /**\n         * The ending X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x2\n         */\n        /**\n         * The Y value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.y\n         */\n        /**\n         * A partial fill for each point, typically used to visualize how much of\n         * a task is performed. The partial fill object can be set either on series\n         * or point level.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range with partial fill\n         *\n         * @declare   Highcharts.XrangePointPartialFillOptionsObject\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill\n         */\n        /**\n         * The amount of the X-range point to be filled. Values can be 0-1 and are\n         * converted to percentages in the default data label formatter.\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.amount\n         */\n        /**\n         * The fill color to be used for partial fills. Defaults to a darker shade\n         * of the point color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.fill\n         */\n        (''); // Adds doclets above to transpiled file\n\n        return XRangeSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangePoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var XRangePoint = /** @class */ (function (_super) {\n            __extends(XRangePoint, _super);\n            /**\n             * Extend init to have y default to 0.\n             *\n             * @private\n             */\n            function XRangePoint(series, options) {\n                var _this = _super.call(this, series, options) || this;\n                if (!_this.y) {\n                    _this.y = 0;\n                }\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * Return color of a point based on its category.\n             *\n             * @private\n             * @function getColorByCategory\n             *\n             * @param {object} series\n             *        The series which the point belongs to.\n             *\n             * @param {object} point\n             *        The point to calculate its color for.\n             *\n             * @return {object}\n             *         Returns an object containing the properties color and colorIndex.\n             */\n            XRangePoint.getColorByCategory = function (series, point) {\n                var colors = series.options.colors || series.chart.options.colors, colorCount = colors ?\n                    colors.length :\n                    series.chart.options.chart.colorCount, colorIndex = point.y % colorCount, color = colors && colors[colorIndex];\n                return {\n                    colorIndex: colorIndex,\n                    color: color\n                };\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangePoint.prototype.resolveColor = function () {\n                var series = this.series;\n                if (series.options.colorByPoint && !this.options.color) {\n                    var colorByPoint = XRangePoint.getColorByCategory(series, this);\n                    if (!series.chart.styledMode) {\n                        this.color = colorByPoint.color;\n                    }\n                    if (!this.options.colorIndex) {\n                        this.colorIndex = colorByPoint.colorIndex;\n                    }\n                }\n                else {\n                    this.color = this.options.color || series.color;\n                }\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.setState = function () {\n                _super.prototype.setState.apply(this, arguments);\n                this.series.drawPoint(this, this.series.getAnimationVerb());\n            };\n            /**\n             * Add x2 and yCategory to the available properties for tooltip formats.\n             *\n             * @private\n             */\n            XRangePoint.prototype.getLabelConfig = function () {\n                var cfg = _super.prototype.getLabelConfig.call(this), yCats = this.series.yAxis.categories;\n                cfg.x2 = this.x2;\n                cfg.yCategory = this.yCategory = yCats && yCats[this.y];\n                // Use 'category' as 'key' to ensure tooltip datetime formatting.\n                // Use 'name' only when 'category' is undefined.\n                cfg.key = this.category || this.name;\n                return cfg;\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.isValid = function () {\n                return typeof this.x === 'number' &&\n                    typeof this.x2 === 'number';\n            };\n            return XRangePoint;\n        }(ColumnPoint));\n        extend(XRangePoint.prototype, {\n            ttBelow: false,\n            tooltipDateKeys: ['x', 'x2']\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The ending X value of the range point.\n         * @name Highcharts.Point#x2\n         * @type {number|undefined}\n         * @requires modules/xrange\n         */\n        /**\n         * Extend applyOptions so that `colorByPoint` for x-range means that one\n         * color is applied per Y axis category.\n         *\n         * @private\n         * @function Highcharts.Point#applyOptions\n         *\n         * @return {Highcharts.Series}\n         */\n        /**\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * The ending X value of the range point.\n        * @name Highcharts.PointOptionsObject#x2\n        * @type {number|undefined}\n        * @requires modules/xrange\n        */\n        (''); // Keeps doclets above in JS file\n\n        return XRangePoint;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeries.js', [_modules['Core/Globals.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Series/XRange/XRangeSeriesDefaults.js'], _modules['Series/XRange/XRangePoint.js']], function (H, Color, SeriesRegistry, U, XRangeSeriesDefaults, XRangePoint) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed, noop = H.noop;\n        var color = Color.parse;\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, clamp = U.clamp, crisp = U.crisp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Max x2 should be considered in xAxis extremes\n         * @private\n         */\n        function onAxisAfterGetSeriesExtremes() {\n            var dataMax, modMax;\n            if (this.isXAxis) {\n                dataMax = pick(this.dataMax, -Number.MAX_VALUE);\n                for (var _i = 0, _a = this.series; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    if (series.x2Data) {\n                        for (var _b = 0, _c = series.x2Data; _b < _c.length; _b++) {\n                            var val = _c[_b];\n                            if (val && val > dataMax) {\n                                dataMax = val;\n                                modMax = true;\n                            }\n                        }\n                    }\n                }\n                if (modMax) {\n                    this.dataMax = dataMax;\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.xrange\n         *\n         * @augments Highcharts.Series\n         */\n        var XRangeSeries = /** @class */ (function (_super) {\n            __extends(XRangeSeries, _super);\n            function XRangeSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            XRangeSeries.compose = function (AxisClass) {\n                if (pushUnique(composed, 'Series.XRange')) {\n                    addEvent(AxisClass, 'afterGetSeriesExtremes', onAxisAfterGetSeriesExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #13161\n            };\n            /**\n             * Borrow the column series metrics, but with swapped axes. This gives\n             * free access to features like groupPadding, grouping, pointWidth etc.\n             * @private\n             */\n            XRangeSeries.prototype.getColumnMetrics = function () {\n                var _this = this;\n                var swapAxes = function () {\n                    for (var _i = 0, _a = _this.chart.series; _i < _a.length; _i++) {\n                        var series = _a[_i];\n                        var xAxis = series.xAxis;\n                        series.xAxis = series.yAxis;\n                        series.yAxis = xAxis;\n                    }\n                };\n                swapAxes();\n                var metrics = _super.prototype.getColumnMetrics.call(this);\n                swapAxes();\n                return metrics;\n            };\n            /**\n             * Override cropData to show a point where x or x2 is outside visible range,\n             * but one of them is inside.\n             * @private\n             */\n            XRangeSeries.prototype.cropData = function (xData, yData, min, max) {\n                // Replace xData with x2Data to find the appropriate cropStart\n                var crop = _super.prototype.cropData.call(this, this.x2Data, yData, min, max);\n                // Re-insert the cropped xData\n                crop.xData = xData.slice(crop.start, crop.end);\n                return crop;\n            };\n            /**\n             * Finds the index of an existing point that matches the given point\n             * options.\n             *\n             * @private\n             *\n             * @param {Highcharts.XRangePointOptions} options\n             *        The options of the point.\n             *\n             * @return {number|undefined}\n             *         Returns index of a matching point, or undefined if no match is\n             *         found.\n             */\n            XRangeSeries.prototype.findPointIndex = function (options) {\n                var _a = this, cropStart = _a.cropStart, points = _a.points;\n                var id = options.id;\n                var pointIndex;\n                if (id) {\n                    var point = find(points, function (point) { return point.id === id; });\n                    pointIndex = point ? point.index : void 0;\n                }\n                if (typeof pointIndex === 'undefined') {\n                    var point = find(points, function (point) { return (point.x === options.x &&\n                        point.x2 === options.x2 &&\n                        !point.touched); });\n                    pointIndex = point ? point.index : void 0;\n                }\n                // Reduce pointIndex if data is cropped\n                if (this.cropped &&\n                    isNumber(pointIndex) &&\n                    isNumber(cropStart) &&\n                    pointIndex >= cropStart) {\n                    pointIndex -= cropStart;\n                }\n                return pointIndex;\n            };\n            XRangeSeries.prototype.alignDataLabel = function (point) {\n                var _a;\n                var oldPlotX = point.plotX;\n                point.plotX = pick(point.dlBox && point.dlBox.centerX, point.plotX);\n                if (point.dataLabel && ((_a = point.shapeArgs) === null || _a === void 0 ? void 0 : _a.width)) {\n                    point.dataLabel.css({\n                        width: \"\".concat(point.shapeArgs.width, \"px\")\n                    });\n                }\n                _super.prototype.alignDataLabel.apply(this, arguments);\n                point.plotX = oldPlotX;\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translatePoint = function (point) {\n                var xAxis = this.xAxis, yAxis = this.yAxis, metrics = this.columnMetrics, options = this.options, minPointLength = options.minPointLength || 0, oldColWidth = (point.shapeArgs && point.shapeArgs.width || 0) / 2, seriesXOffset = this.pointXOffset = metrics.offset, posX = pick(point.x2, point.x + (point.len || 0)), borderRadius = options.borderRadius, plotTop = this.chart.plotTop, plotLeft = this.chart.plotLeft;\n                var plotX = point.plotX, plotX2 = xAxis.translate(posX, 0, 0, 0, 1);\n                var length = Math.abs(plotX2 - plotX), inverted = this.chart.inverted, borderWidth = pick(options.borderWidth, 1);\n                var widthDifference, partialFill, yOffset = metrics.offset, pointHeight = Math.round(metrics.width), dlLeft, dlRight, dlWidth, clipRectWidth;\n                if (minPointLength) {\n                    widthDifference = minPointLength - length;\n                    if (widthDifference < 0) {\n                        widthDifference = 0;\n                    }\n                    plotX -= widthDifference / 2;\n                    plotX2 += widthDifference / 2;\n                }\n                plotX = Math.max(plotX, -10);\n                plotX2 = clamp(plotX2, -10, xAxis.len + 10);\n                // Handle individual pointWidth\n                if (defined(point.options.pointWidth)) {\n                    yOffset -= ((Math.ceil(point.options.pointWidth) - pointHeight) / 2);\n                    pointHeight = Math.ceil(point.options.pointWidth);\n                }\n                // Apply pointPlacement to the Y axis\n                if (options.pointPlacement &&\n                    isNumber(point.plotY) &&\n                    yAxis.categories) {\n                    point.plotY = yAxis.translate(point.y, 0, 1, 0, 1, options.pointPlacement);\n                }\n                var x = crisp(Math.min(plotX, plotX2), borderWidth), x2 = crisp(Math.max(plotX, plotX2), borderWidth), width = x2 - x;\n                var r = Math.min(relativeLength((typeof borderRadius === 'object' ?\n                    borderRadius.radius :\n                    borderRadius || 0), pointHeight), Math.min(width, pointHeight) / 2);\n                var shapeArgs = {\n                    x: x,\n                    y: crisp((point.plotY || 0) + yOffset, borderWidth),\n                    width: width,\n                    height: pointHeight,\n                    r: r\n                };\n                point.shapeArgs = shapeArgs;\n                // Move tooltip to default position\n                if (!inverted) {\n                    point.tooltipPos[0] -= oldColWidth +\n                        seriesXOffset -\n                        shapeArgs.width / 2;\n                }\n                else {\n                    point.tooltipPos[1] += seriesXOffset +\n                        oldColWidth;\n                }\n                // Align data labels inside the shape and inside the plot area\n                dlLeft = shapeArgs.x;\n                dlRight = dlLeft + shapeArgs.width;\n                if (dlLeft < 0 || dlRight > xAxis.len) {\n                    dlLeft = clamp(dlLeft, 0, xAxis.len);\n                    dlRight = clamp(dlRight, 0, xAxis.len);\n                    dlWidth = dlRight - dlLeft;\n                    point.dlBox = merge(shapeArgs, {\n                        x: dlLeft,\n                        width: dlRight - dlLeft,\n                        centerX: dlWidth ? dlWidth / 2 : null\n                    });\n                }\n                else {\n                    point.dlBox = null;\n                }\n                // Tooltip position\n                var tooltipPos = point.tooltipPos;\n                var xIndex = !inverted ? 0 : 1;\n                var yIndex = !inverted ? 1 : 0;\n                var tooltipYOffset = (this.columnMetrics ?\n                    this.columnMetrics.offset :\n                    -metrics.width / 2);\n                // Centering tooltip position (#14147)\n                if (inverted) {\n                    tooltipPos[xIndex] += shapeArgs.width / 2;\n                }\n                else {\n                    tooltipPos[xIndex] = clamp(tooltipPos[xIndex] +\n                        (xAxis.reversed ? -1 : 0) * shapeArgs.width, xAxis.left - plotLeft, xAxis.left + xAxis.len - plotLeft - 1);\n                }\n                tooltipPos[yIndex] = clamp(tooltipPos[yIndex] + ((inverted ? -1 : 1) * tooltipYOffset), yAxis.top - plotTop, yAxis.top + yAxis.len - plotTop - 1);\n                // Add a partShapeArgs to the point, based on the shapeArgs property\n                partialFill = point.partialFill;\n                if (partialFill) {\n                    // Get the partial fill amount\n                    if (isObject(partialFill)) {\n                        partialFill = partialFill.amount;\n                    }\n                    // If it was not a number, assume 0\n                    if (!isNumber(partialFill)) {\n                        partialFill = 0;\n                    }\n                    point.partShapeArgs = merge(shapeArgs);\n                    clipRectWidth = Math.max(Math.round(length * partialFill + point.plotX -\n                        plotX), 0);\n                    point.clipRectArgs = {\n                        x: xAxis.reversed ? // #10717\n                            shapeArgs.x + length - clipRectWidth :\n                            shapeArgs.x,\n                        y: shapeArgs.y,\n                        width: clipRectWidth,\n                        height: shapeArgs.height\n                    };\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.translatePoint(point);\n                }\n            };\n            /**\n             * Draws a single point in the series. Needed for partial fill.\n             *\n             * This override turns point.graphic into a group containing the\n             * original graphic and an overlay displaying the partial fill.\n             *\n             * @private\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series.\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            XRangeSeries.prototype.drawPoint = function (point, verb) {\n                var seriesOpts = this.options, renderer = this.chart.renderer, type = point.shapeType, shapeArgs = point.shapeArgs, partShapeArgs = point.partShapeArgs, clipRectArgs = point.clipRectArgs, pointState = point.state, stateOpts = (seriesOpts.states[pointState || 'normal'] ||\n                    {}), pointStateVerb = typeof pointState === 'undefined' ?\n                    'attr' : verb, pointAttr = this.pointAttribs(point, pointState), animation = pick(this.chart.options.chart.animation, stateOpts.animation);\n                var graphic = point.graphic, pfOptions = point.partialFill;\n                if (!point.isNull && point.visible !== false) {\n                    // Original graphic\n                    if (graphic) { // Update\n                        graphic.rect[verb](shapeArgs);\n                    }\n                    else {\n                        point.graphic = graphic = renderer.g('point')\n                            .addClass(point.getClassName())\n                            .add(point.group || this.group);\n                        graphic.rect = renderer[type](merge(shapeArgs))\n                            .addClass(point.getClassName())\n                            .addClass('highcharts-partfill-original')\n                            .add(graphic);\n                    }\n                    // Partial fill graphic\n                    if (partShapeArgs) {\n                        if (graphic.partRect) {\n                            graphic.partRect[verb](merge(partShapeArgs));\n                            graphic.partialClipRect[verb](merge(clipRectArgs));\n                        }\n                        else {\n                            graphic.partialClipRect = renderer.clipRect(clipRectArgs.x, clipRectArgs.y, clipRectArgs.width, clipRectArgs.height);\n                            graphic.partRect =\n                                renderer[type](partShapeArgs)\n                                    .addClass('highcharts-partfill-overlay')\n                                    .add(graphic)\n                                    .clip(graphic.partialClipRect);\n                        }\n                    }\n                    // Presentational\n                    if (!this.chart.styledMode) {\n                        graphic\n                            .rect[verb](pointAttr, animation)\n                            .shadow(seriesOpts.shadow);\n                        if (partShapeArgs) {\n                            // Ensure pfOptions is an object\n                            if (!isObject(pfOptions)) {\n                                pfOptions = {};\n                            }\n                            if (isObject(seriesOpts.partialFill)) {\n                                pfOptions = merge(seriesOpts.partialFill, pfOptions);\n                            }\n                            var fill = (pfOptions.fill ||\n                                color(pointAttr.fill).brighten(-0.3).get() ||\n                                color(point.color || this.color)\n                                    .brighten(-0.3).get());\n                            pointAttr.fill = fill;\n                            graphic\n                                .partRect[pointStateVerb](pointAttr, animation)\n                                .shadow(seriesOpts.shadow);\n                        }\n                    }\n                }\n                else if (graphic) {\n                    point.graphic = graphic.destroy(); // #1269\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.drawPoints = function () {\n                var verb = this.getAnimationVerb();\n                // Draw the columns\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.drawPoint(point, verb);\n                }\n            };\n            /**\n             * Returns \"animate\", or \"attr\" if the number of points is above the\n             * animation limit.\n             *\n             * @private\n             */\n            XRangeSeries.prototype.getAnimationVerb = function () {\n                return (this.chart.pointCount < (this.options.animationLimit || 250) ?\n                    'animate' :\n                    'attr');\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.isPointInside = function (point) {\n                var shapeArgs = point.shapeArgs, plotX = point.plotX, plotY = point.plotY;\n                if (!shapeArgs) {\n                    return _super.prototype.isPointInside.apply(this, arguments);\n                }\n                var isInside = typeof plotX !== 'undefined' &&\n                    typeof plotY !== 'undefined' &&\n                    plotY >= 0 &&\n                    plotY <= this.yAxis.len &&\n                    (shapeArgs.x || 0) + (shapeArgs.width || 0) >= 0 &&\n                    plotX <= this.xAxis.len;\n                return isInside;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            XRangeSeries.defaultOptions = merge(ColumnSeries.defaultOptions, XRangeSeriesDefaults);\n            return XRangeSeries;\n        }(ColumnSeries));\n        extend(XRangeSeries.prototype, {\n            pointClass: XRangePoint,\n            pointArrayMap: ['x2', 'y'],\n            getExtremesFromAll: true,\n            parallelArrays: ['x', 'x2', 'y'],\n            requireSorting: false,\n            type: 'xrange',\n            animate: SeriesRegistry.series.prototype.animate,\n            autoIncrement: noop,\n            buildKDTree: noop\n        });\n        SeriesRegistry.registerSeriesType('xrange', XRangeSeries);\n        /* *\n         *\n         * Default Export\n         *\n         * */\n\n        return XRangeSeries;\n    });\n    _registerModule(_modules, 'masters/modules/xrange.src.js', [_modules['Core/Globals.js'], _modules['Series/XRange/XRangeSeries.js']], function (Highcharts, XRangeSeries) {\n\n        var G = Highcharts;\n        XRangeSeries.compose(G.Axis);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var XRangePoint = SeriesRegistry.seriesTypes.xrange.prototype.pointClass;\n        var pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var GanttPoint = /** @class */ (function (_super) {\n            __extends(GanttPoint, _super);\n            function GanttPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            GanttPoint.setGanttPointAliases = function (options) {\n                /**\n                 * Add a value to options if the value exists.\n                 * @private\n                 */\n                function addIfExists(prop, val) {\n                    if (typeof val !== 'undefined') {\n                        options[prop] = val;\n                    }\n                }\n                addIfExists('x', pick(options.start, options.x));\n                addIfExists('x2', pick(options.end, options.x2));\n                addIfExists('partialFill', pick(options.completed, options.partialFill));\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Applies the options containing the x and y data and possible some\n             * extra properties. This is called on point init or from point.update.\n             *\n             * @private\n             * @function Highcharts.Point#applyOptions\n             *\n             * @param {Object} options\n             *        The point options\n             *\n             * @param {number} x\n             *        The x value\n             *\n             * @return {Highcharts.Point}\n             *         The Point instance\n             */\n            GanttPoint.prototype.applyOptions = function (options, x) {\n                var ganttPoint = _super.prototype.applyOptions.call(this, options, x);\n                GanttPoint.setGanttPointAliases(ganttPoint);\n                return ganttPoint;\n            };\n            GanttPoint.prototype.isValid = function () {\n                return ((typeof this.start === 'number' ||\n                    typeof this.x === 'number') &&\n                    (typeof this.end === 'number' ||\n                        typeof this.x2 === 'number' ||\n                        this.milestone));\n            };\n            return GanttPoint;\n        }(XRangePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttPoint;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `gantt` series. If the [type](#series.gantt.type) option is not specified,\n         * it is inherited from [chart.type](#chart.type).\n         *\n         * @extends      plotOptions.xrange\n         * @product      gantt\n         * @requires     highcharts-gantt\n         * @optionparent plotOptions.gantt\n         */\n        var GanttSeriesDefaults = {\n            // Options - default options merged with parent\n            grouping: false,\n            dataLabels: {\n                enabled: true\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size: 0.8em\">{series.name}</span><br/>',\n                pointFormat: null,\n                pointFormatter: function () {\n                    var point = this, series = point.series, xAxis = series.xAxis, formats = series.tooltipOptions.dateTimeLabelFormats, startOfWeek = xAxis.options.startOfWeek, ttOptions = series.tooltipOptions, milestone = point.options.milestone;\n                    var format = ttOptions.xDateFormat, retVal = '<b>' + (point.name || point.yCategory) + '</b>';\n                    if (ttOptions.pointFormat) {\n                        return point.tooltipFormatter(ttOptions.pointFormat);\n                    }\n                    if (!format && isNumber(point.start)) {\n                        format = series.chart.time.getDateFormat(xAxis.closestPointRange, point.start, startOfWeek, formats || {});\n                    }\n                    var start = series.chart.time.dateFormat(format, point.start), end = series.chart.time.dateFormat(format, point.end);\n                    retVal += '<br/>';\n                    if (!milestone) {\n                        retVal += 'Start: ' + start + '<br/>';\n                        retVal += 'End: ' + end + '<br/>';\n                    }\n                    else {\n                        retVal += start + '<br/>';\n                    }\n                    return retVal;\n                }\n            },\n            connectors: {\n                type: 'simpleConnect',\n                /**\n                 * @declare Highcharts.ConnectorsAnimationOptionsObject\n                 */\n                animation: {\n                    reversed: true // Dependencies go from child to parent\n                },\n                radius: 0,\n                startMarker: {\n                    enabled: true,\n                    symbol: 'arrow-filled',\n                    radius: 4,\n                    fill: '#fa0',\n                    align: 'left'\n                },\n                endMarker: {\n                    enabled: false, // Only show arrow on the dependent task\n                    align: 'right'\n                }\n            }\n        };\n        /**\n         * A `gantt` series.\n         *\n         * @extends   series,plotOptions.gantt\n         * @excluding boostThreshold, dashStyle, findNearestPointBy,\n         *            getExtremesFromAll, marker, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointStart\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.gantt\n         */\n        /**\n         * Data for a Gantt series.\n         *\n         * @declare   Highcharts.GanttPointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.xrange.data\n         * @excluding className, connect, dataLabels, events,\n         *            partialFill, selected, x, x2\n         * @product   gantt\n         * @apioption series.gantt.data\n         */\n        /**\n         * Whether the grid node belonging to this point should start as collapsed. Used\n         * in axes of type treegrid.\n         *\n         * @sample {gantt} gantt/treegrid-axis/collapsed/\n         *         Start as collapsed\n         *\n         * @type      {boolean}\n         * @default   false\n         * @product   gantt\n         * @apioption series.gantt.data.collapsed\n         */\n        /**\n         * The start time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.start\n         */\n        /**\n         * The end time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.end\n         */\n        /**\n         * The Y value of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.y\n         */\n        /**\n         * The name of a task. If a `treegrid` y-axis is used (default in Gantt charts),\n         * this will be picked up automatically, and used to calculate the y-value.\n         *\n         * @type      {string}\n         * @product   gantt\n         * @apioption series.gantt.data.name\n         */\n        /**\n         * Progress indicator, how much of the task completed. If it is a number, the\n         * `fill` will be applied automatically.\n         *\n         * @sample {gantt} gantt/demo/progress-indicator\n         *         Progress indicator\n         *\n         * @type      {number|*}\n         * @extends   series.xrange.data.partialFill\n         * @product   gantt\n         * @apioption series.gantt.data.completed\n         */\n        /**\n         * The amount of the progress indicator, ranging from 0 (not started) to 1\n         * (finished).\n         *\n         * @type      {number}\n         * @default   0\n         * @apioption series.gantt.data.completed.amount\n         */\n        /**\n         * The fill of the progress indicator. Defaults to a darkened variety of the\n         * main color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption series.gantt.data.completed.fill\n         */\n        /**\n         * The ID of the point (task) that this point depends on in Gantt charts.\n         * Aliases [connect](series.xrange.data.connect). Can also be an object,\n         * specifying further connecting [options](series.gantt.connectors) between the\n         * points. Multiple connections can be specified by providing an array.\n         *\n         * @sample gantt/demo/project-management\n         *         Dependencies\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @type      {string|Array<string|*>|*}\n         * @extends   series.xrange.data.connect\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.dependency\n         */\n        /**\n         * Whether this point is a milestone. If so, only the `start` option is handled,\n         * while `end` is ignored.\n         *\n         * @sample gantt/gantt/milestones\n         *         Milestones\n         *\n         * @type      {boolean}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.milestone\n         */\n        /**\n         * The ID of the parent point (task) of this point in Gantt charts.\n         *\n         * @sample gantt/demo/subtasks\n         *         Gantt chart with subtasks\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.parent\n         */\n        /**\n         * @excluding afterAnimate\n         * @apioption series.gantt.events\n         */\n        ''; // Detachs doclets above\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttSeriesDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (!AxisClass.keepProps.includes('brokenAxis')) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // Extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// Insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than using Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are subtracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/GridAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Axis, H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var dateFormats = H.dateFormats;\n        var addEvent = U.addEvent, defined = U.defined, erase = U.erase, find = U.find, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, timeUnits = U.timeUnits, wrap = U.wrap;\n        /* *\n         *\n         *  Enums\n         *\n         * */\n        /**\n         * Enum for which side the axis is on. Maps to axis.side.\n         * @private\n         */\n        var GridAxisSide;\n        (function (GridAxisSide) {\n            GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n            GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n            GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n            GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n        })(GridAxisSide || (GridAxisSide = {}));\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function argsToArray(args) {\n            return Array.prototype.slice.call(args, 1);\n        }\n        /**\n         * @private\n         */\n        function isObject(x) {\n            // Always use strict mode\n            return U.isObject(x, true);\n        }\n        /**\n         * @private\n         */\n        function applyGridOptions(axis) {\n            var options = axis.options;\n            // Center-align by default\n            /*\n            if (!options.labels) {\n                options.labels = {};\n            }\n            */\n            options.labels.align = pick(options.labels.align, 'center');\n            // @todo: Check against tickLabelPlacement between/on etc\n            /* Prevents adding the last tick label if the axis is not a category\n               axis.\n               Since numeric labels are normally placed at starts and ends of a\n               range of value, and this module makes the label point at the value,\n               an \"extra\" label would appear. */\n            if (!axis.categories) {\n                options.showLastLabel = false;\n            }\n            // Prevents rotation of labels when squished, as rotating them would not\n            // help.\n            axis.labelRotation = 0;\n            options.labels.rotation = 0;\n            // Allow putting ticks closer than their data points.\n            options.minTickInterval = 1;\n        }\n        /**\n         * Extends axis class with grid support.\n         * @private\n         */\n        function compose(AxisClass, ChartClass, TickClass) {\n            if (!AxisClass.keepProps.includes('grid')) {\n                AxisClass.keepProps.push('grid');\n                AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n                wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n                wrap(AxisClass.prototype, 'getOffset', wrapGetOffset);\n                // Add event handlers\n                addEvent(AxisClass, 'init', onInit);\n                addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n                addEvent(AxisClass, 'afterInit', onAfterInit);\n                addEvent(AxisClass, 'afterRender', onAfterRender);\n                addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n                addEvent(AxisClass, 'trimTicks', onTrimTicks);\n                addEvent(AxisClass, 'destroy', onDestroy);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n            }\n            return AxisClass;\n        }\n        /**\n         * Get the largest label width and height.\n         *\n         * @private\n         * @function Highcharts.Axis#getMaxLabelDimensions\n         *\n         * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n         * All the ticks on one axis.\n         *\n         * @param {Array<number|string>} tickPositions\n         * All the tick positions on one axis.\n         *\n         * @return {Highcharts.SizeObject}\n         * Object containing the properties height and width.\n         *\n         * @todo Move this to the generic axis implementation, as it is used there.\n         */\n        function getMaxLabelDimensions(ticks, tickPositions) {\n            var dimensions = {\n                width: 0,\n                height: 0\n            };\n            tickPositions.forEach(function (pos) {\n                var tick = ticks[pos];\n                var labelHeight = 0, labelWidth = 0, label;\n                if (isObject(tick)) {\n                    label = isObject(tick.label) ? tick.label : {};\n                    // Find width and height of label\n                    labelHeight = label.getBBox ? label.getBBox().height : 0;\n                    if (label.textStr && !isNumber(label.textPxLength)) {\n                        label.textPxLength = label.getBBox().width;\n                    }\n                    labelWidth = isNumber(label.textPxLength) ?\n                        // Math.round ensures crisp lines\n                        Math.round(label.textPxLength) :\n                        0;\n                    if (label.textStr) {\n                        // Set the tickWidth same as the label width after ellipsis\n                        // applied #10281\n                        labelWidth = Math.round(label.getBBox().width);\n                    }\n                    // Update the result if width and/or height are larger\n                    dimensions.height = Math.max(labelHeight, dimensions.height);\n                    dimensions.width = Math.max(labelWidth, dimensions.width);\n                }\n            });\n            // For tree grid, add indentation\n            if (this.type === 'treegrid' &&\n                this.treeGrid &&\n                this.treeGrid.mapOfPosToGridNode) {\n                var treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n                dimensions.width += (this.options.labels.indentation *\n                    (treeDepth - 1));\n            }\n            return dimensions;\n        }\n        /**\n         * Handle columns and getOffset.\n         * @private\n         */\n        function wrapGetOffset(proceed) {\n            var grid = this.grid, \n            // On the left side we handle the columns first because the offset is\n            // calculated from the plot area and out\n            columnsFirst = this.side === 3;\n            if (!columnsFirst) {\n                proceed.apply(this);\n            }\n            if (!(grid === null || grid === void 0 ? void 0 : grid.isColumn)) {\n                var columns = (grid === null || grid === void 0 ? void 0 : grid.columns) || [];\n                if (columnsFirst) {\n                    columns = columns.slice().reverse();\n                }\n                columns\n                    .forEach(function (column) {\n                    column.getOffset();\n                });\n            }\n            if (columnsFirst) {\n                proceed.apply(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterGetTitlePosition(e) {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                // Compute anchor points for each of the title align options\n                var axisTitle = axis.axisTitle, axisHeight = axis.height, horiz = axis.horiz, axisLeft = axis.left, offset = axis.offset, opposite = axis.opposite, options_1 = axis.options, axisTop = axis.top, axisWidth = axis.width;\n                var tickSize = axis.tickSize();\n                var titleWidth = axisTitle && axisTitle.getBBox().width;\n                var xOption = options_1.title.x;\n                var yOption = options_1.title.y;\n                var titleMargin = pick(options_1.title.margin, horiz ? 5 : 10);\n                var titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n                var crispCorr = tickSize ? tickSize[0] / 2 : 0;\n                // TODO account for alignment\n                // the position in the perpendicular direction of the axis\n                var offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n                    (horiz ? 1 : -1) * // Horizontal axis reverses the margin\n                        (opposite ? -1 : 1) * // So does opposite axes\n                        crispCorr +\n                    (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n                e.titlePosition.x = horiz ?\n                    axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n                    offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n                e.titlePosition.y = horiz ?\n                    (offAxis -\n                        (opposite ? axisHeight : 0) +\n                        (opposite ? titleFontSize : -titleFontSize) / 2 +\n                        offset +\n                        yOption) :\n                    axisTop - titleMargin + yOption;\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterInit() {\n            var axis = this;\n            var chart = axis.chart, _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a, userOptions = axis.userOptions;\n            if (gridOptions.enabled) {\n                applyGridOptions(axis);\n            }\n            if (gridOptions.columns) {\n                var columns = axis.grid.columns = [];\n                var columnIndex = axis.grid.columnIndex = 0;\n                // Handle columns, each column is a grid axis\n                while (++columnIndex < gridOptions.columns.length) {\n                    var columnOptions = merge(userOptions, gridOptions.columns[columnIndex], {\n                        isInternal: true,\n                        linkedTo: 0,\n                        // Disable by default the scrollbar on the grid axis\n                        scrollbar: {\n                            enabled: false\n                        }\n                    }, \n                    // Avoid recursion\n                    {\n                        grid: {\n                            columns: void 0\n                        }\n                    });\n                    var column = new Axis(axis.chart, columnOptions, 'yAxis');\n                    column.grid.isColumn = true;\n                    column.grid.columnIndex = columnIndex;\n                    // Remove column axis from chart axes array, and place it\n                    // in the columns array.\n                    erase(chart.axes, column);\n                    erase(chart[axis.coll] || [], column);\n                    columns.push(column);\n                }\n            }\n        }\n        /**\n         * Draw an extra line on the far side of the outermost axis,\n         * creating floor/roof/wall of a grid. And some padding.\n         * ```\n         * Make this:\n         *             (axis.min) __________________________ (axis.max)\n         *                           |    |    |    |    |\n         * Into this:\n         *             (axis.min) __________________________ (axis.max)\n         *                        ___|____|____|____|____|__\n         * ```\n         * @private\n         */\n        function onAfterRender() {\n            var axis = this, axisTitle = axis.axisTitle, grid = axis.grid, options = axis.options, gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                var min = axis.min || 0, max = axis.max || 0, firstTick = axis.ticks[axis.tickPositions[0]];\n                // Adjust the title max width to the column width (#19657)\n                if (axisTitle &&\n                    !axis.chart.styledMode &&\n                    (firstTick === null || firstTick === void 0 ? void 0 : firstTick.slotWidth) &&\n                    !axis.options.title.style.width) {\n                    axisTitle.css({ width: \"\".concat(firstTick.slotWidth, \"px\") });\n                }\n                // @todo actual label padding (top, bottom, left, right)\n                axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n                // Remove right wall before rendering if updating\n                if (axis.rightWall) {\n                    axis.rightWall.destroy();\n                }\n                /*\n                Draw an extra axis line on outer axes\n                            >\n                Make this:    |______|______|______|___\n\n                            > _________________________\n                Into this:    |______|______|______|__|\n                                                        */\n                if (axis.grid && axis.grid.isOuterAxis() && axis.axisLine) {\n                    var lineWidth = options.lineWidth;\n                    if (lineWidth) {\n                        var linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                        // Negate distance if top or left axis\n                        // Subtract 1px to draw the line at the end of the tick\n                        tickLength = (axis.tickSize('tick') || [1])[0], distance = tickLength * ((axis.side === GridAxisSide.top ||\n                            axis.side === GridAxisSide.left) ? -1 : 1);\n                        // If axis is horizontal, reposition line path vertically\n                        if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                            if (axis.horiz) {\n                                startPoint[2] += distance;\n                                endPoint[2] += distance;\n                            }\n                            else {\n                                startPoint[1] += distance;\n                                endPoint[1] += distance;\n                            }\n                        }\n                        // If it doesn't exist, add an upper and lower border\n                        // for the vertical grid axis.\n                        if (!axis.horiz && axis.chart.marginRight) {\n                            var upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                                'L',\n                                axis.left,\n                                startPoint[2] || 0\n                            ], upperBorderPath = [\n                                upperBorderStartPoint,\n                                upperBorderEndPoint\n                            ], lowerBorderEndPoint = [\n                                'L',\n                                axis.chart.chartWidth - axis.chart.marginRight,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderStartPoint = [\n                                'M',\n                                endPoint[1] || 0,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderPath = [\n                                lowerBorderStartPoint,\n                                lowerBorderEndPoint\n                            ];\n                            if (!axis.grid.upperBorder && min % 1 !== 0) {\n                                axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                            }\n                            if (axis.grid.upperBorder) {\n                                axis.grid.upperBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.upperBorder.animate({\n                                    d: upperBorderPath\n                                });\n                            }\n                            if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                                axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                            }\n                            if (axis.grid.lowerBorder) {\n                                axis.grid.lowerBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.lowerBorder.animate({\n                                    d: lowerBorderPath\n                                });\n                            }\n                        }\n                        // Render an extra line parallel to the existing axes, to\n                        // close the grid.\n                        if (!axis.grid.axisLineExtra) {\n                            axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                        }\n                        else {\n                            axis.grid.axisLineExtra.attr({\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth\n                            });\n                            axis.grid.axisLineExtra.animate({\n                                d: linePath\n                            });\n                        }\n                        // Show or hide the line depending on options.showEmpty\n                        axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n                    }\n                }\n                (grid && grid.columns || []).forEach(function (column) { return column.render(); });\n                // Manipulate the tick mark visibility\n                // based on the axis.max- allows smooth scrolling.\n                if (!axis.horiz &&\n                    axis.chart.hasRendered &&\n                    (axis.scrollbar ||\n                        (axis.linkedParent && axis.linkedParent.scrollbar)) &&\n                    axis.tickPositions.length) {\n                    var tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick_1 = axis.tickPositions[0];\n                    var label = void 0, tickMark = void 0;\n                    while ((label = axis.hiddenLabels.pop()) && label.element) {\n                        label.show(); // #15453\n                    }\n                    while ((tickMark = axis.hiddenMarks.pop()) &&\n                        tickMark.element) {\n                        tickMark.show(); // #16439\n                    }\n                    // Hide/show first tick label.\n                    label = axis.ticks[firstTick_1].label;\n                    if (label) {\n                        if (min - firstTick_1 > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    // Hide/show last tick mark/label.\n                    label = axis.ticks[lastTick].label;\n                    if (label) {\n                        if (lastTick - max > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    var mark = axis.ticks[lastTick].mark;\n                    if (mark &&\n                        lastTick - max < tickmarkOffset &&\n                        lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                        axis.hiddenMarks.push(mark.hide());\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetAxisTranslation() {\n            var axis = this;\n            var tickInfo = axis.tickPositions && axis.tickPositions.info;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var userLabels = axis.userOptions.labels || {};\n            // Fire this only for the Gantt type chart, #14868.\n            if (gridOptions.enabled) {\n                if (axis.horiz) {\n                    axis.series.forEach(function (series) {\n                        series.options.pointRange = 0;\n                    });\n                    // Lower level time ticks, like hours or minutes, represent\n                    // points in time and not ranges. These should be aligned\n                    // left in the grid cell by default. The same applies to\n                    // years of higher order.\n                    if (tickInfo &&\n                        options.dateTimeLabelFormats &&\n                        options.labels &&\n                        !defined(userLabels.align) &&\n                        (options.dateTimeLabelFormats[tickInfo.unitName]\n                            .range === false ||\n                            tickInfo.count > 1 // Years\n                        )) {\n                        options.labels.align = 'left';\n                        if (!defined(userLabels.x)) {\n                            options.labels.x = 3;\n                        }\n                    }\n                }\n                else {\n                    // Don't trim ticks which not in min/max range but\n                    // they are still in the min/max plus tickInterval.\n                    if (this.type !== 'treegrid' &&\n                        axis.grid &&\n                        axis.grid.columns) {\n                        this.minPointOffset = this.tickInterval;\n                    }\n                }\n            }\n        }\n        /**\n         * Creates a left and right wall on horizontal axes:\n         * - Places leftmost tick at the start of the axis, to create a left\n         *   wall\n         * - Ensures that the rightmost tick is at the end of the axis, to\n         *   create a right wall.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n            var gridAxisOptions;\n            if (gridOptions.enabled === true) {\n                // Merge the user options into default grid axis options so\n                // that when a user option is set, it takes precedence.\n                gridAxisOptions = merge(true, {\n                    className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n                    dateTimeLabelFormats: {\n                        hour: {\n                            list: ['%H:%M', '%H']\n                        },\n                        day: {\n                            list: ['%A, %e. %B', '%a, %e. %b', '%E']\n                        },\n                        week: {\n                            list: ['Week %W', 'W%W']\n                        },\n                        month: {\n                            list: ['%B', '%b', '%o']\n                        }\n                    },\n                    grid: {\n                        borderWidth: 1\n                    },\n                    labels: {\n                        padding: 2,\n                        style: {\n                            fontSize: '0.9em'\n                        }\n                    },\n                    margin: 0,\n                    title: {\n                        text: null,\n                        reserveSpace: false,\n                        rotation: 0,\n                        style: {\n                            textOverflow: 'ellipsis'\n                        }\n                    },\n                    // In a grid axis, only allow one unit of certain types,\n                    // for example we shouldn't have one grid cell spanning\n                    // two days.\n                    units: [[\n                            'millisecond', // Unit name\n                            [1, 10, 100]\n                        ], [\n                            'second',\n                            [1, 10]\n                        ], [\n                            'minute',\n                            [1, 5, 15]\n                        ], [\n                            'hour',\n                            [1, 6]\n                        ], [\n                            'day',\n                            [1]\n                        ], [\n                            'week',\n                            [1]\n                        ], [\n                            'month',\n                            [1]\n                        ], [\n                            'year',\n                            null\n                        ]]\n                }, userOptions);\n                // X-axis specific options\n                if (this.coll === 'xAxis') {\n                    // For linked axes, tickPixelInterval is used only if\n                    // the tickPositioner below doesn't run or returns\n                    // undefined (like multiple years)\n                    if (defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPixelInterval)) {\n                        gridAxisOptions.tickPixelInterval = 350;\n                    }\n                    // For the secondary grid axis, use the primary axis'\n                    // tick intervals and return ticks one level higher.\n                    if (\n                    // Check for tick pixel interval in options\n                    !defined(userOptions.tickPixelInterval) &&\n                        // Only for linked axes\n                        defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPositioner) &&\n                        !defined(userOptions.tickInterval) &&\n                        !defined(userOptions.units)) {\n                        gridAxisOptions.tickPositioner = function (min, max) {\n                            var parentInfo = (this.linkedParent &&\n                                this.linkedParent.tickPositions &&\n                                this.linkedParent.tickPositions.info);\n                            if (parentInfo) {\n                                var units = (gridAxisOptions.units || []);\n                                var unitIdx = void 0, count = 1, unitName = 'year';\n                                for (var i = 0; i < units.length; i++) {\n                                    var unit_1 = units[i];\n                                    if (unit_1 && unit_1[0] === parentInfo.unitName) {\n                                        unitIdx = i;\n                                        break;\n                                    }\n                                }\n                                // Get the first allowed count on the next unit.\n                                var unit = (isNumber(unitIdx) && units[unitIdx + 1]);\n                                if (unit) {\n                                    unitName = unit[0] || 'year';\n                                    var counts = unit[1];\n                                    count = counts && counts[0] || 1;\n                                    // In case the base X axis shows years, make the\n                                    // secondary axis show ten times the years (#11427)\n                                }\n                                else if (parentInfo.unitName === 'year') {\n                                    // `unitName` is 'year'\n                                    count = parentInfo.count * 10;\n                                }\n                                var unitRange = timeUnits[unitName];\n                                this.tickInterval = unitRange * count;\n                                return this.chart.time.getTimeTicks({ unitRange: unitRange, count: count, unitName: unitName }, min, max, this.options.startOfWeek);\n                            }\n                        };\n                    }\n                }\n                // Now merge the combined options into the axis options\n                merge(true, this.options, gridAxisOptions);\n                if (this.horiz) {\n                    /*               _________________________\n                    Make this:    ___|_____|_____|_____|__|\n                                    ^                     ^\n                                    _________________________\n                    Into this:    |_____|_____|_____|_____|\n                                        ^                 ^    */\n                    options.minPadding = pick(userOptions.minPadding, 0);\n                    options.maxPadding = pick(userOptions.maxPadding, 0);\n                }\n                // If borderWidth is set, then use its value for tick and\n                // line width.\n                if (isNumber(options.grid.borderWidth)) {\n                    options.tickWidth = options.lineWidth =\n                        gridOptions.borderWidth;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetOptions2(e) {\n            var axis = this;\n            var userOptions = e.userOptions;\n            var gridOptions = userOptions && userOptions.grid || {};\n            var columns = gridOptions.columns;\n            // Add column options to the parent axis. Children has their column options\n            // set on init in onGridAxisAfterInit.\n            if (gridOptions.enabled && columns) {\n                merge(true, axis.options, columns[0]);\n            }\n        }\n        /**\n         * Handle columns and setScale.\n         * @private\n         */\n        function onAfterSetScale() {\n            var axis = this;\n            (axis.grid.columns || []).forEach(function (column) { return column.setScale(); });\n        }\n        /**\n         * Draw vertical axis ticks extra long to create cell floors and roofs.\n         * Overrides the tickLength for vertical axes.\n         * @private\n         */\n        function onAfterTickSize(e) {\n            var _a = this, horiz = _a.horiz, maxLabelDimensions = _a.maxLabelDimensions, _b = _a.options.grid, gridOptions = _b === void 0 ? {} : _b;\n            if (gridOptions.enabled && maxLabelDimensions) {\n                var labelPadding = this.options.labels.distance * 2;\n                var distance = horiz ?\n                    (gridOptions.cellHeight ||\n                        labelPadding + maxLabelDimensions.height) :\n                    labelPadding + maxLabelDimensions.width;\n                if (isArray(e.tickSize)) {\n                    e.tickSize[0] = distance;\n                }\n                else {\n                    e.tickSize = [distance, 0];\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            this.axes.forEach(function (axis) {\n                (axis.grid && axis.grid.columns || []).forEach(function (column) {\n                    column.setAxisSize();\n                    column.setAxisTranslation();\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function onDestroy(e) {\n            var grid = this.grid;\n            (grid.columns || []).forEach(function (column) { return column.destroy(e.keepEvents); });\n            grid.columns = void 0;\n        }\n        /**\n         * Wraps axis init to draw cell walls on vertical axes.\n         * @private\n         */\n        function onInit(e) {\n            var axis = this;\n            var userOptions = e.userOptions || {};\n            var gridOptions = userOptions.grid || {};\n            if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n                userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n            }\n            if (!axis.grid) {\n                axis.grid = new GridAxisAdditions(axis);\n            }\n            axis.hiddenLabels = [];\n            axis.hiddenMarks = [];\n        }\n        /**\n         * Center tick labels in cells.\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n            // `verticalAlign` is currently not supported for axis.labels.\n            verticalAlign = 'middle', // LabelOpts.verticalAlign,\n            side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (isNumber(tickPositions[e.index + 1]) ?\n                tickPositions[e.index + 1] - tickmarkOffset :\n                (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n            // Only center tick labels in grid axes\n            if (gridOptions.enabled === true) {\n                var bottom = void 0, top_1, left = void 0, right = void 0;\n                // Calculate top and bottom positions of the cell.\n                if (side === 'top') {\n                    bottom = axis.top + axis.offset;\n                    top_1 = bottom - tickWidth;\n                }\n                else if (side === 'bottom') {\n                    top_1 = chart.chartHeight - axis.bottom + axis.offset;\n                    bottom = top_1 + tickWidth;\n                }\n                else {\n                    bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n                    top_1 = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n                }\n                // Calculate left and right positions of the cell.\n                if (side === 'right') {\n                    left = chart.chartWidth - axis.right + axis.offset;\n                    right = left + tickWidth;\n                }\n                else if (side === 'left') {\n                    right = axis.left + axis.offset;\n                    left = right - tickWidth;\n                }\n                else {\n                    left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n                    right = Math.min(// #15742\n                    Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n                }\n                tick.slotWidth = right - left;\n                // Calculate the positioning of the label based on\n                // alignment.\n                e.pos.x = (align === 'left' ?\n                    left :\n                    align === 'right' ?\n                        right :\n                        left + ((right - left) / 2) // Default to center\n                );\n                e.pos.y = (verticalAlign === 'top' ?\n                    top_1 :\n                    verticalAlign === 'bottom' ?\n                        bottom :\n                        top_1 + ((bottom - top_1) / 2) // Default to middle\n                );\n                if (label) {\n                    var lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n                    // Adjustment to y position to align the label correctly.\n                    // Would be better to have a setter or similar for this.\n                    if (!labelOpts.useHTML) {\n                        var lines = Math.round(labelHeight / lblMetrics.h);\n                        e.pos.y += (\n                        // Center the label\n                        // TODO: why does this actually center the label?\n                        ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                            // Adjust for height of additional lines.\n                            -(((lines - 1) * lblMetrics.h) / 2));\n                    }\n                    else {\n                        e.pos.y += (\n                        // Readjust yCorr in htmlUpdateTransform\n                        lblMetrics.b +\n                            // Adjust for height of html label\n                            -(labelHeight / 2));\n                    }\n                }\n                e.pos.x += (axis.horiz && labelOpts.x) || 0;\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickLabelFormat(ctx) {\n            var axis = ctx.axis, value = ctx.value;\n            if (axis.options.grid &&\n                axis.options.grid.enabled) {\n                var tickPos = axis.tickPositions;\n                var series = (axis.linkedParent || axis).series[0];\n                var isFirst = value === tickPos[0];\n                var isLast = value === tickPos[tickPos.length - 1];\n                var point = series && find(series.options.data, function (p) {\n                    return p[axis.isXAxis ? 'x' : 'y'] === value;\n                });\n                var pointCopy = void 0;\n                if (point && series.is('gantt')) {\n                    // For the Gantt set point aliases to the pointCopy\n                    // to do not change the original point\n                    pointCopy = merge(point);\n                    H.seriesTypes.gantt.prototype.pointClass\n                        .setGanttPointAliases(pointCopy);\n                }\n                // Make additional properties available for the\n                // formatter\n                ctx.isFirst = isFirst;\n                ctx.isLast = isLast;\n                ctx.point = pointCopy;\n            }\n        }\n        /**\n         * Makes tick labels which are usually ignored in a linked axis\n         * displayed if they are within range of linkedParent.min.\n         * ```\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Make this:             |   |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Into this:             | 1 |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         * ```\n         * @private\n         * @todo Does this function do what the drawing says? Seems to affect\n         *       ticks and not the labels directly?\n         */\n        function onTrimTicks() {\n            var axis = this, options = axis.options, gridOptions = options.grid || {}, categoryAxis = axis.categories, tickPositions = axis.tickPositions, firstPos = tickPositions[0], secondPos = tickPositions[1], lastPos = tickPositions[tickPositions.length - 1], beforeLastPos = tickPositions[tickPositions.length - 2], linkedMin = axis.linkedParent && axis.linkedParent.min, linkedMax = axis.linkedParent && axis.linkedParent.max, min = linkedMin || axis.min, max = linkedMax || axis.max, tickInterval = axis.tickInterval, startLessThanMin = ( // #19845\n            isNumber(min) &&\n                min >= firstPos + tickInterval &&\n                min < secondPos), endMoreThanMin = (isNumber(min) &&\n                firstPos < min &&\n                firstPos + tickInterval > min), startLessThanMax = (isNumber(max) &&\n                lastPos > max &&\n                lastPos - tickInterval < max), endMoreThanMax = (isNumber(max) &&\n                max <= lastPos - tickInterval &&\n                max > beforeLastPos);\n            if (gridOptions.enabled === true &&\n                !categoryAxis &&\n                (axis.isXAxis || axis.isLinked)) {\n                if ((endMoreThanMin || startLessThanMin) && !options.startOnTick) {\n                    tickPositions[0] = min;\n                }\n                if ((startLessThanMax || endMoreThanMax) && !options.endOnTick) {\n                    tickPositions[tickPositions.length - 1] = max;\n                }\n            }\n        }\n        /**\n         * Avoid altering tickInterval when reserving space.\n         * @private\n         */\n        function wrapUnsquish(proceed) {\n            var axis = this;\n            var _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a;\n            if (gridOptions.enabled === true && axis.categories) {\n                return axis.tickInterval;\n            }\n            return proceed.apply(axis, argsToArray(arguments));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Additions for grid axes.\n         * @private\n         * @class\n         */\n        var GridAxisAdditions = /** @class */ (function () {\n            /* *\n            *\n            *  Constructors\n            *\n            * */\n            function GridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Checks if an axis is the outer axis in its dimension. Since\n             * axes are placed outwards in order, the axis with the highest\n             * index is the outermost axis.\n             *\n             * Example: If there are multiple x-axes at the top of the chart,\n             * this function returns true if the axis supplied is the last\n             * of the x-axes.\n             *\n             * @private\n             *\n             * @return {boolean}\n             * True if the axis is the outermost axis in its dimension; false if\n             * not.\n             */\n            GridAxisAdditions.prototype.isOuterAxis = function () {\n                var _a;\n                var axis = this.axis;\n                var chart = axis.chart;\n                var columnIndex = axis.grid.columnIndex;\n                var columns = (((_a = axis.linkedParent) === null || _a === void 0 ? void 0 : _a.grid.columns) ||\n                    axis.grid.columns ||\n                    []);\n                var parentAxis = columnIndex ? axis.linkedParent : axis;\n                var thisIndex = -1, lastIndex = 0;\n                // On the left side, when we have columns (not only multiple axes), the\n                // main axis is to the left\n                if (axis.side === 3 && !chart.inverted && columns.length) {\n                    return !axis.linkedParent;\n                }\n                (chart[axis.coll] || []).forEach(function (otherAxis, index) {\n                    if (otherAxis.side === axis.side &&\n                        !otherAxis.options.isInternal) {\n                        lastIndex = index;\n                        if (otherAxis === parentAxis) {\n                            // Get the index of the axis in question\n                            thisIndex = index;\n                        }\n                    }\n                });\n                return (lastIndex === thisIndex &&\n                    (isNumber(columnIndex) ?\n                        columns.length === columnIndex :\n                        true));\n            };\n            /**\n             * Add extra border based on the provided path.\n             * @private\n             * @param {SVGPath} path\n             * The path of the border.\n             * @return {Highcharts.SVGElement}\n             * Border\n             */\n            GridAxisAdditions.prototype.renderBorder = function (path) {\n                var axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n                    .addClass('highcharts-axis-line')\n                    .add(axis.axisGroup);\n                if (!renderer.styledMode) {\n                    extraBorderLine.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth,\n                        zIndex: 7\n                    });\n                }\n                return extraBorderLine;\n            };\n            return GridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // First letter of the day of the week, e.g. 'M' for 'Monday'.\n        dateFormats.E = function (timestamp) {\n            return this.dateFormat('%a', timestamp, true).charAt(0);\n        };\n        // Adds week date format\n        dateFormats.W = function (timestamp) {\n            var time = this, d = new this.Date(timestamp), unitsToOmit = ['Hours', 'Milliseconds', 'Minutes', 'Seconds'];\n            unitsToOmit.forEach(function (format) {\n                time.set(format, d, 0);\n            });\n            var firstDay = (this.get('Day', d) + 6) % 7;\n            var thursday = new this.Date(d.valueOf());\n            this.set('Date', thursday, this.get('Date', d) - firstDay + 3);\n            var firstThursday = new this.Date(this.get('FullYear', thursday), 0, 1);\n            if (this.get('Day', firstThursday) !== 4) {\n                this.set('Month', d, 0);\n                this.set('Date', d, 1 + (11 - this.get('Day', firstThursday)) % 7);\n            }\n            return (1 +\n                Math.floor((thursday.valueOf() - firstThursday.valueOf()) / 604800000)).toString();\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var GridAxis = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * @productdesc {gantt}\n         * For grid axes (like in Gantt charts),\n         * it is possible to declare as a list to provide different\n         * formats depending on available space.\n         *\n         * Defaults to:\n         * ```js\n         * {\n         *     hour: { list: ['%H:%M', '%H'] },\n         *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n         *     week: { list: ['Week %W', 'W%W'] },\n         *     month: { list: ['%B', '%b', '%o'] }\n         * }\n         * ```\n         *\n         * @sample {gantt} gantt/grid-axis/date-time-label-formats\n         *         Gantt chart with custom axis date format.\n         *\n         * @apioption xAxis.dateTimeLabelFormats\n         */\n        /**\n         * Set grid options for the axis labels. Requires Highcharts Gantt.\n         *\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid\n         */\n        /**\n         * Enable grid on the axis labels. Defaults to true for Gantt charts.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid.enabled\n         */\n        /**\n         * Set specific options for each column (or row for horizontal axes) in the\n         * grid. Each extra column/row is its own axis, and the axis options can be set\n         * here.\n         *\n         * @sample gantt/demo/left-axis-table\n         *         Left axis as a table\n         * @sample gantt/demo/treegrid-columns\n         *         Collapsible tree grid with columns\n         *\n         * @type      {Array<Highcharts.XAxisOptions>}\n         * @apioption xAxis.grid.columns\n         */\n        /**\n         * Set border color for the label grid lines.\n         *\n         * @type      {Highcharts.ColorString}\n         * @default   #e6e6e6\n         * @apioption xAxis.grid.borderColor\n         */\n        /**\n         * Set border width of the label grid lines.\n         *\n         * @type      {number}\n         * @default   1\n         * @apioption xAxis.grid.borderWidth\n         */\n        /**\n         * Set cell height for grid axis labels. By default this is calculated from font\n         * size. This option only applies to horizontal axes. For vertical axes, check\n         * the [#yAxis.staticScale](yAxis.staticScale) option.\n         *\n         * @sample gantt/grid-axis/cellheight\n         *         Gant chart with custom cell height\n         * @type      {number}\n         * @apioption xAxis.grid.cellHeight\n         */\n        ''; // Keeps doclets above in JS file\n\n        return GridAxis;\n    });\n    _registerModule(_modules, 'Gantt/Tree.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __rest = (this && this.__rest) || function (s, e) {\n            var t = {};\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n            if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                        t[p[i]] = s[p[i]];\n                }\n            return t;\n        };\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var extend = U.extend, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an object map from parent id to children's index.\n         *\n         * @private\n         * @function Highcharts.Tree#getListOfParents\n         *\n         * @param {Array<*>} data\n         *        List of points set in options. `Array.parent` is parent id of point.\n         *\n         * @return {Highcharts.Dictionary<Array<*>>}\n         * Map from parent id to children index in data\n         */\n        function getListOfParents(data) {\n            var root = '', ids = [], listOfParents = data.reduce(function (prev, curr) {\n                var _a = curr.parent, parent = _a === void 0 ? '' : _a, id = curr.id;\n                if (typeof prev[parent] === 'undefined') {\n                    prev[parent] = [];\n                }\n                prev[parent].push(curr);\n                if (id) {\n                    ids.push(id);\n                }\n                return prev;\n            }, {});\n            Object.keys(listOfParents).forEach(function (node) {\n                var _a;\n                if ((node !== root) && (ids.indexOf(node) === -1)) {\n                    var adoptedByRoot = listOfParents[node].map(function (orphan) {\n                        var parentExcluded = __rest(orphan, []); // #15196\n                        return parentExcluded;\n                    });\n                    (_a = listOfParents[root]).push.apply(_a, adoptedByRoot);\n                    delete listOfParents[node];\n                }\n            });\n            return listOfParents;\n        }\n        /** @private */\n        function getNode(id, parent, level, data, mapOfIdToChildren, options) {\n            var after = options && options.after, before = options && options.before, node = {\n                data: data,\n                depth: level - 1,\n                id: id,\n                level: level,\n                parent: (parent || '')\n            };\n            var descendants = 0, height = 0, start, end;\n            // Allow custom logic before the children has been created.\n            if (typeof before === 'function') {\n                before(node, options);\n            }\n            // Call getNode recursively on the children. Calculate the height of the\n            // node, and the number of descendants.\n            var children = ((mapOfIdToChildren[id] || [])).map(function (child) {\n                var node = getNode(child.id, id, (level + 1), child, mapOfIdToChildren, options), childStart = child.start || NaN, childEnd = (child.milestone === true ?\n                    childStart :\n                    child.end ||\n                        NaN);\n                // Start should be the lowest child.start.\n                start = ((!isNumber(start) || childStart < start) ?\n                    childStart :\n                    start);\n                // End should be the largest child.end.\n                // If child is milestone, then use start as end.\n                end = ((!isNumber(end) || childEnd > end) ?\n                    childEnd :\n                    end);\n                descendants = descendants + 1 + node.descendants;\n                height = Math.max(node.height + 1, height);\n                return node;\n            });\n            // Calculate start and end for point if it is not already explicitly set.\n            if (data) {\n                data.start = pick(data.start, start);\n                data.end = pick(data.end, end);\n            }\n            extend(node, {\n                children: children,\n                descendants: descendants,\n                height: height\n            });\n            // Allow custom logic after the children has been created.\n            if (typeof after === 'function') {\n                after(node, options);\n            }\n            return node;\n        }\n        /** @private */\n        function getTree(data, options) {\n            return getNode('', null, 1, null, getListOfParents(data), options);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Tree = {\n            getNode: getNode,\n            getTree: getTree\n        };\n\n        return Tree;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridTick.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, removeEvent = U.removeEvent, isObject = U.isObject, isNumber = U.isNumber, pick = U.pick, wrap = U.wrap;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onTickInit() {\n            var tick = this;\n            if (!tick.treeGrid) {\n                tick.treeGrid = new TreeGridTickAdditions(tick);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHover(label) {\n            label.addClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({\n                    textDecoration: 'underline'\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHoverExit(label, options) {\n            var css = isObject(options.style) ? options.style : {};\n            label.removeClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({ textDecoration: (css.textDecoration || 'none') });\n            }\n        }\n        /**\n         * @private\n         */\n        function renderLabelIcon(tick, params) {\n            var _a;\n            var treeGrid = tick.treeGrid, isNew = !treeGrid.labelIcon, renderer = params.renderer, labelBox = params.xy, options = params.options, width = options.width || 0, height = options.height || 0, padding = ((_a = options.padding) !== null && _a !== void 0 ? _a : tick.axis.linkedParent) ? 0 : 5, iconCenter = {\n                x: labelBox.x - (width / 2) - padding,\n                y: labelBox.y - (height / 2)\n            }, rotation = params.collapsed ? 90 : 180, shouldRender = params.show && isNumber(iconCenter.y);\n            var icon = treeGrid.labelIcon;\n            if (!icon) {\n                treeGrid.labelIcon = icon = renderer\n                    .path(renderer.symbols[options.type](options.x || 0, options.y || 0, width, height))\n                    .addClass('highcharts-label-icon')\n                    .add(params.group);\n            }\n            // Set the new position, and show or hide\n            icon[shouldRender ? 'show' : 'hide'](); // #14904, #1338\n            // Presentational attributes\n            if (!renderer.styledMode) {\n                icon\n                    .attr({\n                    cursor: 'pointer',\n                    'fill': pick(params.color, \"#666666\" /* Palette.neutralColor60 */),\n                    'stroke-width': 1,\n                    stroke: options.lineColor,\n                    strokeWidth: options.lineWidth || 0\n                });\n            }\n            // Update the icon positions\n            icon[isNew ? 'attr' : 'animate']({\n                translateX: iconCenter.x,\n                translateY: iconCenter.y,\n                rotation: rotation\n            });\n        }\n        /**\n         * @private\n         */\n        function wrapGetLabelPosition(proceed, x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n            var tick = this, lbOptions = pick(tick.options && tick.options.labels, labelOptions), pos = tick.pos, axis = tick.axis, isTreeGrid = axis.type === 'treegrid', result = proceed.apply(tick, [x, y, label, horiz, lbOptions, tickmarkOffset, index, step]);\n            var mapOfPosToGridNode, node, level;\n            if (isTreeGrid) {\n                var _a = (lbOptions && isObject(lbOptions.symbol, true) ?\n                    lbOptions.symbol :\n                    {}), _b = _a.width, width = _b === void 0 ? 0 : _b, _c = _a.padding, padding = _c === void 0 ? axis.linkedParent ? 0 : 5 : _c, indentation = (lbOptions && isNumber(lbOptions.indentation) ?\n                    lbOptions.indentation :\n                    0);\n                mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode;\n                node = mapOfPosToGridNode && mapOfPosToGridNode[pos];\n                level = (node && node.depth) || 1;\n                result.x += (\n                // Add space for symbols\n                (width + (padding * 2)) +\n                    // Apply indentation\n                    ((level - 1) * indentation));\n            }\n            return result;\n        }\n        /**\n         * @private\n         */\n        function wrapRenderLabel(proceed) {\n            var tick = this, pos = tick.pos, axis = tick.axis, label = tick.label, tickGrid = tick.treeGrid, tickOptions = tick.options, icon = tickGrid === null || tickGrid === void 0 ? void 0 : tickGrid.labelIcon, labelElement = label === null || label === void 0 ? void 0 : label.element, axisGrid = axis.treeGrid, axisOptions = axis.options, chart = axis.chart, tickPositions = axis.tickPositions, mapOfPosToGridNode = axisGrid.mapOfPosToGridNode, labelOptions = pick(tickOptions === null || tickOptions === void 0 ? void 0 : tickOptions.labels, axisOptions === null || axisOptions === void 0 ? void 0 : axisOptions.labels), symbolOptions = (labelOptions && isObject(labelOptions.symbol, true) ?\n                labelOptions.symbol :\n                {}), node = mapOfPosToGridNode && mapOfPosToGridNode[pos], _a = node || {}, descendants = _a.descendants, depth = _a.depth, hasDescendants = node && descendants && descendants > 0, level = depth, isTreeGridElement = (axis.type === 'treegrid') && labelElement, shouldRender = tickPositions.indexOf(pos) > -1, prefixClassName = 'highcharts-treegrid-node-', prefixLevelClass = prefixClassName + 'level-', styledMode = chart.styledMode;\n            var collapsed, addClassName, removeClassName;\n            if (isTreeGridElement && node) {\n                // Add class name for hierarchical styling.\n                label\n                    .removeClass(new RegExp(prefixLevelClass + '.*'))\n                    .addClass(prefixLevelClass + level);\n            }\n            proceed.apply(tick, Array.prototype.slice.call(arguments, 1));\n            if (isTreeGridElement && hasDescendants) {\n                collapsed = axisGrid.isCollapsed(node);\n                renderLabelIcon(tick, {\n                    color: (!styledMode &&\n                        label.styles.color ||\n                        ''),\n                    collapsed: collapsed,\n                    group: label.parentGroup,\n                    options: symbolOptions,\n                    renderer: label.renderer,\n                    show: shouldRender,\n                    xy: label.xy\n                });\n                // Add class name for the node.\n                addClassName = prefixClassName +\n                    (collapsed ? 'collapsed' : 'expanded');\n                removeClassName = prefixClassName +\n                    (collapsed ? 'expanded' : 'collapsed');\n                label\n                    .addClass(addClassName)\n                    .removeClass(removeClassName);\n                if (!styledMode) {\n                    label.css({\n                        cursor: 'pointer'\n                    });\n                }\n                // Add events to both label text and icon\n                [label, icon].forEach(function (object) {\n                    if (object && !object.attachedTreeGridEvents) {\n                        // On hover\n                        addEvent(object.element, 'mouseover', function () {\n                            onTickHover(label);\n                        });\n                        // On hover out\n                        addEvent(object.element, 'mouseout', function () {\n                            onTickHoverExit(label, labelOptions);\n                        });\n                        addEvent(object.element, 'click', function () {\n                            tickGrid.toggleCollapse();\n                        });\n                        object.attachedTreeGridEvents = true;\n                    }\n                });\n            }\n            else if (icon) {\n                removeEvent(labelElement);\n                label === null || label === void 0 ? void 0 : label.css({ cursor: 'default' });\n                icon.destroy();\n            }\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridTickAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridTickAdditions(tick) {\n                this.tick = tick;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridTickAdditions.compose = function (TickClass) {\n                var tickProto = TickClass.prototype;\n                if (!tickProto.toggleCollapse) {\n                    addEvent(TickClass, 'init', onTickInit);\n                    wrap(tickProto, 'getLabelPosition', wrapGetLabelPosition);\n                    wrap(tickProto, 'renderLabel', wrapRenderLabel);\n                    // Backwards compatibility\n                    tickProto.collapse = function (redraw) {\n                        this.treeGrid.collapse(redraw);\n                    };\n                    tickProto.expand = function (redraw) {\n                        this.treeGrid.expand(redraw);\n                    };\n                    tickProto.toggleCollapse = function (redraw) {\n                        this.treeGrid.toggleCollapse(redraw);\n                    };\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Collapse the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#collapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.collapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.collapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Destroy remaining labelIcon if exist.\n             *\n             * @private\n             * @function Highcharts.Tick#destroy\n             */\n            TreeGridTickAdditions.prototype.destroy = function () {\n                if (this.labelIcon) {\n                    this.labelIcon.destroy();\n                }\n            };\n            /**\n             * Expand the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#expand\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.expand = function (redraw) {\n                var _a = this.tick, pos = _a.pos, axis = _a.axis, treeGrid = axis.treeGrid, brokenAxis = axis.brokenAxis, posMappedNodes = treeGrid.mapOfPosToGridNode;\n                if (brokenAxis && posMappedNodes) {\n                    var node = posMappedNodes[pos], breaks = treeGrid.expand(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Toggle the collapse/expand state of the grid cell. Used when axis is\n             * of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#toggleCollapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.toggleCollapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.toggleCollapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            return TreeGridTickAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridTickAdditions;\n    });\n    _registerModule(_modules, 'Series/TreeUtilities.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2014-2024 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard / Oystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var extend = U.extend, isArray = U.isArray, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick, relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getColor(node, options) {\n            var index = options.index, mapOptionsToLevel = options.mapOptionsToLevel, parentColor = options.parentColor, parentColorIndex = options.parentColorIndex, series = options.series, colors = options.colors, siblings = options.siblings, points = series.points, chartOptionsChart = series.chart.options.chart;\n            var getColorByPoint, point, level, colorByPoint, colorIndexByPoint, color, colorIndex;\n            /**\n             * @private\n             */\n            var variateColor = function (color) {\n                var colorVariation = level && level.colorVariation;\n                if (colorVariation &&\n                    colorVariation.key === 'brightness' &&\n                    index &&\n                    siblings) {\n                    return Color.parse(color).brighten(colorVariation.to * (index / siblings)).get();\n                }\n                return color;\n            };\n            if (node) {\n                point = points[node.i];\n                level = mapOptionsToLevel[node.level] || {};\n                getColorByPoint = point && level.colorByPoint;\n                if (getColorByPoint) {\n                    colorIndexByPoint = point.index % (colors ?\n                        colors.length :\n                        chartOptionsChart.colorCount);\n                    colorByPoint = colors && colors[colorIndexByPoint];\n                }\n                // Select either point color, level color or inherited color.\n                if (!series.chart.styledMode) {\n                    color = pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n                }\n                colorIndex = pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n            }\n            return {\n                color: color,\n                colorIndex: colorIndex\n            };\n        }\n        /**\n         * Creates a map from level number to its given options.\n         *\n         * @private\n         *\n         * @param {Object} params\n         * Object containing parameters.\n         * - `defaults` Object containing default options. The default options are\n         *   merged with the userOptions to get the final options for a specific\n         *   level.\n         * - `from` The lowest level number.\n         * - `levels` User options from series.levels.\n         * - `to` The highest level number.\n         *\n         * @return {Highcharts.Dictionary<object>|null}\n         * Returns a map from level number to its given options.\n         */\n        function getLevelOptions(params) {\n            var result = {};\n            var defaults, converted, i, from, to, levels;\n            if (isObject(params)) {\n                from = isNumber(params.from) ? params.from : 1;\n                levels = params.levels;\n                converted = {};\n                defaults = isObject(params.defaults) ? params.defaults : {};\n                if (isArray(levels)) {\n                    converted = levels.reduce(function (obj, item) {\n                        var level, levelIsConstant, options;\n                        if (isObject(item) && isNumber(item.level)) {\n                            options = merge({}, item);\n                            levelIsConstant = pick(options.levelIsConstant, defaults.levelIsConstant);\n                            // Delete redundant properties.\n                            delete options.levelIsConstant;\n                            delete options.level;\n                            // Calculate which level these options apply to.\n                            level = item.level + (levelIsConstant ? 0 : from - 1);\n                            if (isObject(obj[level])) {\n                                merge(true, obj[level], options); // #16329\n                            }\n                            else {\n                                obj[level] = options;\n                            }\n                        }\n                        return obj;\n                    }, {});\n                }\n                to = isNumber(params.to) ? params.to : 1;\n                for (i = 0; i <= to; i++) {\n                    result[i] = merge({}, defaults, isObject(converted[i]) ? converted[i] : {});\n                }\n            }\n            return result;\n        }\n        /**\n         * @private\n         * @todo Combine buildTree and buildNode with setTreeValues\n         * @todo Remove logic from Treemap and make it utilize this mixin.\n         */\n        function setTreeValues(tree, options) {\n            var before = options.before, idRoot = options.idRoot, mapIdToNode = options.mapIdToNode, nodeRoot = mapIdToNode[idRoot], levelIsConstant = (options.levelIsConstant !== false), points = options.points, point = points[tree.i], optionsPoint = point && point.options || {}, children = [];\n            var childrenTotal = 0;\n            tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n            tree.name = pick(point && point.name, '');\n            tree.visible = (idRoot === tree.id ||\n                options.visible === true);\n            if (typeof before === 'function') {\n                tree = before(tree, options);\n            }\n            // First give the children some values\n            tree.children.forEach(function (child, i) {\n                var newOptions = extend({}, options);\n                extend(newOptions, {\n                    index: i,\n                    siblings: tree.children.length,\n                    visible: tree.visible\n                });\n                child = setTreeValues(child, newOptions);\n                children.push(child);\n                if (child.visible) {\n                    childrenTotal += child.val;\n                }\n            });\n            // Set the values\n            var value = pick(optionsPoint.value, childrenTotal);\n            tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n            tree.children = children;\n            tree.childrenTotal = childrenTotal;\n            tree.isLeaf = tree.visible && !childrenTotal;\n            tree.val = value;\n            return tree;\n        }\n        /**\n         * Update the rootId property on the series. Also makes sure that it is\n         * accessible to exporting.\n         *\n         * @private\n         *\n         * @param {Object} series\n         * The series to operate on.\n         *\n         * @return {string}\n         * Returns the resulting rootId after update.\n         */\n        function updateRootId(series) {\n            var rootId, options;\n            if (isObject(series)) {\n                // Get the series options.\n                options = isObject(series.options) ? series.options : {};\n                // Calculate the rootId.\n                rootId = pick(series.rootNode, options.rootId, '');\n                // Set rootId on series.userOptions to pick it up in exporting.\n                if (isObject(series.userOptions)) {\n                    series.userOptions.rootId = rootId;\n                }\n                // Set rootId on series to pick it up on next update.\n                series.rootNode = rootId;\n            }\n            return rootId;\n        }\n        /**\n         * Get the node width, which relies on the plot width and the nodeDistance\n         * option.\n         *\n         * @private\n         */\n        function getNodeWidth(series, columnCount) {\n            var chart = series.chart, options = series.options, _a = options.nodeDistance, nodeDistance = _a === void 0 ? 0 : _a, _b = options.nodeWidth, nodeWidth = _b === void 0 ? 0 : _b, _c = chart.plotSizeX, plotSizeX = _c === void 0 ? 1 : _c;\n            // Node width auto means they are evenly distributed along the width of\n            // the plot area\n            if (nodeWidth === 'auto') {\n                if (typeof nodeDistance === 'string' && /%$/.test(nodeDistance)) {\n                    var fraction = parseFloat(nodeDistance) / 100, total = columnCount + fraction * (columnCount - 1);\n                    return plotSizeX / total;\n                }\n                var nDistance = Number(nodeDistance);\n                return ((plotSizeX + nDistance) /\n                    (columnCount || 1)) - nDistance;\n            }\n            return relativeLength(nodeWidth, plotSizeX);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var TreeUtilities = {\n            getColor: getColor,\n            getLevelOptions: getLevelOptions,\n            getNodeWidth: getNodeWidth,\n            setTreeValues: setTreeValues,\n            updateRootId: updateRootId\n        };\n\n        return TreeUtilities;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridAxis.js', [_modules['Core/Axis/BrokenAxis.js'], _modules['Core/Axis/GridAxis.js'], _modules['Gantt/Tree.js'], _modules['Core/Axis/TreeGrid/TreeGridTick.js'], _modules['Series/TreeUtilities.js'], _modules['Core/Utilities.js']], function (BrokenAxis, GridAxis, Tree, TreeGridTick, TU, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getLevelOptions = TU.getLevelOptions;\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isObject = U.isObject, isString = U.isString, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, wrap = U.wrap;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var TickConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function getBreakFromNode(node, max) {\n            var to = node.collapseEnd || 0;\n            var from = node.collapseStart || 0;\n            // In broken-axis, the axis.max is minimized until it is not within a\n            // break. Therefore, if break.to is larger than axis.max, the axis.to\n            // should not add the 0.5 axis.tickMarkOffset, to avoid adding a break\n            // larger than axis.max.\n            // TODO consider simplifying broken-axis and this might solve itself\n            if (to >= max) {\n                from -= 0.5;\n            }\n            return {\n                from: from,\n                to: to,\n                showPoints: false\n            };\n        }\n        /**\n         * Creates a tree structure of the data, and the treegrid. Calculates\n         * categories, and y-values of points based on the tree.\n         *\n         * @private\n         * @function getTreeGridFromData\n         *\n         * @param {Array<Highcharts.GanttPointOptions>} data\n         * All the data points to display in the axis.\n         *\n         * @param {boolean} uniqueNames\n         * Whether or not the data node with the same name should share grid cell. If\n         * true they do share cell. False by default.\n         *\n         * @param {number} numberOfSeries\n         *\n         * @return {Object}\n         * Returns an object containing categories, mapOfIdToNode,\n         * mapOfPosToGridNode, and tree.\n         *\n         * @todo There should be only one point per line.\n         * @todo It should be optional to have one category per point, or merge\n         *       cells\n         * @todo Add unit-tests.\n         */\n        function getTreeGridFromData(data, uniqueNames, numberOfSeries) {\n            var categories = [], collapsedNodes = [], mapOfIdToNode = {}, uniqueNamesEnabled = uniqueNames || false;\n            var mapOfPosToGridNode = {}, posIterator = -1;\n            // Build the tree from the series data.\n            var treeParams = {\n                // After the children has been created.\n                after: function (node) {\n                    var gridNode = mapOfPosToGridNode[node.pos];\n                    var height = 0, descendants = 0;\n                    gridNode.children.forEach(function (child) {\n                        descendants += (child.descendants || 0) + 1;\n                        height = Math.max((child.height || 0) + 1, height);\n                    });\n                    gridNode.descendants = descendants;\n                    gridNode.height = height;\n                    if (gridNode.collapsed) {\n                        collapsedNodes.push(gridNode);\n                    }\n                },\n                // Before the children has been created.\n                before: function (node) {\n                    var data = isObject(node.data, true) ?\n                        node.data :\n                        {}, name = isString(data.name) ? data.name : '', parentNode = mapOfIdToNode[node.parent], parentGridNode = (isObject(parentNode, true) ?\n                        mapOfPosToGridNode[parentNode.pos] :\n                        null), hasSameName = function (x) {\n                        return x.name === name;\n                    };\n                    var gridNode, pos;\n                    // If not unique names, look for sibling node with the same name\n                    if (uniqueNamesEnabled &&\n                        isObject(parentGridNode, true) &&\n                        !!(gridNode = find(parentGridNode.children, hasSameName))) {\n                        // If there is a gridNode with the same name, reuse position\n                        pos = gridNode.pos;\n                        // Add data node to list of nodes in the grid node.\n                        gridNode.nodes.push(node);\n                    }\n                    else {\n                        // If it is a new grid node, increment position.\n                        pos = posIterator++;\n                    }\n                    // Add new grid node to map.\n                    if (!mapOfPosToGridNode[pos]) {\n                        mapOfPosToGridNode[pos] = gridNode = {\n                            depth: parentGridNode ? parentGridNode.depth + 1 : 0,\n                            name: name,\n                            id: data.id,\n                            nodes: [node],\n                            children: [],\n                            pos: pos\n                        };\n                        // If not root, then add name to categories.\n                        if (pos !== -1) {\n                            categories.push(name);\n                        }\n                        // Add name to list of children.\n                        if (isObject(parentGridNode, true)) {\n                            parentGridNode.children.push(gridNode);\n                        }\n                    }\n                    // Add data node to map\n                    if (isString(node.id)) {\n                        mapOfIdToNode[node.id] = node;\n                    }\n                    // If one of the points are collapsed, then start the grid node\n                    // in collapsed state.\n                    if (gridNode &&\n                        data.collapsed === true) {\n                        gridNode.collapsed = true;\n                    }\n                    // Assign pos to data node\n                    node.pos = pos;\n                }\n            };\n            var updateYValuesAndTickPos = function (map, numberOfSeries) {\n                var setValues = function (gridNode, start, result) {\n                    var nodes = gridNode.nodes, padding = 0.5;\n                    var end = start + (start === -1 ? 0 : numberOfSeries - 1);\n                    var diff = (end - start) / 2, pos = start + diff;\n                    nodes.forEach(function (node) {\n                        var data = node.data;\n                        if (isObject(data, true)) {\n                            // Update point\n                            data.y = start + (data.seriesIndex || 0);\n                            // Remove the property once used\n                            delete data.seriesIndex;\n                        }\n                        node.pos = pos;\n                    });\n                    result[pos] = gridNode;\n                    gridNode.pos = pos;\n                    gridNode.tickmarkOffset = diff + padding;\n                    gridNode.collapseStart = end + padding;\n                    gridNode.children.forEach(function (child) {\n                        setValues(child, end + 1, result);\n                        end = (child.collapseEnd || 0) - padding;\n                    });\n                    // Set collapseEnd to the end of the last child node.\n                    gridNode.collapseEnd = end + padding;\n                    return result;\n                };\n                return setValues(map['-1'], -1, {});\n            };\n            // Create tree from data\n            var tree = Tree.getTree(data, treeParams);\n            // Update y values of data, and set calculate tick positions.\n            mapOfPosToGridNode = updateYValuesAndTickPos(mapOfPosToGridNode, numberOfSeries);\n            // Return the resulting data.\n            return {\n                categories: categories,\n                mapOfIdToNode: mapOfIdToNode,\n                mapOfPosToGridNode: mapOfPosToGridNode,\n                collapsedNodes: collapsedNodes,\n                tree: tree\n            };\n        }\n        /**\n         * Builds the tree of categories and calculates its positions.\n         * @private\n         * @param {Object} e Event object\n         * @param {Object} e.target The chart instance which the event was fired on.\n         * @param {object[]} e.target.axes The axes of the chart.\n         */\n        function onBeforeRender(e) {\n            var chart = e.target, axes = chart.axes;\n            axes.filter(function (axis) { return axis.type === 'treegrid'; }).forEach(function (axis) {\n                var options = axis.options || {}, labelOptions = options.labels, uniqueNames = axis.uniqueNames, max = options.max, \n                // Check whether any of series is rendering for the first\n                // time, visibility has changed, or its data is dirty, and\n                // only then update. #10570, #10580. Also check if\n                // mapOfPosToGridNode exists. #10887\n                isDirty = (!axis.treeGrid.mapOfPosToGridNode ||\n                    axis.series.some(function (series) {\n                        return !series.hasRendered ||\n                            series.isDirtyData ||\n                            series.isDirty;\n                    }));\n                var numberOfSeries = 0, data, treeGrid;\n                if (isDirty) {\n                    // Concatenate data from all series assigned to this axis.\n                    data = axis.series.reduce(function (arr, s) {\n                        if (s.visible) {\n                            // Push all data to array\n                            (s.options.data || []).forEach(function (data) {\n                                // For using keys - rebuild the data structure\n                                if (s.options.keys && s.options.keys.length) {\n                                    data = s.pointClass.prototype\n                                        .optionsToObject\n                                        .call({ series: s }, data);\n                                    s.pointClass.setGanttPointAliases(data);\n                                }\n                                if (isObject(data, true)) {\n                                    // Set series index on data. Removed again\n                                    // after use.\n                                    data.seriesIndex = (numberOfSeries);\n                                    arr.push(data);\n                                }\n                            });\n                            // Increment series index\n                            if (uniqueNames === true) {\n                                numberOfSeries++;\n                            }\n                        }\n                        return arr;\n                    }, []);\n                    // If max is higher than set data - add a\n                    // dummy data to render categories #10779\n                    if (max && data.length < max) {\n                        for (var i = data.length; i <= max; i++) {\n                            data.push({\n                                // Use the zero-width character\n                                // to avoid conflict with uniqueNames\n                                name: i + '\\u200B'\n                            });\n                        }\n                    }\n                    // `setScale` is fired after all the series is initialized,\n                    // which is an ideal time to update the axis.categories.\n                    treeGrid = getTreeGridFromData(data, uniqueNames || false, (uniqueNames === true) ? numberOfSeries : 1);\n                    // Assign values to the axis.\n                    axis.categories = treeGrid.categories;\n                    axis.treeGrid.mapOfPosToGridNode = (treeGrid.mapOfPosToGridNode);\n                    axis.hasNames = true;\n                    axis.treeGrid.tree = treeGrid.tree;\n                    // Update yData now that we have calculated the y values\n                    axis.series.forEach(function (series) {\n                        var axisData = (series.options.data || []).map(function (d) {\n                            if (isArray(d) &&\n                                series.options.keys &&\n                                series.options.keys.length) {\n                                // Get the axisData from the data array used to\n                                // build the treeGrid where has been modified\n                                data.forEach(function (point) {\n                                    if (d.indexOf(point.x) >= 0 &&\n                                        d.indexOf(point.x2) >= 0) {\n                                        d = point;\n                                    }\n                                });\n                            }\n                            return isObject(d, true) ? merge(d) : d;\n                        });\n                        // Avoid destroying points when series is not visible\n                        if (series.visible) {\n                            series.setData(axisData, false);\n                        }\n                    });\n                    // Calculate the label options for each level in the tree.\n                    axis.treeGrid.mapOptionsToLevel =\n                        getLevelOptions({\n                            defaults: labelOptions,\n                            from: 1,\n                            levels: labelOptions && labelOptions.levels,\n                            to: axis.treeGrid.tree && axis.treeGrid.tree.height\n                        });\n                    // Setting initial collapsed nodes\n                    if (e.type === 'beforeRender') {\n                        axis.treeGrid.collapsedNodes = treeGrid.collapsedNodes;\n                    }\n                }\n            });\n        }\n        /**\n         * Generates a tick for initial positioning.\n         *\n         * @private\n         * @function Highcharts.GridAxis#generateTick\n         *\n         * @param {Function} proceed\n         * The original generateTick function.\n         *\n         * @param {number} pos\n         * The tick position in axis values.\n         */\n        function wrapGenerateTick(proceed, pos) {\n            var axis = this, mapOptionsToLevel = axis.treeGrid.mapOptionsToLevel || {}, isTreeGrid = axis.type === 'treegrid', ticks = axis.ticks;\n            var tick = ticks[pos], levelOptions, options, gridNode;\n            if (isTreeGrid &&\n                axis.treeGrid.mapOfPosToGridNode) {\n                gridNode = axis.treeGrid.mapOfPosToGridNode[pos];\n                levelOptions = mapOptionsToLevel[gridNode.depth];\n                if (levelOptions) {\n                    options = {\n                        labels: levelOptions\n                    };\n                }\n                if (!tick &&\n                    TickConstructor) {\n                    ticks[pos] = tick =\n                        new TickConstructor(axis, pos, void 0, void 0, {\n                            category: gridNode.name,\n                            tickmarkOffset: gridNode.tickmarkOffset,\n                            options: options\n                        });\n                }\n                else {\n                    // Update labels depending on tick interval\n                    tick.parameters.category = gridNode.name;\n                    tick.options = options;\n                    tick.addLabel();\n                }\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapInit(proceed, chart, userOptions, coll) {\n            var axis = this, isTreeGrid = userOptions.type === 'treegrid';\n            if (!axis.treeGrid) {\n                axis.treeGrid = new TreeGridAxisAdditions(axis);\n            }\n            // Set default and forced options for TreeGrid\n            if (isTreeGrid) {\n                // Add event for updating the categories of a treegrid.\n                // NOTE Preferably these events should be set on the axis.\n                addEvent(chart, 'beforeRender', onBeforeRender);\n                addEvent(chart, 'beforeRedraw', onBeforeRender);\n                // Add new collapsed nodes on addseries\n                addEvent(chart, 'addSeries', function (e) {\n                    if (e.options.data) {\n                        var treeGrid = getTreeGridFromData(e.options.data, userOptions.uniqueNames || false, 1);\n                        axis.treeGrid.collapsedNodes = (axis.treeGrid.collapsedNodes || []).concat(treeGrid.collapsedNodes);\n                    }\n                });\n                // Collapse all nodes in axis.treegrid.collapsednodes\n                // where collapsed equals true.\n                addEvent(axis, 'foundExtremes', function () {\n                    if (axis.treeGrid.collapsedNodes) {\n                        axis.treeGrid.collapsedNodes.forEach(function (node) {\n                            var breaks = axis.treeGrid.collapse(node);\n                            if (axis.brokenAxis) {\n                                axis.brokenAxis.setBreaks(breaks, false);\n                                // Remove the node from the axis collapsedNodes\n                                if (axis.treeGrid.collapsedNodes) {\n                                    axis.treeGrid.collapsedNodes = axis.treeGrid\n                                        .collapsedNodes\n                                        .filter(function (n) { return ((node.collapseStart !==\n                                        n.collapseStart) ||\n                                        node.collapseEnd !== n.collapseEnd); });\n                                }\n                            }\n                        });\n                    }\n                });\n                // If staticScale is not defined on the yAxis\n                // and chart height is set, set axis.isDirty\n                // to ensure collapsing works (#12012)\n                addEvent(axis, 'afterBreaks', function () {\n                    if (axis.coll === 'yAxis' &&\n                        !axis.staticScale &&\n                        axis.chart.options.chart.height) {\n                        axis.isDirty = true;\n                    }\n                });\n                userOptions = merge({\n                    // Default options\n                    grid: {\n                        enabled: true\n                    },\n                    // TODO: add support for align in treegrid.\n                    labels: {\n                        align: 'left',\n                        /**\n                        * Set options on specific levels in a tree grid axis. Takes\n                        * precedence over labels options.\n                        *\n                        * @sample {gantt} gantt/treegrid-axis/labels-levels\n                        *         Levels on TreeGrid Labels\n                        *\n                        * @type      {Array<*>}\n                        * @product   gantt\n                        * @apioption yAxis.labels.levels\n                        *\n                        * @private\n                        */\n                        levels: [{\n                                /**\n                                * Specify the level which the options within this object\n                                * applies to.\n                                *\n                                * @type      {number}\n                                * @product   gantt\n                                * @apioption yAxis.labels.levels.level\n                                *\n                                * @private\n                                */\n                                level: void 0\n                            }, {\n                                level: 1,\n                                /**\n                                 * @type      {Highcharts.CSSObject}\n                                 * @product   gantt\n                                 * @apioption yAxis.labels.levels.style\n                                 *\n                                 * @private\n                                 */\n                                style: {\n                                    /** @ignore-option */\n                                    fontWeight: 'bold'\n                                }\n                            }],\n                        /**\n                         * The symbol for the collapse and expand icon in a\n                         * treegrid.\n                         *\n                         * @product      gantt\n                         * @optionparent yAxis.labels.symbol\n                         *\n                         * @private\n                         */\n                        symbol: {\n                            /**\n                             * The symbol type. Points to a definition function in\n                             * the `Highcharts.Renderer.symbols` collection.\n                             *\n                             * @type {Highcharts.SymbolKeyValue}\n                             *\n                             * @private\n                             */\n                            type: 'triangle',\n                            x: -5,\n                            y: -5,\n                            height: 10,\n                            width: 10\n                        }\n                    },\n                    uniqueNames: false\n                }, userOptions, {\n                    // Forced options\n                    reversed: true\n                });\n            }\n            // Now apply the original function with the original arguments, which are\n            // sliced off this function's arguments\n            proceed.apply(axis, [chart, userOptions, coll]);\n            if (isTreeGrid) {\n                axis.hasNames = true;\n                axis.options.showLastLabel = true;\n            }\n        }\n        /**\n         * Set the tick positions, tickInterval, axis min and max.\n         *\n         * @private\n         * @function Highcharts.GridAxis#setTickInterval\n         *\n         * @param {Function} proceed\n         * The original setTickInterval function.\n         */\n        function wrapSetTickInterval(proceed) {\n            var _a;\n            var axis = this, options = axis.options, linkedParent = typeof options.linkedTo === 'number' ?\n                (_a = this.chart[axis.coll]) === null || _a === void 0 ? void 0 : _a[options.linkedTo] :\n                void 0, isTreeGrid = axis.type === 'treegrid';\n            if (isTreeGrid) {\n                axis.min = pick(axis.userMin, options.min, axis.dataMin);\n                axis.max = pick(axis.userMax, options.max, axis.dataMax);\n                fireEvent(axis, 'foundExtremes');\n                // `setAxisTranslation` modifies the min and max according to axis\n                // breaks.\n                axis.setAxisTranslation();\n                axis.tickInterval = 1;\n                axis.tickmarkOffset = 0.5;\n                axis.tickPositions = axis.treeGrid.mapOfPosToGridNode ?\n                    axis.treeGrid.getTickPositions() :\n                    [];\n                if (linkedParent) {\n                    var linkedParentExtremes = linkedParent.getExtremes();\n                    axis.min = pick(linkedParentExtremes.min, linkedParentExtremes.dataMin);\n                    axis.max = pick(linkedParentExtremes.max, linkedParentExtremes.dataMax);\n                    axis.tickPositions = linkedParent.tickPositions;\n                }\n                axis.linkedParent = linkedParent;\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /**\n         * Wrap axis redraw to remove TreeGrid events from ticks\n         *\n         * @private\n         * @function Highcharts.GridAxis#redraw\n         *\n         * @param {Function} proceed\n         * The original setTickInterval function.\n         */\n        function wrapRedraw(proceed) {\n            var axis = this, isTreeGrid = this.type === 'treegrid';\n            if (isTreeGrid && axis.visible) {\n                axis.tickPositions.forEach(function (pos) {\n                    var tick = axis.ticks[pos];\n                    if (tick.label && tick.label.attachedTreeGridEvents) {\n                        removeEvent(tick.label.element);\n                        tick.label.attachedTreeGridEvents = false;\n                    }\n                });\n            }\n            proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridAxisAdditions.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n                if (!AxisClass.keepProps.includes('treeGrid')) {\n                    var axisProps = AxisClass.prototype;\n                    AxisClass.keepProps.push('treeGrid');\n                    wrap(axisProps, 'generateTick', wrapGenerateTick);\n                    wrap(axisProps, 'init', wrapInit);\n                    wrap(axisProps, 'setTickInterval', wrapSetTickInterval);\n                    wrap(axisProps, 'redraw', wrapRedraw);\n                    // Make utility functions available for testing.\n                    axisProps.utils = {\n                        getNode: Tree.getNode\n                    };\n                    if (!TickConstructor) {\n                        TickConstructor = TickClass;\n                    }\n                }\n                GridAxis.compose(AxisClass, ChartClass, TickClass);\n                BrokenAxis.compose(AxisClass, SeriesClass);\n                TreeGridTick.compose(TickClass);\n                return AxisClass;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set the collapse status.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             */\n            TreeGridAxisAdditions.prototype.setCollapsedStatus = function (node) {\n                var axis = this.axis, chart = axis.chart;\n                axis.series.forEach(function (series) {\n                    var data = series.options.data;\n                    if (node.id && data) {\n                        var point = chart.get(node.id), dataPoint = data[series.data.indexOf(point)];\n                        if (point && dataPoint) {\n                            point.collapsed = node.collapsed;\n                            dataPoint.collapsed = node.collapsed;\n                        }\n                    }\n                });\n            };\n            /**\n             * Calculates the new axis breaks to collapse a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.collapse = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                breaks.push(obj);\n                // Change the collapsed flag #13838\n                node.collapsed = true;\n                axis.treeGrid.setCollapsedStatus(node);\n                return breaks;\n            };\n            /**\n             * Calculates the new axis breaks to expand a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to expand.\n             *\n             * @param {number} pos\n             * The tick position to expand.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.expand = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                // Change the collapsed flag #13838\n                node.collapsed = false;\n                axis.treeGrid.setCollapsedStatus(node);\n                // Remove the break from the axis breaks array.\n                return breaks.reduce(function (arr, b) {\n                    if (b.to !== obj.to || b.from !== obj.from) {\n                        arr.push(b);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Creates a list of positions for the ticks on the axis. Filters out\n             * positions that are outside min and max, or is inside an axis break.\n             *\n             * @private\n             *\n             * @return {Array<number>}\n             * List of positions.\n             */\n            TreeGridAxisAdditions.prototype.getTickPositions = function () {\n                var axis = this.axis, roundedMin = Math.floor(axis.min / axis.tickInterval) * axis.tickInterval, roundedMax = Math.ceil(axis.max / axis.tickInterval) * axis.tickInterval;\n                return Object.keys(axis.treeGrid.mapOfPosToGridNode || {}).reduce(function (arr, key) {\n                    var pos = +key;\n                    if (pos >= roundedMin &&\n                        pos <= roundedMax &&\n                        !(axis.brokenAxis && axis.brokenAxis.isInAnyBreak(pos))) {\n                        arr.push(pos);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Check if a node is collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Object} node\n             * The node to check if is collapsed.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {boolean}\n             * Returns true if collapsed, false if expanded.\n             */\n            TreeGridAxisAdditions.prototype.isCollapsed = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                return breaks.some(function (b) {\n                    return b.from === obj.from && b.to === obj.to;\n                });\n            };\n            /**\n             * Calculates the new axis breaks after toggling the collapse/expand\n             * state of a node. If it is collapsed it will be expanded, and if it is\n             * expanded it will be collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to toggle.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.toggleCollapse = function (node) {\n                return (this.isCollapsed(node) ?\n                    this.expand(node) :\n                    this.collapse(node));\n            };\n            return TreeGridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridAxisAdditions;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttSeries.js', [_modules['Series/Gantt/GanttPoint.js'], _modules['Series/Gantt/GanttSeriesDefaults.js'], _modules['Gantt/Pathfinder.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Extensions/StaticScale.js'], _modules['Core/Axis/TreeGrid/TreeGridAxis.js'], _modules['Core/Utilities.js']], function (GanttPoint, GanttSeriesDefaults, Pathfinder, SeriesRegistry, StaticScale, TreeGridAxis, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Series = SeriesRegistry.series, XRangeSeries = SeriesRegistry.seriesTypes.xrange;\n        var extend = U.extend, isNumber = U.isNumber, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.gantt\n         *\n         * @augments Highcharts.Series\n         */\n        var GanttSeries = /** @class */ (function (_super) {\n            __extends(GanttSeries, _super);\n            function GanttSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            GanttSeries.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n                XRangeSeries.compose(AxisClass);\n                if (!ChartClass) {\n                    return;\n                }\n                StaticScale.compose(AxisClass, ChartClass);\n                if (!SeriesClass) {\n                    return;\n                }\n                Pathfinder.compose(ChartClass, SeriesClass.prototype.pointClass);\n                if (!TickClass) {\n                    return;\n                }\n                TreeGridAxis.compose(AxisClass, ChartClass, SeriesClass, TickClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draws a single point in the series.\n             *\n             * This override draws the point as a diamond if point.options.milestone\n             * is true, and uses the original drawPoint() if it is false or not set.\n             *\n             * @requires highcharts-gantt\n             *\n             * @private\n             * @function Highcharts.seriesTypes.gantt#drawPoint\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            GanttSeries.prototype.drawPoint = function (point, verb) {\n                var series = this, seriesOpts = series.options, renderer = series.chart.renderer, shapeArgs = point.shapeArgs, plotY = point.plotY, state = point.selected && 'select', cutOff = seriesOpts.stacking && !seriesOpts.borderRadius;\n                var graphic = point.graphic, diamondShape;\n                if (point.options.milestone) {\n                    if (isNumber(plotY) &&\n                        point.y !== null &&\n                        point.visible !== false) {\n                        diamondShape = renderer.symbols.diamond(shapeArgs.x || 0, shapeArgs.y || 0, shapeArgs.width || 0, shapeArgs.height || 0);\n                        if (graphic) {\n                            graphic[verb]({\n                                d: diamondShape\n                            });\n                        }\n                        else {\n                            point.graphic = graphic = renderer.path(diamondShape)\n                                .addClass(point.getClassName(), true)\n                                .add(point.group || series.group);\n                        }\n                        // Presentational\n                        if (!series.chart.styledMode) {\n                            point.graphic\n                                .attr(series.pointAttribs(point, state))\n                                .shadow(seriesOpts.shadow, null, cutOff);\n                        }\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy(); // #1269\n                    }\n                }\n                else {\n                    _super.prototype.drawPoint.call(this, point, verb);\n                }\n            };\n            /**\n             * Handle milestones, as they have no x2.\n             * @private\n             */\n            GanttSeries.prototype.translatePoint = function (point) {\n                var shapeArgs, size;\n                _super.prototype.translatePoint.call(this, point);\n                if (point.options.milestone) {\n                    shapeArgs = point.shapeArgs;\n                    size = shapeArgs.height || 0;\n                    point.shapeArgs = {\n                        x: (shapeArgs.x || 0) - (size / 2),\n                        y: shapeArgs.y,\n                        width: size,\n                        height: size\n                    };\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            GanttSeries.defaultOptions = merge(XRangeSeries.defaultOptions, GanttSeriesDefaults);\n            return GanttSeries;\n        }(XRangeSeries));\n        extend(GanttSeries.prototype, {\n            pointArrayMap: ['start', 'end', 'y'],\n            pointClass: GanttPoint,\n            setData: Series.prototype.setData\n        });\n        SeriesRegistry.registerSeriesType('gantt', GanttSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttSeries;\n    });\n    _registerModule(_modules, 'masters/modules/gantt.src.js', [_modules['Core/Globals.js'], _modules['Extensions/ArrowSymbols.js'], _modules['Gantt/Connection.js'], _modules['Extensions/CurrentDateIndication.js'], _modules['Core/Chart/GanttChart.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Series/Gantt/GanttSeries.js']], function (Highcharts, ArrowSymbols, Connection, CurrentDateIndication, GanttChart, Navigator, RangeSelector, Scrollbar, GanttSeries) {\n\n        // Series\n        var G = Highcharts;\n        // Classes\n        G.Connection = G.Connection || Connection;\n        G.GanttChart = G.GanttChart || GanttChart;\n        G.Navigator = G.Navigator || Navigator;\n        G.RangeSelector = G.RangeSelector || RangeSelector;\n        G.Scrollbar = G.Scrollbar || Scrollbar;\n        // Functions\n        G.ganttChart = G.GanttChart.ganttChart;\n        // Compositions\n        ArrowSymbols.compose(G.SVGRenderer);\n        CurrentDateIndication.compose(G.Axis, G.PlotLineOrBand);\n        GanttSeries.compose(G.Axis, G.Chart, G.Series, G.Tick);\n        G.Navigator.compose(G.Chart, G.Axis, G.Series);\n        G.RangeSelector.compose(G.Axis, G.Chart);\n        G.Scrollbar.compose(G.Axis);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","arrow","x","y","w","h","arrowHalf","triangleLeft","triangleLeftHalf","compose","SVGRendererClass","symbols","prototype","H","U","defined","error","merge","objectEach","deg2rad","max","Math","min","Connection","from","to","options","init","fromPoint","toPoint","chart","series","pathfinder","renderPath","attribs","styledMode","anim","pathGraphic","connection","graphics","group","renderer","g","addClass","attr","zIndex","add","seriesGroup","translate","plotLeft","plotTop","opacity","d","animate","addMarker","type","markerVector","radians","rotation","box","width","height","pathVector","segment","point","anchor","getPathfinderAnchorPoint","enabled","length","getRadiansToVector","getMarkerVector","radius","rotationOriginX","rotationOriginY","symbol","colorIndex","fill","color","stroke","lineColor","lineWidth","animation","getPath","algorithm","algorithms","chartObstacles","obstacles","requiresObstacles","getChartObstacles","connectors","algorithmMargin","chartObstacleMetrics","getObstacleMetrics","startMarker","endMarker","lineObstacles","obstacleMetrics","hardBounds","xMin","xMax","plotWidth","yMin","yMax","plotHeight","obstacleOptions","margin","startDirectionX","getAlgorithmStartDirection","render","dashStyle","dashstyle","marker","ceil","pathResult","concat","destroy","val","composed","addEvent","pushUnique","wrap","defaultOptions","label","format","formatter","value","axis","time","dateFormat","style","fontSize","onAxisAfterSetOptions","cdiOptions","currentDateIndicator","plotLineOptions","Date","now","className","plotLines","push","onPlotLineOrBandRender","text","getLabelText","wrapPlotLineOrBandGetLabelText","defaultMethod","defaultLabelOptions","indexOf","call","AxisClass","PlotLineOrBandClass","Chart","D","extendStatics","GanttChart","__extends","b","Object","setPrototypeOf","__proto__","Array","p","TypeError","String","__","constructor","create","isArray","splat","_super","arguments","userOptions","callback","defaultLinkedTo","xAxisOptions","xAxis","yAxisOptions","yAxis","title","legend","navigator","isGantt","map","i","_a","_b","_c","grid","borderColor","opposite","linkedTo","staticScale","reversed","categories","ganttChart","a","c","NavigatorConstructor","isTouchDevice","pick","composedMembers","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","legendOptions","scrollbarHeight","scrollButtonSize","inverted","left","chartWidth","spacing","top","navigatorOptions","chartHeight","scrollbar","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","redraw","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","pinchType","onChartCallback","extremes","getExtremes","onChartUpdate","e","scrollbarOptions","ChartClass","NavigatorClass","chartProto","callbacks","correctFloat","isNumber","onAxisInit","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","isXAxis","trigger","range","previousZoom","preventDefault","keepProps","includes","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","horiz","newMax","Color","SeriesRegistry","parse","seriesTypes","maskInside","handles","borderRadius","backgroundColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","compare","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","lastAnchor","units","dataLabels","id","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","textOutline","crosshair","startOnTick","endOnTick","minPadding","maxPadding","tickWidth","rect","__spreadArray","pack","ar","l","slice","relativeLength","_x","_y","halfWidth","r","markerPosition","setFixedRange","dataMax","dataMin","fixedRange","NavigatorDefaults","NavigatorSymbols","RendererRegistry","StockUtilities","setOptions","getRendererType","extend","onSeriesAfterUpdate","isInternal","SeriesClass","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","index","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","shouldUpdateExtremes","DOMType","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","interval","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","crisp","destroyObjectProperties","fireEvent","removeEvent","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","swapXY","forEach","seg","temp","len","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","strokeWidth","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","update","Axis","ChartNavigatorComposition","NavigatorComposition","SVGRenderer","__assign","assign","t","s","n","clamp","erase","find","numExt","extreme","_i","numbers","filter","Navigator","isDirty","drawHandle","verb","round","parseInt","drawOutline","zoomedMin","zoomedMax","verticalMin","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions_1","height_1","width_1","symbolName","symbolUrl","isImg","symbolFn","addMouseEvents","_d","_this","invertedUpdate","setOpposite","navigatorEnabled","adaptToUpdatedData","baseSeries","updatedDataHandler","eventsToUnbind","offsets","getXAxisOffsets","navigatorWidth","scrollbarXAxis","fake","minRange","maxRange","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","container","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","keys","unbind","removeBaseSeriesEvents","modifyBaseAxisExtremes","scrollbarEnabled","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","Boolean","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","showInNavigator","baseOptions","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","padXAxis","showInLegend","stacking","states","inactive","navigatorSeries","navSeries","base","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","initSeries","setSortedData","userSeriesOptions","colors","setVisible","remove","getBaseSeriesMin","currentSeriesMin","reduce","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","count","timeName","date","basePeriod","set","getTime","MIN_VALUE","_offsetMin","createRangeSelector","deferredYTDClick","clickButton","extraTopMargin","redrawRangeSelector","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","splice","onChartGetMargins","rangeSelectorHeight","marginBottom","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","Series","OrdinalAxis","timeUnits","isString","getTimeTicks","normalizedInterval","startOfWeek","positions","closestDistance","findHigherRanks","end","segmentPositions","hasCrossedHigherRank","info","outsideMax","higherRanks","tickPixelIntervalOption","segmentStarts","start","groupPositions","lastGroupPosition","posLength","shift","unitRange","hour","length_1","translatedArr","distances","itemToRemove","translated","lastTranslated","medianDistance","distance","sort","index2val","ordinalPositions","lin2val","localMin","old","localA","transA","getExtendedPositions","pixelVal","minPixelPadding","getIndexOfPoint","mantissa","leftNeighbour","rightNeighbour","getIndexInArray","Additions","findIndexOf","percent","onAxisFoundExtremes","originalOrdinalRange","onAxisAfterSetScale","isOrdinal","onAxisInitialAxisTranslation","beforeSetTickPositions","tickInterval","postProcessTickInterval","onChartPan","originalEvent","panning","runBase","mouseDownX","hoverPoints","closestPointRange","overscrollPointsRange","movedUnits","translationSlope","slope","extendedOrdinalPositions","extendedAxis","index2val_1","val2lin_1","val2lin","trimmedRange","setState","test","onSeriesUpdatedData","toIndex","ordinalIndex","ordinalLength","length_2","originalPositionsReference","diff","approximateIndexOffset","axisProto","ordinal2lin","uniqueOrdinalPositions","dist","minIndex","maxIndex","hasBreaks","brokenAxis","useOrdinal","adjustOrdinalExtremesPoints","isBoosted","distanceBetweenPoint_1","processedXData","reserveSpace","takeOrdinalPosition","unshift","pop","forceOrdinal","getOverscrollPositions","groupIntervalFactor","sortedArray","key","indirectSearch","middle","withOverscroll","fakeAxis","grouping","currentDataGrouping","unitName","fakeSeries","applyGrouping","getGroupPixelWidth","getGroupIntervalFactor","destroyGroupedData","noop","getProcessedData","forced","processData","hasExtremesChanged","basePointRange","median","ordinalArray","firstPointX","firstPointVal","hasPointsInside","points","some","firstPoint","plotX","ordinalPointPixelInterval","shiftIndex","extraRange","ordinalSlope","calculateOverscroll","overscrollPercentage","overscrollValue","pixelToPercent","limitedOverscrollValue","RangeSelectorComposition","SVGElement","createElement","discardElement","pad","pInt","RangeSelector","buttonOptions","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","axisRangeUpdateEvent_1","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","createElements","updateButtonStates","dropdownLabel","actualRange","hasNoData","hasVisibleSeries","day","ytdMin","ytdMax","buttonStates","selectedExists","isSelectedTooGreat","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","isYTDButNotSelected","isSameRange","prevOrdinalPosition","nextOrdinalPosition","month","year","disable","select","state","button","disabled","bbox","getBBox","fixedTimes","millisecond","second","minute","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","currentExtreme","on","focus","preferredInputType","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","alignElements","buttonGroup","userButtonTheme","paddingLeft","paddingRight","hover","mouseOver","isMS","mouseOut","zoomText","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","alignOptions","inputGroupX","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","isCollapsed","showDropdown","hideDropdown","top_1","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","minPosition","subtitle","rSelector","window","HTMLElement","applyRadius","prevSeg","nextSeg","x1","y1","x2","y2","directionX","directionY","getLinkPath","pathParams","parentVisible","straight","curved","PathUtilities","findLastObstacleBefore","startIx","cmp","right","findObstacleFromPoint","obstacle","pathFromSegments","segments","limitObstacleToBounds","bounds","simpleConnect","endSegment","startObstacle","waypoint","useMax","endPoint","startObstacleIx","endObstacleIx","dir","copyFromPoint","fromKey","toKey","getMeOut","prevWaypoint","waypoint2","fastAvoid","dirIsX","extractedEndPoint","endSegments","metrics","softMinX","maxWidth","softMaxX","softMinY","maxHeight","softMaxY","forceObstacleBreak","pivotPoint","directionIsX","lastPoint","highestPoint","lowestPoint","searchDirection","getDodgeDirection","softBounds","soft","hard","toPointMax","toPointMin","maxOutOfSoftBounds","minOutOfSoftBounds","maxOutOfHardBounds","minOutOfHardBounds","minDistance","maxDistance","minPivot","maxPivot","clearPathTo","pivot","waypointUseMax","envelopingObstacle","secondEnvelopingObstacle","envelopWaypoint","obstacleMargin","inside","ConnectorsDefaults","ConnectionComposition","getPointBB","shapeArgs","bb","graphic","plotY","pointGetPathfinderAnchorPoint","markerOptions","pointGetRadiansToVector","v1","v2","atan2","pointGetMarkerVector","markerRadius","twoPI","PI","rectWidth","rectHeight","rAtan","rectHalfWidth","rectHalfHeight","rectHorizontalCenter","rectVerticalCenter","edgePoint","theta","tanTheta","leftOrRightRegion","xFactor","yFactor","tan","cos","sin","PathfinderClass","PointClass","pointProto","acc","PathfinderAlgorithms","PathfinderComposition","Point","Pathfinder","connections","deferRender","oldConnections","ganttPointOptions","dependency","connect","connects","isInside","j","k","found","lenOld","lenNew","oldCon","newCon","renderConnections","conns","pathfinderRemoveRenderEvent","calculatedMargin","sLen","pLen","calculateObstacleMargin","onstacleDistance","calculateObstacleDistance","bbMargin","yOverlap","xOverlap","xDistance","yDistance","xCenter","yCenter","ArrowSymbols","G","scrollablePlotArea","minHeight","chartAdjustHeight","redrawTrigger","_loop_1","chart_1","initiatedScale","unitLength","scrollablePixelsY","setSize","clipRect","sharedClipKey","sharedClips","adjustHeight","StaticScale","isObject","colorByPoint","amount","partialFill","whiteSpace","tooltip","headerFormat","pointFormat","ColumnPoint","column","pointClass","XRangePoint","getColorByCategory","colorCount","resolveColor","drawPoint","getAnimationVerb","getLabelConfig","cfg","yCats","yCategory","category","isValid","ttBelow","tooltipDateKeys","XRangeSeriesDefaults","ColumnSeries","onAxisAfterGetSeriesExtremes","modMax","x2Data","XRangeSeries","getColumnMetrics","swapAxes","cropData","yData","crop","findPointIndex","pointIndex","cropStart","touched","cropped","alignDataLabel","oldPlotX","dlBox","centerX","dataLabel","translatePoint","widthDifference","dlLeft","dlRight","dlWidth","clipRectWidth","columnMetrics","minPointLength","oldColWidth","seriesXOffset","pointXOffset","posX","plotX2","borderWidth","pointHeight","pointWidth","pointPlacement","tooltipPos","xIndex","yIndex","tooltipYOffset","partShapeArgs","clipRectArgs","seriesOpts","shapeType","pointState","stateOpts","pointStateVerb","pointAttr","pointAttribs","pfOptions","isNull","getClassName","partRect","partialClipRect","clip","shadow","brighten","drawPoints","pointCount","animationLimit","isPointInside","pointArrayMap","getExtremesFromAll","parallelArrays","requireSorting","autoIncrement","buildKDTree","registerSeriesType","xrange","GanttPoint","setGanttPointAliases","addIfExists","completed","applyOptions","ganttPoint","milestone","pointFormatter","formats","tooltipOptions","dateTimeLabelFormats","ttOptions","xDateFormat","retVal","tooltipFormatter","getDateFormat","StackItem","BrokenAxis","setBreaks","onAxisAfterSetTickPositions","tickPositions","newPositions","isInAnyBreak","onSeriesAfterGeneratePoints","connectNulls","isPointInBreak","onSeriesAfterRender","drawBreaks","seriesDrawBreaks","brokenAxis_1","breakArray","breaksOutOfRange","brk","isOut","otherBreak","toUpperCase","seriesGappedPath","groupingSize","gapSize","gapUnit","current","next","xRange","stack","stacks","stackKey","stackLabels","total","getGraphPath","seriesProto","gappedPath","isInBreak","repeat","inclusive","lin2Val","nval","val2Lin","findBreakAt","testKeep","inbrk","keep","showPoints","forceRedraw","breaks_1","axisBreak","setAxisTranslation","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","min_1","max_1","move","breakSize","minPointOffset","GridAxisSide","dateFormats","getMaxLabelDimensions","ticks","dimensions","pos","tick","labelHeight","labelWidth","textPxLength","treeGrid","mapOfPosToGridNode","treeDepth","indentation","wrapGetOffset","proceed","columnsFirst","side","isColumn","columns","getOffset","onAfterGetTitlePosition","gridOptions","axisTitle","axisHeight","axisLeft","options_1","axisTop","axisWidth","tickSize","titleWidth","xOption","yOption","titleMargin","titleFontSize","fontMetrics","f","offAxis","bottom","titlePosition","onAfterInit","showLastLabel","labelRotation","minTickInterval","columnIndex","columnOptions","onAfterRender","firstTick","slotWidth","maxLabelDimensions","rightWall","isOuterAxis","axisLine","linePath","getLinePath","startPoint","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","lowerBorder","axisLineExtra","showAxis","hasRendered","linkedParent","lastTick","firstTick_1","tickMark","hiddenLabels","hiddenMarks","mark","isLast","onAfterSetAxisTranslation","tickInfo","userLabels","onAfterSetOptions","gridAxisOptions","list","textOverflow","tickPositioner","parentInfo","unitIdx","unit_1","unit","counts","onAfterSetOptions2","onAfterSetScale","setScale","onAfterTickSize","labelPadding","cellHeight","onDestroy","keepEvents","onInit","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","labelOpts","tickPos","nextTickPos","crispCorr","lblMetrics","useHTML","lines","onTickLabelFormat","isFirst","pointCopy","is","gantt","onTrimTicks","categoryAxis","firstPos","secondPos","lastPos","beforeLastPos","linkedMin","linkedMax","startLessThanMin","endMoreThanMin","startLessThanMax","endMoreThanMax","isLinked","wrapUnsquish","parentAxis","thisIndex","lastIndex","otherAxis","extraBorderLine","axisGroup","E","timestamp","charAt","W","unitsToOmit","firstDay","thursday","valueOf","firstThursday","toString","TickClass","__rest","getOwnPropertySymbols","propertyIsEnumerable","getNode","parent","level","mapOfIdToChildren","after","before","node","depth","descendants","children","child","childStart","NaN","childEnd","getTree","ids","listOfParents","prev","curr","adoptedByRoot","orphan","onTickInit","TreeGridTickAdditions","wrapGetLabelPosition","labelOptions","lbOptions","isTreeGrid","result","wrapRenderLabel","params","isNew","labelBox","iconCenter","shouldRender","icon","collapsed","addClassName","removeClassName","tickGrid","tickOptions","labelIcon","labelElement","axisGrid","axisOptions","symbolOptions","hasDescendants","isTreeGridElement","prefixClassName","prefixLevelClass","removeClass","RegExp","styles","parentGroup","xy","object","attachedTreeGridEvents","textDecoration","toggleCollapse","tickProto","collapse","expand","posMappedNodes","getColor","colorVariation","colorIndexByPoint","mapOptionsToLevel","parentColor","parentColorIndex","siblings","chartOptionsChart","getLevelOptions","defaults","converted","levels","item","levelIsConstant","getNodeWidth","columnCount","nodeDistance","nodeWidth","plotSizeX","fraction","parseFloat","nDistance","setTreeValues","tree","idRoot","nodeRoot","mapIdToNode","optionsPoint","childrenTotal","levelDynamic","newOptions","isLeaf","updateRootId","rootId","rootNode","GridAxis","Tree","TreeGridTick","TU","TickConstructor","getBreakFromNode","collapseEnd","collapseStart","getTreeGridFromData","uniqueNames","numberOfSeries","setValues","collapsedNodes","mapOfIdToNode","uniqueNamesEnabled","posIterator","gridNode","parentGridNode","nodes","seriesIndex","onBeforeRender","target","isDirtyData","arr","optionsToObject","hasNames","axisData","wrapGenerateTick","levelOptions","parameters","addLabel","wrapInit","TreeGridAxisAdditions","fontWeight","wrapSetTickInterval","getTickPositions","linkedParentExtremes","wrapRedraw","axisProps","utils","setCollapsedStatus","dataPoint","roundedMin","roundedMax","GanttSeriesDefaults","TreeGridAxis","GanttSeries","diamondShape","cutOff","diamond","CurrentDateIndication","PlotLineOrBand","Tick"],"mappings":"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"}