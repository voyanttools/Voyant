{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Sonification module\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Øystein Moseng\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/sonification', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/Sonification/Options.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Default options for sonification.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var Options = {\n            /**\n             * Options for configuring sonification and audio charts. Requires the\n             * [sonification module](https://code.highcharts.com/modules/sonification.js)\n             * to be loaded.\n             *\n             * @sample  highcharts/demo/all-instruments\n             *          All predefined instruments\n             * @sample  highcharts/demo/audio-boxplot\n             *          Audio boxplots\n             * @sample  highcharts/demo/plotline-context\n             *          Context tracks\n             * @sample  highcharts/demo/sonification-music\n             *          Musical chart\n             *\n             * @since        11.0.0\n             * @requires     modules/sonification\n             * @optionparent sonification\n             */\n            sonification: {\n                /**\n                 * Global tracks to add to every series.\n                 *\n                 * Defined as an array of either instrument or speech tracks,\n                 * or a combination.\n                 *\n                 * @declare   Highcharts.SonificationTracksOptions\n                 * @extends   sonification.defaultSpeechOptions\n                 * @extends   sonification.defaultInstrumentOptions\n                 * @type      {Array<*>}\n                 * @apioption sonification.globalTracks\n                 */\n                /**\n                 * Rate mapping for speech tracks.\n                 *\n                 * @declare   Highcharts.SonificationTracksRateOptions\n                 * @extends   sonification.defaultSpeechOptions.mapping.rate\n                 * @apioption sonification.globalTracks.mapping.rate\n                 */\n                /**\n                 * Text mapping for speech tracks.\n                 *\n                 * @declare   Highcharts.SonificationTracksTextOptions\n                 * @extends   sonification.defaultSpeechOptions.mapping.text\n                 * @apioption sonification.globalTracks.mapping.text\n                 */\n                /**\n                 * Context tracks to add globally, an array of either instrument\n                 * tracks, speech tracks, or a mix.\n                 *\n                 * Context tracks are not tied to data points, but play at a set\n                 * interval - either based on time or on prop values.\n                 *\n                 * @sample  highcharts/demo/plotline-context\n                 *          Using contexts\n                 *\n                 * @declare   Highcharts.SonificationContextTracksOptions\n                 * @extends   sonification.globalTracks\n                 * @type      {Array<*>}\n                 * @apioption sonification.globalContextTracks\n                 */\n                /**\n                 * Set a context track to play periodically every `timeInterval`\n                 * milliseconds while the sonification is playing.\n                 *\n                 * @sample  highcharts/demo/plotline-context\n                 *          Using contexts\n                 *\n                 * @type      {number}\n                 * @apioption sonification.globalContextTracks.timeInterval\n                 */\n                /**\n                 * Set a context track to play periodically every `valueInterval`\n                 * units of a data property `valueProp` while the sonification is\n                 * playing.\n                 *\n                 * For example, setting `valueProp` to `x` and `valueInterval` to 5\n                 * will play the context track for every 5th X value.\n                 *\n                 * The context audio events will be mapped to time according to the\n                 * prop value relative to the min/max values for that prop.\n                 *\n                 * @sample  highcharts/demo/plotline-context\n                 *          Using contexts\n                 *\n                 * @type      {number}\n                 * @apioption sonification.globalContextTracks.valueInterval\n                 */\n                /**\n                 * The point property to play context for when using `valueInterval`.\n                 *\n                 * @type      {string}\n                 * @default   \"x\"\n                 * @apioption sonification.globalContextTracks.valueProp\n                 */\n                /**\n                 * How to map context events to time when using the `valueInterval`\n                 * option.\n                 *\n                 * @type      {\"linear\"|\"logarithmic\"}\n                 * @default   \"linear\"\n                 * @apioption sonification.globalContextTracks.valueMapFunction\n                 */\n                /**\n                 * Set up event handlers for the sonification\n                 *\n                 * @apioption sonification.events\n                 */\n                /**\n                 * Called on play.\n                 *\n                 * A context object is passed to the function, with properties `chart`\n                 * and `timeline`.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.onPlay\n                 */\n                /**\n                 * Called on pause, cancel, or if play is completed.\n                 *\n                 * A context object is passed to the function, with properties `chart`,\n                 * `timeline` and `pointsPlayed`. `pointsPlayed` is an array of `Point`\n                 * objects, referencing data points that were related to the audio\n                 * events played.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.onStop\n                 */\n                /**\n                 * Called when play is completed.\n                 *\n                 * A context object is passed to the function, with properties `chart`,\n                 * `timeline` and `pointsPlayed`. `pointsPlayed` is an array of `Point`\n                 * objects, referencing data points that were related to the audio\n                 * events played.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.onEnd\n                 */\n                /**\n                 * Called immediately when a play is requested.\n                 *\n                 * A context object is passed to the function, with properties `chart`\n                 * and `timeline`.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.beforePlay\n                 */\n                /**\n                 * Called before updating the sonification.\n                 *\n                 * A context object is passed to the function, with properties `chart`\n                 * and `timeline`.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.beforeUpdate\n                 */\n                /**\n                 * Called after updating the sonification.\n                 *\n                 * A context object is passed to the function, with properties `chart`\n                 * and `timeline`.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.afterUpdate\n                 */\n                /**\n                 * Called on the beginning of playing a series.\n                 *\n                 * A context object is passed to the function, with properties `series`\n                 * and `timeline`.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.onSeriesStart\n                 */\n                /**\n                 * Called when finished playing a series.\n                 *\n                 * A context object is passed to the function, with properties `series`\n                 * and `timeline`.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.onSeriesEnd\n                 */\n                /**\n                 * Called when attempting to play an adjacent point or series, and\n                 * there is none.\n                 *\n                 * By default a percussive sound is played.\n                 *\n                 * A context object is passed to the function, with properties `chart`,\n                 * `timeline`, and `attemptedNext`. `attemptedNext` is a boolean\n                 * property that is `true` if the boundary hit was from trying to play\n                 * the next series/point, and `false` if it was from trying to play the\n                 * previous.\n                 *\n                 * @type      {Function}\n                 * @apioption sonification.events.onBoundaryHit\n                 */\n                /**\n                 * Enable sonification functionality for the chart.\n                 */\n                enabled: true,\n                /**\n                 * The total duration of the sonification, in milliseconds.\n                 */\n                duration: 6000,\n                /**\n                 * The time to wait in milliseconds after each data series when playing\n                 * the series one after the other.\n                 *\n                 * @sample highcharts/sonification/chart-earcon\n                 *         Notification after series\n                 *\n                 * @see [order](#sonification.order)\n                 */\n                afterSeriesWait: 700,\n                /**\n                 * How long to wait between each recomputation of the sonification, if\n                 * the chart updates rapidly. This avoids slowing down processes like\n                 * panning. Given in milliseconds.\n                 */\n                updateInterval: 200,\n                /**\n                 * Overall/master volume for the sonification, from 0 to 1.\n                 */\n                masterVolume: 0.7,\n                /**\n                 * What order to play the data series in, either `sequential` where\n                 * the series play individually one after the other, or `simultaneous`\n                 * where the series play all at once.\n                 *\n                 * @sample highcharts/sonification/chart-simultaneous\n                 *         Simultaneous sonification\n                 *\n                 * @type  {\"sequential\"|\"simultaneous\"}\n                 */\n                order: 'sequential',\n                /**\n                 * Show tooltip as the chart plays.\n                 *\n                 * Note that if multiple tracks that play at different times try to\n                 * show the tooltip, it can be glitchy, so it is recommended in\n                 * those cases to turn this on/off for individual tracks using the\n                 * [showPlayMarker](#plotOptions.series.sonification.tracks.showPlayMarker)\n                 * option.\n                 *\n                 * @see [showCrosshair](#sonification.showCrosshair)\n                 */\n                showTooltip: true,\n                /**\n                 * Show X and Y axis crosshairs (if they exist) as the chart plays.\n                 *\n                 * Note that if multiple tracks that play at different times try to\n                 * show the crosshairs, it can be glitchy, so it is recommended in\n                 * those cases to turn this on/off for individual tracks using the\n                 * [showPlayMarker](#plotOptions.series.sonification.tracks.showPlayMarker)\n                 * option.\n                 *\n                 * @see [showTooltip](#sonification.showTooltip)\n                 * @see [crosshair](#xAxis.crosshair)\n                 */\n                showCrosshair: true,\n                /**\n                 * Options for grouping data points together when sonifying. This\n                 * allows for the visual presentation to contain more points than what\n                 * is being played. If not enabled, all visible / uncropped points are\n                 * played.\n                 *\n                 * @see [series.cropThreshold](#plotOptions.series.cropThreshold)\n                 */\n                pointGrouping: {\n                    /**\n                     * Whether or not to group points\n                     */\n                    enabled: true,\n                    /**\n                     * The size of each group in milliseconds. Audio events closer than\n                     * this are grouped together.\n                     */\n                    groupTimespan: 15,\n                    /**\n                     * The grouping algorithm, deciding which points to keep when\n                     * grouping a set of points together. By default `\"minmax\"` is\n                     * used, which keeps both the minimum and maximum points.\n                     *\n                     * The other algorithms will either keep the first point in the\n                     * group (time wise), last point, middle point, or both the first\n                     * and the last point.\n                     *\n                     * The timing of the resulting point(s) is then adjusted to play\n                     * evenly, regardless of its original position within the group.\n                     *\n                     * @type {\"minmax\"|\"first\"|\"last\"|\"middle\"|\"firstlast\"}\n                     */\n                    algorithm: 'minmax',\n                    /**\n                     * The data property for each point to compare when deciding which\n                     * points to keep in the group.\n                     *\n                     * By default it is \"y\", which means that if the `\"minmax\"`\n                     * algorithm is used, the two points the group with the lowest and\n                     * highest `y` value will be kept, and the others not played.\n                     */\n                    prop: 'y'\n                },\n                /**\n                 * Default sonification options for all instrument tracks.\n                 *\n                 * If specific options are also set on individual tracks or per\n                 * series, those will override these options.\n                 *\n                 * @sample  highcharts/sonification/point-sonify\n                 *          Sonify points on click\n                 *\n                 * @declare Highcharts.SonificationInstrumentOptions\n                 */\n                defaultInstrumentOptions: {\n                    /**\n                     * Round pitch mapping to musical notes.\n                     *\n                     * If `false`, will play the exact mapped note, even if it is out\n                     * of tune compared to the musical notes as defined by 440Hz\n                     * standard tuning.\n                     */\n                    roundToMusicalNotes: true,\n                    /**\n                     * Type of track. Always `\"instrument\"` for instrument tracks, and\n                     * `\"speech\"` for speech tracks.\n                     *\n                     * @declare    Highcharts.SonifcationTypeValue\n                     * @type       {string}\n                     * @default    instrument\n                     * @validvalue [\"instrument\",\"speech\"]\n                     * @apioption  sonification.defaultInstrumentOptions.type\n                     */\n                    /**\n                     * Show play marker (tooltip and/or crosshair) for a track.\n                     *\n                     * @type      {boolean}\n                     * @default   true\n                     * @apioption sonification.defaultInstrumentOptions.showPlayMarker\n                     */\n                    /**\n                     * Name to use for a track when exporting to MIDI.\n                     * By default it uses the series name if the track is related to\n                     * a series.\n                     *\n                     * @type      {string}\n                     * @apioption sonification.defaultInstrumentOptions.midiName\n                     */\n                    /**\n                     * Options for point grouping, specifically for instrument tracks.\n                     *\n                     * @declare   Highcharts.SonificationInstrumentPointGroupingOptions\n                     * @extends   sonification.pointGrouping\n                     * @apioption sonification.defaultInstrumentOptions.pointGrouping\n                     */\n                    /**\n                     * Define a condition for when a track should be active and not.\n                     *\n                     * Can either be a function callback or a configuration object.\n                     *\n                     * If a function is used, it should return a `boolean` for whether\n                     * or not the track should be active. The function is called for\n                     * each audio event, and receives a parameter object with `time`,\n                     * and potentially `point` and `value` properties depending on the\n                     * track. `point` is available if the audio event is related to a\n                     * data point. `value` is available if the track is used as a\n                     * context track, and `valueInterval` is used.\n                     *\n                     * @sample highcharts/sonification/mapping-zones\n                     *         Mapping zones\n                     *\n                     * @declare   Highcharts.SonificationInstrumentActiveWhenOptions\n                     * @type      {Function|*}\n                     * @apioption sonification.defaultInstrumentOptions.activeWhen\n                     */\n                    /**\n                     * Track is only active when `prop` is above or at this value.\n                     *\n                     * @type      {number}\n                     * @apioption sonification.defaultInstrumentOptions.activeWhen.min\n                     */\n                    /**\n                     * Track is only active when `prop` is below or at this value.\n                     *\n                     * @type      {number}\n                     * @apioption sonification.defaultInstrumentOptions.activeWhen.max\n                     */\n                    /**\n                     * Track is only active when `prop` was below, and is now at or\n                     * above this value.\n                     *\n                     * If both `crossingUp` and `crossingDown` are defined, the track\n                     * is active if either condition is met.\n                     *\n                     * @type      {number}\n                     * @apioption sonification.defaultInstrumentOptions.activeWhen.crossingUp\n                     */\n                    /**\n                     * Track is only active when `prop` was above, and is now at or\n                     * below this value.\n                     *\n                     * If both `crossingUp` and `crossingDown` are defined, the track\n                     * is active if either condition is met.\n                     *\n                     * @type      {number}\n                     * @apioption sonification.defaultInstrumentOptions.activeWhen.crossingDown\n                     */\n                    /**\n                     * The point property to compare, for example `y` or `x`.\n                     *\n                     * @type      {string}\n                     * @apioption sonification.defaultInstrumentOptions.activeWhen.prop\n                     */\n                    /**\n                     * Instrument to use for playing.\n                     *\n                     * Can either be a string referencing a synth preset, or it can be\n                     * a synth configuration object.\n                     *\n                     * @sample  highcharts/demo/all-instruments\n                     *          Overview of available presets\n                     * @sample  highcharts/sonification/custom-instrument\n                     *          Custom instrument\n                     *\n                     * @type {string|Highcharts.SynthPatchOptionsObject}\n                     */\n                    instrument: 'piano',\n                    /**\n                     * Mapping options for the audio parameters.\n                     *\n                     * All parameters can be either:\n                     *  - A string, referencing a point property to map to.\n                     *  - A number, setting the value of the audio parameter directly.\n                     *  - A callback function, returning the value programmatically.\n                     *  - An object defining detailed configuration of the mapping.\n                     *\n                     * If a function is used, it should return the desired value for\n                     * the audio parameter. The function is called for each audio event\n                     * to be played, and receives a context object parameter with\n                     * `time`, and potentially `point` and `value` depending on the\n                     * track. `point` is available if the audio event is related to a\n                     * data point, and `value` is available if the track is used for a\n                     * context track using `valueInterval`.\n                     *\n                     * @sample  highcharts/sonification/mapping-overview\n                     *          Overview of common mapping parameters\n                     * @sample  highcharts/sonification/pitch-mapping\n                     *          Various types of mapping used\n                     * @sample  highcharts/sonification/polarity-invert\n                     *          Inverted mapping to property\n                     * @sample  highcharts/sonification/log-mapping\n                     *          Logarithmic mapping to property\n                     *\n                     * @declare Highcharts.SonificationInstrumentMappingOptions\n                     */\n                    mapping: {\n                        /**\n                         * The volume of notes, from 0 to 1.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentVolumeOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @default   1\n                         * @apioption sonification.defaultInstrumentOptions.mapping.volume\n                         */\n                        /**\n                         * Frequency in Hertz of notes. Overrides pitch mapping if set.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentFrequencyOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @apioption sonification.defaultInstrumentOptions.mapping.frequency\n                         */\n                        /**\n                         * Milliseconds to wait before playing, comes in addition to\n                         * the time determined by the `time` mapping.\n                         *\n                         * Can also be negative to play before the mapped time.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentPlayDelayOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @apioption sonification.defaultInstrumentOptions.mapping.playDelay\n                         */\n                        /**\n                         * Mapping options for tremolo effects.\n                         *\n                         * Tremolo is repeated changes of volume over time.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentTremoloOptions\n                         * @apioption sonification.defaultInstrumentOptions.mapping.tremolo\n                         */\n                        /**\n                         * Map to tremolo depth, from 0 to 1.\n                         *\n                         * This determines the intensity of the tremolo effect, how\n                         * much the volume changes.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentTremoloDepthOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @apioption sonification.defaultInstrumentOptions.mapping.tremolo.depth\n                         */\n                        /**\n                         * Map to tremolo speed, from 0 to 1.\n                         *\n                         * This determines the speed of the tremolo effect, how fast\n                         * the volume changes.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentTremoloSpeedOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @apioption sonification.defaultInstrumentOptions.mapping.tremolo.speed\n                         */\n                        /**\n                         * Mapping options for the lowpass filter.\n                         *\n                         * A lowpass filter lets low frequencies through, but stops high\n                         * frequencies, making the sound more dull.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentLowpassOptions\n                         * @apioption sonification.defaultInstrumentOptions.mapping.lowpass\n                         */\n                        /**\n                         * Map to filter frequency in Hertz from 1 to 20,000Hz.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentLowpassFrequencyOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @apioption sonification.defaultInstrumentOptions.mapping.lowpass.frequency\n                         */\n                        /**\n                         * Map to filter resonance in dB. Can be negative to cause a\n                         * dip, or positive to cause a bump.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentLowpassResonanceOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @apioption sonification.defaultInstrumentOptions.mapping.lowpass.resonance\n                         */\n                        /**\n                         * Mapping options for the highpass filter.\n                         *\n                         * A highpass filter lets high frequencies through, but stops\n                         * low frequencies, making the sound thinner.\n                         *\n                         * @declare   Highcharts.SonificationInstrumentHighpassOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.lowpass\n                         * @apioption sonification.defaultInstrumentOptions.mapping.highpass\n                         */\n                        /**\n                         * Time mapping determines what time each point plays. It is\n                         * defined as an offset in milliseconds, where 0 means it\n                         * plays immediately when the chart is sonified.\n                         *\n                         * By default time is mapped to `x`, meaning points with the\n                         * lowest `x` value plays first, and points with the highest\n                         * `x` value plays last.\n                         *\n                         * Can be set to a fixed value, a prop to map to, a function,\n                         * or a mapping object.\n                         *\n                         * @sample  highcharts/sonification/point-play-time\n                         *          Play points in order of Y value\n                         *\n                         * @declare Highcharts.SonificationInstrumentTimeOptions\n                         * @type    {string|number|Function|*}\n                         * @default \"x\"\n                         */\n                        time: 'x',\n                        /**\n                         * A point property to map the mapping parameter to.\n                         *\n                         * A negative sign `-` can be placed before the property name\n                         * to make mapping inverted.\n                         *\n                         * @sample  highcharts/sonification/polarity-invert\n                         *          Inverted mapping to property\n                         *\n                         * @type      {string}\n                         * @apioption sonification.defaultInstrumentOptions.mapping.time.mapTo\n                         */\n                        /**\n                         * The minimum value for the audio parameter. This is the\n                         * lowest value the audio parameter will be mapped to.\n                         *\n                         * @type      {number}\n                         * @apioption sonification.defaultInstrumentOptions.mapping.time.min\n                         */\n                        /**\n                         * The maximum value for the audio parameter. This is the\n                         * highest value the audio parameter will be mapped to.\n                         *\n                         * @type      {number}\n                         * @apioption sonification.defaultInstrumentOptions.mapping.time.max\n                         */\n                        /**\n                         * What data values to map the parameter within.\n                         *\n                         * Mapping within `\"series\"` will make the lowest value point\n                         * in the series map to the min audio parameter value, and the\n                         * highest value will map to the max audio parameter.\n                         *\n                         * Mapping within `\"chart\"` will make the lowest value point in\n                         * the whole chart map to the min audio parameter value, and\n                         * the highest value in the whole chart will map to the max\n                         * audio parameter.\n                         *\n                         * You can also map within the X or Y axis of each series.\n                         *\n                         * @sample highcharts/sonification/mapping-within\n                         *         Mapping within demonstrated\n                         *\n                         * @type      {\"chart\"|\"series\"|\"xAxis\"|\"yAxis\"}\n                         * @apioption sonification.defaultInstrumentOptions.mapping.time.within\n                         */\n                        /**\n                         * How to perform the mapping.\n                         * @sample highcharts/sonification/log-mapping\n                         *         Logarithmic mapping to property\n                         *\n                         * @type      {\"linear\"|\"logarithmic\"}\n                         * @apioption sonification.defaultInstrumentOptions.mapping.time.mapFunction\n                         */\n                        /**\n                         * A fixed value to use for the prop when mapping.\n                         *\n                         * For example, if mapping to `y`, setting value to `4` will\n                         * map as if all points had a y value of 4.\n                         *\n                         * @sample highcharts/demo/plotline-context\n                         *         Map to fixed y value\n                         *\n                         * @type      {number}\n                         * @apioption sonification.defaultInstrumentOptions.mapping.time.value\n                         */\n                        /**\n                         * Pan refers to the stereo panning position of the sound.\n                         * It is defined from -1 (left) to 1 (right).\n                         *\n                         * By default it is mapped to `x`, making the sound move from\n                         * left to right as the chart plays.\n                         *\n                         * Can be set to a fixed value, a prop to map to, a function,\n                         * or a mapping object.\n                         *\n                         * @extends sonification.defaultInstrumentOptions.mapping.time\n                         * @default \"x\"\n                         */\n                        pan: 'x',\n                        /**\n                         * Note duration determines for how long a note plays, in\n                         * milliseconds.\n                         *\n                         * It only affects instruments that are able to play\n                         * continuous sustained notes. Examples of these instruments\n                         * from the presets include `flute`, `saxophone`, `trumpet`,\n                         * `sawsynth`, `wobble`, `basic1`, `basic2`, `sine`,\n                         * `sineGlide`, `triangle`, `square`, `sawtooth`, `noise`,\n                         * `filteredNoise`, and `wind`.\n                         *\n                         * Can be set to a fixed value, a prop to map to, a function,\n                         * or a mapping object.\n                         *\n                         * @extends sonification.defaultInstrumentOptions.mapping.time\n                         * @default 200\n                         */\n                        noteDuration: 200,\n                        /**\n                         * Musical pitch refers to how high or low notes are played.\n                         *\n                         * By default it is mapped to `y` so low `y` values are played\n                         * with a lower pitch, and high values are played with a higher\n                         * pitch.\n                         *\n                         * Pitch mapping has a few extra features compared to other\n                         * audio parameters.\n                         *\n                         * Firstly, it accepts not only number values, but also string\n                         * values denoting note names. These are given in the form\n                         * `<note><octave>`, for example `\"c6\"` or `\"F#2\"`.\n                         *\n                         * Secondly, it is possible to map pitch to an array of notes.\n                         * In this case, the `[gapBetweenNotes](#sonification.defaultInstrumentOptions.mapping.gapBetweenNotes)`\n                         * mapping determines the delay between these notes.\n                         *\n                         * Thirdly, it is possible to define a musical scale to follow\n                         * when mapping.\n                         *\n                         * Can be set to a fixed value, an array, a prop to map to, a\n                         * function, or a mapping object.\n                         *\n                         * @sample  highcharts/sonification/pitch-mapping\n                         *          Various types of mapping used\n                         * @sample  highcharts/sonification/polarity-invert\n                         *          Inverted mapping to property\n                         * @sample  highcharts/sonification/log-mapping\n                         *          Logarithmic mapping to property\n                         *\n                         * @declare Highcharts.SonificationInstrumentPitchOptions\n                         * @extends sonification.defaultInstrumentOptions.mapping.time\n                         * @type    {string|number|Function|Array<string|number>|*}\n                         */\n                        pitch: {\n                            mapTo: 'y',\n                            min: 'c2',\n                            max: 'c6',\n                            within: 'yAxis'\n                        },\n                        /**\n                         * Map pitches to a musical scale. The scale is defined as an\n                         * array of semitone offsets from the root note.\n                         *\n                         * @sample  highcharts/sonification/all-scales\n                         *          Predefined scale presets\n                         *\n                         * @type      {Array<number>}\n                         * @apioption sonification.defaultInstrumentOptions.mapping.pitch.scale\n                         */\n                        /**\n                         * Gap in milliseconds between notes if pitch is mapped to an\n                         * array of notes.\n                         *\n                         * Can be set to a fixed value, a prop to map to, a function,\n                         * or a mapping object.\n                         *\n                         * @sample  maps/demo/audio-map\n                         *          Mapping to gap between notes\n                         *\n                         * @extends sonification.defaultInstrumentOptions.mapping.time\n                         * @default 100\n                         */\n                        gapBetweenNotes: 100\n                    }\n                },\n                /**\n                 * Default sonification options for all speech tracks.\n                 *\n                 * If specific options are also set on individual tracks or per\n                 * series, those will override these options.\n                 *\n                 * @sample  highcharts/sonification/speak-values\n                 *          Speak values\n                 *\n                 * @declare   Highcharts.SonificationSpeechOptions\n                 * @extends   sonification.defaultInstrumentOptions\n                 * @excluding roundToMusicalNotes, midiName, instrument\n                 */\n                defaultSpeechOptions: {\n                    /**\n                     * Type of track. Always `\"instrument\"` for instrument tracks, and\n                     * `\"speech\"` for speech tracks.\n                     *\n                     * @declare    Highcharts.SonifcationTypeValue\n                     * @type       {string}\n                     * @default    speech\n                     * @validvalue [\"instrument\",\"speech\"]\n                     * @apioption  sonification.defaultSpeechOptions.type\n                     */\n                    /**\n                     * Name of the voice synthesis to prefer for speech tracks.\n                     *\n                     * If not available, falls back to the default voice for the\n                     * selected language.\n                     *\n                     * Different platforms provide different voices for web speech\n                     * synthesis.\n                     *\n                     * @type      {string}\n                     * @apioption sonification.defaultSpeechOptions.preferredVoice\n                     */\n                    /**\n                     * The language to speak in for speech tracks, as an IETF BCP 47\n                     * language tag.\n                     *\n                     * @sample  maps/demo/audio-map\n                     *          French language speech\n                     */\n                    language: 'en-US',\n                    /**\n                     * Mapping configuration for the speech/audio parameters.\n                     *\n                     * All parameters except `text` can be either:\n                     *  - A string, referencing a point property to map to.\n                     *  - A number, setting the value of the speech parameter directly.\n                     *  - A callback function, returning the value programmatically.\n                     *  - An object defining detailed configuration of the mapping.\n                     *\n                     * If a function is used, it should return the desired value for\n                     * the speech parameter. The function is called for each speech\n                     * event to be played, and receives a context object parameter with\n                     * `time`, and potentially `point` and `value` depending on the\n                     * track. `point` is available if the audio event is related to a\n                     * data point, and `value` is available if the track is used for a\n                     * context track using `valueInterval`.\n                     *\n                     * @declare   Highcharts.SonificationSpeechMappingOptions\n                     * @extends   sonification.defaultInstrumentOptions.mapping\n                     * @excluding frequency, gapBetweenNotes, highpass, lowpass,\n                     *            tremolo, noteDuration, pan\n                     * @apioption sonification.defaultSpeechOptions.mapping\n                     */\n                    mapping: {\n                        /**\n                         * Milliseconds to wait before playing, comes in addition to\n                         * the time determined by the `time` mapping.\n                         *\n                         * Can also be negative to play before the mapped time.\n                         *\n                         * @declare   Highcharts.SonificationSpeechPlayDelayOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @apioption sonification.defaultSpeechOptions.mapping.playDelay\n                         */\n                        /**\n                         * Speech pitch (how high/low the voice is) multiplier.\n                         * @sample  highcharts/sonification/speak-values\n                         *          Speak values\n                         *\n                         * @declare   Highcharts.SonificationSpeechPitchOptions\n                         * @extends   sonification.defaultInstrumentOptions.mapping.time\n                         * @excluding scale\n                         * @type      {string|number|Function|*}\n                         * @default   1\n                         * @apioption sonification.defaultSpeechOptions.mapping.pitch\n                         */\n                        /**\n                         * @default   undefined\n                         * @apioption sonification.defaultSpeechOptions.mapping.pitch.mapTo\n                         */\n                        /**\n                         * @default   undefined\n                         * @apioption sonification.defaultSpeechOptions.mapping.pitch.min\n                         */\n                        /**\n                         * @default   undefined\n                         * @apioption sonification.defaultSpeechOptions.mapping.pitch.max\n                         */\n                        /**\n                         * @default   undefined\n                         * @apioption sonification.defaultSpeechOptions.mapping.pitch.within\n                         */\n                        /**\n                         * The text to announce for speech tracks. Can either be a\n                         * format string or a function.\n                         *\n                         * If it is a function, it should return the format string to\n                         * announce. The function is called for each audio event, and\n                         * receives a parameter object with `time`, and potentially\n                         * `point` and `value` properties depending on the track.\n                         * `point` is available if the audio event is related to a data\n                         * point. `value` is available if the track is used as a\n                         * context track, and `valueInterval` is used.\n                         *\n                         * If it is a format string, in addition to normal string\n                         * content, format values can be accessed using bracket\n                         * notation. For example `\"Value is {point.y}%\"`.\n                         *\n                         * `time`, `point` and `value` are available to the format\n                         * strings similarly to with functions. Nested properties can\n                         * be accessed with dot notation, for example\n                         * `\"Density: {point.options.custom.density}\"`\n                         *\n                         * @sample highcharts/sonification/speak-values\n                         *         Speak values\n                         *\n                         * @type      {string|Function}\n                         * @apioption sonification.defaultSpeechOptions.mapping.text\n                         */\n                        /**\n                         * @extends sonification.defaultInstrumentOptions.mapping.time\n                         * @default \"x\"\n                         */\n                        time: 'x',\n                        /**\n                         * Speech rate (speed) multiplier.\n                         * @extends sonification.defaultInstrumentOptions.mapping.time\n                         * @default 1.3\n                         */\n                        rate: 1.3,\n                        /**\n                         * Volume of the speech announcement.\n                         * @extends sonification.defaultInstrumentOptions.mapping.volume\n                         * @default 0.4\n                         */\n                        volume: 0.4\n                    },\n                    pointGrouping: {\n                        algorithm: 'last'\n                    }\n                }\n            },\n            exporting: {\n                menuItemDefinitions: {\n                    downloadMIDI: {\n                        textKey: 'downloadMIDI',\n                        onclick: function () {\n                            if (this.sonification) {\n                                this.sonification.downloadMIDI();\n                            }\n                        }\n                    },\n                    playAsSound: {\n                        textKey: 'playAsSound',\n                        onclick: function () {\n                            var s = this.sonification;\n                            if (s && s.isPlaying()) {\n                                s.cancel();\n                            }\n                            else {\n                                this.sonify();\n                            }\n                        }\n                    }\n                }\n            },\n            /**\n             * @optionparent lang\n             * @private\n             */\n            lang: {\n                /**\n                 * The text for the MIDI download menu item in the export menu.\n                 * @requires modules/sonification\n                 * @since 11.0.0\n                 */\n                downloadMIDI: 'Download MIDI',\n                /**\n                 * The text for the Play as sound menu item in the export menu.\n                 * @requires modules/sonification\n                 * @since 11.0.0\n                 */\n                playAsSound: 'Play as sound'\n            }\n        };\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * Sonification/audio chart options for a series.\n         *\n         * @declare    Highcharts.SeriesSonificationOptions\n         * @since      11.0.0\n         * @requires   modules/sonification\n         * @apioption  plotOptions.series.sonification\n         */\n        /**\n         * Whether or not sonification is enabled for this series.\n         *\n         * @type       {boolean}\n         * @default    true\n         * @apioption  plotOptions.series.sonification.enabled\n         */\n        /**\n         * Context tracks for this series. Context tracks are tracks that are not\n         * tied to data points.\n         *\n         * Given as an array of instrument tracks, speech tracks, or a mix of both.\n         *\n         * @declare    Highcharts.SeriesSonificationContextTracksOptions\n         * @type       {Array<*>}\n         * @extends    sonification.globalContextTracks\n         * @apioption  plotOptions.series.sonification.contextTracks\n         */\n        /**\n         * Tracks for this series.\n         *\n         * Given as an array of instrument tracks, speech tracks, or a mix of both.\n         *\n         * @declare    Highcharts.SeriesSonificationTracksOptions\n         * @type       {Array<*>}\n         * @extends    sonification.globalTracks\n         * @apioption  plotOptions.series.sonification.tracks\n         */\n        /**\n         * Default options for all this series' instrument tracks.\n         *\n         * @declare    Highcharts.SeriesSonificationInstrumentOptions\n         * @extends    sonification.defaultInstrumentOptions\n         * @apioption  plotOptions.series.sonification.defaultInstrumentOptions\n         */\n        /**\n         * Default options for all this series' speech tracks.\n         *\n         * @declare    Highcharts.SeriesSonificationSpeechOptions\n         * @extends    sonification.defaultSpeechOptions\n         * @apioption  plotOptions.series.sonification.defaultSpeechOptions\n         */\n        /**\n         * Sonification point grouping options for this series.\n         *\n         * @declare    Highcharts.SeriesSonificationPointGroupingOptions\n         * @extends    sonification.pointGrouping\n         * @apioption  plotOptions.series.sonification.pointGrouping\n         */\n        /**\n         * Event context object sent to sonification chart events.\n         * @requires  modules/sonification\n         * @interface Highcharts.SonificationChartEventCallbackContext\n         */ /**\n        * The relevant chart\n        * @name Highcharts.SonificationChartEventCallbackContext#chart\n        * @type {Highcharts.Chart|undefined}\n        */ /**\n        * The points that were played, if any\n        * @name Highcharts.SonificationChartEventCallbackContext#pointsPlayed\n        * @type {Array<Highcharts.Point>|undefined}\n        */ /**\n        * The playing timeline object with advanced and internal content\n        * @name Highcharts.SonificationChartEventCallbackContext#timeline\n        * @type {object|undefined}\n        */\n        /**\n         * Event context object sent to sonification series events.\n         * @requires  modules/sonification\n         * @interface Highcharts.SonificationSeriesEventCallbackContext\n         */ /**\n        * The relevant series\n        * @name Highcharts.SonificationSeriesEventCallbackContext#series\n        * @type {Highcharts.Series|undefined}\n        */ /**\n        * The playing timeline object with advanced and internal content\n        * @name Highcharts.SonificationSeriesEventCallbackContext#timeline\n        * @type {object|undefined}\n        */\n        /**\n         * Callback function for sonification events on chart.\n         * @callback Highcharts.SonificationChartEventCallback\n         * @param {Highcharts.SonificationChartEventCallbackContext} e Sonification chart event context\n         */\n        /**\n         * Callback function for sonification events on series.\n         * @callback Highcharts.SonificationSeriesEventCallback\n         * @param {Highcharts.SonificationSeriesEventCallbackContext} e Sonification series event context\n         */\n        (''); // Keep above doclets in JS file\n\n        return Options;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/SynthPatch.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Class representing a Synth Patch, used by Instruments in the\n         *  sonification.js module.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __assign = (this && this.__assign) || function () {\n            __assign = Object.assign || function(t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n                }\n                return t;\n            };\n            return __assign.apply(this, arguments);\n        };\n        var clamp = U.clamp, defined = U.defined, pick = U.pick;\n        /**\n         * Get the multiplier value from a pitch tracked multiplier. The parameter\n         * specifies the multiplier at ca 3200Hz. It is 1 at ca 50Hz. In between\n         * it is mapped logarithmically.\n         * @private\n         * @param {number} multiplier The multiplier to track.\n         * @param {number} freq The current frequency.\n         */\n        function getPitchTrackedMultiplierVal(multiplier, freq) {\n            var a = 0.2414 * multiplier - 0.2414, b = (3.5 - 1.7 * multiplier) / 1.8;\n            return a * Math.log(freq) + b;\n        }\n        /**\n         * Schedule a mini ramp to volume at time - avoid clicks/pops.\n         * @private\n         * @param {Object} gainNode The gain node to schedule for.\n         * @param {number} time The time in seconds to start ramp.\n         * @param {number} vol The volume to ramp to.\n         */\n        function miniRampToVolAtTime(gainNode, time, vol) {\n            gainNode.gain.cancelScheduledValues(time);\n            gainNode.gain.setTargetAtTime(vol, time, SynthPatch.stopRampTime / 4);\n            gainNode.gain.setValueAtTime(vol, time + SynthPatch.stopRampTime);\n        }\n        /**\n         * Schedule a gain envelope for a gain node.\n         * @private\n         * @param {Array<Object>} envelope The envelope to schedule.\n         * @param {string} type Type of envelope, attack or release.\n         * @param {number} time At what time (in seconds) to start envelope.\n         * @param {Object} gainNode The gain node to schedule on.\n         * @param {number} [volumeMultiplier] Volume multiplier for the envelope.\n         */\n        function scheduleGainEnvelope(envelope, type, time, gainNode, volumeMultiplier) {\n            if (volumeMultiplier === void 0) { volumeMultiplier = 1; }\n            var isAtk = type === 'attack', gain = gainNode.gain;\n            gain.cancelScheduledValues(time);\n            if (!envelope.length) {\n                miniRampToVolAtTime(gainNode, time, isAtk ? volumeMultiplier : 0);\n                return;\n            }\n            if (envelope[0].t > 1) {\n                envelope.unshift({ t: 0, vol: isAtk ? 0 : 1 });\n            }\n            envelope.forEach(function (ep, ix) {\n                var prev = envelope[ix - 1], delta = prev ? (ep.t - prev.t) / 1000 : 0, startTime = time + (prev ? prev.t / 1000 + SynthPatch.stopRampTime : 0);\n                gain.setTargetAtTime(ep.vol * volumeMultiplier, startTime, Math.max(delta, SynthPatch.stopRampTime) / 2);\n            });\n        }\n        /**\n         * Internal class used by Oscillator, representing a Pulse Oscillator node.\n         * Combines two sawtooth oscillators to create a pulse by phase inverting and\n         * delaying one of them.\n         * @class\n         * @private\n         */\n        var PulseOscNode = /** @class */ (function () {\n            function PulseOscNode(context, options) {\n                this.pulseWidth = Math.min(Math.max(0, options.pulseWidth || 0.5));\n                var makeOsc = function () { return new OscillatorNode(context, {\n                    type: 'sawtooth',\n                    detune: options.detune,\n                    frequency: Math.max(1, options.frequency || 350)\n                }); };\n                this.sawOscA = makeOsc();\n                this.sawOscB = makeOsc();\n                this.phaseInverter = new GainNode(context, { gain: -1 });\n                this.masterGain = new GainNode(context);\n                this.delayNode = new DelayNode(context, {\n                    delayTime: this.pulseWidth / this.sawOscA.frequency.value\n                });\n                this.sawOscA.connect(this.masterGain);\n                this.sawOscB.connect(this.phaseInverter);\n                this.phaseInverter.connect(this.delayNode);\n                this.delayNode.connect(this.masterGain);\n            }\n            PulseOscNode.prototype.connect = function (destination) {\n                this.masterGain.connect(destination);\n            };\n            // Polymorph with normal osc.frequency API\n            PulseOscNode.prototype.getFrequencyFacade = function () {\n                var pulse = this;\n                return {\n                    cancelScheduledValues: function (fromTime) {\n                        pulse.sawOscA.frequency.cancelScheduledValues(fromTime);\n                        pulse.sawOscB.frequency.cancelScheduledValues(fromTime);\n                        pulse.delayNode.delayTime.cancelScheduledValues(fromTime);\n                        return pulse.sawOscA.frequency;\n                    },\n                    setValueAtTime: function (frequency, time) {\n                        this.cancelScheduledValues(time);\n                        pulse.sawOscA.frequency.setValueAtTime(frequency, time);\n                        pulse.sawOscB.frequency.setValueAtTime(frequency, time);\n                        pulse.delayNode.delayTime.setValueAtTime(Math.round(10000 * pulse.pulseWidth / frequency) / 10000, time);\n                        return pulse.sawOscA.frequency;\n                    },\n                    setTargetAtTime: function (frequency, time, timeConstant) {\n                        this.cancelScheduledValues(time);\n                        pulse.sawOscA.frequency\n                            .setTargetAtTime(frequency, time, timeConstant);\n                        pulse.sawOscB.frequency\n                            .setTargetAtTime(frequency, time, timeConstant);\n                        pulse.delayNode.delayTime.setTargetAtTime(Math.round(10000 * pulse.pulseWidth / frequency) / 10000, time, timeConstant);\n                        return pulse.sawOscA.frequency;\n                    }\n                };\n            };\n            PulseOscNode.prototype.getPWMTarget = function () {\n                return this.delayNode.delayTime;\n            };\n            PulseOscNode.prototype.start = function () {\n                this.sawOscA.start();\n                this.sawOscB.start();\n            };\n            PulseOscNode.prototype.stop = function (time) {\n                this.sawOscA.stop(time);\n                this.sawOscB.stop(time);\n            };\n            return PulseOscNode;\n        }());\n        /**\n         * Internal class used by SynthPatch\n         * @class\n         * @private\n         */\n        var Oscillator = /** @class */ (function () {\n            function Oscillator(audioContext, options, destination) {\n                this.audioContext = audioContext;\n                this.options = options;\n                this.fmOscillatorIx = options.fmOscillator;\n                this.vmOscillatorIx = options.vmOscillator;\n                this.createSoundSource();\n                this.createGain();\n                this.createFilters();\n                this.createVolTracking();\n                if (destination) {\n                    this.connect(destination);\n                }\n            }\n            // Connect the node tree from destination down to oscillator,\n            // depending on which nodes exist. Done automatically unless\n            // no destination was passed to constructor.\n            Oscillator.prototype.connect = function (destination) {\n                [\n                    this.lowpassNode,\n                    this.highpassNode,\n                    this.volTrackingNode,\n                    this.vmNode,\n                    this.gainNode,\n                    this.whiteNoise,\n                    this.pulseNode,\n                    this.oscNode\n                ].reduce(function (prev, cur) {\n                    return (cur ?\n                        (cur.connect(prev), cur) :\n                        prev);\n                }, destination);\n            };\n            Oscillator.prototype.start = function () {\n                if (this.oscNode) {\n                    this.oscNode.start();\n                }\n                if (this.whiteNoise) {\n                    this.whiteNoise.start();\n                }\n                if (this.pulseNode) {\n                    this.pulseNode.start();\n                }\n            };\n            Oscillator.prototype.stopAtTime = function (time) {\n                if (this.oscNode) {\n                    this.oscNode.stop(time);\n                }\n                if (this.whiteNoise) {\n                    this.whiteNoise.stop(time);\n                }\n                if (this.pulseNode) {\n                    this.pulseNode.stop(time);\n                }\n            };\n            Oscillator.prototype.setFreqAtTime = function (time, frequency, glideDuration) {\n                if (glideDuration === void 0) { glideDuration = 0; }\n                var opts = this.options, f = clamp(pick(opts.fixedFrequency, frequency) *\n                    (opts.freqMultiplier || 1), 0, 21000), oscTarget = this.getOscTarget(), timeConstant = glideDuration / 5000;\n                if (oscTarget) {\n                    oscTarget.cancelScheduledValues(time);\n                    if (glideDuration && time - (this.lastUpdateTime || -1) > 0.01) {\n                        oscTarget.setTargetAtTime(f, time, timeConstant);\n                        oscTarget.setValueAtTime(f, time + timeConstant);\n                    }\n                    else {\n                        oscTarget.setValueAtTime(f, time);\n                    }\n                }\n                this.scheduleVolTrackingChange(f, time, glideDuration);\n                this.scheduleFilterTrackingChange(f, time, glideDuration);\n                this.lastUpdateTime = time;\n            };\n            // Get target for FM synthesis if another oscillator wants to modulate.\n            // Pulse nodes don't do FM, but do PWM instead.\n            Oscillator.prototype.getFMTarget = function () {\n                return this.oscNode && this.oscNode.detune ||\n                    this.whiteNoise && this.whiteNoise.detune ||\n                    this.pulseNode && this.pulseNode.getPWMTarget();\n            };\n            // Get target for volume modulation if another oscillator wants to modulate.\n            Oscillator.prototype.getVMTarget = function () {\n                return this.vmNode && this.vmNode.gain;\n            };\n            // Schedule one of the oscillator envelopes at a specified time in\n            // seconds (in AudioContext timespace).\n            Oscillator.prototype.runEnvelopeAtTime = function (type, time) {\n                if (!this.gainNode) {\n                    return;\n                }\n                var env = (type === 'attack' ? this.options.attackEnvelope :\n                    this.options.releaseEnvelope) || [];\n                scheduleGainEnvelope(env, type, time, this.gainNode, this.options.volume);\n            };\n            // Cancel any envelopes or frequency changes currently scheduled\n            Oscillator.prototype.cancelScheduled = function () {\n                if (this.gainNode) {\n                    this.gainNode.gain\n                        .cancelScheduledValues(this.audioContext.currentTime);\n                }\n                var oscTarget = this.getOscTarget();\n                if (oscTarget) {\n                    oscTarget.cancelScheduledValues(0);\n                }\n                if (this.lowpassNode) {\n                    this.lowpassNode.frequency.cancelScheduledValues(0);\n                }\n                if (this.highpassNode) {\n                    this.highpassNode.frequency.cancelScheduledValues(0);\n                }\n                if (this.volTrackingNode) {\n                    this.volTrackingNode.gain.cancelScheduledValues(0);\n                }\n            };\n            // Set the pitch dependent volume to fit some frequency at some time\n            Oscillator.prototype.scheduleVolTrackingChange = function (frequency, time, glideDuration) {\n                if (this.volTrackingNode) {\n                    var v = getPitchTrackedMultiplierVal(this.options.volumePitchTrackingMultiplier || 1, frequency), rampTime = glideDuration ? glideDuration / 1000 :\n                        SynthPatch.stopRampTime;\n                    this.volTrackingNode.gain.cancelScheduledValues(time);\n                    this.volTrackingNode.gain.setTargetAtTime(v, time, rampTime / 5);\n                    this.volTrackingNode.gain.setValueAtTime(v, time + rampTime);\n                }\n            };\n            // Set the pitch dependent filter frequency to fit frequency at some time\n            Oscillator.prototype.scheduleFilterTrackingChange = function (frequency, time, glideDuration) {\n                var opts = this.options, rampTime = glideDuration ? glideDuration / 1000 :\n                    SynthPatch.stopRampTime, scheduleFilterTarget = function (filterNode, filterOptions) {\n                    var multiplier = getPitchTrackedMultiplierVal(filterOptions.frequencyPitchTrackingMultiplier || 1, frequency), f = clamp((filterOptions.frequency || 1000) * multiplier, 0, 21000);\n                    filterNode.frequency.cancelScheduledValues(time);\n                    filterNode.frequency.setTargetAtTime(f, time, rampTime / 5);\n                    filterNode.frequency.setValueAtTime(f, time + rampTime);\n                };\n                if (this.lowpassNode && opts.lowpass) {\n                    scheduleFilterTarget(this.lowpassNode, opts.lowpass);\n                }\n                if (this.highpassNode && opts.highpass) {\n                    scheduleFilterTarget(this.highpassNode, opts.highpass);\n                }\n            };\n            Oscillator.prototype.createGain = function () {\n                var opts = this.options, needsGainNode = defined(opts.volume) ||\n                    opts.attackEnvelope && opts.attackEnvelope.length ||\n                    opts.releaseEnvelope && opts.releaseEnvelope.length;\n                if (needsGainNode) {\n                    this.gainNode = new GainNode(this.audioContext, {\n                        gain: pick(opts.volume, 1)\n                    });\n                }\n                // We always need VM gain, so make that\n                this.vmNode = new GainNode(this.audioContext);\n            };\n            // Create the oscillator or audio buffer acting as the sound source\n            Oscillator.prototype.createSoundSource = function () {\n                var opts = this.options, ctx = this.audioContext, frequency = (opts.fixedFrequency || 0) *\n                    (opts.freqMultiplier || 1);\n                if (opts.type === 'whitenoise') {\n                    var bSize = ctx.sampleRate * 2, buffer = ctx.createBuffer(1, bSize, ctx.sampleRate), data = buffer.getChannelData(0);\n                    for (var i = 0; i < bSize; ++i) {\n                        // More pleasant \"white\" noise with less variance than -1 to +1\n                        data[i] = Math.random() * 1.2 - 0.6;\n                    }\n                    var wn = this.whiteNoise = ctx.createBufferSource();\n                    wn.buffer = buffer;\n                    wn.loop = true;\n                }\n                else if (opts.type === 'pulse') {\n                    this.pulseNode = new PulseOscNode(ctx, {\n                        detune: opts.detune,\n                        pulseWidth: opts.pulseWidth,\n                        frequency: frequency\n                    });\n                }\n                else {\n                    this.oscNode = new OscillatorNode(ctx, {\n                        type: opts.type || 'sine',\n                        detune: opts.detune,\n                        frequency: frequency\n                    });\n                }\n            };\n            // Lowpass/Highpass filters\n            Oscillator.prototype.createFilters = function () {\n                var opts = this.options;\n                if (opts.lowpass && opts.lowpass.frequency) {\n                    this.lowpassNode = new BiquadFilterNode(this.audioContext, {\n                        type: 'lowpass',\n                        Q: opts.lowpass.Q || 1,\n                        frequency: opts.lowpass.frequency\n                    });\n                }\n                if (opts.highpass && opts.highpass.frequency) {\n                    this.highpassNode = new BiquadFilterNode(this.audioContext, {\n                        type: 'highpass',\n                        Q: opts.highpass.Q || 1,\n                        frequency: opts.highpass.frequency\n                    });\n                }\n            };\n            // Gain node used for frequency dependent volume tracking\n            Oscillator.prototype.createVolTracking = function () {\n                var opts = this.options;\n                if (opts.volumePitchTrackingMultiplier &&\n                    opts.volumePitchTrackingMultiplier !== 1) {\n                    this.volTrackingNode = new GainNode(this.audioContext, {\n                        gain: 1\n                    });\n                }\n            };\n            // Get the oscillator frequency target\n            Oscillator.prototype.getOscTarget = function () {\n                return this.oscNode ? this.oscNode.frequency :\n                    this.pulseNode && this.pulseNode.getFrequencyFacade();\n            };\n            return Oscillator;\n        }());\n        /**\n         * The SynthPatch class. This class represents an instance and configuration\n         * of the built-in Highcharts synthesizer. It can be used to play various\n         * generated sounds.\n         *\n         * @sample highcharts/sonification/manual-using-synth\n         *         Using Synth directly to sonify manually\n         * @sample highcharts/sonification/custom-instrument\n         *         Using custom Synth options with chart\n         *\n         * @requires modules/sonification\n         *\n         * @class\n         * @name Highcharts.SynthPatch\n         *\n         * @param {AudioContext} audioContext\n         *        The AudioContext to use.\n         * @param {Highcharts.SynthPatchOptionsObject} options\n         *        Configuration for the synth.\n         */\n        var SynthPatch = /** @class */ (function () {\n            function SynthPatch(audioContext, options) {\n                var _this = this;\n                this.audioContext = audioContext;\n                this.options = options;\n                this.eqNodes = [];\n                this.midiInstrument = options.midiInstrument || 1;\n                this.outputNode = new GainNode(audioContext, { gain: 0 });\n                this.createEqChain(this.outputNode);\n                var inputNode = this.eqNodes.length ?\n                    this.eqNodes[0] : this.outputNode;\n                this.oscillators = (this.options.oscillators || []).map(function (oscOpts) { return new Oscillator(audioContext, oscOpts, defined(oscOpts.fmOscillator) || defined(oscOpts.vmOscillator) ?\n                    void 0 : inputNode); });\n                // Now that we have all oscillators, connect the ones\n                // that are used for modulation.\n                this.oscillators.forEach(function (osc) {\n                    var connectTarget = function (targetFunc, targetOsc) {\n                        if (targetOsc) {\n                            var target = targetOsc[targetFunc]();\n                            if (target) {\n                                osc.connect(target);\n                            }\n                        }\n                    };\n                    if (defined(osc.fmOscillatorIx)) {\n                        connectTarget('getFMTarget', _this.oscillators[osc.fmOscillatorIx]);\n                    }\n                    if (defined(osc.vmOscillatorIx)) {\n                        connectTarget('getVMTarget', _this.oscillators[osc.vmOscillatorIx]);\n                    }\n                });\n            }\n            /**\n             * Start the oscillators, but don't output sound.\n             * @function Highcharts.SynthPatch#startSilently\n             */\n            SynthPatch.prototype.startSilently = function () {\n                this.outputNode.gain.value = 0;\n                this.oscillators.forEach(function (o) { return o.start(); });\n            };\n            /**\n             * Stop the synth. It can't be started again.\n             * @function Highcharts.SynthPatch#stop\n             */\n            SynthPatch.prototype.stop = function () {\n                var curTime = this.audioContext.currentTime, endTime = curTime + SynthPatch.stopRampTime;\n                miniRampToVolAtTime(this.outputNode, curTime, 0);\n                this.oscillators.forEach(function (o) { return o.stopAtTime(endTime); });\n                this.outputNode.disconnect();\n            };\n            /**\n             * Mute sound at time (in seconds).\n             * Will still run release envelope. Note: If scheduled multiple times in\n             * succession, the release envelope will run, and that could make sound.\n             * @function Highcharts.SynthPatch#silenceAtTime\n             * @param {number} time Time offset from now, in seconds\n             */\n            SynthPatch.prototype.silenceAtTime = function (time) {\n                if (!time && this.outputNode.gain.value < 0.01) {\n                    this.outputNode.gain.value = 0;\n                    return; // Skip if not needed\n                }\n                this.releaseAtTime((time || 0) + this.audioContext.currentTime);\n            };\n            /**\n             * Mute sound immediately.\n             * @function Highcharts.SynthPatch#mute\n             */\n            SynthPatch.prototype.mute = function () {\n                this.cancelScheduled();\n                miniRampToVolAtTime(this.outputNode, this.audioContext.currentTime, 0);\n            };\n            /**\n             * Play a frequency at time (in seconds).\n             * Time denotes when the attack ramp starts. Note duration is given in\n             * milliseconds. If note duration is not given, the note plays indefinitely.\n             * @function Highcharts.SynthPatch#silenceAtTime\n             * @param {number} time Time offset from now, in seconds\n             * @param {number} frequency The frequency to play at\n             * @param {number|undefined} noteDuration Duration to play, in milliseconds\n             */\n            SynthPatch.prototype.playFreqAtTime = function (time, frequency, noteDuration) {\n                var t = (time || 0) + this.audioContext.currentTime, opts = this.options;\n                this.oscillators.forEach(function (o) {\n                    o.setFreqAtTime(t, frequency, opts.noteGlideDuration);\n                    o.runEnvelopeAtTime('attack', t);\n                });\n                scheduleGainEnvelope(opts.masterAttackEnvelope || [], 'attack', t, this.outputNode, opts.masterVolume);\n                if (noteDuration) {\n                    this.releaseAtTime(t + noteDuration / 1000);\n                }\n            };\n            /**\n             * Cancel any scheduled actions\n             * @function Highcharts.SynthPatch#cancelScheduled\n             */\n            SynthPatch.prototype.cancelScheduled = function () {\n                this.outputNode.gain.cancelScheduledValues(this.audioContext.currentTime);\n                this.oscillators.forEach(function (o) { return o.cancelScheduled(); });\n            };\n            /**\n             * Connect the SynthPatch output to an audio node / destination.\n             * @function Highcharts.SynthPatch#connect\n             * @param {AudioNode} destinationNode The node to connect to.\n             * @return {AudioNode} The destination node, to allow chaining.\n             */\n            SynthPatch.prototype.connect = function (destinationNode) {\n                return this.outputNode.connect(destinationNode);\n            };\n            /**\n             * Create nodes for master EQ\n             * @private\n             */\n            SynthPatch.prototype.createEqChain = function (outputNode) {\n                var _this = this;\n                this.eqNodes = (this.options.eq || []).map(function (eqDef) {\n                    return new BiquadFilterNode(_this.audioContext, __assign({ type: 'peaking' }, eqDef));\n                });\n                // Connect nodes\n                this.eqNodes.reduceRight(function (chain, node) {\n                    node.connect(chain);\n                    return node;\n                }, outputNode);\n            };\n            /**\n             * Fade by release envelopes at time\n             * @private\n             */\n            SynthPatch.prototype.releaseAtTime = function (time) {\n                var maxReleaseDuration = 0;\n                this.oscillators.forEach(function (o) {\n                    var env = o.options.releaseEnvelope;\n                    if (env && env.length) {\n                        maxReleaseDuration = Math.max(maxReleaseDuration, env[env.length - 1].t);\n                        o.runEnvelopeAtTime('release', time);\n                    }\n                });\n                var masterEnv = this.options.masterReleaseEnvelope || [];\n                if (masterEnv.length) {\n                    scheduleGainEnvelope(masterEnv, 'release', time, this.outputNode, this.options.masterVolume);\n                    maxReleaseDuration = Math.max(maxReleaseDuration, masterEnv[masterEnv.length - 1].t);\n                }\n                miniRampToVolAtTime(this.outputNode, time + maxReleaseDuration / 1000, 0);\n            };\n            SynthPatch.stopRampTime = 0.012; // Ramp time to 0 when stopping sound\n            return SynthPatch;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * An EQ filter definition for a low/highpass filter.\n         * @requires modules/sonification\n         * @interface Highcharts.SynthPatchPassFilter\n         */ /**\n        * Filter frequency.\n        * @name Highcharts.SynthPatchPassFilter#frequency\n        * @type {number|undefined}\n        */ /**\n        * A pitch tracking multiplier similarly to the one for oscillator volume.\n        * Affects the filter frequency.\n        * @name Highcharts.SynthPatchPassFilter#frequencyPitchTrackingMultiplier\n        * @type {number|undefined}\n        */ /**\n        * Filter resonance bump/dip in dB. Defaults to 0.\n        * @name Highcharts.SynthPatchPassFilter#Q\n        * @type {number|undefined}\n        */\n        /**\n         * @typedef {Highcharts.Record<\"t\"|\"vol\",number>} Highcharts.SynthEnvelopePoint\n         * @requires modules/sonification\n         */\n        /**\n         * @typedef {Array<Highcharts.SynthEnvelopePoint>} Highcharts.SynthEnvelope\n         * @requires modules/sonification\n         */\n        /**\n         * @typedef {\"sine\"|\"square\"|\"sawtooth\"|\"triangle\"|\"whitenoise\"|\"pulse\"} Highcharts.SynthPatchOscillatorType\n         * @requires modules/sonification\n         */\n        /**\n         * Configuration for an oscillator for the synth.\n         * @requires modules/sonification\n         * @interface Highcharts.SynthPatchOscillatorOptionsObject\n         */ /**\n        * The type of oscillator. This describes the waveform of the oscillator.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#type\n        * @type {Highcharts.SynthPatchOscillatorType|undefined}\n        */ /**\n        * A volume modifier for the oscillator. Defaults to 1.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#volume\n        * @type {number|undefined}\n        */ /**\n        * A multiplier for the input frequency of the oscillator. Defaults to 1. If\n        * this is for example set to 4, an input frequency of 220Hz will cause the\n        * oscillator to play at 880Hz.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#freqMultiplier\n        * @type {number|undefined}\n        */ /**\n        * Play a fixed frequency for the oscillator - ignoring input frequency. The\n        * frequency multiplier is still applied.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#fixedFrequency\n        * @type {number|undefined}\n        */ /**\n        * Applies a detuning of all frequencies. Set in cents. Defaults to 0.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#detune\n        * @type {number|undefined}\n        */ /**\n        * Width of the pulse waveform. Only applies to \"pulse\" type oscillators. A\n        * width of 0.5 is roughly equal to a square wave. This is the default.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#pulseWidth\n        * @type {number|undefined}\n        */ /**\n        * Index of another oscillator to use as carrier, with this oscillator being\n        * used as a volume modulator. The first oscillator in the array has index 0,\n        * and so on. This option can be used to produce tremolo effects.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#vmOscillator\n        * @type {number|undefined}\n        */ /**\n        * Index of another oscillator to use as carrier, with this oscillator being\n        * used as a frequency modulator. Note: If the carrier is a pulse oscillator,\n        * the modulation will be on pulse width instead of frequency, allowing for\n        * PWM effects.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#fmOscillator\n        * @type {number|undefined}\n        */ /**\n        * A tracking multiplier used for frequency dependent behavior. For example, by\n        * setting the volume tracking multiplier to 0.01, the volume will be lower at\n        * higher notes. The multiplier is a logarithmic function, where 1 is at ca\n        * 50Hz, and you define the output multiplier for an input frequency around\n        * 3.2kHz.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#volumePitchTrackingMultiplier\n        * @type {number|undefined}\n        */ /**\n        * Volume envelope for note attack, specific to this oscillator.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#attackEnvelope\n        * @type {Highcharts.SynthEnvelope|undefined}\n        */ /**\n        * Volume envelope for note release, specific to this oscillator.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#releaseEnvelope\n        * @type {Highcharts.SynthEnvelope|undefined}\n        */ /**\n        * Highpass filter options for the oscillator.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#highpass\n        * @type {Highcharts.SynthPatchPassFilter|undefined}\n        */ /**\n        * Lowpass filter options for the oscillator.\n        * @name Highcharts.SynthPatchOscillatorOptionsObject#lowpass\n        * @type {Highcharts.SynthPatchPassFilter|undefined}\n        */\n        /**\n         * An EQ filter definition for a bell filter.\n         * @requires modules/sonification\n         * @interface Highcharts.SynthPatchEQFilter\n         */ /**\n        * Filter frequency.\n        * @name Highcharts.SynthPatchEQFilter#frequency\n        * @type {number|undefined}\n        */ /**\n        * Filter gain. Defaults to 0.\n        * @name Highcharts.SynthPatchEQFilter#gain\n        * @type {number|undefined}\n        */ /**\n        * Filter Q. Defaults to 1. Lower numbers mean a wider bell.\n        * @name Highcharts.SynthPatchEQFilter#Q\n        * @type {number|undefined}\n        */\n        /**\n         * A set of options for the SynthPatch class.\n         *\n         * @requires modules/sonification\n         *\n         * @interface Highcharts.SynthPatchOptionsObject\n         */ /**\n        * Global volume modifier for the synth. Defaults to 1. Note that if the total\n        * volume of all oscillators is too high, the browser's audio engine can\n        * distort.\n        * @name Highcharts.SynthPatchOptionsObject#masterVolume\n        * @type {number|undefined}\n        */ /**\n        * Time in milliseconds to glide between notes. Causes a glissando effect.\n        * @name Highcharts.SynthPatchOptionsObject#noteGlideDuration\n        * @type {number|undefined}\n        */ /**\n        * MIDI instrument ID for the synth. Used with MIDI export of Timelines to have\n        * tracks open with a similar instrument loaded when imported into other\n        * applications. Defaults to 1, \"Acoustic Grand Piano\".\n        * @name Highcharts.SynthPatchOptionsObject#midiInstrument\n        * @type {number|undefined}\n        */ /**\n        * Volume envelope for the overall attack of a note - what happens to the\n        * volume when a note first plays. If the volume goes to 0 in the attack\n        * envelope, the synth will not be able to play the note continuously/\n        * sustained, and the notes will be staccato.\n        * @name Highcharts.SynthPatchOptionsObject#masterAttackEnvelope\n        * @type {Highcharts.SynthEnvelope|undefined}\n        */ /**\n        * Volume envelope for the overall release of a note - what happens to the\n        * volume when a note stops playing. If the release envelope starts at a higher\n        * volume than the attack envelope ends, the volume will first rise to that\n        * volume before falling when releasing a note. If the note is released while\n        * the attack envelope is still in effect, the attack envelope is interrupted,\n        * and the release envelope plays instead.\n        * @name Highcharts.SynthPatchOptionsObject#masterReleaseEnvelope\n        * @type {Highcharts.SynthEnvelope|undefined}\n        */ /**\n        * Master EQ filters for the synth, affecting the overall sound.\n        * @name Highcharts.SynthPatchOptionsObject#eq\n        * @type {Array<Highcharts.SynthPatchEQFilter>|undefined}\n        */ /**\n        * Array of oscillators to add to the synth.\n        * @name Highcharts.SynthPatchOptionsObject#oscillators\n        * @type {Array<Highcharts.SynthPatchOscillatorOptionsObject>|undefined}\n        */\n        (''); // Keep above doclets in JS file\n\n        return SynthPatch;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/InstrumentPresets.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Presets for SynthPatch.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var InstrumentPresets = {\n            // PIANO ----------------------------\n            piano: {\n                masterVolume: 0.45,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0.71 },\n                    { t: 40, vol: 0.79 },\n                    { t: 82, vol: 0.64 },\n                    { t: 147, vol: 0.29 },\n                    { t: 260, vol: 0.15 },\n                    { t: 417, vol: 0.05 },\n                    { t: 589, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 200, Q: 0.7, gain: 6 },\n                    { frequency: 450, gain: 6 },\n                    { frequency: 1300, gain: 2 },\n                    { frequency: 2600, Q: 0.8, gain: 8 },\n                    { frequency: 3500, Q: 0.8, gain: 6 },\n                    { frequency: 6200, Q: 0.8, gain: 10 },\n                    { frequency: 8000, gain: -23 },\n                    { frequency: 10000, Q: 0.4, gain: -12 }\n                ],\n                oscillators: [{\n                        type: 'pulse',\n                        volume: 0.5,\n                        pulseWidth: 0.55,\n                        volumePitchTrackingMultiplier: 0.1,\n                        lowpass: {\n                            frequency: 4.5,\n                            frequencyPitchTrackingMultiplier: 900,\n                            Q: -2\n                        },\n                        highpass: { frequency: 270 },\n                        attackEnvelope: [{ t: 1, vol: 1 }],\n                        releaseEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 282, vol: 0.64 },\n                            { t: 597, vol: 0 }\n                        ]\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.8,\n                        lowpass: { frequency: 400 },\n                        highpass: { frequency: 300 },\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 19, vol: 0 }\n                        ]\n                    }]\n            },\n            // PLUCKED --------------------------\n            plucked: {\n                masterVolume: 0.5,\n                midiInstrument: 25,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0.71 },\n                    { t: 4, vol: 0.71 },\n                    { t: 31, vol: 0.4 },\n                    { t: 109, vol: 0.12 },\n                    { t: 234, vol: 0.04 },\n                    { t: 442, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 800, gain: -8 },\n                    { frequency: 1400, Q: 4, gain: 4 },\n                    { frequency: 1600, gain: -14 },\n                    { frequency: 2200, gain: -8 },\n                    { frequency: 3600, gain: -2 },\n                    { frequency: 6400, Q: 2, gain: -6 }\n                ],\n                oscillators: [{\n                        type: 'sawtooth',\n                        volume: 0.9,\n                        volumePitchTrackingMultiplier: 0.6,\n                        highpass: { frequency: 100 },\n                        lowpass: { frequency: 8000 },\n                        releaseEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 315, vol: 0.56 },\n                            { t: 550, vol: 0 }\n                        ]\n                    }]\n            },\n            // FLUTE ----------------------------\n            flute: {\n                masterVolume: 1.1,\n                midiInstrument: 74,\n                noteGlideDuration: 30,\n                masterAttackEnvelope: [\n                    { t: 0, vol: 0 },\n                    { t: 29, vol: 1 },\n                    { t: 76, vol: 0.48 },\n                    { t: 600, vol: 0.36 }\n                ],\n                masterReleaseEnvelope: [\n                    { t: 1, vol: 0.36 },\n                    { t: 24, vol: 0.15 },\n                    { t: 119, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 150, Q: 0.6, gain: -10 },\n                    { frequency: 500, gain: 4 },\n                    { frequency: 1100, gain: -4 },\n                    { frequency: 2200, gain: -14 },\n                    { frequency: 5000, gain: 8 },\n                    { frequency: 6400, gain: 10 },\n                    { frequency: 8000, gain: 12 },\n                    { frequency: 10800, gain: 8 }\n                ],\n                oscillators: [{\n                        type: 'triangle',\n                        volume: 1,\n                        volumePitchTrackingMultiplier: 0.4,\n                        lowpass: {\n                            frequency: 12,\n                            frequencyPitchTrackingMultiplier: 100\n                        },\n                        highpass: {\n                            frequency: 200\n                        }\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 5,\n                        volume: 0.2,\n                        vmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 48, vol: 0 },\n                            { t: 225, vol: 0.05 },\n                            { t: 600, vol: 0.77 }\n                        ]\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.13,\n                        lowpass: {\n                            frequency: 9000,\n                            Q: 3\n                        },\n                        highpass: {\n                            frequency: 6000,\n                            Q: 3\n                        },\n                        vmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 0, vol: 0 },\n                            { t: 26, vol: 1 },\n                            { t: 93, vol: 0.8 }\n                        ]\n                    }]\n            },\n            // LEAD -----------------------------\n            lead: {\n                masterVolume: 1,\n                midiInstrument: 20,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0.81 },\n                    { t: 98, vol: 0.5 },\n                    { t: 201, vol: 0.18 },\n                    { t: 377, vol: 0.04 },\n                    { t: 586, vol: 0 },\n                    { t: 586, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 200, gain: -6 },\n                    { frequency: 400, gain: -8 },\n                    { frequency: 800, Q: 0.5, gain: -10 },\n                    { frequency: 1200, gain: 4 },\n                    { frequency: 3600, gain: -4 },\n                    { frequency: 4200, gain: -12 },\n                    { frequency: 7400, gain: -14 },\n                    { frequency: 10000, gain: 2 }\n                ],\n                oscillators: [{\n                        type: 'triangle',\n                        volume: 1.1,\n                        volumePitchTrackingMultiplier: 0.6,\n                        lowpass: { frequency: 5000 },\n                        highpass: { frequency: 100 }\n                    }, {\n                        type: 'sawtooth',\n                        volume: 0.4,\n                        lowpass: { frequency: 7000 },\n                        highpass: { frequency: 800, Q: 6 },\n                        releaseEnvelope: [\n                            { t: 0, vol: 0.99 },\n                            { t: 200, vol: 0.83 },\n                            { t: 495, vol: 0 }\n                        ]\n                    }]\n            },\n            // VIBRAPHONE -----------------------\n            vibraphone: {\n                masterVolume: 1,\n                midiInstrument: 12,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0 },\n                    { t: 10, vol: 0.63 },\n                    { t: 82, vol: 0.64 },\n                    { t: 149, vol: 0.26 },\n                    { t: 600, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 200, Q: 0.8, gain: -12 },\n                    { frequency: 400, gain: -4 },\n                    { frequency: 1600, Q: 0.5, gain: 6 },\n                    { frequency: 2200, Q: 0.5, gain: 6 },\n                    { frequency: 6400, gain: 4 },\n                    { frequency: 12800, gain: 4 }\n                ],\n                oscillators: [{\n                        type: 'sine',\n                        volume: 1.5,\n                        volumePitchTrackingMultiplier: 0.0000001,\n                        attackEnvelope: [{ t: 1, vol: 1 }],\n                        releaseEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 146, vol: 0.39 },\n                            { t: 597, vol: 0 }\n                        ]\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.03,\n                        volumePitchTrackingMultiplier: 0.0001,\n                        lowpass: {\n                            frequency: 900\n                        },\n                        highpass: {\n                            frequency: 800\n                        },\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 9, vol: 0 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        freqMultiplier: 4,\n                        volume: 0.15,\n                        volumePitchTrackingMultiplier: 0.0001\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 3,\n                        volume: 6,\n                        fmOscillator: 0,\n                        releaseEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 190, vol: 0.41 },\n                            { t: 600, vol: 0 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 6,\n                        volume: 3,\n                        fmOscillator: 2\n                    }, {\n                        type: 'sine',\n                        freqMultiplier: 9,\n                        volume: 0.0005,\n                        volumePitchTrackingMultiplier: 0.0001,\n                        releaseEnvelope: [\n                            { t: 1, vol: 0.97 },\n                            { t: 530, vol: 0 }\n                        ]\n                    }]\n            },\n            // SAXOPHONE ------------------------\n            saxophone: {\n                masterVolume: 1,\n                midiInstrument: 67,\n                noteGlideDuration: 10,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0.57 },\n                    { t: 35, vol: 1 },\n                    { t: 87, vol: 0.84 },\n                    { t: 111, vol: 0.6 },\n                    { t: 296, vol: 0.49 },\n                    { t: 600, vol: 0.58 }\n                ],\n                masterReleaseEnvelope: [\n                    { t: 1, vol: 0.58 },\n                    { t: 47, vol: 0.16 },\n                    { t: 119, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 200, gain: -2 },\n                    { frequency: 600, gain: 2 },\n                    { frequency: 800, gain: -10 },\n                    { frequency: 1100, gain: -2 },\n                    { frequency: 2200, gain: -2 },\n                    { frequency: 3500, gain: 10 },\n                    { frequency: 12800, gain: 4 }\n                ],\n                oscillators: [{\n                        type: 'sawtooth',\n                        volume: 0.45,\n                        volumePitchTrackingMultiplier: 0.06,\n                        lowpass: {\n                            frequency: 18,\n                            frequencyPitchTrackingMultiplier: 200\n                        },\n                        highpass: {\n                            frequency: 300\n                        }\n                    }, {\n                        type: 'whitenoise',\n                        fixedFrequency: 1,\n                        volume: 0.4,\n                        highpass: {\n                            frequency: 7000\n                        },\n                        vmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 51, vol: 1 },\n                            { t: 86, vol: 0.84 },\n                            { t: 500, vol: 0.78 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 4,\n                        volume: 2,\n                        fmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 0, vol: 0 },\n                            { t: 15, vol: 0.94 },\n                            { t: 79, vol: 1 },\n                            { t: 172, vol: 0.47 },\n                            { t: 500, vol: 0.26 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 7,\n                        volume: 6,\n                        fmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 0, vol: 0 },\n                            { t: 25, vol: 0.99 },\n                            { t: 85, vol: 0 },\n                            { t: 85, vol: 0 },\n                            { t: 387, vol: 0.02 },\n                            { t: 511, vol: 0.43 },\n                            { t: 600, vol: 0 }\n                        ]\n                    }]\n            },\n            // TRUMPET ------------------------\n            trumpet: {\n                masterVolume: 0.3,\n                midiInstrument: 57,\n                noteGlideDuration: 40,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0 },\n                    { t: 17, vol: 1 },\n                    { t: 42, vol: 0.85 },\n                    { t: 76, vol: 1 },\n                    { t: 202, vol: 0.65 },\n                    { t: 226, vol: 0.86 },\n                    { t: 282, vol: 0.63 }\n                ],\n                masterReleaseEnvelope: [\n                    { t: 1, vol: 0.62 },\n                    { t: 34, vol: 0.14 },\n                    { t: 63, vol: 0.21 },\n                    { t: 96, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 200, Q: 0.6, gain: 10 },\n                    { frequency: 600, Q: 0.5, gain: 6 },\n                    { frequency: 1500, Q: 0.7, gain: 14 },\n                    { frequency: 3200, Q: 2, gain: 8 },\n                    { frequency: 3800, Q: 0.8, gain: 10 },\n                    { frequency: 6200, gain: 12 },\n                    { frequency: 8400, gain: -20 },\n                    { frequency: 12800, Q: 0.5, gain: -18 }\n                ],\n                oscillators: [{\n                        type: 'sawtooth',\n                        volume: 0.15,\n                        pulseWidth: 0.5,\n                        volumePitchTrackingMultiplier: 0.5,\n                        lowpass: { frequency: 1900, Q: 3 }\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 6,\n                        volume: 0.2,\n                        vmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 102, vol: 0.13 },\n                            { t: 556, vol: 0.24 }\n                        ]\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.45,\n                        highpass: { frequency: 7000, Q: 9 },\n                        vmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 89, vol: 0.51 },\n                            { t: 577, vol: 0.29 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 5.7,\n                        volume: 20,\n                        fmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 89, vol: 1 },\n                            { t: 137, vol: 0.46 },\n                            { t: 283, vol: 0.15 },\n                            { t: 600, vol: 0.28 }\n                        ]\n                    }]\n            },\n            // SAWSYNTH --------------------------\n            sawsynth: {\n                masterVolume: 0.3,\n                midiInstrument: 51,\n                noteGlideDuration: 40,\n                masterAttackEnvelope: [\n                    { t: 0, vol: 0.6 },\n                    { t: 9, vol: 1 },\n                    { t: 102, vol: 0.48 }\n                ],\n                eq: [{ frequency: 200, gain: -6 }],\n                oscillators: [{\n                        type: 'sawtooth',\n                        volume: 0.4,\n                        volumePitchTrackingMultiplier: 0.3\n                    }, {\n                        type: 'sawtooth',\n                        volume: 0.4,\n                        detune: 11,\n                        volumePitchTrackingMultiplier: 0.3\n                    }, {\n                        type: 'sawtooth',\n                        volume: 0.4,\n                        detune: -11,\n                        volumePitchTrackingMultiplier: 0.3\n                    }]\n            },\n            // BASIC1 ---------------------------\n            basic1: {\n                masterVolume: 1,\n                noteGlideDuration: 0,\n                masterReleaseEnvelope: [\n                    { t: 1, vol: 0.36 },\n                    { t: 24, vol: 0.15 },\n                    { t: 119, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 150, Q: 0.6, gain: -12 },\n                    { frequency: 1100, gain: -2 },\n                    { frequency: 2200, gain: -16 },\n                    { frequency: 5000, gain: 8 },\n                    { frequency: 6400, gain: 10 },\n                    { frequency: 8000, gain: 12 },\n                    { frequency: 10800, gain: 8 }\n                ],\n                oscillators: [{\n                        type: 'triangle',\n                        volume: 1,\n                        volumePitchTrackingMultiplier: 0.05,\n                        lowpass: { frequency: 17, frequencyPitchTrackingMultiplier: 100 },\n                        highpass: { frequency: 200 }\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.04,\n                        lowpass: { frequency: 9000, Q: 3 },\n                        highpass: { frequency: 6000, Q: 3 },\n                        vmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 0, vol: 0 },\n                            { t: 26, vol: 1 },\n                            { t: 71, vol: 0.73 }\n                        ]\n                    }]\n            },\n            // BASIC2 ---------------------------\n            basic2: {\n                masterVolume: 0.3,\n                eq: [\n                    { frequency: 200, Q: 0.7, gain: 6 },\n                    { frequency: 450, gain: 2 },\n                    { frequency: 1300, gain: -2 },\n                    { frequency: 2600, Q: 0.8, gain: 6 },\n                    { frequency: 3500, Q: 0.8, gain: 6 },\n                    { frequency: 6200, Q: 0.8, gain: 10 },\n                    { frequency: 8000, gain: -18 },\n                    { frequency: 10000, Q: 0.4, gain: -12 }\n                ],\n                oscillators: [{\n                        type: 'pulse',\n                        volume: 0.4,\n                        pulseWidth: 0.55,\n                        volumePitchTrackingMultiplier: 0.1,\n                        lowpass: {\n                            frequency: 4.5,\n                            frequencyPitchTrackingMultiplier: 900,\n                            Q: -2\n                        },\n                        highpass: { frequency: 270 }\n                    }]\n            },\n            // CHORD -------------------------------\n            chord: {\n                masterVolume: 1,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0.79 },\n                    { t: 27, vol: 0.86 },\n                    { t: 62, vol: 0.81 },\n                    { t: 150, vol: 0.35 },\n                    { t: 408, vol: 0.04 },\n                    { t: 600, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 200, gain: -8 },\n                    { frequency: 600, Q: 2, gain: 4 },\n                    { frequency: 800, gain: -10 },\n                    { frequency: 1600, gain: -2 },\n                    { frequency: 2200, gain: -6 },\n                    { frequency: 3600, Q: 0.7, gain: -2 },\n                    { frequency: 6400, gain: 6 },\n                    { frequency: 12800, gain: 6 }\n                ],\n                oscillators: [{\n                        type: 'triangle',\n                        volume: 1.1,\n                        volumePitchTrackingMultiplier: 0.05,\n                        lowpass: { frequency: 8000 },\n                        highpass: { frequency: 100 },\n                        releaseEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 315, vol: 0.56 },\n                            { t: 540, vol: 0 }\n                        ]\n                    }, {\n                        type: 'triangle',\n                        freqMultiplier: 1.17,\n                        volume: 0.4,\n                        volumePitchTrackingMultiplier: 0.07,\n                        lowpass: { frequency: 5000 },\n                        highpass: { frequency: 100 },\n                        releaseEnvelope: [\n                            { t: 0, vol: 1 },\n                            { t: 476, vol: 0 }\n                        ]\n                    }, {\n                        type: 'triangle',\n                        freqMultiplier: 1.58333,\n                        volume: 0.7,\n                        volumePitchTrackingMultiplier: 0.02,\n                        highpass: { frequency: 200 },\n                        releaseEnvelope: [\n                            { t: 0, vol: 1 },\n                            { t: 422, vol: 0.56 },\n                            { t: 577, vol: 0 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 10,\n                        volume: 4,\n                        fmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 157, vol: 0.65 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        fixedFrequency: 5,\n                        volume: 0.3,\n                        vmOscillator: 2,\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 155, vol: 0.91 },\n                            { t: 289, vol: 0.78 }\n                        ]\n                    }]\n            },\n            // WOBBLE ---------------------------\n            wobble: {\n                masterVolume: 0.9,\n                masterReleaseEnvelope: [\n                    { t: 1, vol: 0.36 },\n                    { t: 24, vol: 0.15 },\n                    { t: 119, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 150, Q: 0.6, gain: -12 },\n                    { frequency: 1100, gain: -2 },\n                    { frequency: 2200, gain: -16 },\n                    { frequency: 5000, gain: 8 },\n                    { frequency: 6400, gain: 10 },\n                    { frequency: 8000, gain: 12 },\n                    { frequency: 10800, gain: 8 }\n                ],\n                oscillators: [{\n                        type: 'triangle',\n                        volume: 0.9,\n                        volumePitchTrackingMultiplier: 0.1,\n                        lowpass: { frequency: 17, frequencyPitchTrackingMultiplier: 100 },\n                        highpass: { frequency: 200 }\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.04,\n                        lowpass: { frequency: 9000, Q: 3 },\n                        highpass: { frequency: 6000, Q: 3 },\n                        vmOscillator: 0,\n                        attackEnvelope: [\n                            { t: 0, vol: 0 },\n                            { t: 26, vol: 1 },\n                            { t: 71, vol: 0.73 }\n                        ]\n                    }, {\n                        type: 'sine',\n                        freqMultiplier: 0.011,\n                        volume: 30,\n                        fmOscillator: 0\n                    }]\n            },\n            // SINE -----------------------------\n            sine: {\n                masterVolume: 1,\n                oscillators: [{\n                        type: 'sine',\n                        volumePitchTrackingMultiplier: 0.07\n                    }]\n            },\n            // SINE GLIDE -----------------------\n            sineGlide: {\n                masterVolume: 1,\n                noteGlideDuration: 100,\n                oscillators: [{\n                        type: 'sine',\n                        volumePitchTrackingMultiplier: 0.07\n                    }]\n            },\n            // TRIANGLE -------------------------\n            triangle: {\n                masterVolume: 0.5,\n                oscillators: [{\n                        type: 'triangle',\n                        volume: 1,\n                        volumePitchTrackingMultiplier: 0.07\n                    }]\n            },\n            // SAWTOOTH -------------------------\n            sawtooth: {\n                masterVolume: 0.25,\n                midiInstrument: 82,\n                oscillators: [{\n                        type: 'sawtooth',\n                        volume: 0.3,\n                        volumePitchTrackingMultiplier: 0.07\n                    }]\n            },\n            // SQUARE ---------------------------\n            square: {\n                masterVolume: 0.3,\n                midiInstrument: 81,\n                oscillators: [{\n                        type: 'square',\n                        volume: 0.2,\n                        volumePitchTrackingMultiplier: 0.07\n                    }]\n            },\n            // PERCUSSION INSTRUMENTS ----------\n            chop: {\n                masterVolume: 1,\n                midiInstrument: 116,\n                masterAttackEnvelope: [{ t: 1, vol: 1 }, { t: 44, vol: 0 }],\n                oscillators: [{\n                        type: 'whitenoise',\n                        volume: 1,\n                        lowpass: { frequency: 600 },\n                        highpass: { frequency: 200 }\n                    }]\n            },\n            shaker: {\n                masterVolume: 0.4,\n                midiInstrument: 116,\n                masterAttackEnvelope: [{ t: 1, vol: 1 }, { t: 44, vol: 0 }],\n                oscillators: [{\n                        type: 'whitenoise',\n                        volume: 1,\n                        lowpass: { frequency: 6500 },\n                        highpass: { frequency: 5000 }\n                    }]\n            },\n            step: {\n                masterVolume: 1,\n                midiInstrument: 116,\n                masterAttackEnvelope: [{ t: 1, vol: 1 }, { t: 44, vol: 0 }],\n                eq: [\n                    { frequency: 200, gain: -1 },\n                    { frequency: 400, gain: -14 },\n                    { frequency: 800, gain: 8 },\n                    { frequency: 1000, Q: 5, gain: -24 },\n                    { frequency: 1600, gain: 8 },\n                    { frequency: 2200, gain: -10 },\n                    { frequency: 5400, gain: 4 },\n                    { frequency: 12800, gain: -36 }\n                ],\n                oscillators: [{\n                        type: 'whitenoise',\n                        volume: 1.5,\n                        lowpass: { frequency: 300 },\n                        highpass: { frequency: 100, Q: 6 }\n                    }]\n            },\n            kick: {\n                masterVolume: 0.55,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 0.8 },\n                    { t: 15, vol: 1 },\n                    { t: 45, vol: 0.35 },\n                    { t: 121, vol: 0.11 },\n                    { t: 242, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 50, gain: 6 },\n                    { frequency: 400, gain: -18 },\n                    { frequency: 1600, gain: 18 }\n                ],\n                oscillators: [{\n                        type: 'triangle',\n                        fixedFrequency: 90,\n                        volume: 1,\n                        lowpass: { frequency: 300 },\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 6, vol: 1 },\n                            { t: 45, vol: 0.01 }\n                        ]\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.4,\n                        lowpass: { frequency: 200 },\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 30, vol: 0 }\n                        ]\n                    }, {\n                        type: 'triangle',\n                        freqMultiplier: 0.1,\n                        volume: 1,\n                        lowpass: { frequency: 200 }\n                    }]\n            },\n            shortnote: {\n                masterVolume: 0.8,\n                midiInstrument: 116,\n                masterAttackEnvelope: [\n                    { t: 1, vol: 1 },\n                    { t: 15, vol: 0 }\n                ],\n                eq: [\n                    { frequency: 400, gain: -4 },\n                    { frequency: 800, gain: -12 },\n                    { frequency: 2400, gain: 4 },\n                    { frequency: 7200, gain: -20 },\n                    { frequency: 1000, Q: 5, gain: -12 },\n                    { frequency: 5400, gain: -32 },\n                    { frequency: 12800, gain: -14 }\n                ],\n                oscillators: [{\n                        type: 'sawtooth',\n                        volume: 0.6,\n                        lowpass: { frequency: 1000 }\n                    }, {\n                        type: 'whitenoise',\n                        volume: 0.2,\n                        lowpass: { frequency: 10000 },\n                        highpass: { frequency: 7000 },\n                        attackEnvelope: [\n                            { t: 1, vol: 1 },\n                            { t: 10, vol: 0 }\n                        ]\n                    }, {\n                        type: 'whitenoise',\n                        volume: 1.3,\n                        lowpass: { frequency: 700, Q: 4 },\n                        highpass: { frequency: 250 }\n                    }]\n            },\n            // NOISE ----------------------------\n            noise: {\n                masterVolume: 0.3,\n                midiInstrument: 122,\n                oscillators: [{\n                        type: 'whitenoise'\n                    }]\n            },\n            // FILTERED NOISE -------------------\n            filteredNoise: {\n                masterVolume: 0.3,\n                midiInstrument: 122,\n                eq: [\n                    { frequency: 1600, gain: -8 },\n                    { frequency: 2200, gain: -4 }\n                ],\n                oscillators: [{\n                        type: 'whitenoise',\n                        lowpass: {\n                            frequency: 5,\n                            frequencyPitchTrackingMultiplier: 1300,\n                            Q: 6\n                        },\n                        highpass: {\n                            frequency: 5,\n                            frequencyPitchTrackingMultiplier: 300,\n                            Q: 6\n                        }\n                    }]\n            },\n            // WIND -------------------------------\n            wind: {\n                masterVolume: 0.75,\n                midiInstrument: 122,\n                noteGlideDuration: 150,\n                masterReleaseEnvelope: [\n                    { t: 0, vol: 1 },\n                    { t: 124, vol: 0.24 },\n                    { t: 281, vol: 0 }\n                ],\n                oscillators: [{\n                        type: 'whitenoise',\n                        volume: 1,\n                        lowpass: {\n                            frequency: 100,\n                            frequencyPitchTrackingMultiplier: 6,\n                            Q: 23\n                        },\n                        highpass: {\n                            frequency: 170,\n                            frequencyPitchTrackingMultiplier: 6\n                        }\n                    }, {\n                        type: 'sine',\n                        freqMultiplier: 0.016,\n                        volume: 1000,\n                        fmOscillator: 0\n                    }]\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * @typedef {\"piano\"|\"plucked\"|\"flute\"|\"lead\"|\"vibraphone\"|\"saxophone\"|\"trumpet\"|\"sawsynth\"|\"basic1\"|\"basic2\"|\"chord\"|\"wobble\"|\"sine\"|\"sineGlide\"|\"triangle\"|\"sawtooth\"|\"square\"|\"chop\"|\"shaker\"|\"step\"|\"kick\"|\"shortnote\"|\"noise\"|\"filteredNoise\"|\"wind\"} Highcharts.SonificationSynthPreset\n         * @requires modules/sonification\n         */\n        (''); // Keep above doclets in JS file\n\n        return InstrumentPresets;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/SonificationInstrument.js', [_modules['Extensions/Sonification/SynthPatch.js'], _modules['Extensions/Sonification/InstrumentPresets.js'], _modules['Core/Utilities.js']], function (SynthPatch, InstrumentPresets, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Class representing an Instrument with mappable parameters for sonification.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, extend = U.extend;\n        /**\n         * The SonificationInstrument class. This class represents an instrument with\n         * mapping capabilities. The instrument wraps a SynthPatch object, and extends\n         * it with functionality such as panning, tremolo, and global low/highpass\n         * filters.\n         *\n         * @sample highcharts/sonification/instrument-raw\n         *         Using SonificationInstrument directly, with no chart.\n         *\n         * @requires modules/sonification\n         *\n         * @class\n         * @name Highcharts.SonificationInstrument\n         *\n         * @param {AudioContext} audioContext\n         *        The AudioContext to use.\n         * @param {AudioNode} outputNode\n         *        The destination node to connect to.\n         * @param {Highcharts.SonificationInstrumentOptionsObject} options\n         *        Configuration for the instrument.\n         */\n        var SonificationInstrument = /** @class */ (function () {\n            function SonificationInstrument(audioContext, outputNode, options) {\n                this.audioContext = audioContext;\n                this.curParams = {};\n                this.midiTrackName = options.midiTrackName;\n                this.masterVolNode = new GainNode(audioContext);\n                this.masterVolNode.connect(outputNode);\n                this.volumeNode = new GainNode(audioContext);\n                this.createNodesFromCapabilities(extend({\n                    pan: true\n                }, options.capabilities || {}));\n                this.connectCapabilityNodes(this.volumeNode, this.masterVolNode);\n                this.synthPatch = new SynthPatch(audioContext, typeof options.synthPatch === 'string' ?\n                    InstrumentPresets[options.synthPatch] : options.synthPatch);\n                this.midiInstrument = this.synthPatch.midiInstrument || 1;\n                this.synthPatch.startSilently();\n                this.synthPatch.connect(this.volumeNode);\n            }\n            /**\n             * Set the overall volume.\n             * @function Highcharts.SonificationInstrument#setMasterVolume\n             * @param {number} volume The volume to set, from 0 to 1.\n             */\n            SonificationInstrument.prototype.setMasterVolume = function (volume) {\n                this.masterVolNode.gain.setTargetAtTime(volume, 0, SonificationInstrument.rampTime);\n            };\n            /**\n             * Schedule an instrument event at a given time offset, whether it is\n             * playing a note or changing the parameters of the instrument.\n             * @function Highcharts.SonificationInstrument#scheduleEventAtTime\n             * @param {number} time Time is given in seconds, where 0 is now.\n             * @param {Highcharts.SonificationInstrumentScheduledEventOptionsObject} params\n             * Parameters for the instrument event.\n             */\n            SonificationInstrument.prototype.scheduleEventAtTime = function (time, params) {\n                var mergedParams = extend(this.curParams, params), freq = defined(params.frequency) ?\n                    params.frequency : defined(params.note) ?\n                    SonificationInstrument.musicalNoteToFrequency(params.note) :\n                    220;\n                if (defined(freq)) {\n                    this.synthPatch.playFreqAtTime(time, freq, mergedParams.noteDuration);\n                }\n                if (defined(mergedParams.tremoloDepth) ||\n                    defined(mergedParams.tremoloSpeed)) {\n                    this.setTremoloAtTime(time, mergedParams.tremoloDepth, mergedParams.tremoloSpeed);\n                }\n                if (defined(mergedParams.pan)) {\n                    this.setPanAtTime(time, mergedParams.pan);\n                }\n                if (defined(mergedParams.volume)) {\n                    this.setVolumeAtTime(time, mergedParams.volume);\n                }\n                if (defined(mergedParams.lowpassFreq) ||\n                    defined(mergedParams.lowpassResonance)) {\n                    this.setFilterAtTime('lowpass', time, mergedParams.lowpassFreq, mergedParams.lowpassResonance);\n                }\n                if (defined(mergedParams.highpassFreq) ||\n                    defined(mergedParams.highpassResonance)) {\n                    this.setFilterAtTime('highpass', time, mergedParams.highpassFreq, mergedParams.highpassResonance);\n                }\n            };\n            /**\n             * Schedule silencing the instrument at a given time offset.\n             * @function Highcharts.SonificationInstrument#silenceAtTime\n             * @param {number} time Time is given in seconds, where 0 is now.\n             */\n            SonificationInstrument.prototype.silenceAtTime = function (time) {\n                this.synthPatch.silenceAtTime(time);\n            };\n            /**\n             * Cancel currently playing sounds and any scheduled actions.\n             * @function Highcharts.SonificationInstrument#cancel\n             */\n            SonificationInstrument.prototype.cancel = function () {\n                this.synthPatch.mute();\n                [\n                    this.tremoloDepth && this.tremoloDepth.gain,\n                    this.tremoloOsc && this.tremoloOsc.frequency,\n                    this.lowpassNode && this.lowpassNode.frequency,\n                    this.lowpassNode && this.lowpassNode.Q,\n                    this.highpassNode && this.highpassNode.frequency,\n                    this.highpassNode && this.highpassNode.Q,\n                    this.panNode && this.panNode.pan,\n                    this.volumeNode.gain\n                ].forEach(function (p) { return (p && p.cancelScheduledValues(0)); });\n            };\n            /**\n             * Stop instrument and destroy it, cleaning up used resources.\n             * @function Highcharts.SonificationInstrument#destroy\n             */\n            SonificationInstrument.prototype.destroy = function () {\n                this.cancel();\n                this.synthPatch.stop();\n                if (this.tremoloOsc) {\n                    this.tremoloOsc.stop();\n                }\n                [\n                    this.tremoloDepth, this.tremoloOsc, this.lowpassNode,\n                    this.highpassNode, this.panNode, this.volumeNode,\n                    this.masterVolNode\n                ].forEach((function (n) { return n && n.disconnect(); }));\n            };\n            /**\n             * Schedule a pan value at a given time offset.\n             * @private\n             */\n            SonificationInstrument.prototype.setPanAtTime = function (time, pan) {\n                if (this.panNode) {\n                    this.panNode.pan.setTargetAtTime(pan, time + this.audioContext.currentTime, SonificationInstrument.rampTime);\n                }\n            };\n            /**\n             * Schedule a filter configuration at a given time offset.\n             * @private\n             */\n            SonificationInstrument.prototype.setFilterAtTime = function (filter, time, frequency, resonance) {\n                var node = this[filter + 'Node'], audioTime = this.audioContext.currentTime + time;\n                if (node) {\n                    if (defined(resonance)) {\n                        node.Q.setTargetAtTime(resonance, audioTime, SonificationInstrument.rampTime);\n                    }\n                    if (defined(frequency)) {\n                        node.frequency.setTargetAtTime(frequency, audioTime, SonificationInstrument.rampTime);\n                    }\n                }\n            };\n            /**\n             * Schedule a volume value at a given time offset.\n             * @private\n             */\n            SonificationInstrument.prototype.setVolumeAtTime = function (time, volume) {\n                if (this.volumeNode) {\n                    this.volumeNode.gain.setTargetAtTime(volume, time + this.audioContext.currentTime, SonificationInstrument.rampTime);\n                }\n            };\n            /**\n             * Schedule a tremolo configuration at a given time offset.\n             * @private\n             */\n            SonificationInstrument.prototype.setTremoloAtTime = function (time, depth, speed) {\n                var audioTime = this.audioContext.currentTime + time;\n                if (this.tremoloDepth && defined(depth)) {\n                    this.tremoloDepth.gain.setTargetAtTime(depth, audioTime, SonificationInstrument.rampTime);\n                }\n                if (this.tremoloOsc && defined(speed)) {\n                    this.tremoloOsc.frequency.setTargetAtTime(15 * speed, audioTime, SonificationInstrument.rampTime);\n                }\n            };\n            /**\n             * Create audio nodes according to instrument capabilities\n             * @private\n             */\n            SonificationInstrument.prototype.createNodesFromCapabilities = function (capabilities) {\n                var ctx = this.audioContext;\n                if (capabilities.pan) {\n                    this.panNode = new StereoPannerNode(ctx);\n                }\n                if (capabilities.tremolo) {\n                    this.tremoloOsc = new OscillatorNode(ctx, {\n                        type: 'sine',\n                        frequency: 3\n                    });\n                    this.tremoloDepth = new GainNode(ctx);\n                    this.tremoloOsc.connect(this.tremoloDepth);\n                    this.tremoloDepth.connect(this.masterVolNode.gain);\n                    this.tremoloOsc.start();\n                }\n                if (capabilities.filters) {\n                    this.lowpassNode = new BiquadFilterNode(ctx, {\n                        type: 'lowpass',\n                        frequency: 20000\n                    });\n                    this.highpassNode = new BiquadFilterNode(ctx, {\n                        type: 'highpass',\n                        frequency: 0\n                    });\n                }\n            };\n            /**\n             * Connect audio node chain from output down to input, depending on which\n             * nodes exist.\n             * @private\n             */\n            SonificationInstrument.prototype.connectCapabilityNodes = function (input, output) {\n                [\n                    this.panNode,\n                    this.lowpassNode,\n                    this.highpassNode,\n                    input\n                ].reduce(function (prev, cur) {\n                    return (cur ?\n                        (cur.connect(prev), cur) :\n                        prev);\n                }, output);\n            };\n            /**\n             * Get number of notes from C0 from a string like \"F#4\"\n             * @static\n             * @private\n             */\n            SonificationInstrument.noteStringToC0Distance = function (note) {\n                var match = note.match(/^([a-g][#b]?)([0-8])$/i), semitone = match ? match[1] : 'a', wholetone = semitone[0].toLowerCase(), accidental = semitone[1], octave = match ? parseInt(match[2], 10) : 4, accidentalOffset = accidental === '#' ?\n                    1 : accidental === 'b' ? -1 : 0;\n                return ({\n                    c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11\n                }[wholetone] || 0) + accidentalOffset + octave * 12;\n            };\n            /**\n             * Convert a note value to a frequency.\n             * @static\n             * @function Highcharts.SonificationInstrument#musicalNoteToFrequency\n             * @param {string|number} note\n             * Note to convert. Can be a string 'c0' to 'b8' or a number of semitones\n             * from c0.\n             * @return {number} The converted frequency\n             */\n            SonificationInstrument.musicalNoteToFrequency = function (note) {\n                var notesFromC0 = typeof note === 'string' ?\n                    this.noteStringToC0Distance(note) : note;\n                return 16.3516 * Math.pow(2, Math.min(notesFromC0, 107) / 12);\n            };\n            SonificationInstrument.rampTime = SynthPatch.stopRampTime / 4;\n            return SonificationInstrument;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API definitions\n         *\n         * */\n        /**\n         * Capabilities configuration for a SonificationInstrument.\n         * @requires modules/sonification\n         * @interface Highcharts.SonificationInstrumentCapabilitiesOptionsObject\n         */ /**\n        * Whether or not instrument should be able to pan. Defaults to `true`.\n        * @name Highcharts.SonificationInstrumentCapabilitiesOptionsObject#pan\n        * @type {boolean|undefined}\n        */ /**\n        * Whether or not instrument should be able to use tremolo effects. Defaults\n        * to `false`.\n        * @name Highcharts.SonificationInstrumentCapabilitiesOptionsObject#tremolo\n        * @type {boolean|undefined}\n        */ /**\n        * Whether or not instrument should be able to use filter effects. Defaults\n        * to `false`.\n        * @name Highcharts.SonificationInstrumentCapabilitiesOptionsObject#filters\n        * @type {boolean|undefined}\n        */\n        /**\n         * Configuration for a SonificationInstrument.\n         * @requires modules/sonification\n         * @interface Highcharts.SonificationInstrumentOptionsObject\n         */ /**\n        * The synth configuration for the instrument. Can be either a string,\n        * referencing the instrument presets, or an actual SynthPatch configuration.\n        * @name Highcharts.SonificationInstrumentOptionsObject#synthPatch\n        * @type {Highcharts.SonificationSynthPreset|Highcharts.SynthPatchOptionsObject}\n        * @sample highcharts/demo/all-instruments\n        *      All instrument presets\n        * @sample highcharts/sonification/custom-instrument\n        *      Custom instrument preset\n        */ /**\n        * Define additional capabilities for the instrument, such as panning, filters,\n        * and tremolo effects.\n        * @name Highcharts.SonificationInstrumentOptionsObject#capabilities\n        * @type {Highcharts.SonificationInstrumentCapabilitiesOptionsObject|undefined}\n        */ /**\n        * A track name to use for this instrument in MIDI export.\n        * @name Highcharts.SonificationInstrumentOptionsObject#midiTrackName\n        * @type {string|undefined}\n        */\n        /**\n         * Options for a scheduled event for a SonificationInstrument\n         * @requires modules/sonification\n         * @interface Highcharts.SonificationInstrumentScheduledEventOptionsObject\n         */ /**\n        * Number of semitones from c0, or a note string - such as \"c4\" or \"F#6\".\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#note\n        * @type {number|string|undefined}\n        */ /**\n        * Note frequency in Hertz. Overrides note, if both are given.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#frequency\n        * @type {number|undefined}\n        */ /**\n        * Duration to play the note in milliseconds. If not given, the note keeps\n        * playing indefinitely\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#noteDuration\n        * @type {number|undefined}\n        */ /**\n        * Depth/intensity of the tremolo effect - which is a periodic change in\n        * volume. From 0 to 1.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#tremoloDepth\n        * @type {number|undefined}\n        */ /**\n        * Speed of the tremolo effect, from 0 to 1.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#tremoloSpeed\n        * @type {number|undefined}\n        */ /**\n        * Stereo panning value, from -1 (left) to 1 (right).\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#pan\n        * @type {number|undefined}\n        */ /**\n        * Volume of the instrument, from 0 to 1. Can be set independent of the\n        * master/overall volume.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#volume\n        * @type {number|undefined}\n        */ /**\n        * Frequency of the lowpass filter, in Hertz.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#lowpassFreq\n        * @type {number|undefined}\n        */ /**\n        * Resonance of the lowpass filter, in dB. Can be negative for a dip, or\n        * positive for a bump.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#lowpassResonance\n        * @type {number|undefined}\n        */ /**\n        * Frequency of the highpass filter, in Hertz.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#highpassFreq\n        * @type {number|undefined}\n        */ /**\n        * Resonance of the highpass filter, in dB. Can be negative for a dip, or\n        * positive for a bump.\n        * @name Highcharts.SonificationInstrumentScheduledEventOptionsObject#highpassResonance\n        * @type {number|undefined}\n        */\n        (''); // Keep above doclets in JS file\n\n        return SonificationInstrument;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/SonificationSpeaker.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Class representing a speech synthesis voice.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pick = U.pick;\n        /**\n         * The SonificationSpeaker class. This class represents an announcer using\n         * speech synthesis. It allows for scheduling speech announcements, as well\n         * as speech parameter changes - including rate, volume and pitch.\n         *\n         * @sample highcharts/demo/sonification-navigation\n         *         Demo using SonificationSpeaker directly for some announcements\n         *\n         * @requires modules/sonification\n         *\n         * @class\n         * @name Highcharts.SonificationSpeaker\n         *\n         * @param {Highcharts.SonificationSpeakerOptionsObject} options\n         *        Configuration for the speaker\n         */\n        var SonificationSpeaker = /** @class */ (function () {\n            function SonificationSpeaker(options) {\n                this.options = options;\n                this.masterVolume = 1;\n                this.synthesis = window.speechSynthesis;\n                if (typeof speechSynthesis.onvoiceschanged !== 'undefined') {\n                    speechSynthesis.onvoiceschanged = this.setVoice.bind(this);\n                }\n                this.setVoice();\n                this.scheduled = [];\n            }\n            /**\n             * Say a message using the speaker voice. Interrupts other currently\n             * speaking announcements from this speaker.\n             * @function Highcharts.SonificationSpeaker#say\n             * @param {string} message The message to speak.\n             * @param {SonificationSpeakerOptionsObject} [options]\n             * Optionally override speaker configuration.\n             */\n            SonificationSpeaker.prototype.say = function (message, options) {\n                if (this.synthesis) {\n                    this.synthesis.cancel();\n                    var utterance = new SpeechSynthesisUtterance(message);\n                    if (this.voice) {\n                        utterance.voice = this.voice;\n                    }\n                    utterance.rate = options && options.rate || this.options.rate || 1;\n                    utterance.pitch = options && options.pitch ||\n                        this.options.pitch || 1;\n                    utterance.volume = pick(options && options.volume, this.options.volume, 1) * this.masterVolume;\n                    this.synthesis.speak(utterance);\n                }\n            };\n            /**\n             * Schedule a message using the speaker voice.\n             * @function Highcharts.SonificationSpeaker#sayAtTime\n             * @param {number} time\n             * The time offset to speak at, in milliseconds from now.\n             * @param {string} message\n             * The message to speak.\n             * @param {SonificationSpeakerOptionsObject} [options]\n             * Optionally override speaker configuration.\n             */\n            SonificationSpeaker.prototype.sayAtTime = function (time, message, options) {\n                this.scheduled.push(setTimeout(this.say.bind(this, message, options), time));\n            };\n            /**\n             * Clear scheduled announcements, and stop current speech.\n             * @function Highcharts.SonificationSpeaker#cancel\n             */\n            SonificationSpeaker.prototype.cancel = function () {\n                this.scheduled.forEach(clearTimeout);\n                this.scheduled = [];\n                this.synthesis.cancel();\n            };\n            /**\n             * Stop speech and release any used resources\n             * @private\n             */\n            SonificationSpeaker.prototype.destroy = function () {\n                // Ran on TimelineChannel.destroy\n                // (polymorphism with SonificationInstrument).\n                // Currently all we need to do is cancel.\n                this.cancel();\n            };\n            /**\n             * Set speaker overall/master volume modifier. This affects all\n             * announcements, and applies in addition to the individual announcement\n             * volume.\n             * @function Highcharts.SonificationSpeaker#setMasterVolume\n             * @param {number} vol Volume from 0 to 1.\n             */\n            SonificationSpeaker.prototype.setMasterVolume = function (vol) {\n                this.masterVolume = vol;\n            };\n            /**\n             * Set the active synthesis voice for the speaker.\n             * @private\n             */\n            SonificationSpeaker.prototype.setVoice = function () {\n                if (this.synthesis) {\n                    var name_1 = this.options.name, lang = this.options.language || 'en-US', voices = this.synthesis.getVoices(), len = voices.length;\n                    var langFallback = void 0;\n                    for (var i = 0; i < len; ++i) {\n                        if (name_1 && voices[i].name === name_1) {\n                            this.voice = voices[i];\n                            return;\n                        }\n                        if (!langFallback && voices[i].lang === lang) {\n                            langFallback = voices[i];\n                            if (!name_1) {\n                                break;\n                            }\n                        }\n                    }\n                    this.voice = langFallback;\n                }\n            };\n            return SonificationSpeaker;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * Configuration for a SonificationSpeaker.\n         * @requires modules/sonification\n         * @interface Highcharts.SonificationSpeakerOptionsObject\n         */ /**\n        * Name of the voice synthesis to use. If not found, reverts to the default\n        * voice for the language chosen.\n        * @name Highcharts.SonificationSpeakerOptionsObject#name\n        * @type {string|undefined}\n        */ /**\n        * The language of the voice synthesis. Defaults to `\"en-US\"`.\n        * @name Highcharts.SonificationSpeakerOptionsObject#language\n        * @type {string|undefined}\n        */ /**\n        * The pitch modifier of the voice. Defaults to `1`. Set higher for a higher\n        * voice pitch.\n        * @name Highcharts.SonificationSpeakerOptionsObject#pitch\n        * @type {number|undefined}\n        */ /**\n        * The speech rate modifier. Defaults to `1`.\n        * @name Highcharts.SonificationSpeakerOptionsObject#rate\n        * @type {number|undefined}\n        */ /**\n        * The speech volume, from 0 to 1. Defaults to `1`.\n        * @name Highcharts.SonificationSpeakerOptionsObject#volume\n        * @type {number|undefined}\n        */\n        (''); // Keep above doclets in JS file\n\n        return SonificationSpeaker;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/TimelineChannel.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Class representing a TimelineChannel with sonification events to play.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /**\n         * Represents a channel of TimelineEvents for an engine (either an instrument\n         * or a speaker).\n         * @private\n         */\n        var TimelineChannel = /** @class */ (function () {\n            function TimelineChannel(type, engine, showPlayMarker, events, muted) {\n                if (showPlayMarker === void 0) { showPlayMarker = false; }\n                this.type = type;\n                this.engine = engine;\n                this.showPlayMarker = showPlayMarker;\n                this.muted = muted;\n                this.events = events || [];\n            }\n            TimelineChannel.prototype.addEvent = function (event) {\n                var lastEvent = this.events[this.events.length - 1];\n                if (lastEvent && event.time < lastEvent.time) {\n                    // Ensure we are sorted by time, so insert at the right place\n                    var i = this.events.length;\n                    while (i-- && this.events[i].time > event.time) { /* */ }\n                    this.events.splice(i + 1, 0, event);\n                }\n                else {\n                    this.events.push(event);\n                }\n                return event;\n            };\n            TimelineChannel.prototype.mute = function () {\n                this.muted = true;\n            };\n            TimelineChannel.prototype.unmute = function () {\n                this.muted = false;\n            };\n            TimelineChannel.prototype.cancel = function () {\n                this.engine.cancel();\n            };\n            TimelineChannel.prototype.destroy = function () {\n                this.engine.destroy();\n            };\n            return TimelineChannel;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * A TimelineEvent object represents a scheduled audio event to play for a\n         * SonificationTimeline.\n         * @requires modules/sonification\n         * @interface Highcharts.SonificationTimelineEvent\n         */ /**\n        * Time is given in milliseconds, where 0 is now.\n        * @name Highcharts.SonificationTimelineEvent#time\n        * @type {number}\n        */ /**\n        * A reference to a data point related to the TimelineEvent. Populated when\n        * sonifying points.\n        * @name Highcharts.SonificationTimelineEvent#relatedPoint\n        * @type {Highcharts.Point|undefined}\n        */ /**\n        * Options for an instrument event to be played.\n        * @name Highcharts.SonificationTimelineEvent#instrumentEventOptions\n        * @type {Highcharts.SonificationInstrumentScheduledEventOptionsObject|undefined}\n        */ /**\n        * Options for a speech event to be played.\n        * @name Highcharts.SonificationTimelineEvent#speechOptions\n        * @type {Highcharts.SonificationSpeakerOptionsObject|undefined}\n        */ /**\n        * The message to speak for speech events.\n        * @name Highcharts.SonificationTimelineEvent#message\n        * @type {string|undefined}\n        */ /**\n        * Callback to call when playing the event.\n        * @name Highcharts.SonificationTimelineEvent#callback\n        * @type {Function|undefined}\n        */\n        (''); // Keep above doclets in JS file\n\n        return TimelineChannel;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/MIDI.js', [_modules['Extensions/Sonification/SonificationInstrument.js'], _modules['Core/Utilities.js']], function (SonificationInstrument, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Small MIDI file writer for sonification export.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* eslint-disable no-multi-spaces */\n        var pick = U.pick;\n        var freqToNote = function (f) { return Math.round(12 * Math.log(f) / Math.LN2 - 48.37632); }, b = function (byte, n) { return n >>> 8 * byte & 0xFF; }, getHeader = function (nTracks) { return [\n            0x4D, 0x54, 0x68, 0x64, // HD_TYPE\n            0, 0, 0, 6, // HD_SIZE\n            0, nTracks > 1 ? 1 : 0, // HD_FORMAT\n            b(1, nTracks), b(0, nTracks), // HD_NTRACKS\n            // SMTPE: 0xE7 0x28\n            // -25/40 time div gives us millisecond SMTPE, but not widely supported.\n            1, 0xF4 // HD_TIMEDIV, 500 ticks per beat = millisecond at 120bpm\n        ]; }, timeInfo = [0, 0xFF, 0x51, 0x03, 0x07, 0xA1, 0x20], // META_TEMPO\n        varLenEnc = function (n) {\n            var buf = n & 0x7F;\n            var res = [];\n            while (n >>= 7) { // eslint-disable-line no-cond-assign\n                buf <<= 8;\n                buf |= (n & 0x7F) | 0x80;\n            }\n            while (true) { // eslint-disable-line no-constant-condition\n                res.push(buf & 0xFF);\n                if (buf & 0x80) {\n                    buf >>= 8;\n                }\n                else {\n                    break;\n                }\n            }\n            return res;\n        }, toMIDIEvents = function (events) {\n            var cachedVel, cachedDur;\n            var res = [], add = function (el) {\n                var ix = res.length;\n                while (ix-- && res[ix].timeMS > el.timeMS) { /* */ }\n                res.splice(ix + 1, 0, el);\n            };\n            events.forEach(function (e) {\n                var o = e.instrumentEventOptions || {}, t = e.time, dur = cachedDur = pick(o.noteDuration, cachedDur), tNOF = dur && e.time + dur, ctrl = [{\n                        valMap: function (n) { return 64 + 63 * n & 0x7F; },\n                        data: {\n                            0x0A: o.pan, // Use MSB only, no need for fine adjust\n                            0x5C: o.tremoloDepth,\n                            0x5D: o.tremoloSpeed\n                        }\n                    }, {\n                        valMap: function (n) { return 127 * n / 20000 & 0x7F; },\n                        data: {\n                            0x4A: o.lowpassFreq,\n                            0x4B: o.highpassFreq\n                        }\n                    }, {\n                        valMap: function (n) {\n                            return 63 * Math.min(18, Math.max(-18, n)) / 18 + 63 & 0x7F;\n                        },\n                        data: {\n                            0x47: o.lowpassResonance,\n                            0x4C: o.highpassResonance\n                        }\n                    }], v = cachedVel = o.volume === void 0 ?\n                    pick(cachedVel, 127) : 127 * o.volume & 0x7F, freq = o.frequency, note = o.note || 0, noteVal = 12 + (freq ? freqToNote(freq) : // MIDI note #0 is C-1\n                    typeof note === 'string' ? SonificationInstrument\n                        .noteStringToC0Distance(note) : note) & 0x7F;\n                // CTRL_CHANGE events\n                ctrl.forEach(function (ctrlDef) { return Object.keys(ctrlDef.data)\n                    .forEach(function (ctrlSignal) {\n                    var val = ctrlDef.data[ctrlSignal];\n                    if (val !== void 0) {\n                        add({\n                            timeMS: t,\n                            type: 'CTRL_CHG',\n                            data: [\n                                0xB0, parseInt(ctrlSignal, 10),\n                                ctrlDef.valMap(val)\n                            ]\n                        });\n                    }\n                }); });\n                // NON/NOF\n                if (tNOF) {\n                    add({ timeMS: t, type: 'NON', data: [0x90, noteVal, v] });\n                    add({ timeMS: tNOF, type: 'NOF', data: [0x80, noteVal, v] });\n                }\n            });\n            return res;\n        }, getMetaEvents = function (midiTrackName, midiInstrument) {\n            var events = [];\n            if (midiInstrument) {\n                // Program Change MIDI event\n                events.push(0, 0xC0, midiInstrument & 0x7F);\n            }\n            if (midiTrackName) {\n                // Track name meta event\n                var textArr = [];\n                for (var i = 0; i < midiTrackName.length; ++i) {\n                    var code = midiTrackName.charCodeAt(i);\n                    if (code < 128) { // Keep ASCII only\n                        textArr.push(code);\n                    }\n                }\n                return events.concat([0, 0xFF, 0x03], varLenEnc(textArr.length), textArr);\n            }\n            return events;\n        }, getTrackChunk = function (events, addTimeInfo, midiTrackName, midiInstrument) {\n            var prevTime = 0;\n            var metaEvents = getMetaEvents(midiTrackName, midiInstrument), trackEvents = toMIDIEvents(events).reduce(function (data, e) {\n                var t = varLenEnc(e.timeMS - prevTime);\n                prevTime = e.timeMS;\n                return data.concat(t, e.data);\n            }, []);\n            var trackEnd = [0, 0xFF, 0x2F, 0], size = (addTimeInfo ? timeInfo.length : 0) +\n                metaEvents.length +\n                trackEvents.length + trackEnd.length;\n            return [\n                0x4D, 0x54, 0x72, 0x6B, // TRK_TYPE\n                b(3, size), b(2, size), // TRK_SIZE\n                b(1, size), b(0, size)\n            ].concat(addTimeInfo ? timeInfo : [], metaEvents, trackEvents, trackEnd // SYSEX_TRACK_END\n            );\n        };\n        /**\n         * Get MIDI data from a set of Timeline instrument channels.\n         *\n         * Outputs multi-track MIDI for Timelines with multiple channels.\n         *\n         * @private\n         */\n        function toMIDI(channels) {\n            var channelsToAdd = channels.filter(function (c) { return !!c.events.length; }), numCh = channelsToAdd.length, multiCh = numCh > 1;\n            return new Uint8Array(getHeader(multiCh ? numCh + 1 : numCh).concat(multiCh ? getTrackChunk([], true) : [], // Time info only\n            channelsToAdd.reduce(function (chunks, channel) {\n                var engine = channel.engine;\n                return chunks.concat(getTrackChunk(channel.events, !multiCh, engine.midiTrackName, engine.midiInstrument));\n            }, [])));\n        }\n\n        return toMIDI;\n    });\n    _registerModule(_modules, 'Extensions/DownloadURL.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2015-2024 Oystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         *  Mixin for downloading content in the browser\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var isSafari = H.isSafari, win = H.win, doc = H.win.document;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var domurl = win.URL || win.webkitURL || win;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Convert base64 dataURL to Blob if supported, otherwise returns undefined.\n         * @private\n         * @function Highcharts.dataURLtoBlob\n         * @param {string} dataURL\n         *        URL to convert\n         * @return {string|undefined}\n         *         Blob\n         */\n        function dataURLtoBlob(dataURL) {\n            var parts = dataURL\n                .replace(/filename=.*;/, '')\n                .match(/data:([^;]*)(;base64)?,([A-Z+\\d\\/]+)/i);\n            if (parts &&\n                parts.length > 3 &&\n                (win.atob) &&\n                win.ArrayBuffer &&\n                win.Uint8Array &&\n                win.Blob &&\n                (domurl.createObjectURL)) {\n                // Try to convert data URL to Blob\n                var binStr = win.atob(parts[3]), buf = new win.ArrayBuffer(binStr.length), binary = new win.Uint8Array(buf);\n                for (var i = 0; i < binary.length; ++i) {\n                    binary[i] = binStr.charCodeAt(i);\n                }\n                return domurl\n                    .createObjectURL(new win.Blob([binary], { 'type': parts[1] }));\n            }\n        }\n        /**\n         * Download a data URL in the browser. Can also take a blob as first param.\n         *\n         * @private\n         * @function Highcharts.downloadURL\n         * @param {string|global.URL} dataURL\n         *        The dataURL/Blob to download\n         * @param {string} filename\n         *        The name of the resulting file (w/extension)\n         * @return {void}\n         */\n        function downloadURL(dataURL, filename) {\n            var nav = win.navigator, a = doc.createElement('a');\n            // IE specific blob implementation\n            // Don't use for normal dataURLs\n            if (typeof dataURL !== 'string' &&\n                !(dataURL instanceof String) &&\n                nav.msSaveOrOpenBlob) {\n                nav.msSaveOrOpenBlob(dataURL, filename);\n                return;\n            }\n            dataURL = '' + dataURL;\n            if (nav.userAgent.length > 1000 /* RegexLimits.shortLimit */) {\n                throw new Error('Input too long');\n            }\n            var // Some browsers have limitations for data URL lengths. Try to convert\n            // to Blob or fall back. Edge always needs that blob.\n            isOldEdgeBrowser = /Edge\\/\\d+/.test(nav.userAgent), \n            // Safari on iOS needs Blob in order to download PDF\n            safariBlob = (isSafari &&\n                typeof dataURL === 'string' &&\n                dataURL.indexOf('data:application/pdf') === 0);\n            if (safariBlob || isOldEdgeBrowser || dataURL.length > 2000000) {\n                dataURL = dataURLtoBlob(dataURL) || '';\n                if (!dataURL) {\n                    throw new Error('Failed to convert to blob');\n                }\n            }\n            // Try HTML5 download attr if supported\n            if (typeof a.download !== 'undefined') {\n                a.href = dataURL;\n                a.download = filename; // HTML5 download attribute\n                doc.body.appendChild(a);\n                a.click();\n                doc.body.removeChild(a);\n            }\n            else {\n                // No download attr, just opening data URI\n                try {\n                    if (!win.open(dataURL, 'chart')) {\n                        throw new Error('Failed to open window');\n                    }\n                }\n                catch (_a) {\n                    // If window.open failed, try location.href\n                    win.location.href = dataURL;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DownloadURL = {\n            dataURLtoBlob: dataURLtoBlob,\n            downloadURL: downloadURL\n        };\n\n        return DownloadURL;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/SonificationTimeline.js', [_modules['Extensions/Sonification/TimelineChannel.js'], _modules['Extensions/Sonification/MIDI.js'], _modules['Extensions/DownloadURL.js'], _modules['Core/Utilities.js']], function (TimelineChannel, toMIDI, DU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Class representing a Timeline with sonification events to play.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var downloadURL = DU.downloadURL;\n        var defined = U.defined, find = U.find, merge = U.merge;\n        /**\n         * Get filtered channels. Timestamps are compensated, so that the first\n         * event starts immediately.\n         * @private\n         */\n        function filterChannels(filter, channels) {\n            var filtered = channels.map(function (channel) {\n                channel.cancel();\n                return {\n                    channel: channel,\n                    filteredEvents: channel.muted ?\n                        [] : channel.events.filter(filter)\n                };\n            }), minTime = filtered.reduce(function (acc, cur) {\n                return Math.min(acc, cur.filteredEvents.length ?\n                    cur.filteredEvents[0].time : Infinity);\n            }, Infinity);\n            return filtered.map(function (c) { return (new TimelineChannel(c.channel.type, c.channel.engine, c.channel.showPlayMarker, c.filteredEvents.map(function (e) {\n                return merge(e, { time: e.time - minTime });\n            }), c.channel.muted)); });\n        }\n        /**\n         * The SonificationTimeline class. This class represents a timeline of\n         * audio events scheduled to play. It provides functionality for manipulating\n         * and navigating the timeline.\n         * @private\n         */\n        var SonificationTimeline = /** @class */ (function () {\n            function SonificationTimeline(options, chart) {\n                this.chart = chart;\n                this.isPaused = false;\n                this.isPlaying = false;\n                this.channels = [];\n                this.scheduledCallbacks = [];\n                this.playTimestamp = 0;\n                this.resumeFromTime = 0;\n                this.options = options || {};\n            }\n            // Add a channel, optionally with events, to be played.\n            // Note: Only one speech channel is supported at a time.\n            SonificationTimeline.prototype.addChannel = function (type, engine, showPlayMarker, events) {\n                if (showPlayMarker === void 0) { showPlayMarker = false; }\n                if (type === 'instrument' &&\n                    !engine.scheduleEventAtTime ||\n                    type === 'speech' &&\n                        !engine.sayAtTime) {\n                    throw new Error('Highcharts Sonification: Invalid channel engine.');\n                }\n                var channel = new TimelineChannel(type, engine, showPlayMarker, events);\n                this.channels.push(channel);\n                return channel;\n            };\n            // Play timeline, optionally filtering out only some of the events to play.\n            // Note that if not all instrument parameters are updated on each event,\n            // parameters may update differently depending on the events filtered out,\n            // since some of the events that update parameters can be filtered out too.\n            // The filterPersists argument determines whether or not the filter persists\n            // after e.g. pausing and resuming. Usually this should be true.\n            SonificationTimeline.prototype.play = function (filter, filterPersists, resetAfter, onEnd) {\n                var _this = this;\n                if (filterPersists === void 0) { filterPersists = true; }\n                if (resetAfter === void 0) { resetAfter = true; }\n                if (this.isPlaying) {\n                    this.cancel();\n                }\n                else {\n                    this.clearScheduledCallbacks();\n                }\n                this.onEndArgument = onEnd;\n                this.playTimestamp = Date.now();\n                this.resumeFromTime = 0;\n                this.isPaused = false;\n                this.isPlaying = true;\n                var skipThreshold = this.options.skipThreshold || 2, onPlay = this.options.onPlay, showTooltip = this.options.showTooltip, showCrosshair = this.options.showCrosshair, channels = filter ?\n                    filterChannels(filter, this.playingChannels || this.channels) :\n                    this.channels, getEventKeysSignature = function (e) {\n                    return Object.keys(e.speechOptions || {})\n                        .concat(Object.keys(e.instrumentEventOptions || {}))\n                        .join();\n                }, pointsPlayed = [];\n                if (filterPersists) {\n                    this.playingChannels = channels;\n                }\n                if (onPlay) {\n                    onPlay({ chart: this.chart, timeline: this });\n                }\n                var maxTime = 0;\n                channels.forEach(function (channel) {\n                    if (channel.muted) {\n                        return;\n                    }\n                    var numEvents = channel.events.length;\n                    var lastCallbackTime = -Infinity, lastEventTime = -Infinity, lastEventKeys = '';\n                    maxTime = Math.max(channel.events[numEvents - 1] &&\n                        channel.events[numEvents - 1].time || 0, maxTime);\n                    var _loop_1 = function (i) {\n                        var e = channel.events[i], keysSig = getEventKeysSignature(e);\n                        // Optimize by skipping extremely close events (<2ms apart by\n                        // default), as long as they don't introduce new event options\n                        if (keysSig === lastEventKeys &&\n                            e.time - lastEventTime < skipThreshold) {\n                            return \"continue\";\n                        }\n                        lastEventKeys = keysSig;\n                        lastEventTime = e.time;\n                        if (channel.type === 'instrument') {\n                            channel.engine\n                                .scheduleEventAtTime(e.time / 1000, e.instrumentEventOptions || {});\n                        }\n                        else {\n                            channel.engine.sayAtTime(e.time, e.message || '', e.speechOptions || {});\n                        }\n                        var point = e.relatedPoint, chart = point && point.series && point.series.chart, needsCallback = e.callback ||\n                            point && (showTooltip || showCrosshair) &&\n                                channel.showPlayMarker !== false &&\n                                (e.time - lastCallbackTime > 50 || i === numEvents - 1);\n                        if (point) {\n                            pointsPlayed.push(point);\n                        }\n                        if (needsCallback) {\n                            _this.scheduledCallbacks.push(setTimeout(function () {\n                                if (e.callback) {\n                                    e.callback();\n                                }\n                                if (point) {\n                                    if (showCrosshair) {\n                                        var s = point.series;\n                                        if (s && s.xAxis && s.xAxis.crosshair) {\n                                            s.xAxis.drawCrosshair(void 0, point);\n                                        }\n                                        if (s && s.yAxis && s.yAxis.crosshair) {\n                                            s.yAxis.drawCrosshair(void 0, point);\n                                        }\n                                    }\n                                    if (showTooltip && !(\n                                    // Don't re-hover if shared tooltip\n                                    chart && chart.hoverPoints &&\n                                        chart.hoverPoints.length > 1 &&\n                                        find(chart.hoverPoints, function (p) { return p === point; }) &&\n                                        // Stock issue w/Navigator\n                                        point.onMouseOver)) {\n                                        point.onMouseOver();\n                                    }\n                                }\n                            }, e.time));\n                            lastCallbackTime = e.time;\n                        }\n                    };\n                    for (var i = 0; i < numEvents; ++i) {\n                        _loop_1(i);\n                    }\n                });\n                var onEndOpt = this.options.onEnd, onStop = this.options.onStop;\n                this.scheduledCallbacks.push(setTimeout(function () {\n                    var chart = _this.chart, context = { chart: chart, timeline: _this, pointsPlayed: pointsPlayed };\n                    _this.isPlaying = false;\n                    if (resetAfter) {\n                        _this.resetPlayState();\n                    }\n                    if (onStop) {\n                        onStop(context);\n                    }\n                    if (onEndOpt) {\n                        onEndOpt(context);\n                    }\n                    if (onEnd) {\n                        onEnd(context);\n                    }\n                    if (chart) {\n                        if (chart.tooltip) {\n                            chart.tooltip.hide(0);\n                        }\n                        if (chart.hoverSeries) {\n                            chart.hoverSeries.onMouseOut();\n                        }\n                        chart.axes.forEach(function (a) { return a.hideCrosshair(); });\n                    }\n                }, maxTime + 250));\n                this.resumeFromTime = filterPersists ? maxTime : this.getLength();\n            };\n            // Pause for later resuming. Returns current timestamp to resume from.\n            SonificationTimeline.prototype.pause = function () {\n                this.isPaused = true;\n                this.cancel();\n                this.resumeFromTime = Date.now() - this.playTimestamp - 10;\n                return this.resumeFromTime;\n            };\n            // Get current time\n            SonificationTimeline.prototype.getCurrentTime = function () {\n                return this.isPlaying ?\n                    Date.now() - this.playTimestamp :\n                    this.resumeFromTime;\n            };\n            // Get length of timeline in milliseconds\n            SonificationTimeline.prototype.getLength = function () {\n                return this.channels.reduce(function (maxTime, channel) {\n                    var lastEvent = channel.events[channel.events.length - 1];\n                    return lastEvent ? Math.max(lastEvent.time, maxTime) : maxTime;\n                }, 0);\n            };\n            // Resume from paused\n            SonificationTimeline.prototype.resume = function () {\n                if (this.playingChannels) {\n                    var resumeFrom_1 = this.resumeFromTime - 50;\n                    this.play(function (e) { return e.time > resumeFrom_1; }, false, false, this.onEndArgument);\n                    this.playTimestamp -= resumeFrom_1;\n                }\n                else {\n                    this.play(void 0, false, false, this.onEndArgument);\n                }\n            };\n            // Play a short moment, then pause, setting the cursor to the final\n            // event's time.\n            SonificationTimeline.prototype.anchorPlayMoment = function (eventFilter, onEnd) {\n                if (this.isPlaying) {\n                    this.pause();\n                }\n                var finalEventTime = 0;\n                this.play(function (e, ix, arr) {\n                    // We have to keep track of final event time ourselves, since\n                    // play() messes with the time internally upon filtering.\n                    var res = eventFilter(e, ix, arr);\n                    if (res && e.time > finalEventTime) {\n                        finalEventTime = e.time;\n                    }\n                    return res;\n                }, false, false, onEnd);\n                this.playingChannels = this.playingChannels || this.channels;\n                this.isPaused = true;\n                this.isPlaying = false;\n                this.resumeFromTime = finalEventTime;\n            };\n            // Play event(s) occurring next/prev from paused state.\n            SonificationTimeline.prototype.playAdjacent = function (next, onEnd, onBoundaryHit, eventFilter) {\n                if (this.isPlaying) {\n                    this.pause();\n                }\n                var fromTime = this.resumeFromTime, closestTime = this.channels.reduce(function (time, channel) {\n                    // Adapted binary search since events are sorted by time\n                    var events = eventFilter ?\n                        channel.events.filter(eventFilter) : channel.events;\n                    var s = 0, e = events.length, lastValidTime = time;\n                    while (s < e) {\n                        var mid = (s + e) >> 1, t = events[mid].time, cmp = t - fromTime;\n                        if (cmp > 0) { // Ahead\n                            if (next && t < lastValidTime) {\n                                lastValidTime = t;\n                            }\n                            e = mid;\n                        }\n                        else if (cmp < 0) { // Behind\n                            if (!next && t > lastValidTime) {\n                                lastValidTime = t;\n                            }\n                            s = mid + 1;\n                        }\n                        else { // Same as from time\n                            if (next) {\n                                s = mid + 1;\n                            }\n                            else {\n                                e = mid;\n                            }\n                        }\n                    }\n                    return lastValidTime;\n                }, next ? Infinity : -Infinity), margin = 0.02;\n                if (closestTime === Infinity || closestTime === -Infinity) {\n                    if (onBoundaryHit) {\n                        onBoundaryHit({\n                            chart: this.chart, timeline: this, attemptedNext: next\n                        });\n                    }\n                    return;\n                }\n                this.anchorPlayMoment(function (e, ix, arr) {\n                    var withinTime = next ?\n                        e.time > fromTime && e.time <= closestTime + margin :\n                        e.time < fromTime && e.time >= closestTime - margin;\n                    return eventFilter ? withinTime && eventFilter(e, ix, arr) :\n                        withinTime;\n                }, onEnd);\n            };\n            // Play event with related point, where the value of a prop on the\n            // related point is closest to a target value.\n            // Note: not very efficient.\n            SonificationTimeline.prototype.playClosestToPropValue = function (prop, targetVal, onEnd, onBoundaryHit, eventFilter) {\n                var filter = function (e, ix, arr) { return !!(eventFilter ?\n                    eventFilter(e, ix, arr) && e.relatedPoint :\n                    e.relatedPoint); };\n                var closestValDiff = Infinity, closestEvent = null;\n                (this.playingChannels || this.channels).forEach(function (channel) {\n                    var events = channel.events;\n                    var i = events.length;\n                    while (i--) {\n                        if (!filter(events[i], i, events)) {\n                            continue;\n                        }\n                        var val = events[i].relatedPoint[prop], diff = defined(val) && Math.abs(targetVal - val);\n                        if (diff !== false && diff < closestValDiff) {\n                            closestValDiff = diff;\n                            closestEvent = events[i];\n                        }\n                    }\n                });\n                if (closestEvent) {\n                    this.play(function (e) { return !!(closestEvent &&\n                        e.time < closestEvent.time + 1 &&\n                        e.time > closestEvent.time - 1 &&\n                        e.relatedPoint === closestEvent.relatedPoint); }, false, false, onEnd);\n                    this.playingChannels = this.playingChannels || this.channels;\n                    this.isPaused = true;\n                    this.isPlaying = false;\n                    this.resumeFromTime = closestEvent.time;\n                }\n                else if (onBoundaryHit) {\n                    onBoundaryHit({ chart: this.chart, timeline: this });\n                }\n            };\n            // Get timeline events that are related to a certain point.\n            // Note: Point grouping may cause some points not to have a\n            //  related point in the timeline.\n            SonificationTimeline.prototype.getEventsForPoint = function (point) {\n                return this.channels.reduce(function (events, channel) {\n                    var pointEvents = channel.events\n                        .filter(function (e) { return e.relatedPoint === point; });\n                    return events.concat(pointEvents);\n                }, []);\n            };\n            // Divide timeline into 100 parts of equal time, and play one of them.\n            // Used for scrubbing.\n            // Note: Should be optimized?\n            SonificationTimeline.prototype.playSegment = function (segment, onEnd) {\n                var numSegments = 100;\n                var eventTimes = {\n                    first: Infinity,\n                    last: -Infinity\n                };\n                this.channels.forEach(function (c) {\n                    if (c.events.length) {\n                        eventTimes.first = Math.min(c.events[0].time, eventTimes.first);\n                        eventTimes.last = Math.max(c.events[c.events.length - 1].time, eventTimes.last);\n                    }\n                });\n                if (eventTimes.first < Infinity) {\n                    var segmentSize = (eventTimes.last - eventTimes.first) / numSegments, fromTime_1 = eventTimes.first + segment * segmentSize, toTime_1 = fromTime_1 + segmentSize;\n                    // Binary search, do we have any events within time range?\n                    if (!this.channels.some(function (c) {\n                        var events = c.events;\n                        var s = 0, e = events.length;\n                        while (s < e) {\n                            var mid = (s + e) >> 1, t = events[mid].time;\n                            if (t < fromTime_1) { // Behind\n                                s = mid + 1;\n                            }\n                            else if (t > toTime_1) { // Ahead\n                                e = mid;\n                            }\n                            else {\n                                return true;\n                            }\n                        }\n                        return false;\n                    })) {\n                        return; // If not, don't play - avoid cancelling current play\n                    }\n                    this.play(function (e) { return e.time >= fromTime_1 && e.time <= toTime_1; }, false, false, onEnd);\n                    this.playingChannels = this.playingChannels || this.channels;\n                    this.isPaused = true;\n                    this.isPlaying = false;\n                    this.resumeFromTime = toTime_1;\n                }\n            };\n            // Get last played / current point\n            // Since events are scheduled we can't just store points as we play them\n            SonificationTimeline.prototype.getLastPlayedPoint = function (filter) {\n                var curTime = this.getCurrentTime(), channels = this.playingChannels || this.channels;\n                var closestDiff = Infinity, closestPoint = null;\n                channels.forEach(function (c) {\n                    var events = c.events.filter(function (e, ix, arr) { return !!(e.relatedPoint && e.time <= curTime &&\n                        (!filter || filter(e, ix, arr))); }), closestEvent = events[events.length - 1];\n                    if (closestEvent) {\n                        var closestTime = closestEvent.time, diff = Math.abs(closestTime - curTime);\n                        if (diff < closestDiff) {\n                            closestDiff = diff;\n                            closestPoint = closestEvent.relatedPoint;\n                        }\n                    }\n                });\n                return closestPoint;\n            };\n            // Reset play/pause state so that a later call to resume() will start over\n            SonificationTimeline.prototype.reset = function () {\n                if (this.isPlaying) {\n                    this.cancel();\n                }\n                this.resetPlayState();\n            };\n            SonificationTimeline.prototype.cancel = function () {\n                var onStop = this.options.onStop;\n                if (onStop) {\n                    onStop({ chart: this.chart, timeline: this });\n                }\n                this.isPlaying = false;\n                this.channels.forEach(function (c) { return c.cancel(); });\n                if (this.playingChannels && this.playingChannels !== this.channels) {\n                    this.playingChannels.forEach(function (c) { return c.cancel(); });\n                }\n                this.clearScheduledCallbacks();\n                this.resumeFromTime = 0;\n            };\n            SonificationTimeline.prototype.destroy = function () {\n                this.cancel();\n                if (this.playingChannels && this.playingChannels !== this.channels) {\n                    this.playingChannels.forEach(function (c) { return c.destroy(); });\n                }\n                this.channels.forEach(function (c) { return c.destroy(); });\n            };\n            SonificationTimeline.prototype.setMasterVolume = function (vol) {\n                this.channels.forEach(function (c) { return c.engine.setMasterVolume(vol); });\n            };\n            SonificationTimeline.prototype.getMIDIData = function () {\n                return toMIDI(this.channels.filter(function (c) { return c.type === 'instrument'; }));\n            };\n            SonificationTimeline.prototype.downloadMIDI = function (filename) {\n                var data = this.getMIDIData(), name = (filename ||\n                    this.chart &&\n                        this.chart.options.title &&\n                        this.chart.options.title.text ||\n                    'chart') + '.mid', blob = new Blob([data], { type: 'application/octet-stream' }), url = window.URL.createObjectURL(blob);\n                downloadURL(url, name);\n                window.URL.revokeObjectURL(url);\n            };\n            SonificationTimeline.prototype.resetPlayState = function () {\n                delete this.playingChannels;\n                delete this.onEndArgument;\n                this.playTimestamp = this.resumeFromTime = 0;\n                this.isPaused = false;\n            };\n            SonificationTimeline.prototype.clearScheduledCallbacks = function () {\n                this.scheduledCallbacks.forEach(clearTimeout);\n                this.scheduledCallbacks = [];\n            };\n            return SonificationTimeline;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * Filter callback for filtering timeline events on a SonificationTimeline.\n         *\n         * @callback Highcharts.SonificationTimelineFilterCallback\n         *\n         * @param {Highcharts.SonificationTimelineEvent} e TimelineEvent being filtered\n         *\n         * @param {number} ix Index of TimelineEvent in current event array\n         *\n         * @param {Array<Highcharts.SonificationTimelineEvent>} arr The current event array\n         *\n         * @return {boolean}\n         * The function should return true if the TimelineEvent should be included,\n         * false otherwise.\n         */\n        (''); // Keep above doclets in JS file\n\n        return SonificationTimeline;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/TimelineFromChart.js', [_modules['Extensions/Sonification/SonificationTimeline.js'], _modules['Extensions/Sonification/SonificationInstrument.js'], _modules['Extensions/Sonification/SonificationSpeaker.js'], _modules['Core/Utilities.js'], _modules['Core/Templating.js']], function (SonificationTimeline, SonificationInstrument, SonificationSpeaker, U, T) {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Build a timeline from a chart.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __assign = (this && this.__assign) || function () {\n            __assign = Object.assign || function(t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n                }\n                return t;\n            };\n            return __assign.apply(this, arguments);\n        };\n        var clamp = U.clamp, defined = U.defined, extend = U.extend, getNestedProperty = U.getNestedProperty, merge = U.merge, pick = U.pick;\n        var format = T.format;\n        var isNoteDefinition = function (str) {\n            return (/^([a-g][#b]?)[0-8]$/i).test(str);\n        };\n        /**\n         * Get the value of a point property from string.\n         * @private\n         */\n        function getPointPropValue(point, prop) {\n            var ret;\n            if (prop) {\n                ret = point[prop];\n                if (typeof ret === 'number') {\n                    return ret;\n                }\n                ret = getNestedProperty(prop, point);\n            }\n            return typeof ret === 'number' ? ret : void 0;\n        }\n        /**\n         * Get chart wide min/max for a set of props, as well as per\n         * series min/max for selected props.\n         * @private\n         */\n        function getChartExtremesForProps(chart, props, perSeriesProps) {\n            var series = chart.series, numProps = props.length, numSeriesProps = perSeriesProps.length, initCache = function (propList) {\n                return propList.reduce(function (cache, prop) {\n                    ((cache[prop] = { min: Infinity, max: -Infinity }), cache);\n                    return cache;\n                }, {});\n            }, updateCache = function (cache, point, prop) {\n                var val = point[prop];\n                if (val === void 0) {\n                    val = getNestedProperty(prop, point);\n                }\n                if (typeof val === 'number') {\n                    cache[prop].min = Math.min(cache[prop].min, val);\n                    cache[prop].max = Math.max(cache[prop].max, val);\n                }\n            }, globalExtremes = initCache(props);\n            var i = series.length;\n            var allSeriesExtremes = new Array(i);\n            while (i--) {\n                var seriesExtremes = initCache(perSeriesProps);\n                var opts = series[i].options;\n                if (!series[i].visible ||\n                    opts && opts.sonification && opts.sonification.enabled === false) {\n                    continue;\n                }\n                var points = series[i].points || [];\n                var j = points.length;\n                while (j--) {\n                    var k = numProps;\n                    while (k--) {\n                        updateCache(globalExtremes, points[j], props[k]);\n                    }\n                    k = numSeriesProps;\n                    while (k--) {\n                        updateCache(seriesExtremes, points[j], perSeriesProps[k]);\n                    }\n                }\n                allSeriesExtremes[i] = seriesExtremes;\n            }\n            return {\n                globalExtremes: globalExtremes,\n                seriesExtremes: allSeriesExtremes\n            };\n        }\n        /**\n         * Build a cache of prop extremes for the chart. Goes through\n         * options to find out which props are needed.\n         * @private\n         */\n        function getPropMetrics(chart) {\n            var globalOpts = chart.options.sonification ||\n                {}, defaultInstrMapping = (globalOpts.defaultInstrumentOptions || {})\n                .mapping || { time: 'x', pitch: 'y' }, defaultSpeechMapping = globalOpts.defaultSpeechOptions &&\n                globalOpts.defaultSpeechOptions.mapping || {}, seriesTimeProps = [], commonTimeProps = {}, addTimeProp = function (prop, seriesIx) {\n                if (seriesIx !== null) {\n                    seriesTimeProps[seriesIx] =\n                        seriesTimeProps[seriesIx] || {};\n                    seriesTimeProps[seriesIx][prop] = true;\n                }\n                else {\n                    commonTimeProps[prop] = true;\n                }\n            }, props = {}, perSeriesProps = {}, addPropFromMappingParam = function (param, val, seriesIx) {\n                var removeInvertedFlag = function (s) { return (s.charAt(0) === '-' ? s.slice(1) : s); };\n                if (typeof val === 'string' && param !== 'text') {\n                    if (param === 'pitch' && isNoteDefinition(val)) {\n                        return;\n                    }\n                    if (param === 'time') {\n                        perSeriesProps[val] = true;\n                        addTimeProp(val, seriesIx);\n                    }\n                    props[removeInvertedFlag(val)] = true;\n                    return;\n                }\n                var paramOpts = val;\n                if (paramOpts && paramOpts.mapTo &&\n                    typeof paramOpts.mapTo === 'string') {\n                    var mapTo = removeInvertedFlag(paramOpts.mapTo);\n                    if (param === 'time') {\n                        addTimeProp(mapTo, seriesIx);\n                    }\n                    if (param === 'time' || paramOpts.within === 'series') {\n                        perSeriesProps[mapTo] = true;\n                    }\n                    props[mapTo] = true;\n                    return;\n                }\n                if (['tremolo', 'lowpass', 'highpass'].indexOf(param) > -1 &&\n                    typeof val === 'object') {\n                    Object.keys(val).forEach(function (subParam) {\n                        return addPropFromMappingParam(subParam, val[subParam], seriesIx);\n                    });\n                }\n            }, addPropsFromMappingOptions = function (mapping, seriesIx) {\n                (Object.keys(mapping)).forEach(function (param) {\n                    return addPropFromMappingParam(param, mapping[param], seriesIx);\n                });\n            }, addPropsFromContextTracks = function (tracks) { return tracks.forEach(function (track) {\n                props[track.valueProp || 'x'] =\n                    perSeriesProps[track.valueProp || 'x'] = true;\n            }); };\n            addPropsFromMappingOptions(defaultInstrMapping, null);\n            addPropsFromMappingOptions(defaultSpeechMapping, null);\n            addPropsFromContextTracks(globalOpts.globalContextTracks || []);\n            var hasCommonTimeProps = Object.keys(commonTimeProps).length;\n            chart.series.forEach(function (series) {\n                var sOpts = series.options.sonification;\n                if (series.visible && !(sOpts && sOpts.enabled === false)) {\n                    if (hasCommonTimeProps) {\n                        seriesTimeProps[series.index] = merge(commonTimeProps);\n                    }\n                    if (sOpts) {\n                        var defaultInstrMapping_1 = (sOpts.defaultInstrumentOptions || {}).mapping, defaultSpeechMapping_1 = (sOpts.defaultSpeechOptions || {}).mapping;\n                        if (defaultInstrMapping_1) {\n                            addPropsFromMappingOptions(defaultInstrMapping_1, series.index);\n                        }\n                        if (defaultSpeechMapping_1) {\n                            addPropsFromMappingOptions(defaultSpeechMapping_1, series.index);\n                        }\n                        addPropsFromContextTracks(sOpts.contextTracks || []);\n                        (sOpts.tracks || [])\n                            .concat(sOpts.contextTracks || [])\n                            .forEach(function (trackOpts) {\n                            if (trackOpts.mapping) {\n                                addPropsFromMappingOptions(trackOpts.mapping, series.index);\n                            }\n                        });\n                    }\n                }\n            });\n            return __assign({ seriesTimeProps: seriesTimeProps }, getChartExtremesForProps(chart, Object.keys(props), Object.keys(perSeriesProps)));\n        }\n        /**\n         * Map a relative value onto a virtual axis.\n         * @private\n         */\n        function mapToVirtualAxis(value, valueExtremes, virtualAxisExtremes, invert, logarithmic // Virtual axis is logarithmic\n        ) {\n            var lenValueAxis = valueExtremes.max - valueExtremes.min;\n            if (lenValueAxis <= 0) {\n                return virtualAxisExtremes.min;\n            }\n            var lenVirtualAxis = virtualAxisExtremes.max - virtualAxisExtremes.min, valueDelta = value - valueExtremes.min;\n            var virtualValueDelta = lenVirtualAxis * valueDelta / lenValueAxis;\n            if (logarithmic) {\n                var log = valueExtremes.min > 0 ?\n                    // Normal log formula\n                    function (x) { return Math.log(x) / Math.LOG10E; } :\n                    // Negative logarithmic support needed\n                    function (x) {\n                        var adjustedNum = Math.abs(x);\n                        if (adjustedNum < 10) {\n                            adjustedNum += (10 - adjustedNum) / 10;\n                        }\n                        var res = Math.log(adjustedNum) / Math.LN10;\n                        return x < 0 ? -res : res;\n                    };\n                var logValMin = log(valueExtremes.min);\n                virtualValueDelta = lenVirtualAxis *\n                    (log(value) - logValMin) /\n                    (log(valueExtremes.max) - logValMin);\n            }\n            var val = invert ?\n                virtualAxisExtremes.max - virtualValueDelta :\n                virtualAxisExtremes.min + virtualValueDelta;\n            return clamp(val, virtualAxisExtremes.min, virtualAxisExtremes.max);\n        }\n        /**\n         * Get the value of a mapped parameter for a point.\n         * @private\n         */\n        function getMappingParameterValue(context, propMetrics, useSeriesExtremes, defaultMapping, mappingOptions, contextValueProp) {\n            if (typeof mappingOptions === 'number') {\n                return mappingOptions;\n            }\n            if (typeof mappingOptions === 'function') {\n                return mappingOptions(extend({ time: 0 }, context));\n            }\n            var mapTo = mappingOptions, mapFunc = defaultMapping.mapFunction, min = defaultMapping.min, max = defaultMapping.max, within = defaultMapping.within, scale;\n            if (typeof mappingOptions === 'object') {\n                mapTo = mappingOptions.mapTo;\n                mapFunc = mappingOptions.mapFunction || mapFunc;\n                min = pick(mappingOptions.min, min);\n                max = pick(mappingOptions.max, max);\n                within = mappingOptions.within || defaultMapping.within;\n                scale = mappingOptions.scale;\n            }\n            if (!mapTo) {\n                return null;\n            }\n            var isInverted = mapTo.charAt(0) === '-';\n            if (isInverted) {\n                mapTo = mapTo.slice(1);\n            }\n            var value = context.value;\n            var useContextValue = mapTo === 'value' && value !== void 0 &&\n                contextValueProp;\n            if (!useContextValue) {\n                var fixedValue = mappingOptions.value;\n                if (fixedValue !== void 0) {\n                    value = fixedValue;\n                }\n                else {\n                    if (!context.point) {\n                        return null;\n                    }\n                    value = context.point[mapTo];\n                }\n                if (value === void 0) {\n                    value = getNestedProperty(mapTo, context.point);\n                }\n            }\n            if (typeof value !== 'number' || value === null) {\n                return null;\n            }\n            // Figure out extremes for this mapping\n            var extremes = null;\n            if (context.point) {\n                if (within === 'xAxis' || within === 'yAxis') {\n                    var axis = context.point.series[within];\n                    if (axis && defined(axis.dataMin) && defined(axis.dataMax)) {\n                        extremes = {\n                            min: axis.dataMin,\n                            max: axis.dataMax\n                        };\n                    }\n                }\n                else if ((within === 'series' || useSeriesExtremes) &&\n                    context.point.series) {\n                    extremes = propMetrics.seriesExtremes[context.point.series.index][useContextValue ? contextValueProp : mapTo];\n                }\n            }\n            if (!extremes) { // Chart extremes\n                extremes = propMetrics.globalExtremes[useContextValue ? contextValueProp : mapTo];\n            }\n            if (scale) {\n                // Build a musical scale from array\n                var scaleAxis = [], minOctave = Math.floor(min / 12), maxOctave = Math.ceil(max / 12) + 1, lenScale = scale.length;\n                for (var octave = minOctave; octave < maxOctave; ++octave) {\n                    for (var scaleIx = 0; scaleIx < lenScale; ++scaleIx) {\n                        var note = 12 * octave + scale[scaleIx];\n                        if (note >= min && note <= max) {\n                            scaleAxis.push(note);\n                        }\n                    }\n                }\n                // Map to the scale\n                var noteNum = mapToVirtualAxis(value, extremes, { min: 0, max: scaleAxis.length - 1 }, isInverted, mapFunc === 'logarithmic');\n                return scaleAxis[Math.round(noteNum)];\n            }\n            return mapToVirtualAxis(value, extremes, { min: min, max: max }, isInverted, mapFunc === 'logarithmic');\n        }\n        /**\n         * Get mapping parameter value with defined fallback and defaults.\n         * @private\n         */\n        function getParamValWithDefault(context, propMetrics, useSeriesExtremes, mappingParamOptions, fallback, defaults, contextValueProp) {\n            return pick(getMappingParameterValue(context, propMetrics, useSeriesExtremes, extend({\n                min: 0, max: 1, mapTo: 'y', mapFunction: 'linear', within: 'chart'\n            }, (defaults || {})), mappingParamOptions, contextValueProp), fallback);\n        }\n        /**\n         * Get time value for a point event.\n         * @private\n         */\n        function getPointTime(point, startTime, duration, timeMappingOptions, propMetrics, useSeriesExtremes) {\n            var time = getParamValWithDefault({ point: point, time: 0 }, propMetrics, useSeriesExtremes, timeMappingOptions, 0, { min: 0, max: duration, mapTo: 'x' });\n            return time + startTime;\n        }\n        /**\n         * Get duration for a series\n         * @private\n         */\n        function getAvailableDurationForSeries(series, totalDuration, propMetrics, afterSeriesWait) {\n            var timeProp, seriesDuration;\n            var availableDuration = totalDuration -\n                (series.chart.series.length - 1) * afterSeriesWait, hasGlobalTimeProp = propMetrics.seriesTimeProps.every(function (timeProps) {\n                var props = Object.keys(timeProps);\n                if (props.length > 1) {\n                    return false;\n                }\n                if (!timeProp) {\n                    timeProp = props[0];\n                }\n                return timeProp === props[0];\n            });\n            if (hasGlobalTimeProp) {\n                // Chart-wide single time prop, use time prop extremes\n                var seriesExtremes = propMetrics\n                    .seriesExtremes[series.index][timeProp], seriesTimeLen = seriesExtremes.max - seriesExtremes.min, totalTimeLen = propMetrics.seriesExtremes.reduce(function (sum, s) { return (s[timeProp] ?\n                    sum + s[timeProp].max - s[timeProp].min :\n                    sum); }, 0);\n                seriesDuration = Math.round(seriesTimeLen / totalTimeLen * availableDuration);\n            }\n            else {\n                // No common time prop, so use percent of total points\n                var totalPoints = series.chart.series.reduce(function (sum, s) { return sum + s.points.length; }, 0);\n                seriesDuration = Math.round((series.points || []).length / totalPoints * availableDuration);\n            }\n            return Math.max(50, seriesDuration);\n        }\n        /**\n         * Build and add a track to the timeline.\n         * @private\n         */\n        function addTimelineChannelFromTrack(timeline, audioContext, destinationNode, options) {\n            var speechOpts = options, instrMappingOpts = (options.mapping || {}), engine = options.type === 'speech' ?\n                new SonificationSpeaker({\n                    language: speechOpts.language,\n                    name: speechOpts.preferredVoice\n                }) :\n                new SonificationInstrument(audioContext, destinationNode, {\n                    capabilities: {\n                        pan: !!instrMappingOpts.pan,\n                        tremolo: !!instrMappingOpts.tremolo,\n                        filters: !!(instrMappingOpts.highpass ||\n                            instrMappingOpts.lowpass)\n                    },\n                    synthPatch: options.instrument,\n                    midiTrackName: options.midiName\n                });\n            return timeline.addChannel(options.type || 'instrument', engine, pick(options.showPlayMarker, true));\n        }\n        /**\n         * Add event from a point to a mapped instrument track.\n         * @private\n         */\n        function addMappedInstrumentEvent(context, channel, mappingOptions, propMetrics, roundToMusicalNotes, contextValueProp) {\n            var getParam = function (param, fallback, defaults, parent) { return getParamValWithDefault(context, propMetrics, false, (parent || mappingOptions)[param], fallback, defaults, contextValueProp); };\n            var eventsAdded = [], eventOpts = {\n                noteDuration: getParam('noteDuration', 200, { min: 40, max: 1000 }),\n                pan: getParam('pan', 0, { min: -1, max: 1 }),\n                volume: getParam('volume', 1, { min: 0.1, max: 1 })\n            };\n            if (mappingOptions.frequency) {\n                eventOpts.frequency = getParam('frequency', 440, { min: 50, max: 6000 });\n            }\n            if (mappingOptions.lowpass) {\n                eventOpts.lowpassFreq = getParam('frequency', 20000, { min: 0, max: 20000 }, mappingOptions.lowpass);\n                eventOpts.lowpassResonance = getParam('resonance', 0, { min: -6, max: 12 }, mappingOptions.lowpass);\n            }\n            if (mappingOptions.highpass) {\n                eventOpts.highpassFreq = getParam('frequency', 20000, { min: 0, max: 20000 }, mappingOptions.highpass);\n                eventOpts.highpassResonance = getParam('resonance', 0, { min: -6, max: 12 }, mappingOptions.highpass);\n            }\n            if (mappingOptions.tremolo) {\n                eventOpts.tremoloDepth = getParam('depth', 0, { min: 0, max: 0.8 }, mappingOptions.tremolo);\n                eventOpts.tremoloSpeed = getParam('speed', 0, { min: 0, max: 0.8 }, mappingOptions.tremolo);\n            }\n            var gapBetweenNotes = getParam('gapBetweenNotes', 150, { min: 50, max: 1000 }), playDelay = getParam('playDelay', 0, { max: 200 });\n            var addNoteEvent = function (noteDef, ix) {\n                if (ix === void 0) { ix = 0; }\n                var opts = noteDef;\n                if (noteDef.mapTo) {\n                    // Transform the pitch mapping options to normal mapping options\n                    if (typeof noteDef.min === 'string') {\n                        opts.min = SonificationInstrument\n                            .noteStringToC0Distance(noteDef.min);\n                    }\n                    if (typeof noteDef.max === 'string') {\n                        opts.max = SonificationInstrument\n                            .noteStringToC0Distance(noteDef.max);\n                    }\n                }\n                else if (typeof noteDef === 'string' && isNoteDefinition(noteDef)) {\n                    opts = SonificationInstrument.noteStringToC0Distance(noteDef);\n                }\n                eventOpts.note = getParamValWithDefault(context, propMetrics, false, opts, -1, { min: 0, max: 107 }, contextValueProp);\n                if (eventOpts.note > -1) {\n                    if (roundToMusicalNotes) {\n                        eventOpts.note = Math.round(eventOpts.note);\n                    }\n                    eventsAdded.push(channel.addEvent({\n                        time: context.time + playDelay + gapBetweenNotes * ix,\n                        relatedPoint: context.point,\n                        instrumentEventOptions: ix !== void 0 ?\n                            extend({}, eventOpts) : eventOpts\n                    }));\n                }\n            };\n            if (mappingOptions.pitch &&\n                mappingOptions.pitch.constructor === Array) {\n                mappingOptions.pitch.forEach(addNoteEvent);\n            }\n            else if (mappingOptions.pitch) {\n                addNoteEvent(mappingOptions.pitch);\n            }\n            else if (mappingOptions.frequency) {\n                eventsAdded.push(channel.addEvent({\n                    time: context.time + playDelay,\n                    relatedPoint: context.point,\n                    instrumentEventOptions: eventOpts\n                }));\n            }\n            return eventsAdded;\n        }\n        /**\n         * Get the message value to speak for a point.\n         * @private\n         */\n        function getSpeechMessageValue(context, messageParam) {\n            return format(typeof messageParam === 'function' ?\n                messageParam(context) :\n                messageParam, context, context.point && context.point.series.chart);\n        }\n        /**\n         * Add an event from a point to a mapped speech track.\n         * @private\n         */\n        function addMappedSpeechEvent(context, channel, mappingOptions, propMetrics, contextValueProp) {\n            var getParam = function (param, fallback, defaults) { return getParamValWithDefault(context, propMetrics, false, mappingOptions[param], fallback, defaults, contextValueProp); };\n            var playDelay = getParam('playDelay', 0, { max: 200 }), pitch = getParam('pitch', 1, { min: 0.3, max: 2 }), rate = getParam('rate', 1, { min: 0.4, max: 4 }), volume = getParam('volume', 1, { min: 0.1 }), message = getSpeechMessageValue(context, mappingOptions.text);\n            if (message) {\n                return channel.addEvent({\n                    time: context.time + playDelay,\n                    relatedPoint: context.point,\n                    speechOptions: {\n                        pitch: pitch,\n                        rate: rate,\n                        volume: volume\n                    },\n                    message: message\n                });\n            }\n        }\n        /**\n         * Add events to a channel for a point&track combo.\n         * @private\n         */\n        function addMappedEventForPoint(context, channel, trackOptions, propMetrics) {\n            var eventsAdded = [];\n            if (trackOptions.type === 'speech' && trackOptions.mapping) {\n                var eventAdded = addMappedSpeechEvent(context, channel, trackOptions.mapping, propMetrics);\n                if (eventAdded) {\n                    eventsAdded = [eventAdded];\n                }\n            }\n            else if (trackOptions.mapping) {\n                eventsAdded = addMappedInstrumentEvent(context, channel, trackOptions.mapping, propMetrics, pick(trackOptions\n                    .roundToMusicalNotes, true));\n            }\n            return eventsAdded;\n        }\n        /**\n         * Get a reduced set of points from a list, depending on grouping opts.\n         * @private\n         */\n        function getGroupedPoints(pointGroupOpts, points) {\n            var alg = pointGroupOpts.algorithm || 'minmax', r = function (ix) { return (points[ix] ? [points[ix].point] : []); };\n            if (alg === 'first') {\n                return r(0);\n            }\n            if (alg === 'last') {\n                return r(points.length - 1);\n            }\n            if (alg === 'middle') {\n                return r(points.length >> 1);\n            }\n            if (alg === 'firstlast') {\n                return r(0).concat(r(points.length - 1));\n            }\n            if (alg === 'minmax') {\n                var prop_1 = pointGroupOpts.prop || 'y';\n                var min_1, max_1, minVal_1, maxVal_1;\n                points.forEach(function (p) {\n                    var val = getPointPropValue(p.point, prop_1);\n                    if (val === void 0) {\n                        return;\n                    }\n                    if (!min_1 || val < minVal_1) {\n                        min_1 = p;\n                        minVal_1 = val;\n                    }\n                    if (!max_1 || val > maxVal_1) {\n                        max_1 = p;\n                        maxVal_1 = val;\n                    }\n                });\n                if (min_1 && max_1) {\n                    if (min_1.point === max_1.point) {\n                        return [min_1.point];\n                    }\n                    return min_1.time > max_1.time ?\n                        [max_1.point, min_1.point] :\n                        [min_1.point, max_1.point];\n                }\n            }\n            return [];\n        }\n        /**\n         * Should a track be active for this event?\n         * @private\n         */\n        function isActive(context, activeWhen, lastPropValue) {\n            if (typeof activeWhen === 'function') {\n                return activeWhen(context);\n            }\n            if (typeof activeWhen === 'object') {\n                var prop = activeWhen.prop, val = pick(context.value, context.point && getPointPropValue(context.point, prop));\n                if (typeof val !== 'number') {\n                    return false;\n                }\n                var crossingOk = true;\n                var crossingUp = activeWhen.crossingUp, crossingDown = activeWhen.crossingDown, hasLastValue = typeof lastPropValue === 'number';\n                if (crossingUp && crossingDown) {\n                    crossingOk = hasLastValue && (lastPropValue < crossingUp && val >= crossingUp ||\n                        lastPropValue > crossingDown && val <= crossingDown);\n                }\n                else {\n                    crossingOk = (crossingUp === void 0 ||\n                        hasLastValue && lastPropValue < crossingUp &&\n                            val >= crossingUp) && (crossingDown === void 0 ||\n                        hasLastValue && lastPropValue > crossingDown &&\n                            val <= crossingDown);\n                }\n                var max = pick(activeWhen.max, Infinity), min = pick(activeWhen.min, -Infinity);\n                return val <= max && val >= min && crossingOk;\n            }\n            return true;\n        }\n        /**\n         * Build a new timeline object from a chart.\n         * @private\n         */\n        function timelineFromChart(audioContext, destinationNode, chart) {\n            var options = chart.options.sonification ||\n                {}, defaultInstrOpts = options.defaultInstrumentOptions, defaultSpeechOpts = options.defaultSpeechOptions, defaultPointGroupOpts = merge({\n                enabled: true,\n                groupTimespan: 15,\n                algorithm: 'minmax',\n                prop: 'y'\n            }, options.pointGrouping), globalTracks = options.globalTracks || [], globalContextTracks = options.globalContextTracks || [], isSequential = options.order === 'sequential', \n            // Slight margin for note end\n            totalDuration = Math.max(50, options.duration - 300), afterSeriesWait = options.afterSeriesWait, eventOptions = options.events || {}, propMetrics = getPropMetrics(chart), timeline = new SonificationTimeline({\n                onPlay: eventOptions.onPlay,\n                onEnd: eventOptions.onEnd,\n                onStop: eventOptions.onStop,\n                showCrosshair: options.showCrosshair,\n                showTooltip: options.showTooltip\n            }, chart);\n            // Expose PropMetrics for tests\n            if (chart.sonification) {\n                chart.sonification.propMetrics = propMetrics;\n            }\n            var startTime = 0;\n            chart.series.forEach(function (series, seriesIx) {\n                var sOptions = series.options.sonification ||\n                    {};\n                if (series.visible && sOptions.enabled !== false) {\n                    var seriesDuration_1 = isSequential ? getAvailableDurationForSeries(series, totalDuration, propMetrics, afterSeriesWait) : totalDuration, seriesDefaultInstrOpts_1 = merge(defaultInstrOpts, sOptions.defaultInstrumentOptions), seriesDefaultSpeechOpts_1 = merge(defaultSpeechOpts, sOptions.defaultSpeechOptions), seriesPointGroupOpts_1 = merge(defaultPointGroupOpts, sOptions.pointGrouping), mainTracks = (sOptions.tracks || [seriesDefaultInstrOpts_1])\n                        .concat(globalTracks), hasAddedSeries = !!timeline.channels.length, contextTracks = hasAddedSeries && !isSequential ?\n                        sOptions.contextTracks || [] :\n                        (sOptions.contextTracks || []).concat(globalContextTracks), eventsAdded_1 = [];\n                    // For crossing threshold notifications\n                    var lastPropValue_1;\n                    // Add events for the mapped tracks\n                    mainTracks.forEach(function (trackOpts) {\n                        var mergedOpts = merge({\n                            pointGrouping: seriesPointGroupOpts_1,\n                            midiName: trackOpts.midiName || series.name\n                        }, trackOpts.type === 'speech' ?\n                            seriesDefaultSpeechOpts_1 : seriesDefaultInstrOpts_1, trackOpts), pointGroupOpts = mergedOpts.pointGrouping, activeWhen = mergedOpts.activeWhen, updateLastPropValue = function (point) {\n                            if (typeof activeWhen === 'object' &&\n                                activeWhen.prop) {\n                                lastPropValue_1 = getPointPropValue(point, activeWhen.prop);\n                            }\n                        };\n                        var channel = addTimelineChannelFromTrack(timeline, audioContext, destinationNode, mergedOpts), add = function (c) { return eventsAdded_1.push.apply(eventsAdded_1, addMappedEventForPoint(c, channel, mergedOpts, propMetrics)); };\n                        // Go through the points and add events to channel\n                        var pointGroup = [], pointGroupTime = 0;\n                        var addCurrentPointGroup = function (groupSpanTime) {\n                            if (pointGroup.length === 1) {\n                                add({\n                                    point: pointGroup[0].point,\n                                    time: pointGroupTime + groupSpanTime / 2\n                                });\n                            }\n                            else {\n                                var points = getGroupedPoints(pointGroupOpts, pointGroup), t_1 = groupSpanTime / points.length;\n                                points.forEach(function (p, ix) { return add({\n                                    point: p,\n                                    time: pointGroupTime + t_1 / 2 + t_1 * ix\n                                }); });\n                            }\n                            pointGroup = [];\n                        };\n                        (series.points || []).forEach(function (point, pointIx) {\n                            var isLastPoint = pointIx === series.points.length - 1;\n                            var time = getPointTime(point, startTime, seriesDuration_1, mergedOpts.mapping && mergedOpts.mapping.time || 0, propMetrics, isSequential);\n                            var context = { point: point, time: time };\n                            // Is this point active?\n                            if (!mergedOpts.mapping ||\n                                !isActive(context, activeWhen, lastPropValue_1)) {\n                                updateLastPropValue(point);\n                                // Remaining points in group\n                                if (isLastPoint && pointGroup.length) {\n                                    addCurrentPointGroup(pointGroup[pointGroup.length - 1].time -\n                                        pointGroup[0].time);\n                                }\n                                return;\n                            }\n                            updateLastPropValue(point);\n                            // Add the events\n                            if (!pointGroupOpts.enabled) {\n                                add(context);\n                            }\n                            else {\n                                var dT = time - pointGroupTime, groupSpan = pointGroupOpts.groupTimespan, spanTime = isLastPoint &&\n                                    dT <= groupSpan ? dT : groupSpan;\n                                if (isLastPoint || dT > groupSpan) {\n                                    if (dT <= groupSpan) {\n                                        // Only happens if last point is within group\n                                        pointGroup.push(context);\n                                    }\n                                    addCurrentPointGroup(spanTime);\n                                    pointGroupTime = Math.floor(time / groupSpan) *\n                                        groupSpan;\n                                    if (isLastPoint && dT > groupSpan) {\n                                        add({\n                                            point: context.point,\n                                            time: pointGroupTime + spanTime / 2\n                                        });\n                                    }\n                                    else {\n                                        pointGroup = [context];\n                                    }\n                                }\n                                else {\n                                    pointGroup.push(context);\n                                }\n                            }\n                        });\n                    });\n                    // Add callbacks to first/last events\n                    var firstEvent = eventsAdded_1.reduce(function (first, e) { return (e.time < first.time ? e : first); }, { time: Infinity });\n                    var lastEvent = eventsAdded_1.reduce(function (last, e) { return (e.time > last.time ? e : last); }, { time: -Infinity });\n                    firstEvent.callback = eventOptions.onSeriesStart ?\n                        eventOptions.onSeriesStart.bind(null, { series: series, timeline: timeline }) :\n                        void 0;\n                    lastEvent.callback = eventOptions.onSeriesEnd ?\n                        eventOptions.onSeriesEnd.bind(null, { series: series, timeline: timeline }) :\n                        void 0;\n                    // Add the context tracks that are not related to points\n                    contextTracks.forEach(function (trackOpts) {\n                        var mergedOpts = trackOpts.type === 'speech' ?\n                            merge(defaultSpeechOpts, trackOpts) :\n                            merge(defaultInstrOpts, {\n                                mapping: { pitch: { mapTo: 'value' } }\n                            }, trackOpts);\n                        var contextChannel = addTimelineChannelFromTrack(timeline, audioContext, destinationNode, mergedOpts);\n                        lastPropValue_1 = void 0;\n                        var timeInterval = mergedOpts.timeInterval, valueInterval = mergedOpts.valueInterval, valueProp = mergedOpts.valueProp || 'x', activeWhen = mergedOpts.activeWhen, contextExtremes = propMetrics\n                            .seriesExtremes[seriesIx][valueProp], addContextEvent = function (time, value) {\n                            if (!mergedOpts.mapping ||\n                                !isActive({ time: time, value: value }, typeof activeWhen === 'object' ?\n                                    extend({ prop: valueProp }, activeWhen) :\n                                    activeWhen, lastPropValue_1)) {\n                                lastPropValue_1 = value;\n                                return;\n                            }\n                            lastPropValue_1 = value;\n                            if (mergedOpts.type === 'speech') {\n                                addMappedSpeechEvent({ time: time, value: value }, contextChannel, mergedOpts.mapping, propMetrics, valueProp);\n                            }\n                            else {\n                                addMappedInstrumentEvent({ time: time, value: value }, contextChannel, mergedOpts.mapping, propMetrics, pick(mergedOpts.roundToMusicalNotes, true), valueProp);\n                            }\n                        };\n                        if (timeInterval) {\n                            var time = 0;\n                            while (time <= seriesDuration_1) {\n                                var val = mapToVirtualAxis(time, { min: 0, max: seriesDuration_1 }, contextExtremes);\n                                addContextEvent(time + startTime, val);\n                                time += timeInterval;\n                            }\n                        }\n                        if (valueInterval) {\n                            var val = contextExtremes.min;\n                            while (val <= contextExtremes.max) {\n                                var time = mapToVirtualAxis(val, contextExtremes, { min: 0, max: seriesDuration_1 }, false, mergedOpts.valueMapFunction === 'logarithmic');\n                                addContextEvent(time + startTime, val);\n                                val += valueInterval;\n                            }\n                        }\n                    });\n                    if (isSequential) {\n                        startTime += seriesDuration_1 + afterSeriesWait;\n                    }\n                }\n            });\n            return timeline;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return timelineFromChart;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/Sonification.js', [_modules['Core/Defaults.js'], _modules['Core/Utilities.js'], _modules['Core/Globals.js'], _modules['Extensions/Sonification/Options.js'], _modules['Extensions/Sonification/SonificationInstrument.js'], _modules['Extensions/Sonification/SonificationSpeaker.js'], _modules['Extensions/Sonification/SynthPatch.js'], _modules['Extensions/Sonification/InstrumentPresets.js'], _modules['Extensions/Sonification/TimelineFromChart.js']], function (D, U, H, defaultSonificationOptions, SonificationInstrument, SonificationSpeaker, SynthPatch, InstrumentPresets, timelineFromChart) {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Sonification module.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var defaultOptions = D.defaultOptions, getOptions = D.getOptions;\n        var addEvent = U.addEvent, extend = U.extend, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick;\n        var doc = H.doc, win = H.win;\n        /**\n         * The Sonification class. This class represents a chart's sonification\n         * capabilities. A chart automatically gets an instance of this class when\n         * applicable.\n         *\n         * @sample highcharts/sonification/chart-events\n         *         Basic demo accessing some of the chart.sonification methods.\n         * @sample highcharts/demo/sonification-navigation\n         *         More advanced demo using more functionality.\n         *\n         * @requires modules/sonification\n         *\n         * @class\n         * @name Highcharts.Sonification\n         *\n         * @param {Highcharts.Chart} chart The chart to tie the sonification to\n         */\n        var Sonification = /** @class */ (function () {\n            function Sonification(chart) {\n                this.chart = chart;\n                this.retryContextCounter = 0;\n                this.lastUpdate = 0;\n                this.unbindKeydown = addEvent(doc, 'keydown', function (e) {\n                    if (chart && chart.sonification &&\n                        (e.key === 'Esc' || e.key === 'Escape')) {\n                        chart.sonification.cancel();\n                    }\n                });\n                try {\n                    this.audioContext = new win.AudioContext();\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    this.audioContext.suspend();\n                    this.audioDestination = this.audioContext.destination;\n                }\n                catch (e) { /* Ignore */ }\n            }\n            /**\n             * Set the audio destination node to something other than the default\n             * output. This allows for inserting custom WebAudio chains after the\n             * sonification.\n             * @function Highcharts.Sonification#setAudioDestination\n             * @param {AudioDestinationNode} audioDestination The destination node\n             */\n            Sonification.prototype.setAudioDestination = function (audioDestination) {\n                this.audioDestination = audioDestination;\n                this.update();\n            };\n            /**\n             * Check if sonification is playing currently\n             * @function Highcharts.Sonification#isPlaying\n             * @return {boolean} `true` if currently playing, `false` if not\n             */\n            Sonification.prototype.isPlaying = function () {\n                return !!this.timeline && this.timeline.isPlaying;\n            };\n            /**\n             * Divide timeline into 100 parts of equal time, and play one of them.\n             * Can be used for scrubbing navigation.\n             * @function Highcharts.Sonification#playSegment\n             *\n             * @sample highcharts/sonification/scrubbing\n             *         Scrubbing with slider\n             *\n             * @param {number} segment The segment to play, from 0 to 100\n             * @param {Highcharts.SonificationChartEventCallback} [onEnd] Callback to call after play completed\n             */\n            Sonification.prototype.playSegment = function (segment, onEnd) {\n                if (!this.ready(this.playSegment.bind(this, segment, onEnd))) {\n                    return;\n                }\n                if (this.timeline) {\n                    this.timeline.playSegment(segment, onEnd);\n                }\n            };\n            /**\n             * Play point(s)/event(s) adjacent to current timeline cursor location.\n             * @function Highcharts.Sonification#playAdjacent\n             *\n             * @sample highcharts/demo/sonification-navigation\n             *         Sonification keyboard navigation\n             *\n             * @param {number} next Pass `true` to play next point, `false` for previous\n             * @param {Highcharts.SonificationChartEventCallback} [onEnd]\n             * Callback to call after play completed\n             * @param {Highcharts.SonificationTimelineFilterCallback} [eventFilter]\n             * Filter to apply to the events before finding adjacent to play\n             */\n            Sonification.prototype.playAdjacent = function (next, onEnd, eventFilter) {\n                var _this = this;\n                if (!this.ready(this.playAdjacent.bind(this, next, onEnd, eventFilter))) {\n                    return;\n                }\n                if (this.timeline) {\n                    var opts = this.chart.options.sonification, onHit = opts && opts.events && opts.events.onBoundaryHit;\n                    if (!onHit) {\n                        this.initBoundaryInstrument();\n                    }\n                    this.timeline.playAdjacent(next, onEnd, onHit || (function () {\n                        _this.defaultBoundaryHit();\n                    }), eventFilter);\n                }\n            };\n            /**\n             * Play next/previous series, picking the point closest to a prop value\n             * from last played point. By default picks the point in the adjacent\n             * series with the closest x value as the last played point.\n             * @function Highcharts.Sonification#playAdjacentSeries\n             *\n             * @sample highcharts/demo/sonification-navigation\n             *         Sonification keyboard navigation\n             *\n             * @param {number} next Pass `true` to play next series, `false` for previous\n             * @param {string} [prop] Prop to find closest value of, defaults to `x`.\n             * @param {Highcharts.SonificationChartEventCallback} [onEnd]\n             * Callback to call after play completed\n             *\n             * @return {Highcharts.Series|null} The played series, or `null` if none found\n             */\n            Sonification.prototype.playAdjacentSeries = function (next, prop, onEnd) {\n                if (prop === void 0) { prop = 'x'; }\n                var lastPlayed = this.getLastPlayedPoint();\n                if (lastPlayed) {\n                    var targetSeriesIx_1 = lastPlayed.series.index + (next ? 1 : -1);\n                    this.playClosestToProp(prop, lastPlayed[prop], function (e) { return !!e.relatedPoint &&\n                        e.relatedPoint.series.index === targetSeriesIx_1; }, onEnd);\n                    return this.chart.series[targetSeriesIx_1] || null;\n                }\n                return null;\n            };\n            /**\n             * Play point(s)/event(s) closest to a prop relative to a reference value.\n             * @function Highcharts.Sonification#playClosestToProp\n             *\n             * @param {string} prop Prop to compare.\n             * @param {number} targetValue Target value to find closest value of.\n             * @param {Highcharts.SonificationTimelineFilterCallback} [targetFilter]\n             * Filter to apply to the events before finding closest point(s)\n             * @param {Highcharts.SonificationChartEventCallback} [onEnd]\n             * Callback to call after play completed\n             */\n            Sonification.prototype.playClosestToProp = function (prop, targetValue, targetFilter, onEnd) {\n                var _this = this;\n                if (!this.ready(this.playClosestToProp.bind(this, prop, targetValue, targetFilter, onEnd))) {\n                    return;\n                }\n                if (this.timeline) {\n                    var opts = this.chart.options.sonification, onHit = opts && opts.events && opts.events.onBoundaryHit;\n                    if (!onHit) {\n                        this.initBoundaryInstrument();\n                    }\n                    this.timeline.playClosestToPropValue(prop, targetValue, onEnd, onHit || (function () {\n                        return _this.defaultBoundaryHit();\n                    }), targetFilter);\n                }\n            };\n            /**\n             * Get last played point\n             * @function Highcharts.Sonification#getLastPlayedPoint\n             *\n             * @sample highcharts/demo/sonification-navigation\n             *         Sonification keyboard navigation\n             *\n             * @return {Highcharts.Point|null} The point, or null if none\n             */\n            Sonification.prototype.getLastPlayedPoint = function () {\n                if (this.timeline) {\n                    return this.timeline.getLastPlayedPoint();\n                }\n                return null;\n            };\n            /**\n             * Play a note with a specific instrument, and optionally a time offset.\n             * @function Highcharts.Sonification#playNote\n             *\n             * @sample highcharts/sonification/chart-events\n             *         Custom notifications\n             *\n             * @param {Highcharts.SonificationSynthPreset|Highcharts.SynthPatchOptionsObject} instrument\n             * The instrument to play. Can be either a string referencing the\n             * instrument presets, or an actual SynthPatch configuration.\n             * @param {Highcharts.SonificationInstrumentScheduledEventOptionsObject} options\n             * Configuration for the instrument event to play.\n             * @param {number} [delayMs]\n             * Time offset from now, in milliseconds. Defaults to 0.\n             */\n            Sonification.prototype.playNote = function (instrument, options, delayMs) {\n                if (delayMs === void 0) { delayMs = 0; }\n                if (!this.ready(this.playNote.bind(this, instrument, options))) {\n                    return;\n                }\n                var duration = options.noteDuration = options.noteDuration || 500;\n                var instr = new SonificationInstrument(this.audioContext, this.audioDestination, {\n                    synthPatch: instrument,\n                    capabilities: {\n                        filters: true,\n                        tremolo: true,\n                        pan: true\n                    }\n                });\n                instr.scheduleEventAtTime(delayMs / 1000, options);\n                setTimeout(function () { return instr && instr.destroy(); }, delayMs + duration + 500);\n            };\n            /**\n             * Speak a text string, optionally with a custom speaker configuration\n             * @function Highcharts.Sonification#speak\n             *\n             * @sample highcharts/sonification/chart-events\n             *         Custom notifications\n             *\n             * @param {string} text Text to announce\n             * @param {Highcharts.SonificationSpeakerOptionsObject} [speakerOptions]\n             * Options for the announcement\n             * @param {number} [delayMs]\n             * Time offset from now, in milliseconds. Defaults to 0.\n             */\n            Sonification.prototype.speak = function (text, speakerOptions, delayMs) {\n                if (delayMs === void 0) { delayMs = 0; }\n                var speaker = new SonificationSpeaker(merge({\n                    language: 'en-US',\n                    rate: 1.5,\n                    volume: 0.4\n                }, speakerOptions || {}));\n                speaker.sayAtTime(delayMs, text);\n            };\n            /**\n             * Cancel current playing audio and reset the timeline.\n             * @function Highcharts.Sonification#cancel\n             */\n            Sonification.prototype.cancel = function () {\n                if (this.timeline) {\n                    this.timeline.cancel();\n                }\n                fireEvent(this, 'cancel');\n            };\n            /**\n             * Start download of a MIDI file export of the timeline.\n             * @function Highcharts.Sonification#downloadMIDI\n             */\n            Sonification.prototype.downloadMIDI = function () {\n                if (!this.ready(this.downloadMIDI.bind(this))) {\n                    return;\n                }\n                if (this.timeline) {\n                    this.timeline.reset();\n                    this.timeline.downloadMIDI();\n                }\n            };\n            /**\n             * Implementation of chart.sonify\n             * @private\n             */\n            Sonification.prototype.sonifyChart = function (resetAfter, onEnd) {\n                if (!this.ready(this.sonifyChart.bind(this, resetAfter, onEnd))) {\n                    return;\n                }\n                if (this.timeline) {\n                    this.timeline.reset();\n                    this.beforePlay();\n                    this.timeline.play(void 0, void 0, resetAfter, onEnd);\n                }\n            };\n            /**\n             * Implementation of series.sonify\n             * @private\n             */\n            Sonification.prototype.sonifySeries = function (series, resetAfter, onEnd) {\n                if (!this.ready(this.sonifySeries.bind(this, series, resetAfter, onEnd))) {\n                    return;\n                }\n                if (this.timeline) {\n                    this.timeline.reset();\n                    this.beforePlay();\n                    this.timeline.play(function (e) {\n                        return !!e.relatedPoint && e.relatedPoint.series === series;\n                    }, void 0, resetAfter, onEnd);\n                }\n            };\n            /**\n             * Implementation of point.sonify\n             * @private\n             */\n            Sonification.prototype.sonifyPoint = function (point, onEnd) {\n                if (!this.ready(this.sonifyPoint.bind(this, point, onEnd))) {\n                    return;\n                }\n                if (this.timeline) {\n                    this.timeline.reset();\n                    this.beforePlay();\n                    this.timeline.anchorPlayMoment(function (e) { return e.relatedPoint === point; }, onEnd);\n                }\n            };\n            /**\n             * Set the overall/master volume for the sonification.\n             * Usually handled through chart update.\n             * @private\n             */\n            Sonification.prototype.setMasterVolume = function (vol) {\n                if (this.timeline) {\n                    this.timeline.setMasterVolume(vol);\n                }\n            };\n            /**\n             * Destroy the sonification capabilities\n             * @private\n             */\n            Sonification.prototype.destroy = function () {\n                this.unbindKeydown();\n                if (this.timeline) {\n                    this.timeline.destroy();\n                    delete this.timeline;\n                }\n                if (this.boundaryInstrument) {\n                    this.boundaryInstrument.stop();\n                }\n                if (this.audioContext) {\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    this.audioContext.close();\n                    delete this.audioContext;\n                }\n            };\n            /**\n             * Update the timeline with latest chart changes. Usually handled\n             * automatically. Note that the [sonification.updateInterval](https://api.highcharts.com/highcharts/sonification.updateInterval)\n             * option can stop updates from happening in rapid succession, including\n             * manual calls to this function.\n             * @private\n             */\n            Sonification.prototype.update = function () {\n                var sOpts = this.chart.options && this.chart.options.sonification;\n                if (!this.ready(this.update.bind(this)) || !sOpts) {\n                    return;\n                }\n                // Don't update too often, it gets performance intensive\n                var now = Date.now(), updateInterval = sOpts.updateInterval;\n                if (now - this.lastUpdate < updateInterval && !this.forceReady) {\n                    clearTimeout(this.scheduledUpdate);\n                    this.scheduledUpdate = setTimeout(this.update.bind(this), updateInterval / 2);\n                    return;\n                }\n                var events = sOpts.events || {};\n                if (events.beforeUpdate) {\n                    events.beforeUpdate({ chart: this.chart, timeline: this.timeline });\n                }\n                this.lastUpdate = now;\n                if (this.timeline) {\n                    this.timeline.destroy();\n                }\n                if (this.audioContext && this.audioDestination) {\n                    this.timeline = timelineFromChart(this.audioContext, this.audioDestination, this.chart);\n                    var sOpts_1 = this.chart.options.sonification;\n                    this.timeline.setMasterVolume(pick(sOpts_1 && sOpts_1.masterVolume, 1));\n                }\n                if (events.afterUpdate) {\n                    events.afterUpdate({ chart: this.chart, timeline: this.timeline });\n                }\n            };\n            /**\n             * Only continue if sonification enabled. If audioContext is\n             * suspended, retry up to 20 times with a small delay.\n             * @private\n             */\n            Sonification.prototype.ready = function (whenReady) {\n                var _this = this;\n                if (!this.audioContext ||\n                    !this.audioDestination ||\n                    !this.chart.options ||\n                    this.chart.options.sonification &&\n                        this.chart.options.sonification.enabled === false) {\n                    return false;\n                }\n                if (this.audioContext.state === 'suspended' && !this.forceReady) {\n                    if (this.retryContextCounter++ < 20) {\n                        setTimeout(function () {\n                            if (_this.audioContext &&\n                                _this.audioContext.state === 'suspended') {\n                                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                                _this.audioContext.resume().then(whenReady);\n                            }\n                            else {\n                                whenReady();\n                            }\n                        }, 5);\n                    }\n                    return false;\n                }\n                this.retryContextCounter = 0;\n                return true;\n            };\n            /**\n             * Call beforePlay event handler if exists\n             * @private\n             */\n            Sonification.prototype.beforePlay = function () {\n                var opts = this.chart.options.sonification, beforePlay = opts && opts.events && opts.events.beforePlay;\n                if (beforePlay) {\n                    beforePlay({ chart: this.chart, timeline: this.timeline });\n                }\n            };\n            /**\n             * Initialize the builtin boundary hit instrument\n             * @private\n             */\n            Sonification.prototype.initBoundaryInstrument = function () {\n                if (!this.boundaryInstrument) {\n                    this.boundaryInstrument = new SynthPatch(this.audioContext, merge(InstrumentPresets.chop, { masterVolume: 0.3 }));\n                    this.boundaryInstrument.startSilently();\n                    this.boundaryInstrument.connect(this.audioDestination);\n                }\n            };\n            /**\n             * The default boundary hit sound\n             * @private\n             */\n            Sonification.prototype.defaultBoundaryHit = function () {\n                if (this.boundaryInstrument) {\n                    this.boundaryInstrument.playFreqAtTime(0.1, 1, 200);\n                    this.boundaryInstrument.playFreqAtTime(0.2, 1, 200);\n                }\n            };\n            return Sonification;\n        }());\n        (function (Sonification) {\n            var composedClasses = [];\n            /**\n             * Update sonification object on chart.\n             * @private\n             */\n            function updateSonificationEnabled() {\n                var sonification = this.sonification, sOptions = this.options && this.options.sonification;\n                if (sOptions && sOptions.enabled) {\n                    if (sonification) {\n                        sonification.update();\n                    }\n                    else {\n                        this.sonification = new Sonification(this);\n                        this.sonification.update();\n                    }\n                }\n                else if (sonification) {\n                    sonification.destroy();\n                    delete this.sonification;\n                }\n            }\n            /**\n             * Destroy with chart.\n             * @private\n             */\n            function chartOnDestroy() {\n                if (this && this.sonification) {\n                    this.sonification.destroy();\n                }\n            }\n            /**\n             * Update on render\n             * @private\n             */\n            function chartOnRender() {\n                if (this.updateSonificationEnabled) {\n                    this.updateSonificationEnabled();\n                }\n            }\n            /**\n             * Update\n             * @private\n             */\n            function chartOnUpdate(e) {\n                var newOptions = e.options.sonification;\n                if (newOptions) {\n                    merge(true, this.options.sonification, newOptions);\n                    chartOnRender.call(this);\n                }\n            }\n            /**\n             * Compose\n             * @private\n             */\n            function compose(ChartClass, SeriesClass, PointClass) {\n                // Extend chart\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    extend(ChartClass.prototype, {\n                        updateSonificationEnabled: updateSonificationEnabled,\n                        sonify: function (onEnd) {\n                            if (this.sonification) {\n                                this.sonification.sonifyChart(false, onEnd);\n                            }\n                        },\n                        toggleSonify: function (reset, onEnd) {\n                            if (reset === void 0) { reset = true; }\n                            if (!this.sonification) {\n                                return;\n                            }\n                            var timeline = this.sonification.timeline;\n                            if (win.speechSynthesis) {\n                                win.speechSynthesis.cancel();\n                            }\n                            if (timeline && this.sonification.isPlaying()) {\n                                if (reset) {\n                                    this.sonification.cancel();\n                                }\n                                else {\n                                    timeline.pause();\n                                }\n                            }\n                            else if (timeline && timeline.isPaused) {\n                                timeline.resume();\n                            }\n                            else {\n                                this.sonification.sonifyChart(reset, onEnd);\n                            }\n                        }\n                    });\n                    addEvent(ChartClass, 'destroy', chartOnDestroy);\n                    addEvent(ChartClass, 'render', chartOnRender);\n                    addEvent(ChartClass, 'update', chartOnUpdate);\n                }\n                // Extend series\n                if (composedClasses.indexOf(SeriesClass) === -1) {\n                    composedClasses.push(SeriesClass);\n                    SeriesClass.prototype.sonify = function (onEnd) {\n                        if (this.chart.sonification) {\n                            this.chart.sonification.sonifySeries(this, false, onEnd);\n                        }\n                    };\n                }\n                // Extend points\n                if (composedClasses.indexOf(PointClass) === -1) {\n                    composedClasses.push(PointClass);\n                    PointClass.prototype.sonify = function (onEnd) {\n                        if (this.series.chart.sonification) {\n                            this.series.chart.sonification.sonifyPoint(this, onEnd);\n                        }\n                    };\n                }\n                // Add items to the exporting menu\n                var exportingOptions = getOptions().exporting;\n                if (exportingOptions &&\n                    exportingOptions.buttons &&\n                    exportingOptions.buttons.contextButton.menuItems) {\n                    exportingOptions.buttons.contextButton.menuItems.push('separator', 'downloadMIDI', 'playAsSound');\n                }\n            }\n            Sonification.compose = compose;\n        })(Sonification || (Sonification = {}));\n        // Add default options\n        merge(true, defaultOptions, defaultSonificationOptions);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * Play a sonification of a chart.\n         *\n         * @function Highcharts.Chart#sonify\n         * @param {Highcharts.SonificationChartEventCallback} [onEnd]\n         * Callback to call after play completed\n         *\n         * @requires modules/sonification\n         */\n        /**\n         * Play/pause sonification of a chart.\n         *\n         * @function Highcharts.Chart#toggleSonify\n         *\n         * @param {boolean} [reset]\n         * Reset the playing cursor after play completed. Defaults to `true`.\n         * @param {Highcharts.SonificationChartEventCallback} [onEnd]\n         * Callback to call after play completed\n         *\n         * @requires modules/sonification\n         */\n        /**\n         * Play a sonification of a series.\n         *\n         * @function Highcharts.Series#sonify\n         * @param {Highcharts.SonificationChartEventCallback} [onEnd]\n         * Callback to call after play completed\n         *\n         * @requires modules/sonification\n         */\n        /**\n         * Play a sonification of a point.\n         *\n         * @function Highcharts.Point#sonify\n         * @param {Highcharts.SonificationChartEventCallback} [onEnd]\n         * Callback to call after play completed\n         *\n         * @requires modules/sonification\n         */\n        /**\n         * Sonification capabilities for the chart.\n         *\n         * @name Highcharts.Chart#sonification\n         * @type {Highcharts.Sonification|undefined}\n         *\n         * @requires modules/sonification\n         */\n        /**\n         * Collection of Sonification classes and objects.\n         * @requires modules/sonification\n         * @interface Highcharts.SonificationGlobalObject\n         */ /**\n        * SynthPatch presets\n        * @name Highcharts.SonificationGlobalObject#InstrumentPresets\n        * @type {Record<Highcharts.SonificationSynthPreset,Highcharts.SynthPatchOptionsObject>|undefined}\n        */ /**\n        * Musical scale presets\n        * @name Highcharts.SonificationGlobalObject#Scales\n        * @type {Highcharts.SonificationScalePresetsObject|undefined}\n        */ /**\n        * SynthPatch class\n        * @name Highcharts.SonificationGlobalObject#SynthPatch\n        * @type {Highcharts.SynthPatch|undefined}\n        */ /**\n        * SonificationInstrument class\n        * @name Highcharts.SonificationGlobalObject#SonificationInstrument\n        * @type {Highcharts.SonificationInstrument|undefined}\n        */ /**\n        * SonificationSpeaker class\n        * @name Highcharts.SonificationGlobalObject#SonificationSpeaker\n        * @type {Highcharts.SonificationSpeaker|undefined}\n        */\n        /**\n         * Global Sonification classes and objects.\n         *\n         * @name Highcharts.sonification\n         * @type {Highcharts.SonificationGlobalObject}\n         *\n         * @requires modules/sonification\n         */\n        (''); // Keep above doclets in JS file\n\n        return Sonification;\n    });\n    _registerModule(_modules, 'Extensions/Sonification/Scales.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Øystein Moseng\n         *\n         *  Musical scales for sonification.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var Scales = {\n            minor: [0, 2, 3, 5, 7, 8, 10],\n            dorian: [0, 2, 3, 5, 7, 9, 10],\n            harmonicMinor: [0, 2, 3, 5, 7, 8, 11],\n            phrygian: [0, 1, 3, 5, 7, 8, 11],\n            major: [0, 2, 4, 5, 7, 9, 11],\n            lydian: [0, 2, 4, 6, 7, 9, 11],\n            mixolydian: [0, 2, 4, 5, 7, 9, 10],\n            majorPentatonic: [0, 2, 4, 7, 9],\n            minorPentatonic: [0, 3, 5, 7, 10]\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API declarations\n         *\n         * */\n        /**\n         * Preset scales for pitch mapping.\n         * @requires modules/sonification\n         * @interface Highcharts.SonificationScalePresetsObject\n         */ /**\n        * Minor scale (aeolian)\n        * @name Highcharts.SonificationScalePresetsObject#minor\n        * @type {Array<number>}\n        */ /**\n        * Dorian scale\n        * @name Highcharts.SonificationScalePresetsObject#dorian\n        * @type {Array<number>}\n        */ /**\n        * Harmonic minor scale\n        * @name Highcharts.SonificationScalePresetsObject#harmonicMinor\n        * @type {Array<number>}\n        */ /**\n        * Phrygian scale\n        * @name Highcharts.SonificationScalePresetsObject#phrygian\n        * @type {Array<number>}\n        */ /**\n        * Major (ionian) scale\n        * @name Highcharts.SonificationScalePresetsObject#major\n        * @type {Array<number>}\n        */ /**\n        * Lydian scale\n        * @name Highcharts.SonificationScalePresetsObject#lydian\n        * @type {Array<number>}\n        */ /**\n        * Mixolydian scale\n        * @name Highcharts.SonificationScalePresetsObject#mixolydian\n        * @type {Array<number>}\n        */ /**\n        * Major pentatonic scale\n        * @name Highcharts.SonificationScalePresetsObject#majorPentatonic\n        * @type {Array<number>}\n        */ /**\n        * Minor pentatonic scale\n        * @name Highcharts.SonificationScalePresetsObject#minorPentatonic\n        * @type {Array<number>}\n        */\n        (''); // Keep above doclets in JS file\n\n        return Scales;\n    });\n    _registerModule(_modules, 'masters/modules/sonification.src.js', [_modules['Core/Globals.js'], _modules['Extensions/Sonification/Sonification.js'], _modules['Extensions/Sonification/SynthPatch.js'], _modules['Extensions/Sonification/InstrumentPresets.js'], _modules['Extensions/Sonification/Scales.js'], _modules['Extensions/Sonification/SonificationInstrument.js'], _modules['Extensions/Sonification/SonificationSpeaker.js'], _modules['Extensions/Sonification/SonificationTimeline.js']], function (Highcharts, Sonification, SynthPatch, InstrumentPresets, Scales, SonificationInstrument, SonificationSpeaker, SonificationTimeline) {\n\n        var G = Highcharts;\n        // Global objects\n        G.sonification = {\n            InstrumentPresets: InstrumentPresets,\n            Scales: Scales,\n            SynthPatch: SynthPatch,\n            SonificationInstrument: SonificationInstrument,\n            SonificationSpeaker: SonificationSpeaker,\n            SonificationTimeline: SonificationTimeline,\n            Sonification: Sonification\n        };\n        Sonification.compose(G.Chart, G.Series, G.Point);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","sonification","enabled","duration","afterSeriesWait","updateInterval","masterVolume","order","showTooltip","showCrosshair","pointGrouping","groupTimespan","algorithm","prop","defaultInstrumentOptions","roundToMusicalNotes","instrument","mapping","time","pan","noteDuration","pitch","mapTo","min","max","within","gapBetweenNotes","defaultSpeechOptions","language","rate","volume","exporting","menuItemDefinitions","downloadMIDI","textKey","onclick","playAsSound","s","isPlaying","cancel","sonify","lang","U","__assign","Object","assign","t","i","n","arguments","length","p","prototype","call","clamp","defined","pick","getPitchTrackedMultiplierVal","multiplier","freq","a","Math","log","miniRampToVolAtTime","gainNode","vol","gain","cancelScheduledValues","setTargetAtTime","SynthPatch","stopRampTime","setValueAtTime","scheduleGainEnvelope","envelope","type","volumeMultiplier","isAtk","unshift","forEach","ep","ix","prev","delta","startTime","PulseOscNode","context","options","pulseWidth","makeOsc","OscillatorNode","detune","frequency","sawOscA","sawOscB","phaseInverter","GainNode","masterGain","delayNode","DelayNode","delayTime","value","connect","destination","getFrequencyFacade","pulse","fromTime","round","timeConstant","getPWMTarget","start","stop","Oscillator","audioContext","fmOscillatorIx","fmOscillator","vmOscillatorIx","vmOscillator","createSoundSource","createGain","createFilters","createVolTracking","lowpassNode","highpassNode","volTrackingNode","vmNode","whiteNoise","pulseNode","oscNode","reduce","cur","stopAtTime","setFreqAtTime","glideDuration","opts","f","fixedFrequency","freqMultiplier","oscTarget","getOscTarget","lastUpdateTime","scheduleVolTrackingChange","scheduleFilterTrackingChange","getFMTarget","getVMTarget","runEnvelopeAtTime","attackEnvelope","releaseEnvelope","cancelScheduled","currentTime","v","volumePitchTrackingMultiplier","rampTime","scheduleFilterTarget","filterNode","filterOptions","frequencyPitchTrackingMultiplier","lowpass","highpass","ctx","bSize","sampleRate","buffer","createBuffer","data","getChannelData","random","wn","createBufferSource","loop","BiquadFilterNode","Q","_this","eqNodes","midiInstrument","outputNode","createEqChain","inputNode","oscillators","map","oscOpts","osc","connectTarget","targetFunc","targetOsc","target","startSilently","o","curTime","endTime","disconnect","silenceAtTime","releaseAtTime","mute","playFreqAtTime","noteGlideDuration","masterAttackEnvelope","destinationNode","eq","eqDef","reduceRight","chain","node","maxReleaseDuration","env","masterEnv","masterReleaseEnvelope","piano","plucked","flute","lead","vibraphone","saxophone","trumpet","sawsynth","basic1","basic2","chord","wobble","sine","sineGlide","triangle","sawtooth","square","chop","shaker","step","kick","shortnote","noise","filteredNoise","wind","InstrumentPresets","extend","SonificationInstrument","curParams","midiTrackName","masterVolNode","volumeNode","createNodesFromCapabilities","capabilities","connectCapabilityNodes","synthPatch","setMasterVolume","scheduleEventAtTime","params","mergedParams","note","musicalNoteToFrequency","tremoloDepth","tremoloSpeed","setTremoloAtTime","setPanAtTime","setVolumeAtTime","lowpassFreq","lowpassResonance","setFilterAtTime","highpassFreq","highpassResonance","tremoloOsc","panNode","destroy","filter","resonance","audioTime","depth","speed","StereoPannerNode","tremolo","filters","input","output","noteStringToC0Distance","match","semitone","wholetone","toLowerCase","accidental","c","d","e","g","b","octave","parseInt","pow","SonificationSpeaker","synthesis","window","speechSynthesis","onvoiceschanged","setVoice","bind","scheduled","say","message","utterance","SpeechSynthesisUtterance","voice","speak","sayAtTime","push","setTimeout","clearTimeout","name_1","name","voices","getVoices","len","langFallback","TimelineChannel","engine","showPlayMarker","events","muted","addEvent","event","lastEvent","splice","unmute","byte","timeInfo","varLenEnc","buf","res","toMIDIEvents","cachedVel","cachedDur","add","el","timeMS","instrumentEventOptions","dur","tNOF","ctrl","valMap","noteVal","LN2","ctrlDef","keys","ctrlSignal","val","getMetaEvents","textArr","code","charCodeAt","concat","getTrackChunk","addTimeInfo","prevTime","metaEvents","trackEvents","trackEnd","size","channels","nTracks","channelsToAdd","numCh","multiCh","Uint8Array","getHeader","chunks","channel","H","isSafari","doc","document","domurl","URL","webkitURL","dataURLtoBlob","dataURL","parts","replace","atob","ArrayBuffer","Blob","createObjectURL","binStr","binary","downloadURL","filename","nav","navigator","createElement","String","msSaveOrOpenBlob","userAgent","Error","isOldEdgeBrowser","test","safariBlob","indexOf","download","href","body","appendChild","click","removeChild","open","_a","location","toMIDI","DU","find","merge","SonificationTimeline","chart","isPaused","scheduledCallbacks","playTimestamp","resumeFromTime","addChannel","play","filterPersists","resetAfter","onEnd","filtered","minTime","clearScheduledCallbacks","onEndArgument","Date","now","skipThreshold","onPlay","playingChannels","filteredEvents","acc","Infinity","pointsPlayed","timeline","maxTime","numEvents","lastCallbackTime","lastEventTime","lastEventKeys","_loop_1","keysSig","speechOptions","join","point","relatedPoint","series","needsCallback","callback","xAxis","crosshair","drawCrosshair","yAxis","hoverPoints","onMouseOver","onEndOpt","onStop","resetPlayState","tooltip","hide","hoverSeries","onMouseOut","axes","hideCrosshair","getLength","pause","getCurrentTime","resume","resumeFrom_1","anchorPlayMoment","eventFilter","finalEventTime","arr","playAdjacent","next","onBoundaryHit","closestTime","lastValidTime","mid","cmp","attemptedNext","withinTime","playClosestToPropValue","targetVal","closestValDiff","closestEvent","diff","abs","getEventsForPoint","pointEvents","playSegment","segment","eventTimes","first","last","segmentSize","fromTime_1","toTime_1","some","getLastPlayedPoint","closestDiff","closestPoint","reset","getMIDIData","title","text","blob","url","revokeObjectURL","T","getNestedProperty","format","isNoteDefinition","str","getPointPropValue","ret","mapToVirtualAxis","valueExtremes","virtualAxisExtremes","invert","logarithmic","lenValueAxis","lenVirtualAxis","virtualValueDelta","x","LOG10E","adjustedNum","LN10","logValMin","getParamValWithDefault","propMetrics","useSeriesExtremes","mappingParamOptions","fallback","defaults","contextValueProp","getMappingParameterValue","defaultMapping","mappingOptions","scale","mapFunc","mapFunction","isInverted","charAt","slice","useContextValue","fixedValue","extremes","axis","dataMin","dataMax","seriesExtremes","index","globalExtremes","scaleAxis","minOctave","floor","maxOctave","ceil","lenScale","scaleIx","noteNum","addTimelineChannelFromTrack","instrMappingOpts","speechOpts","preferredVoice","midiName","addMappedInstrumentEvent","getParam","param","parent","eventsAdded","eventOpts","playDelay","addNoteEvent","noteDef","constructor","Array","addMappedSpeechEvent","messageParam","isActive","activeWhen","lastPropValue","crossingOk","crossingUp","crossingDown","hasLastValue","globalOpts","defaultInstrMapping","defaultSpeechMapping","seriesTimeProps","commonTimeProps","addTimeProp","props","perSeriesProps","addPropFromMappingParam","addPropsFromMappingOptions","addPropsFromContextTracks","hasCommonTimeProps","defaultInstrOpts","defaultSpeechOpts","defaultPointGroupOpts","globalTracks","globalContextTracks","isSequential","totalDuration","eventOptions","seriesIx","removeInvertedFlag","paramOpts","subParam","tracks","track","valueProp","sOpts","visible","defaultInstrMapping_1","defaultSpeechMapping_1","contextTracks","trackOpts","getChartExtremesForProps","numProps","numSeriesProps","initCache","propList","cache","updateCache","allSeriesExtremes","points","j","k","sOptions","lastPropValue_1","seriesDuration_1","getAvailableDurationForSeries","timeProp","seriesDuration","availableDuration","every","timeProps","seriesTimeLen","sum","totalPoints","seriesDefaultInstrOpts_1","seriesDefaultSpeechOpts_1","seriesPointGroupOpts_1","mainTracks","hasAddedSeries","eventsAdded_1","mergedOpts","pointGroupOpts","updateLastPropValue","addMappedEventForPoint","trackOptions","eventAdded","pointGroup","pointGroupTime","addCurrentPointGroup","groupSpanTime","getGroupedPoints","alg","r","min_1","max_1","minVal_1","maxVal_1","prop_1","t_1","pointIx","isLastPoint","dT","groupSpan","spanTime","firstEvent","onSeriesStart","onSeriesEnd","contextChannel","timeInterval","valueInterval","contextExtremes","addContextEvent","valueMapFunction","D","defaultSonificationOptions","timelineFromChart","defaultOptions","getOptions","fireEvent","Sonification","retryContextCounter","lastUpdate","unbindKeydown","key","AudioContext","suspend","audioDestination","setAudioDestination","update","ready","onHit","initBoundaryInstrument","defaultBoundaryHit","playAdjacentSeries","lastPlayed","targetSeriesIx_1","playClosestToProp","targetValue","targetFilter","playNote","delayMs","instr","speakerOptions","speaker","sonifyChart","beforePlay","sonifySeries","sonifyPoint","boundaryInstrument","close","forceReady","scheduledUpdate","beforeUpdate","sOpts_1","afterUpdate","whenReady","state","then","composedClasses","updateSonificationEnabled","chartOnDestroy","chartOnRender","chartOnUpdate","newOptions","compose","ChartClass","SeriesClass","PointClass","toggleSonify","exportingOptions","buttons","contextButton","menuItems","minor","dorian","harmonicMinor","phrygian","major","lydian","mixolydian","majorPentatonic","minorPentatonic","Scales","G","Chart","Series","Point"],"mappings":"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"}