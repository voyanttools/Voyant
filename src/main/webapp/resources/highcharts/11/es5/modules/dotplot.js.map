{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * Dot plot series type for Highcharts\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/dotplot', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/DotPlot/DotPlotSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  Dot plot series type for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        var DotPlotSeriesDefaults = {\n            itemPadding: 0.1,\n            marker: {\n                symbol: 'circle',\n                states: {\n                    hover: {},\n                    select: {}\n                }\n            },\n            slotsPerBar: void 0\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DotPlotSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/DotPlot/DotPlotSeries.js', [_modules['Series/DotPlot/DotPlotSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (DotPlotSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  Dot plot series type for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /**\n         * @private\n         * @todo\n         * - Check update, remove etc.\n         * - Custom icons like persons, carts etc. Either as images, font icons or\n         *   Highcharts symbols.\n         */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dotplot\n         *\n         * @augments Highcharts.Series\n         */\n        var DotPlotSeries = /** @class */ (function (_super) {\n            __extends(DotPlotSeries, _super);\n            function DotPlotSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            DotPlotSeries.prototype.drawPoints = function () {\n                var _a, _b, _c;\n                var series = this, options = series.options, renderer = series.chart.renderer, seriesMarkerOptions = options.marker, total = this.points.reduce(function (acc, point) { return acc + Math.abs(point.y || 0); }, 0), totalHeight = this.points.reduce(function (acc, point) { var _a; return acc + (((_a = point.shapeArgs) === null || _a === void 0 ? void 0 : _a.height) || 0); }, 0), itemPadding = options.itemPadding || 0, columnWidth = ((_b = (_a = this.points[0]) === null || _a === void 0 ? void 0 : _a.shapeArgs) === null || _b === void 0 ? void 0 : _b.width) || 0;\n                var slotsPerBar = options.slotsPerBar, slotWidth = columnWidth;\n                // Find the suitable number of slots per column\n                if (!isNumber(slotsPerBar)) {\n                    slotsPerBar = 1;\n                    while (slotsPerBar < total) {\n                        if (total / slotsPerBar <\n                            (totalHeight / slotWidth) * 1.2) {\n                            break;\n                        }\n                        slotsPerBar++;\n                        slotWidth = columnWidth / slotsPerBar;\n                    }\n                }\n                var height = (totalHeight * slotsPerBar) / total;\n                for (var _i = 0, _d = series.points; _i < _d.length; _i++) {\n                    var point = _d[_i];\n                    var pointMarkerOptions = point.marker || {}, symbol = (pointMarkerOptions.symbol ||\n                        seriesMarkerOptions.symbol), radius = pick(pointMarkerOptions.radius, seriesMarkerOptions.radius), isSquare = symbol !== 'rect', width = isSquare ? height : slotWidth, shapeArgs = point.shapeArgs || {}, startX = (shapeArgs.x || 0) + ((shapeArgs.width || 0) -\n                        slotsPerBar * width) / 2, positiveYValue = Math.abs((_c = point.y) !== null && _c !== void 0 ? _c : 0), shapeY = (shapeArgs.y || 0), shapeHeight = (shapeArgs.height || 0);\n                    var graphics = void 0, x = startX, y = point.negative ? shapeY : shapeY + shapeHeight - height, slotColumn = 0;\n                    point.graphics = graphics = point.graphics || [];\n                    var pointAttr = point.pointAttr ?\n                        (point.pointAttr[point.selected ? 'selected' : ''] ||\n                            series.pointAttr['']) :\n                        series.pointAttribs(point, point.selected && 'select');\n                    delete pointAttr.r;\n                    if (series.chart.styledMode) {\n                        delete pointAttr.stroke;\n                        delete pointAttr['stroke-width'];\n                    }\n                    if (typeof point.y === 'number') {\n                        if (!point.graphic) {\n                            point.graphic = renderer.g('point').add(series.group);\n                        }\n                        for (var val = 0; val < positiveYValue; val++) {\n                            var attr = {\n                                x: x + width * itemPadding,\n                                y: y + height * itemPadding,\n                                width: width * (1 - 2 * itemPadding),\n                                height: height * (1 - 2 * itemPadding),\n                                r: radius\n                            };\n                            var graphic = graphics[val];\n                            if (graphic) {\n                                graphic.animate(attr);\n                            }\n                            else {\n                                graphic = renderer\n                                    .symbol(symbol)\n                                    .attr(extend(attr, pointAttr))\n                                    .add(point.graphic);\n                            }\n                            graphic.isActive = true;\n                            graphics[val] = graphic;\n                            x += width;\n                            slotColumn++;\n                            if (slotColumn >= slotsPerBar) {\n                                slotColumn = 0;\n                                x = startX;\n                                y = point.negative ? y + height : y - height;\n                            }\n                        }\n                    }\n                    var i = -1;\n                    for (var _e = 0, graphics_1 = graphics; _e < graphics_1.length; _e++) {\n                        var graphic = graphics_1[_e];\n                        ++i;\n                        if (graphic) {\n                            if (!graphic.isActive) {\n                                graphic.destroy();\n                                graphics.splice(i, 1);\n                            }\n                            else {\n                                graphic.isActive = false;\n                            }\n                        }\n                    }\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            DotPlotSeries.defaultOptions = merge(ColumnSeries.defaultOptions, DotPlotSeriesDefaults);\n            return DotPlotSeries;\n        }(ColumnSeries));\n        extend(DotPlotSeries.prototype, {\n            markerAttribs: void 0\n        });\n        SeriesRegistry.registerSeriesType('dotplot', DotPlotSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DotPlotSeries;\n    });\n    _registerModule(_modules, 'masters/modules/dotplot.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","itemPadding","marker","symbol","states","hover","select","slotsPerBar","DotPlotSeriesDefaults","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","ColumnSeries","seriesTypes","column","extend","isNumber","merge","pick","DotPlotSeries","_super","arguments","drawPoints","_a","_b","_c","options","series","renderer","chart","seriesMarkerOptions","total","points","reduce","acc","point","Math","abs","y","totalHeight","shapeArgs","height","columnWidth","width","slotWidth","_i","_d","length","pointMarkerOptions","radius","isSquare","startX","x","positiveYValue","shapeY","shapeHeight","graphics","negative","slotColumn","pointAttr","selected","pointAttribs","r","styledMode","stroke","graphic","g","add","group","val","attr","animate","isActive","i","_e","graphics_1","destroy","splice","defaultOptions","markerAttribs","registerSeriesType"],"mappings":"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"}