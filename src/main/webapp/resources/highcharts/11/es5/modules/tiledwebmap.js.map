{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.8 (2024-08-29)\n *\n * (c) 2009-2024\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/tiledwebmap', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Maps/TilesProviders/OpenStreetMap.js', [], function () {\n        /* *\n         * OpenStreetMap provider, used for tile map services\n         * */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var OpenStreetMap = /** @class */ (function () {\n            function OpenStreetMap() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.defaultCredits = ('Map data &copy2023' +\n                    ' <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>');\n                this.initialProjectionName = 'WebMercator';\n                this.subdomains = ['a', 'b', 'c'];\n                this.themes = {\n                    Standard: {\n                        url: 'https://tile.openstreetmap.org/{zoom}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 19\n                    },\n                    Hot: {\n                        url: 'https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 19\n                    },\n                    OpenTopoMap: {\n                        url: 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 17,\n                        credits: \"Map data: &copy; <a href=\\\"https://www.openstreetmap.org/copyright\\\">\\n                OpenStreetMap</a> contributors, <a href=\\\"https://viewfinderpanoramas.org\\\">SRTM</a> \\n                | Map style: &copy; <a href=\\\"https://opentopomap.org\\\">OpenTopoMap</a> \\n                (<a href=\\\"https://creativecommons.org/licenses/by-sa/3.0/\\\">CC-BY-SA</a>)\"\n                    }\n                };\n            }\n            return OpenStreetMap;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OpenStreetMap;\n    });\n    _registerModule(_modules, 'Maps/TilesProviders/Stamen.js', [], function () {\n        /* *\n         * Stamen provider, used for tile map services\n         * */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Stamen = /** @class */ (function () {\n            function Stamen() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.defaultCredits = ('&copy; Map tiles by <a href=\"https://stamen.com\">Stamen Design</a>,' +\n                    ' under <a href=\"https://creativecommons.org/licenses/by/3.0\">CC BY' +\n                    ' 3.0</a>. Data by <a href=\"https://openstreetmap.org\">OpenStreetMap' +\n                    '</a>, under <a href=\"https://www.openstreetmap.org/copyright\">ODbL</a>');\n                this.initialProjectionName = 'WebMercator';\n                this.subdomains = ['a', 'b', 'c', 'd'];\n                this.themes = {\n                    Toner: {\n                        url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 20\n                    },\n                    TonerBackground: {\n                        url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 20\n                    },\n                    TonerLite: {\n                        url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 20\n                    },\n                    Terrain: {\n                        url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 18\n                    },\n                    TerrainBackground: {\n                        url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}.png',\n                        minZoom: 0,\n                        maxZoom: 18\n                    },\n                    Watercolor: {\n                        url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png',\n                        minZoom: 1,\n                        maxZoom: 16,\n                        credits: ('&copy Map tiles by <a href=\"https://stamen.com\">Stamen' +\n                            ' Design</a>, under <a href=\"https://creativecommons.org/' +\n                            'licenses/by/3.0\">CC BY 3.0</a>. Data by <a href=\"https://' +\n                            'openstreetmap.org\">OpenStreetMap</a>, under <a href=' +\n                            '\"https://creativecommons.org/licenses/by-sa/3.0\">CC BY SA</a>')\n                    }\n                };\n            }\n            return Stamen;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Stamen;\n    });\n    _registerModule(_modules, 'Maps/TilesProviders/LimaLabs.js', [], function () {\n        /* *\n         * LimaLabs provider, used for tile map services\n         * */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var LimaLabs = /** @class */ (function () {\n            function LimaLabs() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.defaultCredits = ('Map data &copy;2023' +\n                    ' <a href=\"https://maps.lima-labs.com/\">LimaLabs</a>');\n                this.initialProjectionName = 'WebMercator';\n                this.requiresApiKey = true;\n                this.themes = {\n                    Standard: {\n                        url: 'https://cdn.lima-labs.com/{zoom}/{x}/{y}.png?api={apikey}',\n                        minZoom: 0,\n                        maxZoom: 20\n                    }\n                };\n            }\n            return LimaLabs;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return LimaLabs;\n    });\n    _registerModule(_modules, 'Maps/TilesProviders/Thunderforest.js', [], function () {\n        /* *\n         * Thunderforest provider, used for tile map services\n         * */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Thunderforest = /** @class */ (function () {\n            function Thunderforest() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.defaultCredits = ('Maps &copy <a href=\"https://www.thunderforest.com\">Thunderforest</a>' +\n                    ', Data &copy; <a href=\"https://www.openstreetmap.org/copyright\">' +\n                    'OpenStreetMap contributors</a>');\n                this.initialProjectionName = 'WebMercator';\n                this.requiresApiKey = true;\n                this.subdomains = ['a', 'b', 'c'];\n                this.themes = {\n                    OpenCycleMap: {\n                        url: 'https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    Transport: {\n                        url: 'https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    TransportDark: {\n                        url: 'https://{s}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    SpinalMap: {\n                        url: 'https://{s}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    Landscape: {\n                        url: 'https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    Outdoors: {\n                        url: 'https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    Pioneer: {\n                        url: 'https://{s}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    MobileAtlas: {\n                        url: 'https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    },\n                    Neighbourhood: {\n                        url: 'https://{s}.tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey={apikey}',\n                        minZoom: 0,\n                        maxZoom: 22\n                    }\n                };\n            }\n            return Thunderforest;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Thunderforest;\n    });\n    _registerModule(_modules, 'Maps/TilesProviders/Esri.js', [], function () {\n        /* *\n         * Esri provider, used for tile map services\n         * */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Esri = /** @class */ (function () {\n            function Esri() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.defaultCredits = ('Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS, ' +\n                    ' Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong),' +\n                    ' Esri (Thailand), TomTom, 2012');\n                this.initialProjectionName = 'WebMercator';\n                this.themes = {\n                    WorldStreetMap: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 20\n                    },\n                    DeLorme: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/Specialty/DeLorme_World_Base_Map/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 1,\n                        maxZoom: 11,\n                        credits: 'Tiles &copy; Esri &mdash; Copyright: &copy;2012 DeLorme'\n                    },\n                    WorldTopoMap: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 20,\n                        credits: ('Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom,' +\n                            ' Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL,' +\n                            ' Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong),' +\n                            ' and the GIS User Community')\n                    },\n                    WorldImagery: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 20,\n                        credits: ('Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS,' +\n                            ' AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP,' +\n                            ' and the GIS User Community')\n                    },\n                    WorldTerrain: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 13,\n                        credits: ('Tiles &copy; Esri &mdash; Source: USGS, Esri, TANA, DeLorme,' +\n                            ' and NPS')\n                    },\n                    WorldShadedRelief: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 13,\n                        credits: 'Tiles &copy; Esri &mdash; Source: Esri'\n                    },\n                    WorldPhysical: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 8,\n                        credits: 'Tiles &copy; Esri &mdash; Source: US National Park Service'\n                    },\n                    NatGeoWorldMap: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 16,\n                        credits: ('Tiles &copy; Esri &mdash; National Geographic, Esri,' +\n                            ' DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN,' +\n                            ' GEBCO, NOAA, iPC')\n                    },\n                    WorldGrayCanvas: {\n                        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 16,\n                        credits: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ'\n                    }\n                };\n            }\n            return Esri;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Esri;\n    });\n    _registerModule(_modules, 'Maps/TilesProviders/USGS.js', [], function () {\n        /* *\n         * USGS provider, used for tile map services\n         * */\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var USGS = /** @class */ (function () {\n            function USGS() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.defaultCredits = ('Tiles courtesy of the <a href=\"https://usgs.gov/\">U.S. Geological' +\n                    'Survey</a>');\n                this.initialProjectionName = 'WebMercator';\n                this.themes = {\n                    USTopo: {\n                        url: 'https://basemap.nationalmap.gov/arcgis/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 20\n                    },\n                    USImagery: {\n                        url: 'https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryOnly/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 20\n                    },\n                    USImageryTopo: {\n                        url: 'https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryTopo/MapServer/tile/{z}/{y}/{x}',\n                        minZoom: 0,\n                        maxZoom: 20\n                    }\n                };\n            }\n            return USGS;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return USGS;\n    });\n    _registerModule(_modules, 'Maps/TilesProviders/TilesProviderRegistry.js', [_modules['Maps/TilesProviders/OpenStreetMap.js'], _modules['Maps/TilesProviders/Stamen.js'], _modules['Maps/TilesProviders/LimaLabs.js'], _modules['Maps/TilesProviders/Thunderforest.js'], _modules['Maps/TilesProviders/Esri.js'], _modules['Maps/TilesProviders/USGS.js']], function (OpenStreetMap, Stamen, LimaLabs, Thunderforest, Esri, USGS) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var tilesProviderRegistry = {\n            Esri: Esri,\n            LimaLabs: LimaLabs,\n            OpenStreetMap: OpenStreetMap,\n            Stamen: Stamen,\n            Thunderforest: Thunderforest,\n            USGS: USGS\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return tilesProviderRegistry;\n    });\n    _registerModule(_modules, 'Series/TiledWebMap/TiledWebMapSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Hubert Kozik, Kamil Musiałowski\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A tiledwebmap series allows user to display dynamically joined individual\n         * images (tiles) and join them together to create a map.\n         *\n         * @sample maps/series-tiledwebmap/simple-demo-norway\n         *         Simple demo of data for Norway on TiledWebMap\n         * @sample maps/series-tiledwebmap/only-twm\n         *         OpenStreetMap demo\n         *\n         * @extends      plotOptions.map\n         * @excluding    affectsMapView, allAreas, allowPointSelect, animation,\n         * animationLimit, boostBlending, boostThreshold, borderColor, borderWidth,\n         * clip, color, colorAxis, colorByPoint, colorIndex, colorKey, colors,\n         * cursor, dashStyle, dataLabels, dataParser, dataURL, dragDrop,\n         * enableMouseTracking, findNearestPointBy, joinBy, keys, marker,\n         * negativeColor, nullColor, nullInteraction, onPoint, point,\n         * pointDescriptionFormatter, selected, shadow, showCheckbox,\n         * sonification, stickyTracking, tooltip, type\n         * @product      highmaps\n         * @optionparent plotOptions.tiledwebmap\n         */\n        var TiledWebMapSeriesDefaults = {\n            states: {\n                inactive: {\n                    enabled: false\n                }\n            }\n        };\n        /* *\n         *\n         *  API options\n         *\n         * */\n        /**\n         * A `tiledwebmap` series. The [type](#series.tiledwebmap.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @sample maps/series-tiledwebmap/simple-demo-norway\n         *         Simple demo of data for Norway on TiledWebMap\n         * @sample maps/series-tiledwebmap/only-twm\n         *         OpenStreetMap demo\n         *\n         * @extends   series,plotOptions.tiledwebmap\n         * @excluding affectsMapView, allAreas, allowPointSelect, animation,\n         * animationLimit, boostBlending, boostThreshold, borderColor, borderWidth,\n         * clip, color, colorAxis, colorByPoint, colorIndex, colorKey, colors, cursor,\n         * dashStyle, dataLabels, dataParser, dataURL, dragDrop, enableMouseTracking,\n         * findNearestPointBy, joinBy, keys, marker, negativeColor, nullColor,\n         * nullInteraction, onPoint, point, pointDescriptionFormatter, selected, shadow,\n         * showCheckbox, stickyTracking, tooltip, type\n         * @product   highmaps\n         * @apioption series.tiledwebmap\n         */\n        /**\n         * Provider options for the series.\n         *\n         * @sample maps/series-tiledwebmap/human-anatomy\n         *         Human Anatomy Explorer - Custom TiledWebMap Provider\n         *\n         * @since 11.1.0\n         * @product   highmaps\n         * @apioption plotOptions.tiledwebmap.provider\n         */\n        /**\n         * Provider type to pull data (tiles) from.\n         *\n         * @sample maps/series-tiledwebmap/basic-configuration\n         *         Basic configuration for TiledWebMap\n         *\n         * @type      {string}\n         * @since 11.1.0\n         * @product   highmaps\n         * @apioption plotOptions.tiledwebmap.provider.type\n         */\n        /**\n         * Set a tiles theme. Check the [providers documentation](https://www.highcharts.com/docs/maps/tiledwebmap)\n         * for official list of available themes.\n         *\n         * @sample maps/series-tiledwebmap/europe-timezones\n         *         Imagery basemap for Europe\n         * @sample maps/series-tiledwebmap/hiking-trail\n         *         Topo basemap and MapLine\n         *\n         * @type      {string}\n         * @since 11.1.0\n         * @product   highmaps\n         * @apioption plotOptions.tiledwebmap.provider.theme\n         */\n        /**\n         * Subdomain required by each provider. Check the [providers documentation](https://www.highcharts.com/docs/maps/tiledwebmap)\n         * for available subdomains.\n         *\n         * @sample maps/series-tiledwebmap/basic-configuration\n         *         Basic configuration for TiledWebMap\n         *\n         * @type      {string}\n         * @since 11.1.0\n         * @product   highmaps\n         * @apioption plotOptions.tiledwebmap.provider.subdomain\n         */\n        /**\n         * API key for providers that require using one.\n         *\n         * @type      {string}\n         * @since 11.1.0\n         * @product   highmaps\n         * @apioption plotOptions.tiledwebmap.provider.apiKey\n         */\n        /**\n         * Custom URL for providers not specified in [providers type](#series.\n         * tiledwebmap.provider.type). Available variables to use in URL are: `{x}`,\n         * `{y}`, `{z}` or `{zoom}`. Remember to always specify a projection, when\n         * using a custom URL.\n         *\n         * @sample maps/series-tiledwebmap/custom-url\n         *         Custom URL with projection in TiledWebMap configuration\n         *\n         * @type      {string}\n         * @since 11.1.0\n         * @product   highmaps\n         * @apioption plotOptions.tiledwebmap.provider.url\n         */\n        ''; // Keeps doclets above detached\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TiledWebMapSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/TiledWebMap/TiledWebMapSeries.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Maps/TilesProviders/TilesProviderRegistry.js'], _modules['Series/TiledWebMap/TiledWebMapSeriesDefaults.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, TilesProvidersRegistry, TiledWebMapSeriesDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Hubert Kozik, Kamil Musiałowski\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed;\n        var MapSeries = SeriesRegistry.seriesTypes.map;\n        var addEvent = U.addEvent, defined = U.defined, error = U.error, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /** @private */\n        function onRecommendMapView(e) {\n            var geoBounds = e.geoBounds, chart = e.chart, twm = (chart.options.series || []).filter(function (s) { return s.type === 'tiledwebmap'; })[0];\n            if (twm && twm.provider && twm.provider.type && !twm.provider.url) {\n                var ProviderDefinition = TilesProvidersRegistry[twm.provider.type];\n                if (!defined(ProviderDefinition)) {\n                    error('Highcharts warning: Tiles Provider not defined in the ' +\n                        'Provider Registry.', false);\n                }\n                else {\n                    var def = new ProviderDefinition(), providerProjectionName = def.initialProjectionName;\n                    if (geoBounds) {\n                        var x1 = geoBounds.x1, y1 = geoBounds.y1, x2 = geoBounds.x2, y2 = geoBounds.y2;\n                        this.recommendedMapView = {\n                            projection: {\n                                name: providerProjectionName,\n                                parallels: [y1, y2],\n                                rotation: [-(x1 + x2) / 2]\n                            }\n                        };\n                    }\n                    else {\n                        this.recommendedMapView = {\n                            projection: {\n                                name: providerProjectionName\n                            },\n                            minZoom: 0\n                        };\n                    }\n                    return false;\n                }\n            }\n            return true;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.tiledwebmap\n         *\n         * @augments Highcharts.Series\n         */\n        var TiledWebMapSeries = /** @class */ (function (_super) {\n            __extends(TiledWebMapSeries, _super);\n            function TiledWebMapSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.redrawTiles = false;\n                _this.isAnimating = false;\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            TiledWebMapSeries.compose = function (MapViewClass) {\n                if (pushUnique(composed, 'TiledWebMapSeries')) {\n                    addEvent(MapViewClass, 'onRecommendMapView', onRecommendMapView);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Convert map coordinates in longitude/latitude to tile\n             * @private\n             * @param  {Highcharts.MapLonLatObject} lonLat\n             *         The map coordinates\n             * @return {Highcharts.PositionObject}\n             *         Array of x and y positions of the tile\n             */\n            TiledWebMapSeries.prototype.lonLatToTile = function (lonLat, zoom) {\n                var lon = lonLat.lon, lat = lonLat.lat, xTile = Math.floor((lon + 180) / 360 * Math.pow(2, zoom)), yTile = Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) +\n                    1 / Math.cos(lat * Math.PI / 180)) / Math.PI) /\n                    2 * Math.pow(2, zoom));\n                return { x: xTile, y: yTile };\n            };\n            /**\n             * Convert tile to map coordinates in longitude/latitude\n             * @private\n             * @param  xTile\n             *         Position x of the tile\n             * @param  yTile\n             *         Position y of the tile\n             * @param  zTile\n             *         Zoom of the tile\n             * @return {Highcharts.MapLonLatObject}\n             *         The map coordinates\n             */\n            TiledWebMapSeries.prototype.tileToLonLat = function (xTile, yTile, zTile) {\n                var lon = xTile / Math.pow(2, zTile) * 360 - 180, n = Math.PI - 2 * Math.PI * yTile / Math.pow(2, zTile), lat = (180 /\n                    Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))));\n                return { lon: lon, lat: lat };\n            };\n            TiledWebMapSeries.prototype.drawPoints = function () {\n                var _a;\n                var chart = this.chart, mapView = chart.mapView;\n                if (!mapView) {\n                    return;\n                }\n                var tiles = (this.tiles = this.tiles || {}), transformGroups = (this.transformGroups = this.transformGroups || []), series = this, options = this.options, provider = options.provider, zoom = mapView.zoom, lambda = pick((mapView.projection.options.rotation &&\n                    mapView.projection.options.rotation[0]), 0), worldSize = 400.979322, tileSize = 256, duration = chart.renderer.forExport ? 0 : 200, animateTiles = function (duration) {\n                    var _loop_2 = function (zoomKey) {\n                        if ((parseFloat(zoomKey) === (mapView.zoom < 0 ? 0 :\n                            Math.floor(mapView.zoom))) ||\n                            (series.minZoom &&\n                                (mapView.zoom < 0 ? 0 :\n                                    Math.floor(mapView.zoom)) < series.minZoom &&\n                                parseFloat(zoomKey) === series.minZoom) ||\n                            (series.maxZoom &&\n                                (mapView.zoom < 0 ? 0 :\n                                    Math.floor(mapView.zoom)) > series.maxZoom &&\n                                parseFloat(zoomKey) === series.maxZoom)) {\n                            Object\n                                .keys(tiles[zoomKey].tiles)\n                                .forEach(function (key, i) {\n                                tiles[zoomKey].tiles[key].animate({\n                                    opacity: 1\n                                }, {\n                                    duration: duration\n                                }, function () {\n                                    if (i === Object.keys(tiles[zoomKey].tiles)\n                                        .length - 1) {\n                                        tiles[zoomKey].isActive = true;\n                                    }\n                                });\n                            });\n                        }\n                        else {\n                            Object\n                                .keys(tiles[zoomKey].tiles)\n                                .forEach(function (key, i) {\n                                tiles[zoomKey].tiles[key].animate({\n                                    opacity: 0\n                                }, {\n                                    duration: duration,\n                                    defer: duration / 2\n                                }, function () {\n                                    tiles[zoomKey].tiles[key].destroy();\n                                    delete tiles[zoomKey].tiles[key];\n                                    if (i === Object.keys(tiles[zoomKey].tiles)\n                                        .length - 1) {\n                                        tiles[zoomKey].isActive = false;\n                                        tiles[zoomKey].loaded = false;\n                                    }\n                                });\n                            });\n                        }\n                    };\n                    for (var _i = 0, _a = Object.keys(tiles); _i < _a.length; _i++) {\n                        var zoomKey = _a[_i];\n                        _loop_2(zoomKey);\n                    }\n                };\n                var zoomFloor = zoom < 0 ? 0 : Math.floor(zoom), maxTile = Math.pow(2, zoomFloor), scale = ((tileSize / worldSize) * Math.pow(2, zoom)) /\n                    ((tileSize / worldSize) * Math.pow(2, zoomFloor)), scaledTileSize = scale * 256;\n                if (provider && (provider.type || provider.url)) {\n                    if (provider.type && !provider.url) {\n                        var ProviderDefinition = TilesProvidersRegistry[provider.type];\n                        if (!defined(ProviderDefinition)) {\n                            error('Highcharts warning: Tiles Provider \\'' +\n                                provider.type + '\\' not defined in the Provider' +\n                                'Registry.', false);\n                            return;\n                        }\n                        var def = new ProviderDefinition(), providerProjection = def.initialProjectionName;\n                        var theme = void 0, subdomain = '';\n                        if (provider.theme && defined(def.themes[provider.theme])) {\n                            theme = def.themes[provider.theme];\n                        }\n                        else {\n                            // If nothing set take first theme\n                            var firstTheme = Object.keys(def.themes)[0];\n                            theme = def.themes[firstTheme];\n                            error('Highcharts warning: The Tiles Provider\\'s Theme \\'' +\n                                provider.theme + '\\' is not defined in the Provider ' +\n                                'definition - falling back to \\'' + firstTheme + '\\'.', false);\n                        }\n                        if (provider.subdomain &&\n                            def.subdomains &&\n                            def.subdomains.indexOf(provider.subdomain) !== -1) {\n                            subdomain = provider.subdomain;\n                        }\n                        else if (defined(def.subdomains) &&\n                            // Do not show warning if no subdomain in URL\n                            theme.url.indexOf('{s}') !== -1) {\n                            subdomain = pick(def.subdomains && def.subdomains[0], '');\n                            error('Highcharts warning: The Tiles Provider\\'s Subdomain ' +\n                                '\\'' + provider.subdomain + '\\' is not defined in ' +\n                                'the Provider definition - falling back to \\'' +\n                                subdomain + '\\'.', false);\n                        }\n                        if (def.requiresApiKey) {\n                            if (provider.apiKey) {\n                                theme.url =\n                                    theme.url.replace('{apikey}', provider.apiKey);\n                            }\n                            else {\n                                error('Highcharts warning: The Tiles Provider requires ' +\n                                    'API Key to use tiles, use provider.apiKey to ' +\n                                    'provide a token.', false);\n                                theme.url = theme.url.replace('?apikey={apikey}', '');\n                            }\n                        }\n                        provider.url = theme.url\n                            .replace('{s}', subdomain);\n                        this.minZoom = theme.minZoom;\n                        this.maxZoom = theme.maxZoom;\n                        // Add as credits.text, to prevent changing the default mapText\n                        var creditsText = pick(chart.userOptions.credits && chart.userOptions.credits.text, 'Highcharts.com ' + pick(theme.credits, def.defaultCredits));\n                        if (chart.credits) {\n                            chart.credits.update({\n                                text: creditsText\n                            });\n                        }\n                        else {\n                            chart.addCredits({\n                                text: creditsText,\n                                style: pick((_a = chart.options.credits) === null || _a === void 0 ? void 0 : _a.style, {})\n                            });\n                        }\n                        if (mapView.projection.options.name !== providerProjection) {\n                            error('Highcharts warning: The set projection is different ' +\n                                'than supported by Tiles Provider.', false);\n                        }\n                    }\n                    else {\n                        if (!mapView.projection.options.name) {\n                            error('Highcharts warning: The set projection is different ' +\n                                'than supported by Tiles Provider.', false);\n                        }\n                    }\n                    // If zoom is smaller/higher than supported by provider\n                    if (defined(this.minZoom) && zoomFloor < this.minZoom) {\n                        zoomFloor = this.minZoom;\n                        maxTile = Math.pow(2, zoomFloor);\n                        scale = ((tileSize / worldSize) * Math.pow(2, zoom)) /\n                            ((tileSize / worldSize) * Math.pow(2, zoomFloor));\n                        scaledTileSize = scale * 256;\n                    }\n                    else if (defined(this.maxZoom) && zoomFloor > this.maxZoom) {\n                        zoomFloor = this.maxZoom;\n                        maxTile = Math.pow(2, zoomFloor);\n                        scale = ((tileSize / worldSize) * Math.pow(2, zoom)) /\n                            ((tileSize / worldSize) * Math.pow(2, zoomFloor));\n                        scaledTileSize = scale * 256;\n                    }\n                    if (mapView.projection && mapView.projection.def) {\n                        // Always true for tile maps\n                        mapView.projection.hasCoordinates = true;\n                        if (!transformGroups[zoomFloor]) {\n                            transformGroups[zoomFloor] =\n                                chart.renderer.g().add(this.group);\n                        }\n                        var replaceVariables_1 = function (url, x, y, zoom) { return url\n                            .replace('{x}', x.toString())\n                            .replace('{y}', y.toString())\n                            .replace('{zoom}', zoom.toString())\n                            .replace('{z}', zoom.toString()); };\n                        var addTile = function (x, y, givenZoom, translateX, translateY) {\n                            var modX = x % maxTile, modY = y % maxTile, tileX = modX < 0 ? modX + maxTile : modX, tileY = modY < 0 ? modY + maxTile : modY;\n                            if (!tiles[\"\".concat(givenZoom)].tiles[\"\".concat(x, \",\").concat(y)]) {\n                                if (provider.url) {\n                                    var url = replaceVariables_1(provider.url, tileX, tileY, givenZoom);\n                                    tiles[givenZoom].loaded = false;\n                                    tiles[\"\".concat(givenZoom)].tiles[\"\".concat(x, \",\").concat(y)] =\n                                        chart.renderer.image(url, (x * scaledTileSize) - translateX, (y * scaledTileSize) - translateY, scaledTileSize, scaledTileSize)\n                                            .attr({\n                                            zIndex: 2,\n                                            opacity: 0\n                                        })\n                                            .on('load', function () {\n                                            if (provider.onload) {\n                                                provider.onload.apply(this);\n                                            }\n                                            if ((givenZoom ===\n                                                (mapView.zoom < 0 ? 0 :\n                                                    Math.floor(mapView.zoom))) ||\n                                                givenZoom === series.minZoom) {\n                                                tiles[\"\".concat(givenZoom)]\n                                                    .actualTilesCount++;\n                                                // If last tile\n                                                if (tiles[\"\".concat(givenZoom)]\n                                                    .howManyTiles ===\n                                                    tiles[\"\".concat(givenZoom)]\n                                                        .actualTilesCount) {\n                                                    tiles[givenZoom].loaded = true;\n                                                    // Fade-in new tiles if there is\n                                                    // no other animation\n                                                    if (!series.isAnimating) {\n                                                        series.redrawTiles = false;\n                                                        animateTiles(duration);\n                                                    }\n                                                    else {\n                                                        series.redrawTiles = true;\n                                                    }\n                                                    tiles[\"\".concat(givenZoom)]\n                                                        .actualTilesCount = 0;\n                                                }\n                                            }\n                                        })\n                                            .add(transformGroups[givenZoom]);\n                                    tiles[\"\".concat(givenZoom)].tiles[\"\".concat(x, \",\").concat(y)].posX = x;\n                                    tiles[\"\".concat(givenZoom)].tiles[\"\".concat(x, \",\").concat(y)].posY = y;\n                                    tiles[\"\".concat(givenZoom)].tiles[\"\".concat(x, \",\").concat(y)]\n                                        .originalURL = url;\n                                }\n                            }\n                        };\n                        // Calculate topLeft and bottomRight corners without normalize\n                        var topLeftUnits = mapView.pixelsToProjectedUnits({\n                            x: 0,\n                            y: 0\n                        }), topLeftArr = mapView.projection.def.inverse([topLeftUnits.x, topLeftUnits.y]), topLeft = {\n                            lon: topLeftArr[0] - lambda,\n                            lat: topLeftArr[1]\n                        }, bottomRightUnits = mapView.pixelsToProjectedUnits({\n                            x: chart.plotWidth,\n                            y: chart.plotHeight\n                        }), bottomRightArr = mapView.projection.def.inverse([bottomRightUnits.x, bottomRightUnits.y]), bottomRight = {\n                            lon: bottomRightArr[0] - lambda,\n                            lat: bottomRightArr[1]\n                        };\n                        // Do not support vertical looping\n                        if (topLeft.lat > mapView.projection.maxLatitude ||\n                            bottomRight.lat < -1 * mapView.projection.maxLatitude) {\n                            topLeft.lat = mapView.projection.maxLatitude;\n                            bottomRight.lat = -1 * mapView.projection.maxLatitude;\n                        }\n                        var startPos = this.lonLatToTile(topLeft, zoomFloor), endPos = this.lonLatToTile(bottomRight, zoomFloor);\n                        // Calculate group translations based on first loaded tile\n                        var firstTileLonLat = this.tileToLonLat(startPos.x, startPos.y, zoomFloor), units = mapView.projection.def.forward([\n                            firstTileLonLat.lon + lambda,\n                            firstTileLonLat.lat\n                        ]), firstTilePx = mapView.projectedUnitsToPixels({\n                            x: units[0], y: units[1]\n                        }), translateX = (startPos.x * scaledTileSize - firstTilePx.x), translateY = (startPos.y * scaledTileSize - firstTilePx.y);\n                        if (!tiles[\"\".concat(zoomFloor)]) {\n                            tiles[\"\".concat(zoomFloor)] = {\n                                tiles: {},\n                                isActive: false,\n                                howManyTiles: 0,\n                                actualTilesCount: 0,\n                                loaded: false\n                            };\n                        }\n                        tiles[\"\".concat(zoomFloor)].howManyTiles =\n                            (endPos.x - startPos.x + 1) * (endPos.y - startPos.y + 1);\n                        tiles[\"\".concat(zoomFloor)].actualTilesCount = 0;\n                        for (var x = startPos.x; x <= endPos.x; x++) {\n                            for (var y = startPos.y; y <= endPos.y; y++) {\n                                addTile(x, y, zoomFloor, translateX, translateY);\n                            }\n                        }\n                    }\n                    var _loop_1 = function (zoomKey) {\n                        var _loop_3 = function (key) {\n                            if (mapView.projection && mapView.projection.def) {\n                                // Calculate group translations based on first loaded\n                                // tile\n                                var scale_1 = ((tileSize / worldSize) *\n                                    Math.pow(2, zoom)) / ((tileSize / worldSize) *\n                                    Math.pow(2, parseFloat(zoomKey))), scaledTileSize_1 = scale_1 * 256, firstTile = tiles[zoomKey].tiles[Object.keys(tiles[zoomKey].tiles)[0]], _e = tiles[zoomKey].tiles[key], posX_1 = _e.posX, posY_1 = _e.posY;\n                                if (defined(posX_1) &&\n                                    defined(posY_1) &&\n                                    defined(firstTile.posX) &&\n                                    defined(firstTile.posY)) {\n                                    var firstTileLonLat = this_1.tileToLonLat(firstTile.posX, firstTile.posY, parseFloat(zoomKey)), units = mapView.projection.def.forward([\n                                        firstTileLonLat.lon + lambda,\n                                        firstTileLonLat.lat\n                                    ]), firstTilePx = mapView.projectedUnitsToPixels({\n                                        x: units[0], y: units[1]\n                                    }), tilesOffsetX_1 = (firstTile.posX * scaledTileSize_1) -\n                                        firstTilePx.x, tilesOffsetY_1 = (firstTile.posY * scaledTileSize_1) -\n                                        firstTilePx.y;\n                                    if (chart.renderer.globalAnimation &&\n                                        chart.hasRendered) {\n                                        var startX_1 = Number(tiles[zoomKey].tiles[key].attr('x')), startY_1 = Number(tiles[zoomKey].tiles[key].attr('y')), startWidth_1 = Number(tiles[zoomKey].tiles[key].attr('width')), startHeight_1 = Number(tiles[zoomKey].tiles[key].attr('height'));\n                                        var step = function (now, fx) {\n                                            tiles[zoomKey].tiles[key].attr({\n                                                x: (startX_1 + (((posX_1 * scaledTileSize_1) -\n                                                    tilesOffsetX_1 - startX_1) * fx.pos)),\n                                                y: (startY_1 + (((posY_1 * scaledTileSize_1) -\n                                                    tilesOffsetY_1 - startY_1) * fx.pos)),\n                                                width: (startWidth_1 + ((Math.ceil(scaledTileSize_1) + 1 -\n                                                    startWidth_1) * fx.pos)),\n                                                height: (startHeight_1 + ((Math.ceil(scaledTileSize_1) + 1 -\n                                                    startHeight_1) * fx.pos))\n                                            });\n                                        };\n                                        series.isAnimating = true;\n                                        tiles[zoomKey].tiles[key]\n                                            .attr({ animator: 0 })\n                                            .animate({ animator: 1 }, { step: step }, function () {\n                                            series.isAnimating = false;\n                                            // If animate ended after loading\n                                            // the tiles\n                                            if (series.redrawTiles) {\n                                                series.redrawTiles = false;\n                                                animateTiles(duration);\n                                            }\n                                        });\n                                        // When dragging or first rendering,\n                                        // animation is off\n                                    }\n                                    else {\n                                        // Animate tiles if something broke\n                                        if (series.redrawTiles ||\n                                            parseFloat(zoomKey) !== zoomFloor ||\n                                            ((tiles[zoomKey].isActive ||\n                                                parseFloat(zoomKey) === zoomFloor) &&\n                                                Object.keys(tiles[zoomKey].tiles)\n                                                    .map(function (key) {\n                                                    return tiles[zoomKey].tiles[key];\n                                                })\n                                                    .some(function (tile) {\n                                                    return tile.opacity === 0;\n                                                }))) {\n                                            series.redrawTiles = false;\n                                            animateTiles(duration);\n                                        }\n                                        tiles[zoomKey].tiles[key].attr({\n                                            x: (posX_1 * scaledTileSize_1) - tilesOffsetX_1,\n                                            y: (posY_1 * scaledTileSize_1) - tilesOffsetY_1,\n                                            width: Math.ceil(scaledTileSize_1) + 1,\n                                            height: Math.ceil(scaledTileSize_1) + 1\n                                        });\n                                    }\n                                }\n                            }\n                        };\n                        for (var _c = 0, _d = Object.keys(tiles[zoomKey].tiles); _c < _d.length; _c++) {\n                            var key = _d[_c];\n                            _loop_3(key);\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _i = 0, _b = Object.keys(tiles); _i < _b.length; _i++) {\n                        var zoomKey = _b[_i];\n                        _loop_1(zoomKey);\n                    }\n                }\n                else {\n                    error('Highcharts warning: Tiles Provider not defined in the ' +\n                        'Provider Registry.', false);\n                }\n            };\n            TiledWebMapSeries.prototype.update = function () {\n                var _a;\n                var series = this, transformGroups = series.transformGroups, chart = this.chart, mapView = chart.mapView, options = arguments[0], provider = options.provider;\n                if (transformGroups) {\n                    transformGroups.forEach(function (group) {\n                        if (Object.keys(group).length !== 0) {\n                            group.destroy();\n                        }\n                    });\n                    this.transformGroups = [];\n                }\n                if (mapView &&\n                    !defined((_a = chart.userOptions.mapView) === null || _a === void 0 ? void 0 : _a.projection) &&\n                    provider &&\n                    provider.type) {\n                    var ProviderDefinition = TilesProvidersRegistry[provider.type];\n                    if (ProviderDefinition) {\n                        var def = new ProviderDefinition(), providerProjectionName = def.initialProjectionName;\n                        mapView.update({\n                            projection: {\n                                name: providerProjectionName\n                            }\n                        });\n                    }\n                }\n                _super.prototype.update.apply(series, arguments);\n            };\n            TiledWebMapSeries.defaultOptions = merge(MapSeries.defaultOptions, TiledWebMapSeriesDefaults);\n            return TiledWebMapSeries;\n        }(MapSeries));\n        SeriesRegistry.registerSeriesType('tiledwebmap', TiledWebMapSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TiledWebMapSeries;\n    });\n    _registerModule(_modules, 'masters/modules/tiledwebmap.src.js', [_modules['Core/Globals.js'], _modules['Maps/TilesProviders/TilesProviderRegistry.js'], _modules['Series/TiledWebMap/TiledWebMapSeries.js']], function (Highcharts, TilesProviderRegistry, TiledWebMapSeries) {\n\n        var G = Highcharts;\n        G.TilesProviderRegistry = G.TilesProviderRegistry || TilesProviderRegistry;\n        TiledWebMapSeries.compose(G.MapView);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","defaultCredits","initialProjectionName","subdomains","themes","Standard","url","minZoom","maxZoom","Hot","OpenTopoMap","credits","Toner","TonerBackground","TonerLite","Terrain","TerrainBackground","Watercolor","requiresApiKey","OpenCycleMap","Transport","TransportDark","SpinalMap","Landscape","Outdoors","Pioneer","MobileAtlas","Neighbourhood","WorldStreetMap","DeLorme","WorldTopoMap","WorldImagery","WorldTerrain","WorldShadedRelief","WorldPhysical","NatGeoWorldMap","WorldGrayCanvas","USTopo","USImagery","USImageryTopo","OpenStreetMap","Stamen","LimaLabs","Thunderforest","Esri","USGS","states","inactive","enabled","H","SeriesRegistry","TilesProvidersRegistry","TiledWebMapSeriesDefaults","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","composed","MapSeries","seriesTypes","map","addEvent","defined","error","merge","pick","pushUnique","onRecommendMapView","e","geoBounds","twm","chart","options","series","filter","s","type","provider","ProviderDefinition","providerProjectionName","def","x1","y1","x2","y2","recommendedMapView","projection","name","parallels","rotation","TiledWebMapSeries","_super","_this","arguments","redrawTiles","isAnimating","compose","MapViewClass","lonLatToTile","lonLat","zoom","lon","lat","x","Math","floor","pow","y","log","tan","PI","cos","tileToLonLat","xTile","yTile","zTile","n","atan","exp","drawPoints","_a","mapView","tiles","transformGroups","lambda","duration","renderer","forExport","animateTiles","_loop_2","zoomKey","parseFloat","keys","forEach","key","i","animate","opacity","length","isActive","defer","destroy","loaded","_i","zoomFloor","maxTile","scale","tileSize","scaledTileSize","providerProjection","theme","subdomain","firstTheme","indexOf","apiKey","replace","creditsText","userOptions","text","update","addCredits","style","hasCoordinates","g","add","group","addTile","givenZoom","translateX","translateY","modX","modY","tileX","tileY","concat","toString","image","attr","zIndex","on","onload","actualTilesCount","howManyTiles","posX","posY","originalURL","topLeftUnits","pixelsToProjectedUnits","topLeftArr","inverse","topLeft","bottomRightUnits","plotWidth","plotHeight","bottomRightArr","bottomRight","maxLatitude","startPos","endPos","firstTileLonLat","units","forward","firstTilePx","projectedUnitsToPixels","_loop_1","_loop_3","scaledTileSize_1","scale_1","firstTile","_e","posX_1","posY_1","this_1","tilesOffsetX_1","tilesOffsetY_1","globalAnimation","hasRendered","startX_1","Number","startY_1","startWidth_1","startHeight_1","animator","step","now","fx","pos","width","ceil","height","some","tile","_c","_d","_b","defaultOptions","registerSeriesType","TilesProviderRegistry","G","MapView"],"mappings":"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"}