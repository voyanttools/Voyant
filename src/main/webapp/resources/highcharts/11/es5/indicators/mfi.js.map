{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.8 (2024-08-29)\n *\n * Money Flow Index indicator for Highcharts Stock\n *\n * (c) 2010-2024 Grzegorz Blachliński\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/mfi', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/MFI/MFIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Money Flow Index indicator for Highcharts Stock\n         *\n         *  (c) 2010-2024 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var SMAIndicator = SeriesRegistry.seriesTypes.sma;\n        var extend = U.extend, merge = U.merge, error = U.error, isArray = U.isArray;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         *\n         */\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            });\n        }\n        /**\n         *\n         */\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        /**\n         *\n         */\n        function calculateTypicalPrice(point) {\n            return (point[1] + point[2] + point[3]) / 3;\n        }\n        /**\n         *\n         */\n        function calculateRawMoneyFlow(typicalPrice, volume) {\n            return typicalPrice * volume;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MFI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.mfi\n         *\n         * @augments Highcharts.Series\n         */\n        var MFIIndicator = /** @class */ (function (_super) {\n            __extends(MFIIndicator, _super);\n            function MFIIndicator() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            MFIIndicator.prototype.getValues = function (series, params) {\n                var period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, volumeSeries = series.chart.get(params.volumeSeriesID), yValVolume = (volumeSeries && volumeSeries.yData), MFI = [], xData = [], yData = [], positiveMoneyFlow = [], negativeMoneyFlow = [];\n                var newTypicalPrice, oldTypicalPrice, rawMoneyFlow, negativeMoneyFlowSum, positiveMoneyFlowSum, moneyFlowRatio, MFIPoint, i, isUp = false, \n                // MFI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                range = 1;\n                if (!volumeSeries) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // MFI requires high low and close values\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 ||\n                    !yValVolume) {\n                    return;\n                }\n                // Calculate first typical price\n                newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                // Accumulate first N-points\n                while (range < period + 1) {\n                    // Calculate if up or down\n                    oldTypicalPrice = newTypicalPrice;\n                    newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                    isUp = newTypicalPrice >= oldTypicalPrice;\n                    // Calculate raw money flow\n                    rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[range]);\n                    // Add to array\n                    positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                    negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    range++;\n                }\n                for (i = range - 1; i < yValLen; i++) {\n                    if (i > range - 1) {\n                        // Remove first point from array\n                        positiveMoneyFlow.shift();\n                        negativeMoneyFlow.shift();\n                        // Calculate if up or down\n                        oldTypicalPrice = newTypicalPrice;\n                        newTypicalPrice = calculateTypicalPrice(yVal[i]);\n                        isUp = newTypicalPrice > oldTypicalPrice;\n                        // Calculate raw money flow\n                        rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[i]);\n                        // Add to array\n                        positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                        negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    }\n                    // Calculate sum of negative and positive money flow:\n                    negativeMoneyFlowSum = sumArray(negativeMoneyFlow);\n                    positiveMoneyFlowSum = sumArray(positiveMoneyFlow);\n                    moneyFlowRatio = positiveMoneyFlowSum / negativeMoneyFlowSum;\n                    MFIPoint = toFixed(100 - (100 / (1 + moneyFlowRatio)), decimals);\n                    MFI.push([xVal[i], MFIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(MFIPoint);\n                }\n                return {\n                    values: MFI,\n                    xData: xData,\n                    yData: yData\n                };\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * Money Flow Index. This series requires `linkedTo` option to be set and\n             * should be loaded after the `stock/indicators/indicators.js` file.\n             *\n             * @sample stock/indicators/mfi\n             *         Money Flow Index Indicator\n             *\n             * @extends      plotOptions.sma\n             * @since        6.0.0\n             * @product      highstock\n             * @requires     stock/indicators/indicators\n             * @requires     stock/indicators/mfi\n             * @optionparent plotOptions.mfi\n             */\n            MFIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n                /**\n                 * @excluding index\n                 */\n                params: {\n                    index: void 0, // Unchangeable index, do not inherit (#15362)\n                    /**\n                     * The id of volume series which is mandatory.\n                     * For example using OHLC data, volumeSeriesID='volume' means\n                     * the indicator will be calculated using OHLC and volume values.\n                     */\n                    volumeSeriesID: 'volume',\n                    /**\n                     * Number of maximum decimals that are used in MFI calculations.\n                     */\n                    decimals: 4\n                }\n            });\n            return MFIIndicator;\n        }(SMAIndicator));\n        extend(MFIIndicator.prototype, {\n            nameBase: 'Money Flow Index'\n        });\n        SeriesRegistry.registerSeriesType('mfi', MFIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MFI` series. If the [type](#series.mfi.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.mfi\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/mfi\n         * @apioption series.mfi\n         */\n        ''; // To include the above in the js output\n\n        return MFIIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/mfi.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","SMAIndicator","seriesTypes","sma","extend","merge","error","isArray","sumArray","array","reduce","prev","cur","calculateTypicalPrice","point","MFIIndicator","_super","arguments","getValues","series","params","newTypicalPrice","oldTypicalPrice","rawMoneyFlow","negativeMoneyFlowSum","MFIPoint","i","period","xVal","xData","yVal","yData","yValLen","length","decimals","volumeSeries","chart","get","volumeSeriesID","yValVolume","MFI","positiveMoneyFlow","negativeMoneyFlow","isUp","range","typicalPrice","push","shift","parseFloat","a","positiveMoneyFlowSum","toFixed","values","defaultOptions","index","nameBase","registerSeriesType"],"mappings":"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"}