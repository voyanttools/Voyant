{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.8 (2024-08-29)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2024 Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/ichimoku-kinko-hyo', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/IKH/IKHIndicator.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, Color, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var color = Color.parse;\n        var SMAIndicator = SeriesRegistry.seriesTypes.sma;\n        var defined = U.defined, extend = U.extend, isArray = U.isArray, isNumber = U.isNumber, getClosestDistance = U.getClosestDistance, merge = U.merge, objectEach = U.objectEach;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function maxHigh(arr) {\n            return arr.reduce(function (max, res) {\n                return Math.max(max, res[1]);\n            }, -Infinity);\n        }\n        /**\n         * @private\n         */\n        function minLow(arr) {\n            return arr.reduce(function (min, res) {\n                return Math.min(min, res[2]);\n            }, Infinity);\n        }\n        /**\n         * @private\n         */\n        function highlowLevel(arr) {\n            return {\n                high: maxHigh(arr),\n                low: minLow(arr)\n            };\n        }\n        /**\n         * Check two lines intersection (line a1-a2 and b1-b2)\n         * Source: https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n         * @private\n         */\n        function checkLineIntersection(a1, a2, b1, b2) {\n            if (a1 && a2 && b1 && b2) {\n                var saX = a2.plotX - a1.plotX, // Auxiliary section a2-a1 X\n                saY = a2.plotY - a1.plotY, // Auxiliary section a2-a1 Y\n                sbX = b2.plotX - b1.plotX, // Auxiliary section b2-b1 X\n                sbY = b2.plotY - b1.plotY, // Auxiliary section b2-b1 Y\n                sabX = a1.plotX - b1.plotX, // Auxiliary section a1-b1 X\n                sabY = a1.plotY - b1.plotY, // Auxiliary section a1-b1 Y\n                // First degree BÃ©zier parameters\n                u = (-saY * sabX + saX * sabY) / (-sbX * saY + saX * sbY), t = (sbX * sabY - sbY * sabX) / (-sbX * saY + saX * sbY);\n                if (u >= 0 && u <= 1 && t >= 0 && t <= 1) {\n                    return {\n                        plotX: a1.plotX + t * saX,\n                        plotY: a1.plotY + t * saY\n                    };\n                }\n            }\n        }\n        /**\n         * Parameter opt (indicator options object) include indicator, points,\n         * nextPoints, color, options, gappedExtend and graph properties\n         * @private\n         */\n        function drawSenkouSpan(opt) {\n            var indicator = opt.indicator;\n            indicator.points = opt.points;\n            indicator.nextPoints = opt.nextPoints;\n            indicator.color = opt.color;\n            indicator.options = merge(opt.options.senkouSpan.styles, opt.gap);\n            indicator.graph = opt.graph;\n            indicator.fillGraph = true;\n            SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n        }\n        /**\n         * Data integrity in Ichimoku is different than default 'averages':\n         * Point: [undefined, value, value, ...] is correct\n         * Point: [undefined, undefined, undefined, ...] is incorrect\n         * @private\n         */\n        function ichimokuAverages() {\n            var ret = [];\n            var isEmptyRange;\n            [].forEach.call(arguments, function (arr, i) {\n                ret.push(ApproximationRegistry.average(arr));\n                isEmptyRange = !isEmptyRange && typeof ret[i] === 'undefined';\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return isEmptyRange ? void 0 : ret;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The IKH series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ikh\n         *\n         * @augments Highcharts.Series\n         */\n        var IKHIndicator = /** @class */ (function (_super) {\n            __extends(IKHIndicator, _super);\n            function IKHIndicator() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = [];\n                _this.options = {};\n                _this.points = [];\n                _this.graphCollection = [];\n                return _this;\n            }\n            /* *\n             *\n             * Functions\n             *\n             * */\n            IKHIndicator.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    tenkanLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    kijunLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    chikouLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    senkouSpanA: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpanB: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpan: {\n                        styles: {\n                            fill: color(this.color).setOpacity(0.2).get()\n                        }\n                    }\n                }, this.options);\n            };\n            IKHIndicator.prototype.toYData = function (point) {\n                return [\n                    point.tenkanSen,\n                    point.kijunSen,\n                    point.chikouSpan,\n                    point.senkouSpanA,\n                    point.senkouSpanB\n                ];\n            };\n            IKHIndicator.prototype.translate = function () {\n                var indicator = this;\n                SeriesRegistry.seriesTypes.sma.prototype.translate.apply(indicator);\n                for (var _i = 0, _a = indicator.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    for (var _b = 0, _c = indicator.pointArrayMap; _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var pointValue = point[key];\n                        if (isNumber(pointValue)) {\n                            point['plot' + key] = indicator.yAxis.toPixels(pointValue, true);\n                            // Add extra parameters for support tooltip in moved\n                            // lines\n                            point.plotY = point['plot' + key];\n                            point.tooltipPos = [\n                                point.plotX,\n                                point['plot' + key]\n                            ];\n                            point.isNull = false;\n                        }\n                    }\n                }\n            };\n            IKHIndicator.prototype.drawGraph = function () {\n                var indicator = this, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, mainColor = indicator.color, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, pointArrayMapLength = indicator.pointArrayMap.length, allIchimokuPoints = [\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    []\n                ], ikhMap = {\n                    tenkanLine: allIchimokuPoints[0],\n                    kijunLine: allIchimokuPoints[1],\n                    chikouLine: allIchimokuPoints[2],\n                    senkouSpanA: allIchimokuPoints[3],\n                    senkouSpanB: allIchimokuPoints[4],\n                    senkouSpan: allIchimokuPoints[5]\n                }, intersectIndexColl = [], senkouSpanOptions = indicator\n                    .options.senkouSpan, color = senkouSpanOptions.color ||\n                    senkouSpanOptions.styles.fill, negativeColor = senkouSpanOptions.negativeColor, \n                // Points to create color and negativeColor senkouSpan\n                points = [\n                    [], // Points color\n                    [] // Points negative color\n                ], \n                // For span, we need an access to the next points, used in\n                // getGraphPath()\n                nextPoints = [\n                    [], // Next points color\n                    [] // Next points negative color\n                ];\n                var pointsLength = mainLinePoints.length, lineIndex = 0, position, point, i, startIntersect, endIntersect, sectionPoints, sectionNextPoints, pointsPlotYSum, nextPointsPlotYSum, senkouSpanTempColor, concatArrIndex, j, k;\n                indicator.ikhMap = ikhMap;\n                // Generate points for all lines and spans lines:\n                while (pointsLength--) {\n                    point = mainLinePoints[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allIchimokuPoints[i].push({\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            });\n                        }\n                    }\n                    if (negativeColor && pointsLength !== mainLinePoints.length - 1) {\n                        // Check if lines intersect\n                        var index = ikhMap.senkouSpanB.length - 1, intersect = checkLineIntersection(ikhMap.senkouSpanA[index - 1], ikhMap.senkouSpanA[index], ikhMap.senkouSpanB[index - 1], ikhMap.senkouSpanB[index]);\n                        if (intersect) {\n                            var intersectPointObj = {\n                                plotX: intersect.plotX,\n                                plotY: intersect.plotY,\n                                isNull: false,\n                                intersectPoint: true\n                            };\n                            // Add intersect point to ichimoku points collection\n                            // Create senkouSpan sections\n                            ikhMap.senkouSpanA.splice(index, 0, intersectPointObj);\n                            ikhMap.senkouSpanB.splice(index, 0, intersectPointObj);\n                            intersectIndexColl.push(index);\n                        }\n                    }\n                }\n                // Modify options and generate lines:\n                objectEach(ikhMap, function (values, lineName) {\n                    if (mainLineOptions[lineName] &&\n                        lineName !== 'senkouSpan') {\n                        // First line is rendered by default option\n                        indicator.points = allIchimokuPoints[lineIndex];\n                        indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        indicator.graph = indicator['graph' + lineName];\n                        indicator.fillGraph = false;\n                        indicator.color = mainColor;\n                        SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n                        // Now save line\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    lineIndex++;\n                });\n                // Generate senkouSpan area:\n                // If graphCollection exist then remove svg\n                // element and indicator property\n                if (indicator.graphCollection) {\n                    for (var _i = 0, _a = indicator.graphCollection; _i < _a.length; _i++) {\n                        var graphName = _a[_i];\n                        indicator[graphName].destroy();\n                        delete indicator[graphName];\n                    }\n                }\n                // Clean graphCollection or initialize it\n                indicator.graphCollection = [];\n                // When user set negativeColor property\n                if (negativeColor && ikhMap.senkouSpanA[0] && ikhMap.senkouSpanB[0]) {\n                    // Add first and last point to senkouSpan area sections\n                    intersectIndexColl.unshift(0);\n                    intersectIndexColl.push(ikhMap.senkouSpanA.length - 1);\n                    // Populate points and nextPoints arrays\n                    for (j = 0; j < intersectIndexColl.length - 1; j++) {\n                        startIntersect = intersectIndexColl[j];\n                        endIntersect = intersectIndexColl[j + 1];\n                        sectionPoints = ikhMap.senkouSpanB.slice(startIntersect, endIntersect + 1);\n                        sectionNextPoints = ikhMap.senkouSpanA.slice(startIntersect, endIntersect + 1);\n                        // Add points to color or negativeColor arrays\n                        // Check the middle point (if exist)\n                        if (Math.floor(sectionPoints.length / 2) >= 1) {\n                            var x = Math.floor(sectionPoints.length / 2);\n                            // When middle points has equal values\n                            // Compare all points plotY value sum\n                            if (sectionPoints[x].plotY === sectionNextPoints[x].plotY) {\n                                pointsPlotYSum = 0;\n                                nextPointsPlotYSum = 0;\n                                for (k = 0; k < sectionPoints.length; k++) {\n                                    pointsPlotYSum += sectionPoints[k].plotY;\n                                    nextPointsPlotYSum += sectionNextPoints[k].plotY;\n                                }\n                                concatArrIndex =\n                                    pointsPlotYSum > nextPointsPlotYSum ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                            else {\n                                // Compare middle point of the section\n                                concatArrIndex = (sectionPoints[x].plotY > sectionNextPoints[x].plotY) ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                        }\n                        else {\n                            // Compare first point of the section\n                            concatArrIndex = (sectionPoints[0].plotY > sectionNextPoints[0].plotY) ? 0 : 1;\n                            points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                            nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                        }\n                    }\n                    // Render color and negativeColor paths\n                    ['graphsenkouSpanColor', 'graphsenkouSpanNegativeColor'].forEach(function (areaName, i) {\n                        if (points[i].length && nextPoints[i].length) {\n                            senkouSpanTempColor = i === 0 ? color : negativeColor;\n                            drawSenkouSpan({\n                                indicator: indicator,\n                                points: points[i],\n                                nextPoints: nextPoints[i],\n                                color: senkouSpanTempColor,\n                                options: mainLineOptions,\n                                gap: gappedExtend,\n                                graph: indicator[areaName]\n                            });\n                            // Now save line\n                            indicator[areaName] = indicator.graph;\n                            indicator.graphCollection.push(areaName);\n                        }\n                    });\n                }\n                else {\n                    // When user set only senkouSpan style.fill property\n                    drawSenkouSpan({\n                        indicator: indicator,\n                        points: ikhMap.senkouSpanB,\n                        nextPoints: ikhMap.senkouSpanA,\n                        color: color,\n                        options: mainLineOptions,\n                        gap: gappedExtend,\n                        graph: indicator.graphsenkouSpan\n                    });\n                    // Now save line\n                    indicator.graphsenkouSpan = indicator.graph;\n                }\n                // Clean temporary properties:\n                delete indicator.nextPoints;\n                delete indicator.fillGraph;\n                // Restore options and draw the Tenkan line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                indicator.color = mainColor;\n            };\n            IKHIndicator.prototype.getGraphPath = function (points) {\n                var indicator = this;\n                var path = [], spanA, spanAarr = [];\n                points = points || this.points;\n                // Render Senkou Span\n                if (indicator.fillGraph && indicator.nextPoints) {\n                    spanA = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath.call(indicator, \n                    // Reverse points, so Senkou Span A will start from the end:\n                    indicator.nextPoints);\n                    if (spanA && spanA.length) {\n                        spanA[0][0] = 'L';\n                        path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                            .call(indicator, points);\n                        spanAarr = spanA.slice(0, path.length);\n                        for (var i = spanAarr.length - 1; i >= 0; i--) {\n                            path.push(spanAarr[i]);\n                        }\n                    }\n                }\n                else {\n                    path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                        .apply(indicator, arguments);\n                }\n                return path;\n            };\n            IKHIndicator.prototype.getValues = function (series, params) {\n                var period = params.period, periodTenkan = params.periodTenkan, periodSenkouSpanB = params.periodSenkouSpanB, xVal = series.xData, yVal = series.yData, xAxis = series.xAxis, yValLen = (yVal && yVal.length) || 0, closestPointRange = getClosestDistance(xAxis.series.map(function (s) { return s.xData || []; })), IKH = [], xData = [];\n                var date, slicedTSY, slicedKSY, slicedSSBY, pointTS, pointKS, pointSSB, i, TS, KS, CS, SSA, SSB;\n                // Ikh requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // Add timestamps at the beginning\n                var dateStart = xVal[0] - period * closestPointRange;\n                for (i = 0; i < period; i++) {\n                    xData.push(dateStart + i * closestPointRange);\n                }\n                for (i = 0; i < yValLen; i++) {\n                    // Tenkan Sen\n                    if (i >= periodTenkan) {\n                        slicedTSY = yVal.slice(i - periodTenkan, i);\n                        pointTS = highlowLevel(slicedTSY);\n                        TS = (pointTS.high + pointTS.low) / 2;\n                    }\n                    if (i >= period) {\n                        slicedKSY = yVal.slice(i - period, i);\n                        pointKS = highlowLevel(slicedKSY);\n                        KS = (pointKS.high + pointKS.low) / 2;\n                        SSA = (TS + KS) / 2;\n                    }\n                    if (i >= periodSenkouSpanB) {\n                        slicedSSBY = yVal.slice(i - periodSenkouSpanB, i);\n                        pointSSB = highlowLevel(slicedSSBY);\n                        SSB = (pointSSB.high + pointSSB.low) / 2;\n                    }\n                    CS = yVal[i][3];\n                    date = xVal[i];\n                    if (typeof IKH[i] === 'undefined') {\n                        IKH[i] = [];\n                    }\n                    if (typeof IKH[i + period - 1] === 'undefined') {\n                        IKH[i + period - 1] = [];\n                    }\n                    IKH[i + period - 1][0] = TS;\n                    IKH[i + period - 1][1] = KS;\n                    IKH[i + period - 1][2] = void 0;\n                    if (typeof IKH[i + 1] === 'undefined') {\n                        IKH[i + 1] = [];\n                    }\n                    IKH[i + 1][2] = CS;\n                    if (i <= period) {\n                        IKH[i + period - 1][3] = void 0;\n                        IKH[i + period - 1][4] = void 0;\n                    }\n                    if (typeof IKH[i + 2 * period - 2] === 'undefined') {\n                        IKH[i + 2 * period - 2] = [];\n                    }\n                    IKH[i + 2 * period - 2][3] = SSA;\n                    IKH[i + 2 * period - 2][4] = SSB;\n                    xData.push(date);\n                }\n                // Add timestamps for further points\n                for (i = 1; i <= period; i++) {\n                    xData.push(date + i * closestPointRange);\n                }\n                return {\n                    values: IKH,\n                    xData: xData,\n                    yData: IKH\n                };\n            };\n            /**\n             * Ichimoku Kinko Hyo (IKH). This series requires `linkedTo` option to be\n             * set.\n             *\n             * @sample stock/indicators/ichimoku-kinko-hyo\n             *         Ichimoku Kinko Hyo indicator\n             *\n             * @extends      plotOptions.sma\n             * @since        6.0.0\n             * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n             *               navigatorOptions, pointInterval, pointIntervalUnit,\n             *               pointPlacement, pointRange, pointStart, showInNavigator,\n             *               stacking\n             * @product      highstock\n             * @requires     stock/indicators/indicators\n             * @requires     stock/indicators/ichimoku-kinko-hyo\n             * @optionparent plotOptions.ikh\n             */\n            IKHIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n                /**\n                 * @excluding index\n                 */\n                params: {\n                    index: void 0, // Unused index, do not inherit (#15362)\n                    period: 26,\n                    /**\n                     * The base period for Tenkan calculations.\n                     */\n                    periodTenkan: 9,\n                    /**\n                     * The base period for Senkou Span B calculations\n                     */\n                    periodSenkouSpanB: 52\n                },\n                marker: {\n                    enabled: false\n                },\n                tooltip: {\n                    pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>' +\n                        'TENKAN SEN: {point.tenkanSen:.3f}<br/>' +\n                        'KIJUN SEN: {point.kijunSen:.3f}<br/>' +\n                        'CHIKOU SPAN: {point.chikouSpan:.3f}<br/>' +\n                        'SENKOU SPAN A: {point.senkouSpanA:.3f}<br/>' +\n                        'SENKOU SPAN B: {point.senkouSpanB:.3f}<br/>'\n                },\n                /**\n                 * The styles for Tenkan line\n                 */\n                tenkanLine: {\n                    styles: {\n                        /**\n                         * Pixel width of the line.\n                         */\n                        lineWidth: 1,\n                        /**\n                         * Color of the line.\n                         *\n                         * @type {Highcharts.ColorString}\n                         */\n                        lineColor: void 0\n                    }\n                },\n                /**\n                 * The styles for Kijun line\n                 */\n                kijunLine: {\n                    styles: {\n                        /**\n                         * Pixel width of the line.\n                         */\n                        lineWidth: 1,\n                        /**\n                         * Color of the line.\n                         *\n                         * @type {Highcharts.ColorString}\n                         */\n                        lineColor: void 0\n                    }\n                },\n                /**\n                 * The styles for Chikou line\n                 */\n                chikouLine: {\n                    styles: {\n                        /**\n                         * Pixel width of the line.\n                         */\n                        lineWidth: 1,\n                        /**\n                         * Color of the line.\n                         *\n                         * @type {Highcharts.ColorString}\n                         */\n                        lineColor: void 0\n                    }\n                },\n                /**\n                 * The styles for Senkou Span A line\n                 */\n                senkouSpanA: {\n                    styles: {\n                        /**\n                         * Pixel width of the line.\n                         */\n                        lineWidth: 1,\n                        /**\n                         * Color of the line.\n                         *\n                         * @type {Highcharts.ColorString}\n                         */\n                        lineColor: void 0\n                    }\n                },\n                /**\n                 * The styles for Senkou Span B line\n                 */\n                senkouSpanB: {\n                    styles: {\n                        /**\n                         * Pixel width of the line.\n                         */\n                        lineWidth: 1,\n                        /**\n                         * Color of the line.\n                         *\n                         * @type {Highcharts.ColorString}\n                         */\n                        lineColor: void 0\n                    }\n                },\n                /**\n                 * The styles for area between Senkou Span A and B.\n                 */\n                senkouSpan: {\n                    /**\n                     * Color of the area between Senkou Span A and B,\n                     * when Senkou Span A is above Senkou Span B. Note that if\n                     * a `style.fill` is defined, the `color` takes precedence and\n                     * the `style.fill` is ignored.\n                     *\n                     * @see [senkouSpan.styles.fill](#series.ikh.senkouSpan.styles.fill)\n                     *\n                     * @sample stock/indicators/ichimoku-kinko-hyo\n                     *         Ichimoku Kinko Hyo color\n                     *\n                     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @since     7.0.0\n                     * @apioption plotOptions.ikh.senkouSpan.color\n                     */\n                    /**\n                     * Color of the area between Senkou Span A and B,\n                     * when Senkou Span A is under Senkou Span B.\n                     *\n                     * @sample stock/indicators/ikh-negative-color\n                     *         Ichimoku Kinko Hyo negativeColor\n                     *\n                     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @since     7.0.0\n                     * @apioption plotOptions.ikh.senkouSpan.negativeColor\n                     */\n                    styles: {\n                        /**\n                         * Color of the area between Senkou Span A and B.\n                         *\n                         * @deprecated\n                         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                         */\n                        fill: 'rgba(255, 0, 0, 0.5)'\n                    }\n                },\n                dataGrouping: {\n                    approximation: 'ichimoku-averages'\n                }\n            });\n            return IKHIndicator;\n        }(SMAIndicator));\n        extend(IKHIndicator.prototype, {\n            pointArrayMap: [\n                'tenkanSen',\n                'kijunSen',\n                'chikouSpan',\n                'senkouSpanA',\n                'senkouSpanB'\n            ],\n            pointValKey: 'tenkanSen',\n            nameComponents: ['periodSenkouSpanB', 'period', 'periodTenkan']\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        ApproximationRegistry['ichimoku-averages'] = ichimokuAverages;\n        SeriesRegistry.registerSeriesType('ikh', IKHIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `IKH` series. If the [type](#series.ikh.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ikh\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ichimoku-kinko-hyo\n         * @apioption series.ikh\n         */\n        (''); // Add doclet above to transpiled file\n\n        return IKHIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/ichimoku-kinko-hyo.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","ApproximationRegistry","Color","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","color","parse","SMAIndicator","seriesTypes","sma","defined","extend","isArray","isNumber","getClosestDistance","merge","objectEach","highlowLevel","arr","high","reduce","max","res","Math","Infinity","low","min","drawSenkouSpan","opt","indicator","points","nextPoints","options","senkouSpan","styles","gap","graph","fillGraph","drawGraph","IKHIndicator","_super","_this","arguments","data","graphCollection","init","tenkanLine","lineColor","kijunLine","chikouLine","senkouSpanA","fill","setOpacity","get","senkouSpanB","toYData","point","tenkanSen","kijunSen","chikouSpan","translate","_i","_a","length","_b","_c","pointArrayMap","key","pointValue","yAxis","toPixels","plotY","tooltipPos","plotX","isNull","position","i","startIntersect","endIntersect","sectionPoints","sectionNextPoints","pointsPlotYSum","nextPointsPlotYSum","senkouSpanTempColor","concatArrIndex","j","k","mainLinePoints","mainLineOptions","mainLinePath","mainColor","gappedExtend","gapSize","pointArrayMapLength","allIchimokuPoints","ikhMap","intersectIndexColl","senkouSpanOptions","negativeColor","pointsLength","lineIndex","push","index","intersect","checkLineIntersection","a1","a2","b1","b2","saX","saY","sbX","sbY","sabX","sabY","u","t","intersectPointObj","intersectPoint","splice","values","lineName","graphName","destroy","unshift","slice","floor","x","concat","forEach","areaName","graphsenkouSpan","getGraphPath","spanA","spanAarr","getValues","series","params","date","pointTS","pointKS","pointSSB","TS","KS","CS","SSA","SSB","period","periodTenkan","periodSenkouSpanB","xVal","xData","yVal","yData","xAxis","yValLen","closestPointRange","map","s","IKH","dateStart","defaultOptions","marker","enabled","tooltip","pointFormat","lineWidth","dataGrouping","approximation","pointValKey","nameComponents","isEmptyRange","ret","average","registerSeriesType"],"mappings":"CAAA;;;;;;;;CAQC,EACA,SAAUA,CAAO,EACV,AAAkB,UAAlB,OAAOC,QAAuBA,OAAOC,OAAO,EAC5CF,EAAQ,OAAU,CAAGA,EACrBC,OAAOC,OAAO,CAAGF,GACV,AAAkB,YAAlB,OAAOG,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,2CAA4C,CAAC,aAAc,2BAA2B,CAAE,SAAUE,CAAU,EAG/G,OAFAL,EAAQK,GACRL,EAAQK,UAAU,CAAGA,EACdL,CACX,GAEAA,EAAQ,AAAsB,aAAtB,OAAOK,WAA6BA,WAAaC,KAAAA,EAEjE,EAAE,SAAUD,CAAU,EAClB,aACA,IAAIE,EAAWF,EAAaA,EAAWE,QAAQ,CAAG,CAAC,EACnD,SAASC,EAAgBC,CAAG,CAAEC,CAAI,CAAEC,CAAI,CAAEC,CAAE,EACnCH,EAAII,cAAc,CAACH,KACpBD,CAAG,CAACC,EAAK,CAAGE,EAAGE,KAAK,CAAC,KAAMH,GAEA,YAAvB,OAAOI,aACPV,EAAWW,GAAG,CAACC,aAAa,CAAC,IAAIF,YAC7B,yBACA,CAAEG,OAAQ,CAAER,KAAMA,EAAMT,OAAQQ,CAAG,CAACC,EAAK,AAAC,CAAE,IAI5D,CACAF,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,mDAAmD,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAqB,CAAEC,CAAK,CAAEC,CAAc,CAAEC,CAAC,EAQlS,IACQC,EADJC,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BD,EAAgB,SAAUE,CAAC,CAAEC,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAUL,CAAC,CAAEC,CAAC,EAAID,EAAEI,SAAS,CAAGH,CAAG,GAC1E,SAAUD,CAAC,CAAEC,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,SAAS,CAACnB,cAAc,CAACoB,IAAI,CAACP,EAAGK,IAAIN,CAAAA,CAAC,CAACM,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/EN,EAAGC,EAC5B,EACO,SAAUD,CAAC,CAAEC,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIQ,UAAU,uBAAyBC,OAAOT,GAAK,iCAE7D,SAASU,IAAO,IAAI,CAACC,WAAW,CAAGZ,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,SAAS,CAAGN,AAAM,OAANA,EAAaC,OAAOW,MAAM,CAACZ,GAAMU,CAAAA,EAAGJ,SAAS,CAAGN,EAAEM,SAAS,CAAE,IAAII,CAAG,CACtF,GAEAG,EAAQnB,EAAMoB,KAAK,CACnBC,EAAepB,EAAeqB,WAAW,CAACC,GAAG,CAC7CC,EAAUtB,EAAEsB,OAAO,CAAEC,EAASvB,EAAEuB,MAAM,CAAEC,EAAUxB,EAAEwB,OAAO,CAAEC,EAAWzB,EAAEyB,QAAQ,CAAEC,EAAqB1B,EAAE0B,kBAAkB,CAAEC,EAAQ3B,EAAE2B,KAAK,CAAEC,EAAa5B,EAAE4B,UAAU,CAyB7K,SAASC,EAAaC,CAAG,EACrB,MAAO,CACHC,KAjBGD,AAiBWA,EAjBPE,MAAM,CAAC,SAAUC,CAAG,CAAEC,CAAG,EAChC,OAAOC,KAAKF,GAAG,CAACA,EAAKC,CAAG,CAAC,EAAE,CAC/B,EAAG,CAACE,KAgBAC,IAVGP,AAUSA,EAVLE,MAAM,CAAC,SAAUM,CAAG,CAAEJ,CAAG,EAChC,OAAOC,KAAKG,GAAG,CAACA,EAAKJ,CAAG,CAAC,EAAE,CAC/B,EAAGE,IASH,CACJ,CA6BA,SAASG,EAAeC,CAAG,EACvB,IAAIC,EAAYD,EAAIC,SAAS,AAC7BA,CAAAA,EAAUC,MAAM,CAAGF,EAAIE,MAAM,CAC7BD,EAAUE,UAAU,CAAGH,EAAIG,UAAU,CACrCF,EAAUxB,KAAK,CAAGuB,EAAIvB,KAAK,CAC3BwB,EAAUG,OAAO,CAAGjB,EAAMa,EAAII,OAAO,CAACC,UAAU,CAACC,MAAM,CAAEN,EAAIO,GAAG,EAChEN,EAAUO,KAAK,CAAGR,EAAIQ,KAAK,CAC3BP,EAAUQ,SAAS,CAAG,CAAA,EACtBlD,EAAeqB,WAAW,CAACC,GAAG,CAACX,SAAS,CAACwC,SAAS,CAACvC,IAAI,CAAC8B,EAC5D,CAgCA,IAAIU,EAA8B,SAAUC,CAAM,EAE9C,SAASD,IAML,IAAIE,EAAQD,AAAW,OAAXA,GAAmBA,EAAO5D,KAAK,CAAC,IAAI,CAAE8D,YAAc,IAAI,CAUpE,OAJAD,EAAME,IAAI,CAAG,EAAE,CACfF,EAAMT,OAAO,CAAG,CAAC,EACjBS,EAAMX,MAAM,CAAG,EAAE,CACjBW,EAAMG,eAAe,CAAG,EAAE,CACnBH,CACX,CAygBA,OA3hBAnD,EAAUiD,EAAcC,GAwBxBD,EAAazC,SAAS,CAAC+C,IAAI,CAAG,WAC1BL,EAAO1C,SAAS,CAAC+C,IAAI,CAACjE,KAAK,CAAC,IAAI,CAAE8D,WAElC,IAAI,CAACV,OAAO,CAAGjB,EAAM,CACjB+B,WAAY,CACRZ,OAAQ,CACJa,UAAW,IAAI,CAAC1C,KAAK,AACzB,CACJ,EACA2C,UAAW,CACPd,OAAQ,CACJa,UAAW,IAAI,CAAC1C,KAAK,AACzB,CACJ,EACA4C,WAAY,CACRf,OAAQ,CACJa,UAAW,IAAI,CAAC1C,KAAK,AACzB,CACJ,EACA6C,YAAa,CACThB,OAAQ,CACJa,UAAW,IAAI,CAAC1C,KAAK,CACrB8C,KAAM9C,EAAM,IAAI,CAACA,KAAK,EAAE+C,UAAU,CAAC,IAAKC,GAAG,EAC/C,CACJ,EACAC,YAAa,CACTpB,OAAQ,CACJa,UAAW,IAAI,CAAC1C,KAAK,CACrB8C,KAAM9C,EAAM,IAAI,CAACA,KAAK,EAAE+C,UAAU,CAAC,IAAKC,GAAG,EAC/C,CACJ,EACApB,WAAY,CACRC,OAAQ,CACJiB,KAAM9C,EAAM,IAAI,CAACA,KAAK,EAAE+C,UAAU,CAAC,IAAKC,GAAG,EAC/C,CACJ,CACJ,EAAG,IAAI,CAACrB,OAAO,CACnB,EACAO,EAAazC,SAAS,CAACyD,OAAO,CAAG,SAAUC,CAAK,EAC5C,MAAO,CACHA,EAAMC,SAAS,CACfD,EAAME,QAAQ,CACdF,EAAMG,UAAU,CAChBH,EAAMN,WAAW,CACjBM,EAAMF,WAAW,CACpB,AACL,EACAf,EAAazC,SAAS,CAAC8D,SAAS,CAAG,WAE/BzE,EAAeqB,WAAW,CAACC,GAAG,CAACX,SAAS,CAAC8D,SAAS,CAAChF,KAAK,CADxC,IAAI,EAEpB,IAAK,IAAIiF,EAAK,EAAGC,EAAKjC,AAFN,IAAI,CAEYC,MAAM,CAAE+B,EAAKC,EAAGC,MAAM,CAAEF,IAEpD,IAAK,IADDL,EAAQM,CAAE,CAACD,EAAG,CACTG,EAAK,EAAGC,EAAKpC,AAJV,IAAI,CAIgBqC,aAAa,CAAEF,EAAKC,EAAGF,MAAM,CAAEC,IAAM,CACjE,IAAIG,EAAMF,CAAE,CAACD,EAAG,CACZI,EAAaZ,CAAK,CAACW,EAAI,CACvBtD,EAASuD,KACTZ,CAAK,CAAC,OAASW,EAAI,CAAGtC,AARlB,IAAI,CAQwBwC,KAAK,CAACC,QAAQ,CAACF,EAAY,CAAA,GAG3DZ,EAAMe,KAAK,CAAGf,CAAK,CAAC,OAASW,EAAI,CACjCX,EAAMgB,UAAU,CAAG,CACfhB,EAAMiB,KAAK,CACXjB,CAAK,CAAC,OAASW,EAAI,CACtB,CACDX,EAAMkB,MAAM,CAAG,CAAA,EAEvB,CAER,EACAnC,EAAazC,SAAS,CAACwC,SAAS,CAAG,WAC/B,IAgCyDqC,EAAUnB,EAAOoB,EAAGC,EAAgBC,EAAcC,EAAeC,EAAmBC,EAAgBC,EAAoBC,EAAqBC,EAAgBC,EAAGC,EAhCrNzD,EAAY,IAAI,CAAE0D,EAAiB1D,EAAUC,MAAM,CAAE0D,EAAkB3D,EAAUG,OAAO,CAAEyD,EAAe5D,EAAUO,KAAK,CAAEsD,EAAY7D,EAAUxB,KAAK,CAAEsF,EAAe,CACtK3D,QAAS,CACL4D,QAASJ,EAAgBI,OAAO,AACpC,CACJ,EAAGC,EAAsBhE,EAAUqC,aAAa,CAACH,MAAM,CAAE+B,EAAoB,CACzE,EAAE,CACF,EAAE,CACF,EAAE,CACF,EAAE,CACF,EAAE,CACF,EAAE,CACL,CAAEC,EAAS,CACRjD,WAAYgD,CAAiB,CAAC,EAAE,CAChC9C,UAAW8C,CAAiB,CAAC,EAAE,CAC/B7C,WAAY6C,CAAiB,CAAC,EAAE,CAChC5C,YAAa4C,CAAiB,CAAC,EAAE,CACjCxC,YAAawC,CAAiB,CAAC,EAAE,CACjC7D,WAAY6D,CAAiB,CAAC,EAAE,AACpC,EAAGE,EAAqB,EAAE,CAAEC,EAAoBpE,EAC3CG,OAAO,CAACC,UAAU,CAAE5B,EAAQ4F,EAAkB5F,KAAK,EACpD4F,EAAkB/D,MAAM,CAACiB,IAAI,CAAE+C,EAAgBD,EAAkBC,aAAa,CAElFpE,EAAS,CACL,EAAE,CACF,EAAE,CACL,CAGDC,EAAa,CACT,EAAE,CACF,EAAE,CACL,CACGoE,EAAeZ,EAAexB,MAAM,CAAEqC,EAAY,EAGtD,IAFAvE,EAAUkE,MAAM,CAAGA,EAEZI,KAAgB,CAEnB,IAAKvB,EAAI,EADTpB,EAAQ+B,CAAc,CAACY,EAAa,CACxBvB,EAAIiB,EAAqBjB,IAE7BlE,EAAQ8C,CAAK,CADjBmB,EAAW9C,EAAUqC,aAAa,CAACU,EAAE,CACV,GACvBkB,CAAiB,CAAClB,EAAE,CAACyB,IAAI,CAAC,CACtB5B,MAAOjB,EAAMiB,KAAK,CAClBF,MAAOf,CAAK,CAAC,OAASmB,EAAS,CAC/BD,OAAQ,CAAA,CACZ,GAGR,GAAIwB,GAAiBC,IAAiBZ,EAAexB,MAAM,CAAG,EAAG,CAE7D,IAAIuC,EAAQP,EAAOzC,WAAW,CAACS,MAAM,CAAG,EAAGwC,EAAYC,AAhNvE,SAA+BC,CAAE,CAAEC,CAAE,CAAEC,CAAE,CAAEC,CAAE,EACzC,GAAIH,GAAMC,GAAMC,GAAMC,EAAI,CACtB,IAAIC,EAAMH,EAAGjC,KAAK,CAAGgC,EAAGhC,KAAK,CAC7BqC,EAAMJ,EAAGnC,KAAK,CAAGkC,EAAGlC,KAAK,CACzBwC,EAAMH,EAAGnC,KAAK,CAAGkC,EAAGlC,KAAK,CACzBuC,EAAMJ,EAAGrC,KAAK,CAAGoC,EAAGpC,KAAK,CACzB0C,EAAOR,EAAGhC,KAAK,CAAGkC,EAAGlC,KAAK,CAC1ByC,EAAOT,EAAGlC,KAAK,CAAGoC,EAAGpC,KAAK,CAE1B4C,EAAI,AAAC,CAAA,CAACL,EAAMG,EAAOJ,EAAMK,CAAG,EAAM,CAAA,CAACH,EAAMD,EAAMD,EAAMG,CAAE,EAAII,EAAI,AAACL,CAAAA,EAAMG,EAAOF,EAAMC,CAAG,EAAM,CAAA,CAACF,EAAMD,EAAMD,EAAMG,CAAE,EACjH,GAAIG,GAAK,GAAKA,GAAK,GAAKC,GAAK,GAAKA,GAAK,EACnC,MAAO,CACH3C,MAAOgC,EAAGhC,KAAK,CAAG2C,EAAIP,EACtBtC,MAAOkC,EAAGlC,KAAK,CAAG6C,EAAIN,CAC1B,CAER,CACJ,EA+L6Ff,EAAO7C,WAAW,CAACoD,EAAQ,EAAE,CAAEP,EAAO7C,WAAW,CAACoD,EAAM,CAAEP,EAAOzC,WAAW,CAACgD,EAAQ,EAAE,CAAEP,EAAOzC,WAAW,CAACgD,EAAM,EAC/L,GAAIC,EAAW,CACX,IAAIc,EAAoB,CACpB5C,MAAO8B,EAAU9B,KAAK,CACtBF,MAAOgC,EAAUhC,KAAK,CACtBG,OAAQ,CAAA,EACR4C,eAAgB,CAAA,CACpB,EAGAvB,EAAO7C,WAAW,CAACqE,MAAM,CAACjB,EAAO,EAAGe,GACpCtB,EAAOzC,WAAW,CAACiE,MAAM,CAACjB,EAAO,EAAGe,GACpCrB,EAAmBK,IAAI,CAACC,EAC5B,CACJ,CACJ,CAoBA,GAlBAtF,EAAW+E,EAAQ,SAAUyB,CAAM,CAAEC,CAAQ,EACrCjC,CAAe,CAACiC,EAAS,EACzBA,AAAa,eAAbA,IAEA5F,EAAUC,MAAM,CAAGgE,CAAiB,CAACM,EAAU,CAC/CvE,EAAUG,OAAO,CAAGjB,EAAMyE,CAAe,CAACiC,EAAS,CAACvF,MAAM,CAAEyD,GAC5D9D,EAAUO,KAAK,CAAGP,CAAS,CAAC,QAAU4F,EAAS,CAC/C5F,EAAUQ,SAAS,CAAG,CAAA,EACtBR,EAAUxB,KAAK,CAAGqF,EAClBvG,EAAeqB,WAAW,CAACC,GAAG,CAACX,SAAS,CAACwC,SAAS,CAACvC,IAAI,CAAC8B,GAExDA,CAAS,CAAC,QAAU4F,EAAS,CAAG5F,EAAUO,KAAK,EAEnDgE,GACJ,GAIIvE,EAAUe,eAAe,CACzB,IAAK,IAAIiB,EAAK,EAAGC,EAAKjC,EAAUe,eAAe,CAAEiB,EAAKC,EAAGC,MAAM,CAAEF,IAAM,CACnE,IAAI6D,EAAY5D,CAAE,CAACD,EAAG,CACtBhC,CAAS,CAAC6F,EAAU,CAACC,OAAO,GAC5B,OAAO9F,CAAS,CAAC6F,EAAU,AAC/B,CAKJ,GAFA7F,EAAUe,eAAe,CAAG,EAAE,CAE1BsD,GAAiBH,EAAO7C,WAAW,CAAC,EAAE,EAAI6C,EAAOzC,WAAW,CAAC,EAAE,CAAE,CAKjE,IAHA0C,EAAmB4B,OAAO,CAAC,GAC3B5B,EAAmBK,IAAI,CAACN,EAAO7C,WAAW,CAACa,MAAM,CAAG,GAE/CsB,EAAI,EAAGA,EAAIW,EAAmBjC,MAAM,CAAG,EAAGsB,IAO3C,GANAR,EAAiBmB,CAAkB,CAACX,EAAE,CACtCP,EAAekB,CAAkB,CAACX,EAAI,EAAE,CACxCN,EAAgBgB,EAAOzC,WAAW,CAACuE,KAAK,CAAChD,EAAgBC,EAAe,GACxEE,EAAoBe,EAAO7C,WAAW,CAAC2E,KAAK,CAAChD,EAAgBC,EAAe,GAGxEvD,KAAKuG,KAAK,CAAC/C,EAAchB,MAAM,CAAG,IAAM,EAAG,CAC3C,IAAIgE,EAAIxG,KAAKuG,KAAK,CAAC/C,EAAchB,MAAM,CAAG,GAG1C,GAAIgB,CAAa,CAACgD,EAAE,CAACxD,KAAK,GAAKS,CAAiB,CAAC+C,EAAE,CAACxD,KAAK,CAAE,CAGvD,IAAKe,EAAI,EAFTL,EAAiB,EACjBC,EAAqB,EACTI,EAAIP,EAAchB,MAAM,CAAEuB,IAClCL,GAAkBF,CAAa,CAACO,EAAE,CAACf,KAAK,CACxCW,GAAsBF,CAAiB,CAACM,EAAE,CAACf,KAAK,AAIpDzC,CAAAA,CAAM,CAFNsD,EACIH,EAAiBC,EAAqB,EAAI,EACxB,CAAGpD,CAAM,CAACsD,EAAe,CAAC4C,MAAM,CAACjD,GACvDhD,CAAU,CAACqD,EAAe,CAAGrD,CAAU,CAACqD,EAAe,CAAC4C,MAAM,CAAChD,EACnE,MAIIlD,CAAM,CADNsD,EAAiB,AAACL,CAAa,CAACgD,EAAE,CAACxD,KAAK,CAAGS,CAAiB,CAAC+C,EAAE,CAACxD,KAAK,CAAI,EAAI,EACvD,CAAGzC,CAAM,CAACsD,EAAe,CAAC4C,MAAM,CAACjD,GACvDhD,CAAU,CAACqD,EAAe,CAAGrD,CAAU,CAACqD,EAAe,CAAC4C,MAAM,CAAChD,EAEvE,MAIIlD,CAAM,CADNsD,EAAiB,AAACL,CAAa,CAAC,EAAE,CAACR,KAAK,CAAGS,CAAiB,CAAC,EAAE,CAACT,KAAK,CAAI,EAAI,EACvD,CAAGzC,CAAM,CAACsD,EAAe,CAAC4C,MAAM,CAACjD,GACvDhD,CAAU,CAACqD,EAAe,CAAGrD,CAAU,CAACqD,EAAe,CAAC4C,MAAM,CAAChD,GAIvE,CAAC,uBAAwB,+BAA+B,CAACiD,OAAO,CAAC,SAAUC,CAAQ,CAAEtD,CAAC,EAC9E9C,CAAM,CAAC8C,EAAE,CAACb,MAAM,EAAIhC,CAAU,CAAC6C,EAAE,CAACb,MAAM,GACxCoB,EAAsBP,AAAM,IAANA,EAAUvE,EAAQ6F,EACxCvE,EAAe,CACXE,UAAWA,EACXC,OAAQA,CAAM,CAAC8C,EAAE,CACjB7C,WAAYA,CAAU,CAAC6C,EAAE,CACzBvE,MAAO8E,EACPnD,QAASwD,EACTrD,IAAKwD,EACLvD,MAAOP,CAAS,CAACqG,EAAS,AAC9B,GAEArG,CAAS,CAACqG,EAAS,CAAGrG,EAAUO,KAAK,CACrCP,EAAUe,eAAe,CAACyD,IAAI,CAAC6B,GAEvC,EACJ,MAGIvG,EAAe,CACXE,UAAWA,EACXC,OAAQiE,EAAOzC,WAAW,CAC1BvB,WAAYgE,EAAO7C,WAAW,CAC9B7C,MAAOA,EACP2B,QAASwD,EACTrD,IAAKwD,EACLvD,MAAOP,EAAUsG,eAAe,AACpC,GAEAtG,EAAUsG,eAAe,CAAGtG,EAAUO,KAAK,AAG/C,QAAOP,EAAUE,UAAU,CAC3B,OAAOF,EAAUQ,SAAS,CAE1BR,EAAUC,MAAM,CAAGyD,EACnB1D,EAAUG,OAAO,CAAGwD,EACpB3D,EAAUO,KAAK,CAAGqD,EAClB5D,EAAUxB,KAAK,CAAGqF,CACtB,EACAnD,EAAazC,SAAS,CAACsI,YAAY,CAAG,SAAUtG,CAAM,EAElD,IAAeuG,EAAX7J,EAAO,EAAE,CAAS8J,EAAW,EAAE,CAGnC,GAFAxG,EAASA,GAAU,IAAI,CAACA,MAAM,CAE1BD,AAJY,IAAI,CAINQ,SAAS,EAAIR,AAJX,IAAI,CAIiBE,UAAU,CAI3C,CAAA,GAAIsG,AAHJA,CAAAA,EAAQlJ,EAAeqB,WAAW,CAACC,GAAG,CAACX,SAAS,CAACsI,YAAY,CAACrI,IAAI,CALtD,IAAI,CAOhB8B,AAPY,IAAI,CAONE,UAAU,CAAA,GACPsG,EAAMtE,MAAM,CAAE,CACvBsE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAG,IACd7J,EAAOW,EAAeqB,WAAW,CAACC,GAAG,CAACX,SAAS,CAACsI,YAAY,CACvDrI,IAAI,CAXD,IAAI,CAWS+B,GACrBwG,EAAWD,EAAMR,KAAK,CAAC,EAAGrJ,EAAKuF,MAAM,EACrC,IAAK,IAAIa,EAAI0D,EAASvE,MAAM,CAAG,EAAGa,GAAK,EAAGA,IACtCpG,EAAK6H,IAAI,CAACiC,CAAQ,CAAC1D,EAAE,CAE7B,CAAA,MAGApG,EAAOW,EAAeqB,WAAW,CAACC,GAAG,CAACX,SAAS,CAACsI,YAAY,CACvDxJ,KAAK,CApBE,IAAI,CAoBM8D,WAE1B,OAAOlE,CACX,EACA+D,EAAazC,SAAS,CAACyI,SAAS,CAAG,SAAUC,CAAM,CAAEC,CAAM,EACvD,IACIC,EAAwCC,EAASC,EAASC,EAAUjE,EAAGkE,EAAIC,EAAIC,EAAIC,EAAKC,EADxFC,EAASV,EAAOU,MAAM,CAAEC,EAAeX,EAAOW,YAAY,CAAEC,EAAoBZ,EAAOY,iBAAiB,CAAEC,EAAOd,EAAOe,KAAK,CAAEC,EAAOhB,EAAOiB,KAAK,CAAEC,EAAQlB,EAAOkB,KAAK,CAAEC,EAAU,AAACH,GAAQA,EAAKzF,MAAM,EAAK,EAAG6F,EAAoB9I,EAAmB4I,EAAMlB,MAAM,CAACqB,GAAG,CAAC,SAAUC,CAAC,EAAI,OAAOA,EAAEP,KAAK,EAAI,EAAE,AAAE,IAAKQ,EAAM,EAAE,CAAER,EAAQ,EAAE,CAG1U,GAAID,CAAAA,CAAAA,EAAKvF,MAAM,EAAIoF,CAAK,GACnBvI,EAAQ4I,CAAI,CAAC,EAAE,GAChBA,AAAmB,IAAnBA,CAAI,CAAC,EAAE,CAACzF,MAAM,EAIlB,IAAIiG,EAAYV,CAAI,CAAC,EAAE,CAAGH,EAASS,EACnC,IAAKhF,EAAI,EAAGA,EAAIuE,EAAQvE,IACpB2E,EAAMlD,IAAI,CAAC2D,EAAYpF,EAAIgF,GAE/B,IAAKhF,EAAI,EAAGA,EAAI+E,EAAS/E,IAEjBA,GAAKwE,GAGLN,CAAAA,EAAK,AAACH,CAAAA,AADNA,CAAAA,EAAU1H,EADEuI,EAAK3B,KAAK,CAACjD,EAAIwE,EAAcxE,GACT,EAClBzD,IAAI,CAAGwH,EAAQlH,GAAG,AAAD,EAAK,CAAA,EAEpCmD,GAAKuE,GAILF,CAAAA,EAAM,AAACH,CAAAA,EADPC,CAAAA,EAAK,AAACH,CAAAA,AADNA,CAAAA,EAAU3H,EADEuI,EAAK3B,KAAK,CAACjD,EAAIuE,EAAQvE,GACH,EAClBzD,IAAI,CAAGyH,EAAQnH,GAAG,AAAD,EAAK,CAAA,CACvB,EAAK,CAAA,EAElBmD,GAAKyE,GAGLH,CAAAA,EAAM,AAACL,CAAAA,AADPA,CAAAA,EAAW5H,EADEuI,EAAK3B,KAAK,CAACjD,EAAIyE,EAAmBzE,GACb,EAClBzD,IAAI,CAAG0H,EAASpH,GAAG,AAAD,EAAK,CAAA,EAE3CuH,EAAKQ,CAAI,CAAC5E,EAAE,CAAC,EAAE,CACf8D,EAAOY,CAAI,CAAC1E,EAAE,CACQ,KAAA,IAAXmF,CAAG,CAACnF,EAAE,EACbmF,CAAAA,CAAG,CAACnF,EAAE,CAAG,EAAE,AAAD,EAEqB,KAAA,IAAxBmF,CAAG,CAACnF,EAAIuE,EAAS,EAAE,EAC1BY,CAAAA,CAAG,CAACnF,EAAIuE,EAAS,EAAE,CAAG,EAAE,AAAD,EAE3BY,CAAG,CAACnF,EAAIuE,EAAS,EAAE,CAAC,EAAE,CAAGL,EACzBiB,CAAG,CAACnF,EAAIuE,EAAS,EAAE,CAAC,EAAE,CAAGJ,EACzBgB,CAAG,CAACnF,EAAIuE,EAAS,EAAE,CAAC,EAAE,CAAG,KAAK,EACJ,KAAA,IAAfY,CAAG,CAACnF,EAAI,EAAE,EACjBmF,CAAAA,CAAG,CAACnF,EAAI,EAAE,CAAG,EAAE,AAAD,EAElBmF,CAAG,CAACnF,EAAI,EAAE,CAAC,EAAE,CAAGoE,EACZpE,GAAKuE,IACLY,CAAG,CAACnF,EAAIuE,EAAS,EAAE,CAAC,EAAE,CAAG,KAAK,EAC9BY,CAAG,CAACnF,EAAIuE,EAAS,EAAE,CAAC,EAAE,CAAG,KAAK,GAEK,KAAA,IAA5BY,CAAG,CAACnF,EAAI,EAAIuE,EAAS,EAAE,EAC9BY,CAAAA,CAAG,CAACnF,EAAI,EAAIuE,EAAS,EAAE,CAAG,EAAE,AAAD,EAE/BY,CAAG,CAACnF,EAAI,EAAIuE,EAAS,EAAE,CAAC,EAAE,CAAGF,EAC7Bc,CAAG,CAACnF,EAAI,EAAIuE,EAAS,EAAE,CAAC,EAAE,CAAGD,EAC7BK,EAAMlD,IAAI,CAACqC,GAGf,IAAK9D,EAAI,EAAGA,GAAKuE,EAAQvE,IACrB2E,EAAMlD,IAAI,CAACqC,EAAO9D,EAAIgF,GAE1B,MAAO,CACHpC,OAAQuC,EACRR,MAAOA,EACPE,MAAOM,CACX,EACJ,EAmBAxH,EAAa0H,cAAc,CAAGlJ,EAAMR,EAAa0J,cAAc,CAAE,CAI7DxB,OAAQ,CACJnC,MAAO,KAAK,EACZ6C,OAAQ,GAIRC,aAAc,EAIdC,kBAAmB,EACvB,EACAa,OAAQ,CACJC,QAAS,CAAA,CACb,EACAC,QAAS,CACLC,YAAa,+QAMjB,EAIAvH,WAAY,CACRZ,OAAQ,CAIJoI,UAAW,EAMXvH,UAAW,KAAK,CACpB,CACJ,EAIAC,UAAW,CACPd,OAAQ,CAIJoI,UAAW,EAMXvH,UAAW,KAAK,CACpB,CACJ,EAIAE,WAAY,CACRf,OAAQ,CAIJoI,UAAW,EAMXvH,UAAW,KAAK,CACpB,CACJ,EAIAG,YAAa,CACThB,OAAQ,CAIJoI,UAAW,EAMXvH,UAAW,KAAK,CACpB,CACJ,EAIAO,YAAa,CACTpB,OAAQ,CAIJoI,UAAW,EAMXvH,UAAW,KAAK,CACpB,CACJ,EAIAd,WAAY,CA2BRC,OAAQ,CAOJiB,KAAM,sBACV,CACJ,EACAoH,aAAc,CACVC,cAAe,mBACnB,CACJ,GACOjI,CACX,EAAEhC,GA2CF,OA1CAI,EAAO4B,EAAazC,SAAS,CAAE,CAC3BoE,cAAe,CACX,YACA,WACA,aACA,cACA,cACH,CACDuG,YAAa,YACbC,eAAgB,CAAC,oBAAqB,SAAU,eAAe,AACnE,GAMAzL,CAAqB,CAAC,oBAAoB,CAvkB1C,WACI,IACI0L,EADAC,EAAM,EAAE,CAQZ,MANA,EAAE,CAAC3C,OAAO,CAAClI,IAAI,CAAC2C,UAAW,SAAUxB,CAAG,CAAE0D,CAAC,EACvCgG,EAAIvE,IAAI,CAACpH,EAAsB4L,OAAO,CAAC3J,IACvCyJ,EAAe,CAACA,GAAgB,AAAkB,KAAA,IAAXC,CAAG,CAAChG,EAAE,AACjD,GAGO+F,EAAe,KAAK,EAAIC,CACnC,EA8jBAzL,EAAe2L,kBAAkB,CAAC,MAAOvI,GAyBlCA,CACX,GACAjE,EAAgBD,EAAU,+CAAgD,CAACA,CAAQ,CAAC,kBAAkB,CAAC,CAAE,SAAUF,CAAU,EAGzH,OAAOA,CACX,EACJ"}