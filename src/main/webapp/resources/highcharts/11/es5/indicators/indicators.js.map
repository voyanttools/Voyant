{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.8 (2024-08-29)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2024 Pawel Fus, Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/indicators', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/SMA/SMAIndicator.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Chart, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var LineSeries = SeriesRegistry.seriesTypes.line;\n        var addEvent = U.addEvent, fireEvent = U.fireEvent, error = U.error, extend = U.extend, isArray = U.isArray, merge = U.merge, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         */\n        var SMAIndicator = /** @class */ (function (_super) {\n            __extends(SMAIndicator, _super);\n            function SMAIndicator() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.destroy = function () {\n                this.dataEventsToUnbind.forEach(function (unbinder) {\n                    unbinder();\n                });\n                _super.prototype.destroy.apply(this, arguments);\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.getName = function () {\n                var params = [];\n                var name = this.name;\n                if (!name) {\n                    (this.nameComponents || []).forEach(function (component, index) {\n                        params.push(this.options.params[component] +\n                            pick(this.nameSuffixes[index], ''));\n                    }, this);\n                    name = (this.nameBase || this.type.toUpperCase()) +\n                        (this.nameComponents ? ' (' + params.join(', ') + ')' : '');\n                }\n                return name;\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.getValues = function (series, params) {\n                var period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal.length, SMA = [], xData = [], yData = [];\n                var i, index = -1, range = 0, SMAPoint, sum = 0;\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                while (range < period - 1) {\n                    sum += index < 0 ? yVal[range] : yVal[range][index];\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    sum += index < 0 ? yVal[i] : yVal[i][index];\n                    SMAPoint = [xVal[i], sum / period];\n                    SMA.push(SMAPoint);\n                    xData.push(SMAPoint[0]);\n                    yData.push(SMAPoint[1]);\n                    sum -= (index < 0 ?\n                        yVal[i - range] :\n                        yVal[i - range][index]);\n                }\n                return {\n                    values: SMA,\n                    xData: xData,\n                    yData: yData\n                };\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.init = function (chart, options) {\n                var indicator = this;\n                _super.prototype.init.call(indicator, chart, options);\n                // Only after series are linked indicator can be processed.\n                var linkedSeriesUnbiner = addEvent(Chart, 'afterLinkSeries', function (_a) {\n                    var isUpdating = _a.isUpdating;\n                    // #18643 indicator shouldn't recalculate\n                    // values while series updating.\n                    if (isUpdating) {\n                        return;\n                    }\n                    var hasEvents = !!indicator.dataEventsToUnbind.length;\n                    if (indicator.linkedParent) {\n                        if (!hasEvents) {\n                            // No matter which indicator, always recalculate after\n                            // updating the data.\n                            indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent, 'updatedData', function () {\n                                indicator.recalculateValues();\n                            }));\n                            // Some indicators (like VBP) requires an additional\n                            // event (afterSetExtremes) to properly show the data.\n                            if (indicator.calculateOn.xAxis) {\n                                indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent.xAxis, indicator.calculateOn.xAxis, function () {\n                                    indicator.recalculateValues();\n                                }));\n                            }\n                        }\n                        // Most indicators are being calculated on chart's init.\n                        if (indicator.calculateOn.chart === 'init') {\n                            if (!indicator.processedYData) {\n                                indicator.recalculateValues();\n                            }\n                        }\n                        else if (!hasEvents) {\n                            // Some indicators (like VBP) has to recalculate their\n                            // values after other chart's events (render).\n                            var unbinder_1 = addEvent(indicator.chart, indicator.calculateOn.chart, function () {\n                                indicator.recalculateValues();\n                                // Call this just once.\n                                unbinder_1();\n                            });\n                        }\n                    }\n                    else {\n                        return error('Series ' +\n                            indicator.options.linkedTo +\n                            ' not found! Check `linkedTo`.', false, chart);\n                    }\n                }, {\n                    order: 0\n                });\n                // Make sure we find series which is a base for an indicator\n                // chart.linkSeries();\n                indicator.dataEventsToUnbind = [];\n                indicator.eventsToUnbind.push(linkedSeriesUnbiner);\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.recalculateValues = function () {\n                var croppedDataValues = [], indicator = this, oldData = indicator.points || [], oldDataLength = (indicator.xData || []).length, emptySet = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                var overwriteData = true, oldFirstPointIndex, oldLastPointIndex, croppedData, min, max, i;\n                // Updating an indicator with redraw=false may destroy data.\n                // If there will be a following update for the parent series,\n                // we will try to access Series object without any properties\n                // (except for prototyped ones). This is what happens\n                // for example when using Axis.setDataGrouping(). See #16670\n                var processedData = indicator.linkedParent.options &&\n                    indicator.linkedParent.yData && // #18176, #18177 indicators should\n                    indicator.linkedParent.yData.length ? // Work with empty dataset\n                    (indicator.getValues(indicator.linkedParent, indicator.options.params) || emptySet) : emptySet;\n                // We need to update points to reflect changes in all,\n                // x and y's, values. However, do it only for non-grouped\n                // data - grouping does it for us (#8572)\n                if (oldDataLength &&\n                    !indicator.hasGroupedData &&\n                    indicator.visible &&\n                    indicator.points) {\n                    // When data is cropped update only avaliable points (#9493)\n                    if (indicator.cropped) {\n                        if (indicator.xAxis) {\n                            min = indicator.xAxis.min;\n                            max = indicator.xAxis.max;\n                        }\n                        croppedData = indicator.cropData(processedData.xData, processedData.yData, min, max);\n                        for (i = 0; i < croppedData.xData.length; i++) {\n                            // (#10774)\n                            croppedDataValues.push([\n                                croppedData.xData[i]\n                            ].concat(splat(croppedData.yData[i])));\n                        }\n                        oldFirstPointIndex = processedData.xData.indexOf(indicator.xData[0]);\n                        oldLastPointIndex = processedData.xData.indexOf(indicator.xData[indicator.xData.length - 1]);\n                        // Check if indicator points should be shifted (#8572)\n                        if (oldFirstPointIndex === -1 &&\n                            oldLastPointIndex === processedData.xData.length - 2) {\n                            if (croppedDataValues[0][0] === oldData[0].x) {\n                                croppedDataValues.shift();\n                            }\n                        }\n                        indicator.updateData(croppedDataValues);\n                    }\n                    else if (indicator.updateAllPoints || // #18710\n                        // Omit addPoint() and removePoint() cases\n                        processedData.xData.length !== oldDataLength - 1 &&\n                            processedData.xData.length !== oldDataLength + 1) {\n                        overwriteData = false;\n                        indicator.updateData(processedData.values);\n                    }\n                }\n                if (overwriteData) {\n                    indicator.xData = processedData.xData;\n                    indicator.yData = processedData.yData;\n                    indicator.options.data = processedData.values;\n                }\n                // Removal of processedXData property is required because on\n                // first translate processedXData array is empty\n                if (indicator.calculateOn.xAxis && indicator.processedXData) {\n                    delete indicator.processedXData;\n                    indicator.isDirty = true;\n                    indicator.redraw();\n                }\n                indicator.isDirtyData = !!indicator.linkedSeries.length;\n                fireEvent(indicator, 'updatedData'); // #18689\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.processData = function () {\n                var series = this, compareToMain = series.options.compareToMain, linkedParent = series.linkedParent;\n                _super.prototype.processData.apply(series, arguments);\n                if (series.dataModify &&\n                    linkedParent &&\n                    linkedParent.dataModify &&\n                    linkedParent.dataModify.compareValue &&\n                    compareToMain) {\n                    series.dataModify.compareValue =\n                        linkedParent.dataModify.compareValue;\n                }\n                return;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * The parameter allows setting line series type and use OHLC indicators.\n             * Data in OHLC format is required.\n             *\n             * @sample {highstock} stock/indicators/use-ohlc-data\n             *         Use OHLC data format to plot line chart\n             *\n             * @type      {boolean}\n             * @product   highstock\n             * @apioption plotOptions.line.useOhlcData\n             */\n            /**\n             * Simple moving average indicator (SMA). This series requires `linkedTo`\n             * option to be set.\n             *\n             * @sample stock/indicators/sma\n             *         Simple moving average indicator\n             *\n             * @extends      plotOptions.line\n             * @since        6.0.0\n             * @excluding    allAreas, colorAxis, dragDrop, joinBy, keys,\n             *               navigatorOptions, pointInterval, pointIntervalUnit,\n             *               pointPlacement, pointRange, pointStart, showInNavigator,\n             *               stacking, useOhlcData\n             * @product      highstock\n             * @requires     stock/indicators/indicators\n             * @optionparent plotOptions.sma\n             */\n            SMAIndicator.defaultOptions = merge(LineSeries.defaultOptions, {\n                /**\n                 * The name of the series as shown in the legend, tooltip etc. If not\n                 * set, it will be based on a technical indicator type and default\n                 * params.\n                 *\n                 * @type {string}\n                 */\n                name: void 0,\n                tooltip: {\n                    /**\n                     * Number of decimals in indicator series.\n                     */\n                    valueDecimals: 4\n                },\n                /**\n                 * The main series ID that indicator will be based on. Required for this\n                 * indicator.\n                 *\n                 * @type {string}\n                 */\n                linkedTo: void 0,\n                /**\n                 * Whether to compare indicator to the main series values\n                 * or indicator values.\n                 *\n                 * @sample {highstock} stock/plotoptions/series-comparetomain/\n                 *         Difference between comparing SMA values to the main series\n                 *         and its own values.\n                 *\n                 * @type {boolean}\n                 */\n                compareToMain: false,\n                /**\n                 * Parameters used in calculation of regression series' points.\n                 */\n                params: {\n                    /**\n                     * The point index which indicator calculations will base. For\n                     * example using OHLC data, index=2 means the indicator will be\n                     * calculated using Low values.\n                     */\n                    index: 3,\n                    /**\n                     * The base period for indicator calculations. This is the number of\n                     * data points which are taken into account for the indicator\n                     * calculations.\n                     */\n                    period: 14\n                }\n            });\n            return SMAIndicator;\n        }(LineSeries));\n        extend(SMAIndicator.prototype, {\n            calculateOn: {\n                chart: 'init'\n            },\n            hasDerivedData: true,\n            nameComponents: ['period'],\n            nameSuffixes: [], // E.g. Zig Zag uses extra '%'' in the legend name\n            useCommonDataGrouping: true\n        });\n        SeriesRegistry.registerSeriesType('sma', SMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `SMA` series. If the [type](#series.sma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.sma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, useOhlcData\n         * @requires  stock/indicators/indicators\n         * @apioption series.sma\n         */\n        (''); // Adds doclet above to the transpiled file\n\n        return SMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/EMA/EMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var SMAIndicator = SeriesRegistry.seriesTypes.sma;\n        var correctFloat = U.correctFloat, isArray = U.isArray, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The EMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ema\n         *\n         * @augments Highcharts.Series\n         */\n        var EMAIndicator = /** @class */ (function (_super) {\n            __extends(EMAIndicator, _super);\n            function EMAIndicator() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            EMAIndicator.prototype.accumulatePeriodPoints = function (period, index, yVal) {\n                var sum = 0, i = 0, y = 0;\n                while (i < period) {\n                    y = index < 0 ? yVal[i] : yVal[i][index];\n                    sum = sum + y;\n                    i++;\n                }\n                return sum;\n            };\n            EMAIndicator.prototype.calculateEma = function (xVal, yVal, i, EMApercent, calEMA, index, SMA) {\n                var x = xVal[i - 1], yValue = index < 0 ?\n                    yVal[i - 1] :\n                    yVal[i - 1][index], y = typeof calEMA === 'undefined' ?\n                    SMA : correctFloat((yValue * EMApercent) +\n                    (calEMA * (1 - EMApercent)));\n                return [x, y];\n            };\n            EMAIndicator.prototype.getValues = function (series, params) {\n                var period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, EMApercent = 2 / (period + 1), EMA = [], xData = [], yData = [];\n                var calEMA, EMAPoint, i, index = -1, sum = 0, SMA = 0;\n                // Check period, if bigger than points length, skip\n                if (yValLen < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                sum = this.accumulatePeriodPoints(period, index, yVal);\n                // First point\n                SMA = sum / period;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 1; i++) {\n                    EMAPoint = this.calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA);\n                    EMA.push(EMAPoint);\n                    xData.push(EMAPoint[0]);\n                    yData.push(EMAPoint[1]);\n                    calEMA = EMAPoint[1];\n                }\n                return {\n                    values: EMA,\n                    xData: xData,\n                    yData: yData\n                };\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * Exponential moving average indicator (EMA). This series requires the\n             * `linkedTo` option to be set.\n             *\n             * @sample stock/indicators/ema\n             * Exponential moving average indicator\n             *\n             * @extends      plotOptions.sma\n             * @since        6.0.0\n             * @product      highstock\n             * @requires     stock/indicators/indicators\n             * @optionparent plotOptions.ema\n             */\n            EMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n                params: {\n                    /**\n                     * The point index which indicator calculations will base. For\n                     * example using OHLC data, index=2 means the indicator will be\n                     * calculated using Low values.\n                     *\n                     * By default index value used to be set to 0. Since\n                     * Highcharts Stock 7 by default index is set to 3\n                     * which means that the ema indicator will be\n                     * calculated using Close values.\n                     */\n                    index: 3,\n                    period: 9 // @merge 14 in v6.2\n                }\n            });\n            return EMAIndicator;\n        }(SMAIndicator));\n        SeriesRegistry.registerSeriesType('ema', EMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `EMA` series. If the [type](#series.ema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ema\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @apioption series.ema\n         */\n        ''; // Adds doclet above to the transpiled file\n\n        return EMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MultipleLinesComposition.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Wojciech Chmiel\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var smaProto = SeriesRegistry.seriesTypes.sma.prototype;\n        var defined = U.defined, error = U.error, merge = U.merge;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var MultipleLinesComposition;\n        (function (MultipleLinesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            /**\n             * Additional lines DOCS names. Elements of linesApiNames array should\n             * be consistent with DOCS line names defined in your implementation.\n             * Notice that linesApiNames should have decreased amount of elements\n             * relative to pointArrayMap (without pointValKey).\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            var linesApiNames = ['bottomLine'];\n            /**\n             * Lines ids. Required to plot appropriate amount of lines.\n             * Notice that pointArrayMap should have more elements than\n             * linesApiNames, because it contains main line and additional lines ids.\n             * Also it should be consistent with amount of lines calculated in\n             * getValues method from your implementation.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            var pointArrayMap = ['top', 'bottom'];\n            /**\n             * Names of the lines, between which the area should be plotted.\n             * If the drawing of the area should\n             * be disabled for some indicators, leave this option as an empty array.\n             * Names should be the same as the names in the pointArrayMap.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            var areaLinesNames = ['top'];\n            /**\n             * Main line id.\n             *\n             * @private\n             * @type {string}\n             */\n            var pointValKey = 'top';\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Composition useful for all indicators that have more than one line.\n             * Compose it with your implementation where you will provide the\n             * `getValues` method appropriate to your indicator and `pointArrayMap`,\n             * `pointValKey`, `linesApiNames` properties. Notice that `pointArrayMap`\n             * should be consistent with the amount of lines calculated in the\n             * `getValues` method.\n             *\n             * @private\n             */\n            function compose(IndicatorClass) {\n                var proto = IndicatorClass.prototype;\n                proto.linesApiNames = (proto.linesApiNames ||\n                    linesApiNames.slice());\n                proto.pointArrayMap = (proto.pointArrayMap ||\n                    pointArrayMap.slice());\n                proto.pointValKey = (proto.pointValKey ||\n                    pointValKey);\n                proto.areaLinesNames = (proto.areaLinesNames ||\n                    areaLinesNames.slice());\n                proto.drawGraph = indicatorDrawGraph;\n                proto.getGraphPath = indicatorGetGraphPath;\n                proto.toYData = indicatorToYData;\n                proto.translate = indicatorTranslate;\n                return IndicatorClass;\n            }\n            MultipleLinesComposition.compose = compose;\n            /**\n             * Generate the API name of the line\n             *\n             * @private\n             * @param propertyName name of the line\n             */\n            function getLineName(propertyName) {\n                return ('plot' +\n                    propertyName.charAt(0).toUpperCase() +\n                    propertyName.slice(1));\n            }\n            /**\n             * Create translatedLines Collection based on pointArrayMap.\n             *\n             * @private\n             * @param {string} [excludedValue]\n             *        Main line id\n             * @return {Array<string>}\n             *         Returns translated lines names without excluded value.\n             */\n            function getTranslatedLinesNames(indicator, excludedValue) {\n                var translatedLines = [];\n                (indicator.pointArrayMap || []).forEach(function (propertyName) {\n                    if (propertyName !== excludedValue) {\n                        translatedLines.push(getLineName(propertyName));\n                    }\n                });\n                return translatedLines;\n            }\n            /**\n             * Draw main and additional lines.\n             *\n             * @private\n             */\n            function indicatorDrawGraph() {\n                var indicator = this, pointValKey = indicator.pointValKey, linesApiNames = indicator.linesApiNames, areaLinesNames = indicator.areaLinesNames, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, \n                // Additional lines point place holders:\n                secondaryLines = [], secondaryLinesNames = getTranslatedLinesNames(indicator, pointValKey);\n                var pointsLength = mainLinePoints.length, point;\n                // Generate points for additional lines:\n                secondaryLinesNames.forEach(function (plotLine, index) {\n                    // Create additional lines point place holders\n                    secondaryLines[index] = [];\n                    while (pointsLength--) {\n                        point = mainLinePoints[pointsLength];\n                        secondaryLines[index].push({\n                            x: point.x,\n                            plotX: point.plotX,\n                            plotY: point[plotLine],\n                            isNull: !defined(point[plotLine])\n                        });\n                    }\n                    pointsLength = mainLinePoints.length;\n                });\n                // Modify options and generate area fill:\n                if (indicator.userOptions.fillColor && areaLinesNames.length) {\n                    var index = secondaryLinesNames.indexOf(getLineName(areaLinesNames[0])), secondLinePoints = secondaryLines[index], firstLinePoints = areaLinesNames.length === 1 ?\n                        mainLinePoints :\n                        secondaryLines[secondaryLinesNames.indexOf(getLineName(areaLinesNames[1]))], originalColor = indicator.color;\n                    indicator.points = firstLinePoints;\n                    indicator.nextPoints = secondLinePoints;\n                    indicator.color = indicator.userOptions.fillColor;\n                    indicator.options = merge(mainLinePoints, gappedExtend);\n                    indicator.graph = indicator.area;\n                    indicator.fillGraph = true;\n                    smaProto.drawGraph.call(indicator);\n                    indicator.area = indicator.graph;\n                    // Clean temporary properties:\n                    delete indicator.nextPoints;\n                    delete indicator.fillGraph;\n                    indicator.color = originalColor;\n                }\n                // Modify options and generate additional lines:\n                linesApiNames.forEach(function (lineName, i) {\n                    if (secondaryLines[i]) {\n                        indicator.points = secondaryLines[i];\n                        if (mainLineOptions[lineName]) {\n                            indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        }\n                        else {\n                            error('Error: \"There is no ' + lineName +\n                                ' in DOCS options declared. Check if linesApiNames' +\n                                ' are consistent with your DOCS line names.\"');\n                        }\n                        indicator.graph = indicator['graph' + lineName];\n                        smaProto.drawGraph.call(indicator);\n                        // Now save lines:\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    else {\n                        error('Error: \"' + lineName + ' doesn\\'t have equivalent ' +\n                            'in pointArrayMap. To many elements in linesApiNames ' +\n                            'relative to pointArrayMap.\"');\n                    }\n                });\n                // Restore options and draw a main line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                smaProto.drawGraph.call(indicator);\n            }\n            /**\n             * Create the path based on points provided as argument.\n             * If indicator.nextPoints option is defined, create the areaFill.\n             *\n             * @private\n             * @param points Points on which the path should be created\n             */\n            function indicatorGetGraphPath(points) {\n                var areaPath, path = [], higherAreaPath = [];\n                points = points || this.points;\n                // Render Span\n                if (this.fillGraph && this.nextPoints) {\n                    areaPath = smaProto.getGraphPath.call(this, this.nextPoints);\n                    if (areaPath && areaPath.length) {\n                        areaPath[0][0] = 'L';\n                        path = smaProto.getGraphPath.call(this, points);\n                        higherAreaPath = areaPath.slice(0, path.length);\n                        // Reverse points, so that the areaFill will start from the end:\n                        for (var i = higherAreaPath.length - 1; i >= 0; i--) {\n                            path.push(higherAreaPath[i]);\n                        }\n                    }\n                }\n                else {\n                    path = smaProto.getGraphPath.apply(this, arguments);\n                }\n                return path;\n            }\n            /**\n             * @private\n             * @param {Highcharts.Point} point\n             *        Indicator point\n             * @return {Array<number>}\n             *         Returns point Y value for all lines\n             */\n            function indicatorToYData(point) {\n                var pointColl = [];\n                (this.pointArrayMap || []).forEach(function (propertyName) {\n                    pointColl.push(point[propertyName]);\n                });\n                return pointColl;\n            }\n            /**\n             * Add lines plot pixel values.\n             *\n             * @private\n             */\n            function indicatorTranslate() {\n                var _this = this;\n                var pointArrayMap = this.pointArrayMap;\n                var LinesNames = [], value;\n                LinesNames = getTranslatedLinesNames(this);\n                smaProto.translate.apply(this, arguments);\n                this.points.forEach(function (point) {\n                    pointArrayMap.forEach(function (propertyName, i) {\n                        value = point[propertyName];\n                        // If the modifier, like for example compare exists,\n                        // modified the original value by that method, #15867.\n                        if (_this.dataModify) {\n                            value = _this.dataModify.modifyValue(value);\n                        }\n                        if (value !== null) {\n                            point[LinesNames[i]] = _this.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n        })(MultipleLinesComposition || (MultipleLinesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MultipleLinesComposition;\n    });\n    _registerModule(_modules, 'masters/indicators/indicators.src.js', [_modules['Core/Globals.js'], _modules['Stock/Indicators/MultipleLinesComposition.js']], function (Highcharts, MultipleLinesComposition) {\n\n        var G = Highcharts;\n        G.MultipleLinesComposition =\n            G.MultipleLinesComposition || MultipleLinesComposition;\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","Chart","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","LineSeries","seriesTypes","line","addEvent","fireEvent","error","extend","isArray","merge","pick","splat","SMAIndicator","_super","arguments","destroy","dataEventsToUnbind","forEach","unbinder","getName","params","name","nameComponents","component","index","push","options","nameSuffixes","nameBase","type","toUpperCase","join","getValues","series","i","SMAPoint","period","xVal","xData","yVal","yData","yValLen","length","SMA","range","sum","values","init","chart","indicator","linkedSeriesUnbiner","_a","isUpdating","hasEvents","linkedParent","linkedTo","recalculateValues","calculateOn","xAxis","processedYData","unbinder_1","order","eventsToUnbind","oldFirstPointIndex","oldLastPointIndex","croppedData","min","max","croppedDataValues","oldData","points","oldDataLength","overwriteData","processedData","hasGroupedData","visible","cropped","cropData","concat","indexOf","x","shift","updateData","updateAllPoints","data","processedXData","isDirty","redraw","isDirtyData","linkedSeries","processData","compareToMain","dataModify","compareValue","defaultOptions","tooltip","valueDecimals","hasDerivedData","useCommonDataGrouping","registerSeriesType","sma","correctFloat","EMAIndicator","accumulatePeriodPoints","calculateEma","EMApercent","calEMA","yValue","EMAPoint","EMA","MultipleLinesComposition","smaProto","defined","linesApiNames","pointArrayMap","areaLinesNames","getLineName","propertyName","charAt","slice","getTranslatedLinesNames","excludedValue","translatedLines","indicatorDrawGraph","point","pointValKey","mainLinePoints","mainLineOptions","mainLinePath","graph","gappedExtend","gapSize","secondaryLines","secondaryLinesNames","pointsLength","plotLine","plotX","plotY","isNull","userOptions","fillColor","secondLinePoints","firstLinePoints","originalColor","color","nextPoints","area","fillGraph","drawGraph","lineName","styles","indicatorGetGraphPath","areaPath","higherAreaPath","getGraphPath","indicatorToYData","pointColl","indicatorTranslate","value","_this","LinesNames","translate","modifyValue","yAxis","toPixels","compose","IndicatorClass","proto","toYData","G"],"mappings":"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"}