{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.8 (2024-08-29)\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Sebastian Domas\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/cmf', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/CMF/CMFIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Sebastian Domas\n         *\n         *  Chaikin Money Flow indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var SMAIndicator = SeriesRegistry.seriesTypes.sma;\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMF series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmf\n         *\n         * @augments Highcharts.Series\n         */\n        var CMFIndicator = /** @class */ (function (_super) {\n            __extends(CMFIndicator, _super);\n            function CMFIndicator() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.nameBase = 'Chaikin Money Flow';\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Checks if the series and volumeSeries are accessible, number of\n             * points.x is longer than period, is series has OHLC data\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @return {boolean} True if series is valid and can be computed,\n             * otherwise false.\n             */\n            CMFIndicator.prototype.isValid = function () {\n                var chart = this.chart, options = this.options, series = this.linkedParent, volumeSeries = (this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID))), isSeriesOHLC = (series &&\n                    series.yData &&\n                    series.yData[0].length === 4);\n                /**\n                 * @private\n                 * @param {Highcharts.Series} serie to check length validity on.\n                 * @return {boolean|undefined} true if length is valid.\n                 */\n                function isLengthValid(serie) {\n                    return serie.xData &&\n                        serie.xData.length >= options.params.period;\n                }\n                return !!(series &&\n                    volumeSeries &&\n                    isLengthValid(series) &&\n                    isLengthValid(volumeSeries) && isSeriesOHLC);\n            };\n            /**\n             * Returns indicator's data.\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @param {Highcharts.Series} series to calculate values from\n             * @param {Highcharts.CMFIndicatorParamsOptions} params to pass\n             * @return {boolean|Highcharts.IndicatorNullableValuesObject} Returns false if the\n             * indicator is not valid, otherwise returns Values object.\n             */\n            CMFIndicator.prototype.getValues = function (series, params) {\n                if (!this.isValid()) {\n                    return;\n                }\n                return this.getMoneyFlow(series.xData, series.yData, this.volumeSeries.yData, params.period);\n            };\n            /**\n             * @private\n             *\n             * @param {Array<number>} xData\n             * x timestamp values\n             *\n             * @param {Array<number>} seriesYData\n             * yData of basic series\n             *\n             * @param {Array<number>} volumeSeriesYData\n             * yData of volume series\n             *\n             * @param {number} period\n             * indicator's param\n             *\n             * @return {Highcharts.IndicatorNullableValuesObject}\n             * object containing computed money flow data\n             */\n            CMFIndicator.prototype.getMoneyFlow = function (xData, seriesYData, volumeSeriesYData, period) {\n                var len = seriesYData.length, moneyFlowVolume = [], moneyFlowXData = [], moneyFlowYData = [], values = [];\n                var i, point, nullIndex = -1, sumVolume = 0, sumMoneyFlowVolume = 0;\n                /**\n                 * Calculates money flow volume, changes i, nullIndex vars from\n                 * upper scope!\n                 *\n                 * @private\n                 *\n                 * @param {Array<number>} ohlc\n                 * OHLC point\n                 *\n                 * @param {number} volume\n                 * Volume point's y value\n                 *\n                 * @return {number|null}\n                 * Volume * moneyFlowMultiplier\n                 */\n                function getMoneyFlowVolume(ohlc, volume) {\n                    var high = ohlc[1], low = ohlc[2], close = ohlc[3], isValid = volume !== null &&\n                        high !== null &&\n                        low !== null &&\n                        close !== null &&\n                        high !== low;\n                    /**\n                     * @private\n                     * @param {number} h\n                     * High value\n                     * @param {number} l\n                     * Low value\n                     * @param {number} c\n                     * Close value\n                     * @return {number}\n                     * Calculated multiplier for the point\n                     */\n                    function getMoneyFlowMultiplier(h, l, c) {\n                        return ((c - l) - (h - c)) / (h - l);\n                    }\n                    return isValid ?\n                        getMoneyFlowMultiplier(high, low, close) * volume :\n                        ((nullIndex = i), null);\n                }\n                if (period > 0 && period <= len) {\n                    for (i = 0; i < period; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                    }\n                    moneyFlowXData.push(xData[i - 1]);\n                    moneyFlowYData.push(i - nullIndex >= period && sumVolume !== 0 ?\n                        sumMoneyFlowVolume / sumVolume :\n                        null);\n                    values.push([moneyFlowXData[0], moneyFlowYData[0]]);\n                    for (; i < len; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume -= volumeSeriesYData[i - period];\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume -= moneyFlowVolume[i - period];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                        point = [\n                            xData[i],\n                            i - nullIndex >= period ?\n                                sumMoneyFlowVolume / sumVolume :\n                                null\n                        ];\n                        moneyFlowXData.push(point[0]);\n                        moneyFlowYData.push(point[1]);\n                        values.push([point[0], point[1]]);\n                    }\n                }\n                return {\n                    values: values,\n                    xData: moneyFlowXData,\n                    yData: moneyFlowYData\n                };\n            };\n            /**\n             * Chaikin Money Flow indicator (cmf).\n             *\n             * @sample stock/indicators/cmf/\n             *         Chaikin Money Flow indicator\n             *\n             * @extends      plotOptions.sma\n             * @since        6.0.0\n             * @excluding    animationLimit\n             * @product      highstock\n             * @requires     stock/indicators/indicators\n             * @requires     stock/indicators/cmf\n             * @optionparent plotOptions.cmf\n             */\n            CMFIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n                /**\n                 * @excluding index\n                 */\n                params: {\n                    index: void 0, // Unused index, do not inherit (#15362)\n                    /**\n                     * The id of another series to use its data as volume data for the\n                     * indicator calculation.\n                     */\n                    volumeSeriesID: 'volume'\n                }\n            });\n            return CMFIndicator;\n        }(SMAIndicator));\n        SeriesRegistry.registerSeriesType('cmf', CMFIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMF` series. If the [type](#series.cmf.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmf\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmf\n         * @apioption series.cmf\n         */\n        ''; // Adds doclet above to the transpiled file\n\n        return CMFIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/cmf.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","SMAIndicator","seriesTypes","sma","merge","CMFIndicator","_super","_this","arguments","nameBase","isValid","chart","options","series","linkedParent","volumeSeries","get","params","volumeSeriesID","isSeriesOHLC","yData","length","isLengthValid","serie","xData","period","getValues","getMoneyFlow","seriesYData","volumeSeriesYData","i","point","len","moneyFlowVolume","moneyFlowXData","moneyFlowYData","values","nullIndex","sumVolume","sumMoneyFlowVolume","getMoneyFlowVolume","ohlc","volume","high","low","close","h","c","l","push","defaultOptions","index","registerSeriesType"],"mappings":"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"}